[
    {
        "id": "8c9d42231fd19d3c",
        "type": "tab",
        "label": "WP Dash",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e7187e0c9dc038f0",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Home (ROOM)",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "719e11414721599e",
            "081dae9f3555ade6",
            "b51f6522ce8b3103",
            "05f3b66c7b91e0c6",
            "5bada38f261d4a06"
        ],
        "x": 114,
        "y": 1239,
        "w": 972,
        "h": 122
    },
    {
        "id": "7c41aa629fb3859e",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Home (DHW)",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "50b87b6e19d49fae",
            "158e0bb2b00cd4ba",
            "50bbeaa9a0ad9305",
            "14d2ae6b4af7e45e",
            "4982424c661376ea",
            "23197820b73be2c8",
            "21345852944158b2",
            "4cfdc172228a42bb",
            "4f19cd39ac4c4be0",
            "64b21d9250184d0a",
            "6bdcf84066368733",
            "8c2afa46f759d9cd",
            "6c42a1a32ed02491",
            "7386864c75dbce5c",
            "3f63919ddd4f0ea7",
            "3d3b432c844ba87e",
            "0609b7d54d31dafb",
            "f38de05b84881512",
            "bd709071acae11c7",
            "b690e6a46d9553ba",
            "6366ce3358b65976"
        ],
        "x": 94,
        "y": 19,
        "w": 892,
        "h": 442
    },
    {
        "id": "5ab5ca67951ca4de",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Home (PUMP)",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "5d54922367195a62",
            "0e09d25e4fd17042",
            "1d97c2a9ed08db30",
            "9dc0d35330d31725",
            "3478273eb4693d84",
            "1d51b425fba024d2",
            "024bef9dc12b8273",
            "521e419dae5882e7",
            "dcdf16916497a46e",
            "3ac59d9a6138e620",
            "e6ca18bfd7adb287",
            "42c8d2ef7cd7f120",
            "1ed98a1d47eb56f0",
            "79dc18dd1cca1e73",
            "49a94006dd1947ac",
            "17c5ba9bb0b58a11",
            "9faace07ea16ba4d",
            "b65cef840ae30edb",
            "91fcc102b422de3b",
            "8ae2f173954488ad",
            "b3cbb0e85ba0fb42",
            "1daf8c5944f23d71"
        ],
        "x": 104,
        "y": 639,
        "w": 982,
        "h": 562
    },
    {
        "id": "c3b7d9597903239c",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Charts Temperature",
        "style": {
            "label": true
        },
        "nodes": [
            "8cb1aceef81045bd",
            "9802bf01ebf45d28",
            "9789265573ab4c80",
            "c9c2bf06edb19d41",
            "0ac806fe66f54c29",
            "76fd0cf35b775cdf",
            "9f3df8b1cba0bbda",
            "a734f98c5d02604e",
            "12b317db9b7ce136",
            "aeca371dc97489c4",
            "1afae37bbb9eee4f",
            "62bb9a3778a8e0c4",
            "8cea97ace96d4c67",
            "eea147e0b371b347",
            "f6a75e4b3dd9cf4c"
        ],
        "x": 34,
        "y": 2119,
        "w": 952,
        "h": 342
    },
    {
        "id": "a8ac5b148d851a6b",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Function (RTC)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "1b8f5447c498c1d6",
            "e17b09af13812496",
            "11c68fc0d3095541",
            "e8990d184ea1eca6",
            "b4051f61cf6d4d65",
            "c9df0ea076346fde",
            "e6999514a091fd05",
            "501242b43a1016ea",
            "d3b8865dfdb6d46c",
            "e4c7ba5f1306c384",
            "a0998b9af634354f",
            "aa1f73bbe3eef9e1",
            "9b1f3ccedd4e853b",
            "017e7b4d1642ed42",
            "aae82d0c01404d51",
            "60e33931edeab23f",
            "3e3f19d365adf7ae",
            "38a2e1df7e0bdb2a",
            "25b8320badf7ef88",
            "45643e4e39e1d248",
            "8bd536b323fb865c",
            "e861faea1a81715d",
            "dade0dbb40c3945a",
            "942f2ca34abfe8ac",
            "dc69bdbe82bc7c6e",
            "604a8e4b260ab341",
            "2acac67ac20fecaa",
            "07ec6cc26e34e858",
            "a859857d1be789c9",
            "38b237621bd70775",
            "023e106e50b945f6",
            "48ac4170551d07e2",
            "e5afa5e58fb2ecef",
            "1f5d513050d612a1",
            "4b2cff40b8a3ecc9",
            "9e7985132053da99",
            "94942dfd61d7fa3d",
            "7bf73fde5dbbe654",
            "af1e900e0be88b34",
            "be5c89aff3235cfd",
            "6a4e29a621172a7e",
            "47b72adc26e2025f",
            "3cf1a2dd31dacbca",
            "ca0d9f423e83d3e2",
            "449411f64f3ffe0b",
            "c3c748a1b5f04d42",
            "7d582005c7d66f28",
            "6efc9729afea79a2",
            "d407159ae6560fd6",
            "5bcad017001638fd",
            "e64935081974f391",
            "0d3da6a8d7fa38ee",
            "4faba89ea8ec838c",
            "b1f2db1845798273",
            "7764079e5c12e488",
            "b57cce7cc9fa92ea",
            "ca0190e54c9749cb",
            "2ca9ec858ebd4887",
            "290133f7fd948e25",
            "ab1290025b96a1df",
            "5be8fe10022fcc46",
            "bb54f8581c258040",
            "fb7f16aa29565d78",
            "ecbb543ba37d9962",
            "57d858f4dd89a4c8",
            "083547591b89bc09",
            "f8d7e53aed62cd14",
            "64773410c77751fa",
            "85d4c15e56ecc525",
            "a19cd490d0cc5d13",
            "2d7930a2b848335e"
        ],
        "x": 3034,
        "y": 699,
        "w": 1818,
        "h": 942,
        "info": "# yeah"
    },
    {
        "id": "6788a89266ed3c87",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Function (SoftStart)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "12e9ac12cf2fde5c",
            "c66f65978915e688",
            "39c4c5d262a3065b",
            "84f7cbc2cc8c135d",
            "2f6dcfe431b67d95",
            "1f4a153d2239272b",
            "1b40f688e5fbc5dd",
            "4c49268a7054041c",
            "37ae6fb47a326b5e",
            "3578d6b18ceb5727",
            "7bad42f4cc70470e",
            "7790b731fd9a1374",
            "b5f581c27a02b8a0",
            "2081818c5b84e07f",
            "5ebd5b33f81038ea",
            "1eb00088db267256",
            "2b065128513763fa",
            "9548ee234cc5af7a",
            "69b1892c29513016",
            "0e8ef97d6a106fe8",
            "69d5d3a718793320",
            "0a397aae1191ff03",
            "47e76e01a5cfb304",
            "cdf7664223f16687",
            "00dd6c3fd833a5cf",
            "cac91a6a0390c860",
            "3a196a4275cfec68",
            "2f436c5ec33c9291",
            "b2003add7c0ba5a9",
            "8df6915186a6430a"
        ],
        "x": 3024,
        "y": 1699,
        "w": 1472,
        "h": 322
    },
    {
        "id": "3476743a7b29da0d",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Function (WAR)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "01d75eec1bfe68d4",
            "8329aedf9204b75d",
            "9535722dad6d0995",
            "8dcafc6e30726812",
            "9a0e227ed7718d64",
            "e07cc2b915729d33",
            "f1d9c2e3346b1e43",
            "388bec4d296db98d",
            "81e0133d16c51789",
            "b991be16b9662a3e",
            "0380b395668eee8e",
            "0ad263e5f3bf4fe9",
            "5b0c451c1ec63b84",
            "080c11bcc5a2ac73",
            "d1e851a03542c949",
            "54284f6b97afb3c7",
            "7febe67492bf7cbe",
            "d9675d9d144e412b",
            "f3f5cc4e789d19f3",
            "0c8eb8257035ca5f",
            "36a9b7dad9d2611e",
            "fa81c798d517834f",
            "4dc131a257d753d0",
            "b92812725c4e8443",
            "5c6e3f50e1a2328b",
            "354fe89415b3f383",
            "ecf47b4f156ae616",
            "aa92d770db68e68b",
            "12842f4ef6ffc342",
            "5429970cdd04e922",
            "cc1c74d4b3b87c5e",
            "e5a709273b24888d",
            "d0cbd630befb3d01",
            "7a2a9be0735512b6",
            "320506c25427ee87",
            "74e2096239928bfc",
            "df2ff07ddeb07106",
            "65770940f38c7f51",
            "f2daac0935cc9d81",
            "4950af3d6534aa47",
            "07c9121f1be83415",
            "a00885bfd0ed77a7",
            "f76c271c4a48a3e7",
            "fa5d110ee0083845",
            "5b9847446fee98a9",
            "02bef4c27cae892f",
            "0366fd634f110ba4",
            "a7ed974cef55c457",
            "850fb0ccb76b25cf",
            "881c9c83727201e4",
            "946190a858bafe3d",
            "26028dafb645f0a9",
            "78b397adf806a09f",
            "b7b3c4dcda507ecb",
            "05065bbd47aa9dd3",
            "6c95ed35d3dcaea3",
            "96c650af80111193"
        ],
        "x": 3034,
        "y": 79,
        "w": 1782,
        "h": 602
    },
    {
        "id": "f9448182b177e40e",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Chart Energy",
        "style": {
            "label": true
        },
        "nodes": [
            "ea3029991749f77b",
            "fa2eba3089ca0ef4",
            "3b552bccda090181",
            "8a140f3a3a1ff736",
            "1cbdb190d6f52cb6",
            "fe8e23b8971b868e",
            "b1933566192d3b78",
            "fae151e3fc249477",
            "21857afb8366acf2",
            "039ca8047ee5b833",
            "8e0dc8ab2999f4ec",
            "38b10c117605255d",
            "53393ad3ce2b9113",
            "3a6bb7844523ece7",
            "ca8fd698c67b1cfa",
            "b3e1e417d51330e7",
            "bbe6832628277539",
            "8627726ba882e493",
            "4b0bb57d44bd8bb1",
            "b4d652a4c0313e8a",
            "990e0858767f91fc",
            "9ed43df7ef7fa246",
            "6d77bc12fe8024ee",
            "9534d89253d426ca",
            "79ff4d14869086b3",
            "f9bad51c9301e2d7",
            "bda2df97c3dfd6ad",
            "ba8181d980146bf5",
            "9d4206dc389ad732",
            "2ec8265263c71358",
            "2347fd7ebf82b618",
            "ffa2e7745e5aed4c"
        ],
        "x": 34,
        "y": 1479,
        "w": 1092,
        "h": 602
    },
    {
        "id": "f1a34e3fea473398",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Combined bar-chart",
        "style": {
            "label": true
        },
        "nodes": [
            "b09d20349841eaed",
            "d4198e0e57720e55",
            "8859608d9186c4e4",
            "278b50b68f01198e",
            "93a7de2857166209",
            "d63cf14c266a32c5",
            "d5724fa53412c7c1",
            "3c6cbf1cc644de40",
            "ad2577846265e4ee",
            "c302223665944545",
            "9a77a77bdc585373",
            "721b7d606f558c73",
            "7e69bda9aa493902",
            "4dc4c11e169604ca",
            "c28ac0a0c107c5e3",
            "f5f7d3b912113a33",
            "2c380c0bbcfb5eb1",
            "2114aed06fe6d5aa",
            "e1f45532e4338e4a",
            "25a5987e8a1aaf9c"
        ],
        "x": 94,
        "y": 2519,
        "w": 1398,
        "h": 602
    },
    {
        "id": "4f352fdae09316c2",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Logs",
        "style": {
            "fill": "#ffffff",
            "label": true
        },
        "nodes": [
            "1fc3414887db6c0f",
            "e649dffb7b88341d",
            "87de9f606819ee7c",
            "031e62b0bf3df7d7",
            "22443324686e908d",
            "6966950676b3438b",
            "46d0a8b4fabd20c4",
            "29a9b4d9e823126c",
            "9ab36aee321695b7",
            "56bc942b17cf740c",
            "70d422652df2468e",
            "647564ca1e204b5f",
            "6215a77a119228d1",
            "a2c6183556ca72d1",
            "dc6f884b1aa816ef",
            "2dc5c2ac3212179c",
            "9a7dda15052b4034",
            "82deff483aabb062",
            "8c9a955c41e3e669",
            "ccf20ebdd2bc2ad5",
            "bee7b2de27a2ac09",
            "2e07cb8c215afb98",
            "c83f2c1b98fec551",
            "48b67765f5bf4521",
            "47cc58d8c2f4aae6",
            "8a78dd26f20bb676",
            "2cb940cabdae70e5",
            "a2d45addc303107f",
            "46c5b8fae5c96441",
            "7ec2785759270a3f",
            "97186cf285d61502",
            "1fa1afeeb1c84d32",
            "729f15cc004fcc21",
            "8b99fa1a632fa6aa",
            "8da7c93f059466f2",
            "8d9c639aa58c9a3e",
            "1e0df57eb3e96bf7"
        ],
        "x": 1168,
        "y": 1899,
        "w": 1398,
        "h": 602
    },
    {
        "id": "69d31fcea48c5132",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "(RTC) Changed Room setpoint to log",
        "style": {
            "label": true,
            "color": "#000000",
            "stroke": "#000000"
        },
        "nodes": [
            "b53bc6358e871056",
            "e7e7a120cf9e9001",
            "087a748b7ca8e4f0",
            "28ade256a9b75487",
            "28d654bc8270de5e"
        ],
        "x": 4294,
        "y": 1019,
        "w": 402,
        "h": 122
    },
    {
        "id": "17610af3c50fa4f3",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Softstart Quietmode",
        "style": {
            "label": true
        },
        "nodes": [
            "69581a5f53d2c488",
            "a423271481d5d54d",
            "9445da7cceab14b2",
            "66396fc1dbfcc832",
            "2a72a0a50c226d0f",
            "a3195a537640d528",
            "5444f8ed7b1fa765",
            "ce7653d3e7a11177",
            "042a326783f2a657",
            "344b1fdaa89016c8",
            "98d6df4515c25447",
            "ab31019d5a2a15b3",
            "32f39bf7fb5e5369",
            "8bd83650dae791b5",
            "579bc2c10d3c83a1",
            "a3ab6c0ec376501c"
        ],
        "x": 3034,
        "y": 2079,
        "w": 1402,
        "h": 222
    },
    {
        "id": "3151681b2157872c",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Settings",
        "style": {
            "fill": "#bfbfbf",
            "label": true
        },
        "nodes": [
            "fadad1e2505bf86d",
            "493be73ce31c8c96",
            "d286bfab06c854b3",
            "69e62408ae1d45fd",
            "c168a66c6bcdd403",
            "2c3aa272de5edf1f",
            "6715b2c07ffdaf0f",
            "6d5e44060139d9d1",
            "98757de0a2842b4b",
            "43ad0d01b0c84de9",
            "765b4d77a9fd44cc",
            "98c49c9eca38ccfc",
            "a6faaf6380e6d040",
            "c318be9105a9e8e5",
            "b8e7b80b511e3054",
            "aa26d12b996f9c57",
            "97d91018b611d85e",
            "6c56f45eddcf6890",
            "d4c237094a0d52f9",
            "d66211d6bd2170ac",
            "71bc8ac0ba520e9e",
            "99beaa5dde77b94c",
            "ec2e17164979af03",
            "ad4e8ac090e4b449",
            "9b9c2c12ee2f9256",
            "365cb4a95d68eb3e",
            "0dc2ead6142f18c4",
            "c6559a95bb3c55fb",
            "17cf53c8acbfb4e1",
            "30554cbb35314761",
            "4dee981d88ea5cf3",
            "ae99edee7ea44ce2",
            "45a93847a1d11766",
            "ccb9e79ff06190fa",
            "20e2544a8277d8c2",
            "91fa7e389b484d7c",
            "69ea88923a102a5d",
            "7c7fd14d9f6ec530",
            "02af248fc547b96b",
            "b8abd042ad10fed8",
            "2d364a067e4a7b4a",
            "a89b41c6600cac07",
            "e31636baf16e3b69",
            "1f2cb9545d7e212d",
            "a6854436b6e1c7e8",
            "fce687f80b334b9e",
            "4118b2ccecf6a6de",
            "bdb7e8e0217cec66",
            "979c5ca99c054740",
            "859dc9276ee75464",
            "092a9db0d9b923b3",
            "5e3a9447502864ad",
            "f7a9ec88877581f5",
            "2ed9d626c929fb95",
            "9b2a45a90495e067",
            "7139256ff024b872",
            "c803b9ad018fe78e",
            "4021cdadbdc7768d",
            "78816343589b199a",
            "a2d7de4325e4bf91",
            "089ba42c8f7f7a61",
            "3de982eda6f5e1a3",
            "5b0e15b0804a4452",
            "564fcdd537853126",
            "381a37d17ef728cc",
            "cb354767e9f35bc0",
            "df60cdb125adaf72",
            "9b3cba642f3daa70",
            "9e998e80ed82590d",
            "88e644ce965a6890",
            "cb924439a66154f1",
            "a26b41289a59dba3",
            "a45a6b8b1ac4b46d",
            "d9a7bffb1a15426e",
            "b203a1c024a72593",
            "34397163757fd58b",
            "7c74fd1faa32c81d",
            "de0e892a0157baca",
            "2f25f344ad661680",
            "05d3e85b3963e4e2",
            "0897b055d53c8a84",
            "afa82ddd168a4ea4",
            "58ee259d850d95ac",
            "332fb342687e1121",
            "50f5134fb3ba9e38",
            "119d9c04e028ad98",
            "13b0a160e7f2d0a0",
            "8e9f91dd021c2ccd",
            "53ae8019411d666d",
            "0a683587ca4fc25c",
            "05e2f23adde7a6fc",
            "ede3b3328704cab1",
            "22afde8747ce6ca0",
            "9170caebad3acdcf",
            "58d199ee200d7b16",
            "9fcae1bec983aa1f",
            "887a43d150c20eb2",
            "7f6107d49ab83c40",
            "6db2abfba9e25737",
            "071ac5a0f08a8fdb",
            "6ae86dc05a6a3c4a",
            "2f577f48a3804703",
            "b7a195156eedf201",
            "99fca21d30786e83",
            "7b3d20aa8c9abb1e",
            "6e6c991de9f27149",
            "56131f5116b20fba",
            "550d51c7fe788f9e",
            "e85a5bbd08082721",
            "c2baf1abae4e4441",
            "4694bfeaa76d43f1",
            "db41038f69a63144",
            "f66e9fca72401ab4",
            "9e59dd1bbe56fc88",
            "3ed1fd544412f391",
            "dcec18e192df8d64",
            "be17c89704b598d8",
            "ea184fe6e1240203",
            "2c13c33324bb6c6e",
            "684cdf95f8172514",
            "c9428fcff7af5f3a",
            "9e1f07f9825bd79d",
            "32c4b461266d4a6e",
            "b4efe8320bae812d",
            "115cf15b6254cb9c",
            "313780cf94ef9d1c",
            "d9cbcc885d31c1fd",
            "00660af047d90d84",
            "d60532c945c70ab1",
            "fb1ef412a32707e7",
            "7216a1bd8dc26f16",
            "849755bc336c0289",
            "ca8be52d82cfb2da",
            "85737143f803169a",
            "80dd0b992f3f7c9a",
            "7cfabb437dca890f",
            "c12983167828c39b",
            "7813313c8fae18d5",
            "0db2bdc455e4bffe",
            "2989d5851e2457ae",
            "a845813900ca9e55",
            "9717750d0d528f9c",
            "5be142bd732c8d96",
            "238183547350dfc1",
            "625620e079bcddd3",
            "1f12871cda6c40b3",
            "85327198ddc6e251",
            "eeae40f40c5ecf87",
            "2810d417aa5c3457",
            "47b7f4736455a3cb",
            "5eebb66e29e252f6",
            "bcda53f9e43821c5",
            "1742dd060b79dfd1",
            "7c74eef7b504ee67",
            "bc84f4340c3e5b0a",
            "a20fe452e34c26f2",
            "7cfe771e9583a82d",
            "3c054d7f511af4eb",
            "3b2ded71a11dfb75",
            "c5f279c69179fd5b",
            "8ddf4987d6b31ae5",
            "5182a29718a4142e",
            "08d04747592e753f",
            "b6dd964e2537fb76",
            "87449349b95f6091",
            "d65b99037cb3740d",
            "29f1c1eaf91ec977",
            "e0217508a82c4d43",
            "65e5ce7e8bb0e284",
            "302de5d951e650b6",
            "db78ad9b985b4aa5",
            "e1d9c3b48e3b4cba",
            "9b7f15d048bb1f60",
            "749ce60adde338d9",
            "c6e07a956cf2f293",
            "6886cb05525f8d0b",
            "16e91d824cef95e3",
            "6111292139d84986",
            "a863b940531858e1",
            "f2e85ff23b3dc136",
            "400c912774a24583",
            "f94a97e9d42084d7",
            "b8ed3bef56b272a1",
            "89467c0f49c8ec80",
            "4a2670b477ab7f75",
            "3acac369aa9d0bae",
            "265aa477d413b30c",
            "9c06f243d9fa02cd",
            "cf98942a82cf52e5",
            "f45559f5e72abee8",
            "879b071f7e013653",
            "73a3b137b4661912",
            "676beb3babed5817",
            "17f55cbc1fe21549",
            "315fddd6f5ad04a4",
            "68685dfaa9b474b6",
            "62ecfb10d045c9aa",
            "5c671bda81284e37",
            "5dfdbd7fb948ef4a",
            "f09a0c75d24764b9",
            "2f7ff35f7c2ca99f",
            "298594735f133ef3",
            "30b65b7d5afd13d0",
            "f6e0cc6687051bf1",
            "585e4d6a54d44021",
            "e4b5c256b8c34faa",
            "e21920a5a6155306",
            "1041d65c575cae05",
            "367f1fc8966e2514",
            "aad17e70a817393e",
            "fca8ea8f1117c808",
            "4673d329949e0652"
        ],
        "x": 1154,
        "y": 59,
        "w": 1702,
        "h": 1782
    },
    {
        "id": "5c6e3f50e1a2328b",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "charts",
        "style": {
            "label": true
        },
        "nodes": [
            "4d5e9a9dacd2b429",
            "0d58a1e854263ec4",
            "c26a112b706b6d55",
            "aa33ae9640c6a434",
            "db206585adea91d8"
        ],
        "x": 4064,
        "y": 439,
        "w": 472,
        "h": 202
    },
    {
        "id": "023e106e50b945f6",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b32f014cb3ec752e",
            "79daf2eea90f8432",
            "032ca56c8c21283e",
            "075a460a2ecc3a9d",
            "72bcb750dc791f05"
        ],
        "x": 4434,
        "y": 1299,
        "w": 392,
        "h": 202
    },
    {
        "id": "2c380c0bbcfb5eb1",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "eee624aa045ae22a"
        ],
        "x": 1134,
        "y": 2979,
        "w": 312,
        "h": 82
    },
    {
        "id": "2114aed06fe6d5aa",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "style": {
            "fill": "#DE425B",
            "fill-opacity": "0.5",
            "label": true
        },
        "nodes": [
            "35c9b0fcbdf3c9e0"
        ],
        "x": 1114,
        "y": 2759,
        "w": 352,
        "h": 82
    },
    {
        "id": "e1f45532e4338e4a",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Bucket 1 - kWh calculation",
        "style": {
            "fill": "#F59B56",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "47a9e516229e0256"
        ],
        "x": 1114,
        "y": 2659,
        "w": 352,
        "h": 82
    },
    {
        "id": "bee7b2de27a2ac09",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "LOGS",
        "style": {
            "label": true
        },
        "nodes": [
            "9fb2ab0ff0488d63",
            "ae6175191a94d7ec",
            "5e4c3c30025c30ee",
            "49edcd3fcf15db5c",
            "9202d8b025b48df6"
        ],
        "x": 1194,
        "y": 2139,
        "w": 1192,
        "h": 82
    },
    {
        "id": "b1f2db1845798273",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "af715d4c79137c30",
            "9a106cdefc873348"
        ],
        "x": 3084,
        "y": 1099,
        "w": 82,
        "h": 122
    },
    {
        "id": "5d54922367195a62",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "3b23831ccc3641c6"
        ],
        "x": 515,
        "y": 860,
        "wires": [
            [
                "0e09d25e4fd17042"
            ]
        ]
    },
    {
        "id": "0e09d25e4fd17042",
        "type": "ui_gauge",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Water",
        "group": "bf4af523ba16d457",
        "order": 8,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Water flow",
        "label": "L/min",
        "format": "{{value}}",
        "min": 0,
        "max": "35",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 910,
        "y": 860,
        "wires": []
    },
    {
        "id": "1d97c2a9ed08db30",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "905527b22aae9dc8"
        ],
        "x": 515,
        "y": 800,
        "wires": [
            [
                "3478273eb4693d84"
            ]
        ]
    },
    {
        "id": "9dc0d35330d31725",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "35ca9241fc9fc7a1"
        ],
        "x": 515,
        "y": 740,
        "wires": [
            [
                "1d51b425fba024d2"
            ]
        ]
    },
    {
        "id": "3478273eb4693d84",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "Inlet actual",
        "label": "Inlet actual",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 800,
        "wires": []
    },
    {
        "id": "1d51b425fba024d2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "Outlet actual",
        "label": "Outlet actual",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 740,
        "wires": []
    },
    {
        "id": "024bef9dc12b8273",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "12a26bbb7c8070d7"
        ],
        "x": 515,
        "y": 680,
        "wires": [
            [
                "521e419dae5882e7"
            ]
        ]
    },
    {
        "id": "521e419dae5882e7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "Outlet setpoint",
        "label": "Outlet setpoint",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 940,
        "y": 680,
        "wires": []
    },
    {
        "id": "6bdcf84066368733",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "links": [
            "aec0cb2b18e02d8b"
        ],
        "x": 155,
        "y": 420,
        "wires": [
            [
                "64b21d9250184d0a"
            ]
        ]
    },
    {
        "id": "4f19cd39ac4c4be0",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "DHW status",
        "label": "DHW status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 420,
        "wires": []
    },
    {
        "id": "64b21d9250184d0a",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 420,
        "wires": [
            [
                "4f19cd39ac4c4be0"
            ]
        ]
    },
    {
        "id": "50b87b6e19d49fae",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Force sterilization",
        "label": "Force sterilization",
        "tooltip": "",
        "group": "e3cc96332cd59f07",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "0609b7d54d31dafb"
            ]
        ]
    },
    {
        "id": "719e11414721599e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "1179fa790d2d89ca",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Heat status",
        "label": "Heat status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 1280,
        "wires": []
    },
    {
        "id": "081dae9f3555ade6",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1280,
        "wires": [
            [
                "719e11414721599e"
            ]
        ]
    },
    {
        "id": "dcdf16916497a46e",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "TOP65 - panasonic_heat_pump/main/Pump_Speed",
        "topic": "panasonic_heat_pump/main/Pump_Speed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 1100,
        "wires": [
            [
                "3ac59d9a6138e620"
            ]
        ]
    },
    {
        "id": "3ac59d9a6138e620",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "Pump speed",
        "label": "Pump speed",
        "format": "{{msg.payload}} rpm",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 1100,
        "wires": []
    },
    {
        "id": "158e0bb2b00cd4ba",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "DHW (SP)",
        "label": "DHW setpoint",
        "tooltip": "",
        "group": "e3cc96332cd59f07",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "40",
        "max": "75",
        "step": 1,
        "className": "",
        "x": 510,
        "y": 120,
        "wires": [
            [
                "7386864c75dbce5c"
            ]
        ]
    },
    {
        "id": "23197820b73be2c8",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "Sterilization (SP)",
        "label": "Sterilization setpoint",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "21345852944158b2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "DHW (PV)",
        "label": "DHW actual",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 360,
        "wires": []
    },
    {
        "id": "50bbeaa9a0ad9305",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Force DHW",
        "label": "Forceful DHW",
        "tooltip": "",
        "group": "e3cc96332cd59f07",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "3d3b432c844ba87e"
            ]
        ]
    },
    {
        "id": "1b8f5447c498c1d6",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Room setpoint",
        "label": "Room setpoint",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 13,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "50",
        "step": "0.1",
        "className": "",
        "x": 3580,
        "y": 1000,
        "wires": [
            [
                "11c68fc0d3095541",
                "af715d4c79137c30",
                "087a748b7ca8e4f0"
            ]
        ]
    },
    {
        "id": "e17b09af13812496",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Woonkamer SP (custom)",
        "mode": "link",
        "links": [
            "46aa3584ebd4caad"
        ],
        "x": 4805,
        "y": 1000,
        "wires": []
    },
    {
        "id": "11c68fc0d3095541",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4170,
        "y": 1000,
        "wires": [
            [
                "e17b09af13812496",
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "4cfdc172228a42bb",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "links": [
            "d54ac3b979428b64"
        ],
        "x": 155,
        "y": 360,
        "wires": [
            [
                "21345852944158b2"
            ]
        ]
    },
    {
        "id": "14d2ae6b4af7e45e",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "links": [
            "092a9db0d9b923b3",
            "56d4bfa341d3eded"
        ],
        "x": 155,
        "y": 240,
        "wires": [
            [
                "50bbeaa9a0ad9305"
            ]
        ]
    },
    {
        "id": "4982424c661376ea",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Force sterilization",
        "links": [
            "0a683587ca4fc25c",
            "4f62466c41bb3667"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "50b87b6e19d49fae"
            ]
        ]
    },
    {
        "id": "b51f6522ce8b3103",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "",
        "links": [
            "aec0cb2b18e02d8b"
        ],
        "x": 155,
        "y": 1280,
        "wires": [
            [
                "5bada38f261d4a06"
            ]
        ]
    },
    {
        "id": "8cb1aceef81045bd",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Kamer Temperatuur",
        "group": "2a223fd6c0b54acd",
        "order": 1,
        "width": 10,
        "height": 12,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "20",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 2160,
        "wires": [
            [
                "1afae37bbb9eee4f"
            ]
        ]
    },
    {
        "id": "9802bf01ebf45d28",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Water HEAT",
        "group": "e668c57c8cf470e7",
        "order": 1,
        "width": 9,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 2280,
        "wires": [
            [
                "62bb9a3778a8e0c4"
            ]
        ]
    },
    {
        "id": "9789265573ab4c80",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Water DHW",
        "group": "e374621a9f5ac0d6",
        "order": 1,
        "width": 9,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 2320,
        "wires": [
            [
                "8cea97ace96d4c67"
            ]
        ]
    },
    {
        "id": "c66f65978915e688",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Softstart on/off",
        "label": "Softstart (experimental)",
        "tooltip": "",
        "group": "1179fa790d2d89ca",
        "order": 11,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3410,
        "y": 1860,
        "wires": [
            [
                "0e8ef97d6a106fe8"
            ]
        ]
    },
    {
        "id": "39c4c5d262a3065b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "set.Correction_2_softstart_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Function - SoftStart\";\nglobal.set(\"Correction_2_softstart_on_off\",msg.payload,\"file\");\n//global.set(\"Correction_2_softstart_on_off\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3900,
        "y": 1820,
        "wires": [
            [
                "84f7cbc2cc8c135d"
            ]
        ]
    },
    {
        "id": "84f7cbc2cc8c135d",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Correction_2_softstart_on_off",
        "mode": "link",
        "links": [
            "12e9ac12cf2fde5c",
            "47e2a8d99d332229",
            "73ee925b927ed0c6",
            "3ab7a10b46379da2",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 4095,
        "y": 1820,
        "wires": []
    },
    {
        "id": "e8990d184ea1eca6",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off Home_HEAT",
        "label": "",
        "tooltip": "",
        "group": "1179fa790d2d89ca",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3610,
        "y": 760,
        "wires": [
            [
                "94942dfd61d7fa3d"
            ]
        ]
    },
    {
        "id": "b4051f61cf6d4d65",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set F_RTC.state on/off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Function - RTC\";\nglobal.set(\"F_RTC.state\",msg.payload,\"file\");\n\n\n//******************************************************************************\nif (msg.payload == 0) {\n    var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n    var SolarFunction_active            = global.get('SolarFunction_active',\"file\");\n    \n    if (F_stored_next_operating_mode === undefined) {\n        return null;\n    }\n    //  msg         // pin 1 - oringinal msg object. The correction.\n    let msg1={};    // pin 2 - the restored operating mode.\n    let msg99={};   // pin 3 - info to the log.\n    // return [msg,msg1,msg99]\n\n    if (SolarFunction_active === undefined) {\n        msg1.payload = F_stored_next_operating_mode;\n        msg1.topic = 'Restoring new operating mode';\n        \n        msg99.topic = 'Function RTC on/off';\n        msg99.payload = 'RTC on/off function turned off manually. Restoring operating mode';\n        \n        global.set('F_stored_next_operating_mode',undefined,\"file\");\n        \n        return [msg,msg1,msg99];\n    }\n\n}\n\n\nelse {\n    return msg;    \n}\n\n\n\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4170,
        "y": 780,
        "wires": [
            [
                "c9df0ea076346fde"
            ],
            [
                "b57cce7cc9fa92ea"
            ],
            [
                "ca0190e54c9749cb"
            ]
        ],
        "outputLabels": [
            "msg",
            "operating mode",
            "to log"
        ]
    },
    {
        "id": "c9df0ea076346fde",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Correction_1_heatcurve_on_off",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "73ee925b927ed0c6",
            "942f2ca34abfe8ac",
            "3ab7a10b46379da2",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 4805,
        "y": 740,
        "wires": []
    },
    {
        "id": "e6999514a091fd05",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "links": [
            "18fd7ac120089042",
            "c61ef1791ada4e77"
        ],
        "x": 3205,
        "y": 1600,
        "wires": [
            [
                "0d3da6a8d7fa38ee",
                "7764079e5c12e488"
            ]
        ]
    },
    {
        "id": "501242b43a1016ea",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 27,
        "width": 7,
        "height": 1,
        "name": "Function RTC - Current correction",
        "label": "Current correction",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3640,
        "y": 1280,
        "wires": []
    },
    {
        "id": "8329aedf9204b75d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "SP_DIRECT_virt",
        "label": "Default water temp.",
        "tooltip": "This is the default outlet water temperature when all functions are turned off. (20-55°C)",
        "group": "1179fa790d2d89ca",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "20",
        "max": "55",
        "step": 1,
        "className": "",
        "x": 3440,
        "y": 140,
        "wires": [
            [
                "9535722dad6d0995",
                "850fb0ccb76b25cf"
            ]
        ]
    },
    {
        "id": "9535722dad6d0995",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "set.SP_Ta_(base)",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"SP_DIRECT_virt\",msg.payload,\"file\");\n//global.set(\"SP_DIRECT_virt\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3830,
        "y": 160,
        "wires": [
            [
                "8dcafc6e30726812"
            ]
        ]
    },
    {
        "id": "8dcafc6e30726812",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "SP_DIRECT_virt",
        "links": [
            "73ee925b927ed0c6",
            "6d890380e00e164d",
            "3ab7a10b46379da2",
            "126583bf986bb2c7",
            "4c81e32b9d30b212",
            "3f0803a3a230aca2"
        ],
        "x": 3995,
        "y": 160,
        "wires": []
    },
    {
        "id": "2f6dcfe431b67d95",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "group": "1179fa790d2d89ca",
        "order": 18,
        "width": 6,
        "height": 1,
        "name": "Final water temp.",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 4120,
        "y": 1980,
        "wires": []
    },
    {
        "id": "1f4a153d2239272b",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "links": [
            "93404b62f7fb0fb2",
            "3babaa01a5706113"
        ],
        "x": 3615,
        "y": 1980,
        "wires": [
            [
                "00dd6c3fd833a5cf"
            ]
        ]
    },
    {
        "id": "9a0e227ed7718d64",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_ot1",
        "label": "",
        "tooltip": "Range -20 / 15",
        "group": "052caff3b2365345",
        "order": 10,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot1",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "-20",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 3440,
        "y": 360,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf"
            ]
        ]
    },
    {
        "id": "e07cc2b915729d33",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_wt2",
        "label": "",
        "tooltip": "Range 20 / 60",
        "group": "052caff3b2365345",
        "order": 14,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt2",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "20",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 3600,
        "y": 400,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf"
            ]
        ]
    },
    {
        "id": "f1d9c2e3346b1e43",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_ot2",
        "label": "",
        "tooltip": "Range -20 / 15",
        "group": "052caff3b2365345",
        "order": 13,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot2",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "-20",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 3440,
        "y": 400,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf"
            ]
        ]
    },
    {
        "id": "388bec4d296db98d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_wt1",
        "label": "",
        "tooltip": "Range 20 / 60",
        "group": "052caff3b2365345",
        "order": 11,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt1",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "20",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 3600,
        "y": 360,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf"
            ]
        ]
    },
    {
        "id": "81e0133d16c51789",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR on/off",
        "label": "",
        "tooltip": " ",
        "group": "1179fa790d2d89ca",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Correction_0_WAR_on_off",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3450,
        "y": 300,
        "wires": [
            [
                "65770940f38c7f51"
            ]
        ]
    },
    {
        "id": "b991be16b9662a3e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "set.Correction_0_WAR_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Function - WAR\";\nglobal.set(\"Correction_0_WAR_on_off\",msg.payload,\"file\");\n//global.set(\"Correction_0_WAR_on_off\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3890,
        "y": 280,
        "wires": [
            [
                "0380b395668eee8e"
            ]
        ]
    },
    {
        "id": "0380b395668eee8e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Correction_0_WAR_on_off",
        "mode": "link",
        "links": [
            "01d75eec1bfe68d4",
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364",
            "126583bf986bb2c7"
        ],
        "x": 4055,
        "y": 280,
        "wires": []
    },
    {
        "id": "0ad263e5f3bf4fe9",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "set.war_ot_wt",
        "func": "varName = msg.topic\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(varName,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3300,
        "y": 500,
        "wires": [
            [
                "5b0c451c1ec63b84"
            ]
        ]
    },
    {
        "id": "5b0c451c1ec63b84",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Chart WAR",
        "func": "var war_Tb          = global.get('T_outside',\"file\");                           // Outdoor temperature.\nvar SP_war          = global.get('F_WAR_SP');                                   // Setpoint after the WAR calculation done in (other) function.\n\nvar war_ot1         = global.get('war_ot1',\"file\");\nvar war_ot2         = global.get('war_ot2',\"file\");\nvar war_ot3         = global.get('war_ot3',\"file\");\n\nvar war_wt1         = global.get('war_wt1',\"file\");\nvar war_wt2         = global.get('war_wt2',\"file\");\nvar war_wt3         = global.get('war_wt3',\"file\");\n\n// Design example\n//          OUTSIDE                 WATER\n//          Temperature     >>      Temperature\n//----------------------------------------------------------------------------\n// Range 1\n//          (OT1=)  20      >>  25  (=WT1)\n// Range 2\n//          (OT2=)  5       >>  31  (=WT2)\n// Range 3\n//          (OT3=)  -10     >>  37  (=WT3)\n// Range 4\n//----------------------------------------------------------------------------\n//\n//\n// math part \n// Y = aX + b\n// X axis = ot variable\n// Y axis = wt variable\nvar a;\nvar b;\n\nif (war_Tb <= war_ot3)                                                          // Range 1 in the graph\n    {   a = 0;\n        b = war_wt3;\n    }\n\nif (war_Tb > war_ot2)                                                           // Range 2 in the graph\n    {   a = ((war_wt2-war_wt1)/(war_ot2-war_ot1));\n        b = (war_wt1-(war_ot1*a));\n    }\n    \nif (war_Tb <= war_ot2)                                                          // Range 3 in the graph\n    {   a = ((war_wt3-war_wt2)/(war_ot3-war_ot2));\n        b = (war_wt2-(war_ot2*a));\n    }\n    \nif (war_Tb >= war_ot1)                                                          // Range 4 in the graph\n    {   a = 0;\n        b = war_wt1;\n    }\n\n// Chart part. \n// Here the chart is created with the variables.\n// Part 1 of the chart plots the WAR temperature profile set by the values on the page. \n// Part 2 of the chart plots the line which represents the actual temperature to water temperature. To read it easier.\n// Part 3 of the chart plots the ranges so the chart will be more stable on screen, not messing around with chart axis.\n\nvar chart =     [{\n    \"series\":   [\"Water\",\"Actual\",''],\n    \"data\": [\n                [\n                {\"x\":(war_ot1+15),\"y\":war_wt1},                                 // chart part 1: WAR program series\n                {\"x\":(war_ot1),\"y\":war_wt1},\n                {\"x\":(war_ot2),\"y\":war_wt2},\n                {\"x\":(war_ot3),\"y\":war_wt3},\n                {\"x\":(war_ot3-15),\"y\":war_wt3}\n                ],\n                \n                [\n                {\"x\":(war_ot3-15),  \"y\":((a*war_Tb)+b)},                        // chart part 2: Actual lines which make use of the function above.\n                {\"x\":(war_Tb),      \"y\":((a*war_Tb)+b)},\n                {\"x\":(war_Tb),      \"y\":war_wt1-5},\n                ],\n                \n                [                                                               // chart part 3: X-Y as with fixed ranges to make it look more stable.\n                {\"x\":(war_ot3-15),\"y\":(war_wt3+5)},\n                {\"x\":(war_ot3-15),\"y\":(war_wt1-5)},\n                {\"x\":(war_ot1+15),\"y\":(war_wt1-5)}\n                ]\n\n            ],    \n    \"labels\":[ \"\",\"\" ]\n}];\n\n\n\nlet msg1={}, msg2={}, msg3={};\nmsg.payload = chart; \nmsg2.payload = war_Tb; \nmsg3.payload = SP_war;\n\nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='T outside';\n\nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='SP WAR';\n\nreturn [msg, msg2, msg3];\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 520,
        "wires": [
            [
                "4d5e9a9dacd2b429"
            ],
            [
                "7febe67492bf7cbe",
                "12842f4ef6ffc342"
            ],
            []
        ],
        "outputLabels": [
            "Real chart",
            "T_outside",
            ""
        ]
    },
    {
        "id": "4d5e9a9dacd2b429",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "",
        "group": "9b8ec8b1b9f66309",
        "order": 1,
        "width": 11,
        "height": 8,
        "label": "WAR temperature profile",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "war_wt3+",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#333333",
            "#000000",
            "#000000",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4210,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e5afa5e58fb2ecef",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3180,
        "y": 860,
        "wires": [
            [
                "48ac4170551d07e2"
            ]
        ]
    },
    {
        "id": "48ac4170551d07e2",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Load on boot RTC",
        "func": "var var1e            = global.get('F_RTC.state',\"file\");\nvar var2e            = global.get('WoonkamerSP',\"file\");\n\nvar rtc_t1          = global.get('rtc_t1',\"file\");                      // Range +3\n    if (rtc_t1 === undefined)                                   // Range +3\n        {\n            global.set('rtc_t1',1.5,\"file\");\n        }\nvar rtc_t2          = global.get('rtc_t2',\"file\");                      // Range +2\n    if (rtc_t2 === undefined)                                   // Range +2\n        {\n            global.set('rtc_t2',1,\"file\");\n        }\nvar rtc_t3          = global.get('rtc_t3',\"file\");                      // Range +1\n    if (rtc_t3 === undefined)                                   // Range +1\n        {\n            global.set('rtc_t3',0.5,\"file\");\n        }\nvar rtc_t4          = global.get('rtc_t4',\"file\");                      // Range -1\n    if (rtc_t4 === undefined)                                   // Range -1\n        {\n            global.set('rtc_t4',-0.5,\"file\");\n        }\nvar rtc_t5          = global.get('rtc_t5',\"file\");                      // Range -2\n    if (rtc_t5 === undefined)                                   // Range -2\n        {\n            global.set('rtc_t5',-1,\"file\");\n        }\nvar rtc_t6          = global.get('rtc_t6',\"file\");                      // Range -3\n    if (rtc_t6 === undefined)                                   // Range -3\n        {\n            global.set('rtc_t6',-1.5,\"file\");\n            rtc_t6 = -1.5;\n        }\nvar rtc_t7 = global.get('rtc_t7', \"file\");                          // Range -custom\n    if (rtc_t7 === undefined)                                   // Range free\n        {\n        global.set('rtc_t7', (rtc_t6 - 0.1), \"file\");                   //default 0.1 lower then rtc_t6\n        }\nvar rtc_off          = global.get('rtc_off',\"file\");\n    if (rtc_off === undefined)\n        {\n            global.set('rtc_off',10,\"file\");\n        }\nvar rtc_on          = global.get('rtc_on',\"file\");\n    if (rtc_on === undefined)\n        {\n            global.set('rtc_on',-10,\"file\");\n        }\n\nvar F_RTC_F1_power_state = global.get('F_RTC.F1_power_state',\"file\");\nif (F_RTC_F1_power_state === undefined)\n        {\n            global.set('F_RTC.F1_power_state',0,\"file\");\n        }\n\nvar rtc_t7_custom_cor = global.get('rtc_t7_custom_cor', \"file\");\n    if (rtc_t7_custom_cor === undefined)\n        {\n            rtc_t7_custom_cor = 10; // +10 correction default\n            global.set('rtc_t7_custom_cor', rtc_t7_custom_cor, \"file\");\n        }\n\nvar F_RTC_incremental_setpoints_state = global.get('F_RTC.incremental_setpoints_state', \"file\");\n    if (F_RTC_incremental_setpoints_state === undefined) \n        {\n            global.set('F_RTC.incremental_setpoints_state', 0, \"file\");\n        }\n\nvar F_RTC_F2_OM_state = global.get('F_RTC.F2_OM_state',\"file\");\n    if (F_RTC_F2_OM_state === undefined)\n        {\n            global.set('F_RTC.F2_OM_state',0,\"file\");\n        }\n\n\n\nlet msg1 = {}, msg2 = {}, msg3 = {}, msg4 = {}, msg5 = {}, msg6 = {}, msg7 = {}, msg8 = {}, msg9 = {}, msg10 = {}, msg11 = {}, msg12 = {}, msg13 = {}, msg14 = {}, msg15 = {}; //msg14 = F_RTC.incremental_setpoints_state\n\n\nmsg1.payload = var1e;\nif(var1e === undefined) {msg1=null;}\n\nmsg2.payload = var2e;\nif(var2e === undefined) {msg2=null;}\n\nmsg3.payload = rtc_t1;\nif(rtc_t1 === undefined) {msg3=null;}\n\nmsg4.payload = rtc_t2;\nif(rtc_t2 === undefined) {msg4=null;}\n\nmsg5.payload = rtc_t3;\nif(rtc_t3 === undefined) {msg5=null;}\n\nmsg6.payload = rtc_t4;\nif(rtc_t4 === undefined) {msg6=null;}\n\nmsg7.payload = rtc_t5;\nif(rtc_t5 === undefined) {msg7=null;}\n\nmsg8.payload = rtc_t6;\nif(rtc_t6 === undefined) {msg8=null;}\n\nmsg9.payload = rtc_t7; // custom\nif (rtc_t7 === undefined) { msg9 = null; }\n\nmsg10.payload = rtc_off;\nif(rtc_off === undefined) {msg10=null;}\n\nmsg11.payload = rtc_on;\nif(rtc_on === undefined) {msg11=null;}\n\nmsg12.payload = F_RTC_F1_power_state;\nif (F_RTC_F1_power_state === undefined) {msg12=null;}\n\nmsg13.payload = rtc_t7_custom_cor;\nif(rtc_t7_custom_cor === undefined) {msg13=null;}\n\nmsg14.payload = F_RTC_incremental_setpoints_state; msg14.custom = rtc_t7_custom_cor;\n\nmsg15.payload = F_RTC_F2_OM_state;\nif (F_RTC_F2_OM_state === undefined) {msg15=null;}\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg11, msg12, msg13,msg14,msg15];\n",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3170,
        "y": 960,
        "wires": [
            [
                "e8990d184ea1eca6",
                "25b8320badf7ef88"
            ],
            [
                "1b8f5447c498c1d6"
            ],
            [
                "d3b8865dfdb6d46c"
            ],
            [
                "e4c7ba5f1306c384"
            ],
            [
                "a0998b9af634354f"
            ],
            [
                "aa1f73bbe3eef9e1"
            ],
            [
                "9b1f3ccedd4e853b"
            ],
            [
                "017e7b4d1642ed42"
            ],
            [
                "2ca9ec858ebd4887"
            ],
            [
                "9e7985132053da99"
            ],
            [
                "6a4e29a621172a7e"
            ],
            [
                "6efc9729afea79a2"
            ],
            [
                "290133f7fd948e25"
            ],
            [
                "57d858f4dd89a4c8"
            ],
            [
                "f8d7e53aed62cd14"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off",
            "WoonkamerSP",
            "rtc_t1",
            "rtc_t2",
            "rtc_t3",
            "rtc_t4",
            "rtc_t5",
            "rtc_t6",
            "rtc_t7",
            "rtc_off",
            "rtc_on",
            "F_RTC_on_off2",
            "rtc_t7_custom_cor",
            "booster",
            "F_RTC_on_off3_OM"
        ]
    },
    {
        "id": "080c11bcc5a2ac73",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "links": [
            "d16f38ef74db786a"
        ],
        "x": 3365,
        "y": 600,
        "wires": [
            [
                "d9675d9d144e412b",
                "946190a858bafe3d"
            ]
        ]
    },
    {
        "id": "d1e851a03542c949",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "Outside temp.",
        "label": "Outside temp.",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3460,
        "y": 340,
        "wires": []
    },
    {
        "id": "54284f6b97afb3c7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "Water temp.",
        "label": "Water temp.",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3610,
        "y": 340,
        "wires": []
    },
    {
        "id": "7febe67492bf7cbe",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 24,
        "width": 3,
        "height": 1,
        "name": "T outside",
        "label": "",
        "format": "{{msg.payload}} °C",
        "layout": "row-center",
        "className": "",
        "x": 3840,
        "y": 460,
        "wires": []
    },
    {
        "id": "d9675d9d144e412b",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 25,
        "width": 3,
        "height": 1,
        "name": "SP (WAR) - Function (WAR) settings tab",
        "label": "",
        "format": "{{msg.payload}} °C",
        "layout": "row-center",
        "className": "",
        "x": 3880,
        "y": 560,
        "wires": []
    },
    {
        "id": "f3f5cc4e789d19f3",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 22,
        "width": 3,
        "height": 1,
        "name": "Calculated water temp.",
        "label": "Calculated temp.",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3820,
        "y": 380,
        "wires": []
    },
    {
        "id": "0c8eb8257035ca5f",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR on/off",
        "label": "WAR",
        "tooltip": "",
        "group": "052caff3b2365345",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Correction_0_WAR_on_off",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3450,
        "y": 260,
        "wires": [
            [
                "65770940f38c7f51"
            ]
        ]
    },
    {
        "id": "d3b8865dfdb6d46c",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t1",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 7,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t1",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3690,
        "y": 880,
        "wires": [
            [
                "7d582005c7d66f28",
                "e64935081974f391"
            ]
        ]
    },
    {
        "id": "e4c7ba5f1306c384",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t2",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 9,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t2",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3690,
        "y": 920,
        "wires": [
            [
                "7d582005c7d66f28",
                "e64935081974f391"
            ]
        ]
    },
    {
        "id": "a0998b9af634354f",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t3",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 11,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t3",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3690,
        "y": 960,
        "wires": [
            [
                "7d582005c7d66f28",
                "e64935081974f391"
            ]
        ]
    },
    {
        "id": "aa1f73bbe3eef9e1",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t4",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 17,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t4",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3690,
        "y": 1080,
        "wires": [
            [
                "7d582005c7d66f28",
                "e64935081974f391"
            ]
        ]
    },
    {
        "id": "9b1f3ccedd4e853b",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t5",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 19,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t5",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3690,
        "y": 1120,
        "wires": [
            [
                "7d582005c7d66f28",
                "e64935081974f391"
            ]
        ]
    },
    {
        "id": "017e7b4d1642ed42",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t6",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 21,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t6",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3690,
        "y": 1160,
        "wires": [
            [
                "7d582005c7d66f28",
                "e64935081974f391"
            ]
        ]
    },
    {
        "id": "aae82d0c01404d51",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set.rtc_t_ranges",
        "func": "var varName = msg.topic\nmsg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(varName,msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4180,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "60e33931edeab23f",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 6,
        "width": 3,
        "height": 3,
        "name": "Warm limits",
        "label": "Too warm",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 3410,
        "y": 880,
        "wires": []
    },
    {
        "id": "3e3f19d365adf7ae",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 16,
        "width": 3,
        "height": 3,
        "name": "Cold limits",
        "label": "Too cold",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 3410,
        "y": 1080,
        "wires": []
    },
    {
        "id": "38a2e1df7e0bdb2a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Chart RTC",
        "func": "var rtc_PV          = global.get('T_room');                             // Measurement of room temperature\n\nif (rtc_PV === undefined) \n{\n    return null;\n}\n\nelse \n{\n    \n    var rtc_SP          = global.get('WoonkamerSP',\"file\");                         // SetPoint of room temperature.\n    if (rtc_SP===undefined) {global.set('WoonkamerSP',20,\"file\"); rtc_SP=20;}\n    \n    var rtc_t1          = global.get('rtc_t1',\"file\");\n    var rtc_t2          = global.get('rtc_t2',\"file\");\n    var rtc_t3          = global.get('rtc_t3',\"file\");\n    \n    var rtc_t4          = global.get('rtc_t4',\"file\");\n    var rtc_t5          = global.get('rtc_t5',\"file\");\n    var rtc_t6          = global.get('rtc_t6',\"file\");\n    var rtc_t7          = global.get('rtc_t7', \"file\"); //custom\n    var rtc_on          = global.get('rtc_on',\"file\");\n    var rtc_off          = global.get('rtc_off',\"file\");\n    \n    var rtc_vvw1        = global.get('T_woonkamer_BT3_vvw');                        // Measurement of room temperature \n    var rtc_vvw2        = global.get('T_woonkamer_BT4_vvw');                        // Measurement of room temperature \n    \n    let msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg8a={}, msg9={}, msg10={}, msg11={}, msg12={};\n    \n    \n    msg1.payload = rtc_SP;                                                          //\n    msg1.payload = Number(msg1.payload).toFixed(1);\n    msg1.payload = parseFloat(msg1.payload);\n    msg1.topic='Room SP';                                                                // \n    \n    msg2.payload = rtc_PV;                                                          // \n    msg2.payload = Number(msg2.payload).toFixed(2);\n    msg2.payload = parseFloat(msg2.payload);\n    msg2.topic='Room PV';                                                                // \n    \n    msg3.payload = (rtc_SP+rtc_t1);                                                 // \n    msg3.payload = Number(msg3.payload).toFixed(1);\n    msg3.payload = parseFloat(msg3.payload);\n    msg3.topic='-3';                                                          // \n    \n    msg4.payload = (rtc_SP+rtc_t2);                                                 // \n    msg4.payload = Number(msg4.payload).toFixed(1);\n    msg4.payload = parseFloat(msg4.payload);\n    msg4.topic='-2';                                                          // \n    \n    msg5.payload = (rtc_SP+rtc_t3);                                                 // \n    msg5.payload = Number(msg5.payload).toFixed(1);\n    msg5.payload = parseFloat(msg5.payload);\n    msg5.topic='-1';                                                          // \n    \n    msg6.payload = (rtc_SP+rtc_t4);                                                 // \n    msg6.payload = Number(msg6.payload).toFixed(1);\n    msg6.payload = parseFloat(msg6.payload);\n    msg6.topic='+1';                                                          // \n    \n    msg7.payload = (rtc_SP+rtc_t5);                                                 // \n    msg7.payload = Number(msg7.payload).toFixed(1);\n    msg7.payload = parseFloat(msg7.payload);\n    msg7.topic='+2';                                                          // \n    \n    msg8.payload = (rtc_SP+rtc_t6);                                                 // \n    msg8.payload = Number(msg8.payload).toFixed(1);\n    msg8.payload = parseFloat(msg8.payload);\n    msg8.topic='+3';                                                          // \n\n    msg8a.payload = (rtc_SP+rtc_t7);                                                 // \n    msg8a.payload = Number(msg8a.payload).toFixed(1);\n    msg8a.payload = parseFloat(msg8a.payload);\n    msg8a.topic = '+custom';  //change to custom\n\n    msg9.payload = rtc_vvw1;                                                        // \n    msg9.payload = Number(msg9.payload).toFixed(2);\n    msg9.payload = parseFloat(msg9.payload);\n    msg9.topic='Floor T1';\n    \n    \n    msg10.payload = rtc_vvw2;                                                        // \n    msg10.payload = Number(msg10.payload).toFixed(2);\n    msg10.payload = parseFloat(msg10.payload);\n    msg10.topic='Floor T2';  \n    \n    msg11.payload = (rtc_SP+rtc_on);                                                        // \n    msg11.payload = Number(msg11.payload).toFixed(1);\n    msg11.payload = parseFloat(msg11.payload);\n    msg11.topic='On';  \n    \n    msg12.payload = (rtc_SP+rtc_off);                                                        // \n    msg12.payload = Number(msg12.payload).toFixed(1);\n    msg12.payload = parseFloat(msg12.payload);\n    msg12.topic='Off';  \n    \n    \n    return [[msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg8a, msg9, msg10, msg11, msg12], msg2];\n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4290,
        "y": 1360,
        "wires": [
            [
                "b32f014cb3ec752e"
            ],
            [
                "1f5d513050d612a1"
            ]
        ],
        "outputLabels": [
            "chart",
            "rtc_PV"
        ]
    },
    {
        "id": "b32f014cb3ec752e",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "",
        "group": "7267dafd7dc99038",
        "order": 1,
        "width": 15,
        "height": 16,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "1500",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#7bd152",
            "#0011ff",
            "#b22222",
            "#dc7f27",
            "#ffd700",
            "#ffd700",
            "#dc7f27",
            "#b22222",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4530,
        "y": 1380,
        "wires": [
            [
                "075a460a2ecc3a9d"
            ]
        ]
    },
    {
        "id": "79daf2eea90f8432",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 4530,
        "y": 1340,
        "wires": [
            [
                "b32f014cb3ec752e"
            ]
        ]
    },
    {
        "id": "25b8320badf7ef88",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off RTC_Settings",
        "label": "RTC",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3610,
        "y": 800,
        "wires": [
            [
                "94942dfd61d7fa3d"
            ]
        ]
    },
    {
        "id": "032ca56c8c21283e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "group": "7267dafd7dc99038",
        "order": 2,
        "width": 15,
        "height": 1,
        "name": "footnote",
        "label": "This chart shows 1 datapoint every 2 minutes",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 4520,
        "y": 1440,
        "wires": []
    },
    {
        "id": "36a9b7dad9d2611e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "9b8ec8b1b9f66309",
        "order": 2,
        "width": 11,
        "height": 1,
        "name": "Graph description",
        "label": "X-axis: outside °C | Y-axis: water °C",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3990,
        "y": 360,
        "wires": []
    },
    {
        "id": "45643e4e39e1d248",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "1179fa790d2d89ca",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "Home Heat - Current correction value RTC",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-right",
        "className": "",
        "x": 3670,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1b40f688e5fbc5dd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "group": "1179fa790d2d89ca",
        "order": 13,
        "width": 2,
        "height": 1,
        "name": "Home Heat - Current correction (SS)",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-spread",
        "className": "",
        "x": 4060,
        "y": 1900,
        "wires": []
    },
    {
        "id": "4c49268a7054041c",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "links": [
            "16054e8334890ad8"
        ],
        "x": 3615,
        "y": 1940,
        "wires": [
            [
                "47e76e01a5cfb304",
                "3a196a4275cfec68"
            ]
        ]
    },
    {
        "id": "37ae6fb47a326b5e",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "SS chart",
        "group": "4551542d51501ce1",
        "order": 2,
        "width": 23,
        "height": 11,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "2000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4060,
        "y": 1760,
        "wires": [
            [
                "cac91a6a0390c860"
            ]
        ]
    },
    {
        "id": "3578d6b18ceb5727",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Chart SS",
        "func": "var ss_SP           = global.get('SP_Final',\"file\");                // Current compressor frequency.\nvar ss_Tr           = global.get('Main_Inlet_Temp');                             // Measurement of room temperature \nvar ss_Ta           = global.get('Main_Outlet_Temp');\nvar ss_hz           = global.get('compressor_frequency',\"file\");\nvar ss_corr         = global.get('F_SS_correction');\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={};\n\n\nmsg1.payload = ss_SP;                                                           //\nmsg1.payload = Number(msg1.payload).toFixed(1);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='Setpoint';                                                          // \n\nmsg2.payload = ss_Tr;                                                           //\nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='Water inlet';                                                       // \n\nmsg3.payload = ss_Ta;                                                           // \nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='Water outlet';                                                      // \n\nmsg4.payload = ss_hz;                                                           // \nmsg4.payload = Number(msg4.payload).toFixed(0);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='Frequency';                                                         // \n\n\nmsg5.payload = ss_corr;                                                           // \nmsg5.payload = Number(msg5.payload).toFixed(0);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='ss_correction';                                                     // \n\n\n\nreturn [[msg1, msg2, msg3, msg4, msg5]];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3700,
        "y": 1780,
        "wires": [
            [
                "37ae6fb47a326b5e"
            ]
        ]
    },
    {
        "id": "7bad42f4cc70470e",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Trigger interval 1m",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3520,
        "y": 1780,
        "wires": [
            [
                "3578d6b18ceb5727"
            ]
        ]
    },
    {
        "id": "7790b731fd9a1374",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Softstart on/off",
        "label": "SoftStart",
        "tooltip": "",
        "group": "c2a0123d2e2c91f0",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3410,
        "y": 1820,
        "wires": [
            [
                "0e8ef97d6a106fe8"
            ]
        ]
    },
    {
        "id": "c9c2bf06edb19d41",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Chart Water (ROOM)",
        "func": "var SP_Ta                   = global.get('SP_Final',\"file\");                    // Current Setpoint Ta\nvar PV_Tr                   = global.get('Main_Inlet_Temp');                    // Current inlet temperature\nvar PV_Ta                   = global.get('Main_Outlet_Temp');                   // Current outlet temperature\nvar DHW_Temp                = global.get('DHW_Temp');                           // Current TANK temperature\nvar ThreeWay_Valve_State    = global.get(\"ThreeWay_Valve_State\");               // Current state of the 3-way valve\nvar DHW_Target_Temp         = global.get('DHW_Target_Temp',\"file\");             // Current Setpoint DHW\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\nmsg1.payload = SP_Ta;                                                           //\nmsg1.payload = Number(msg1.payload).toFixed(0);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='SP Ta';                                                             // \n\nmsg2.payload = PV_Tr;                                                           // \nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='PV Tr';                                                             // \n\nmsg3.payload = PV_Ta;                                                           // \nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='PV Ta';                                                             // \n\nmsg4.payload = ThreeWay_Valve_State;                                            // \nmsg4.payload = Number(msg4.payload).toFixed(0);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='ThreeWay Valve State';                                              //  \n\nmsg5.payload = DHW_Temp;                                                        // \nmsg5.payload = Number(msg5.payload).toFixed(0);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='Tank PV';                                                           //  \n\nmsg6.payload = DHW_Target_Temp;                                                           //\nmsg6.payload = Number(msg6.payload).toFixed(0);\nmsg6.payload = parseFloat(msg6.payload);\nmsg6.topic='SP Ta';  \n\n\n// ThreeWay_Valve_state = ROOM mode > output value to pin 1\nif (ThreeWay_Valve_State == 0) {\n    return [ [msg1, msg2, msg3] , null ];\n    } \n\n// ThreeWay_Valve_state = DHW mode > output value to pin 2, including the PV_Tank\nelse {\n    return [ null , [msg6, msg2, msg3, msg5] ];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2300,
        "wires": [
            [
                "9802bf01ebf45d28"
            ],
            [
                "9789265573ab4c80"
            ]
        ]
    },
    {
        "id": "0ac806fe66f54c29",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2300,
        "wires": [
            [
                "c9c2bf06edb19d41"
            ]
        ]
    },
    {
        "id": "76fd0cf35b775cdf",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 130,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "9f3df8b1cba0bbda",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Chart Roomtemperatures",
        "func": "var SP                          = global.get('SP_Final',\"file\");                // Current Setpoint of the water (Ta)\nvar T_room                      = global.get('T_room');                         // Current Livingroom sensor 1 (air)\nvar T_woonkamer_BT2             = global.get('T_woonkamer_BT2');                // Current Livingroom sensor 2 (air)\nvar T_woonkamer_BT3_vvw         = global.get('T_woonkamer_BT3_vvw');            // Current Livingroom sensor 3 (floor)\nvar T_woonkamer_BT4_vvw         = global.get('T_woonkamer_BT4_vvw');            // Current Livingroom sensor 4 (floor)\nvar Tado                        = global.get(\"Tado_Thermostaat_Temp\");          // Current Livingroom sensor 5 (floor)\nvar Echo_Temp                   = global.get(\"Echo_Temp\");                      // Current Livingroom sensor 6 (ECHO)\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={};\n\nif (SP !== undefined)\n{\n    msg1.payload = SP;\n    msg1.payload = Number(msg1.payload).toFixed(2);\n    msg1.payload = parseFloat(msg1.payload);\n    msg1.topic='SP Ta';\n}\n\nif (T_room !== undefined)\n{\n    msg2.payload = T_room;\n    msg2.payload = Number(msg2.payload).toFixed(2);\n    msg2.payload = parseFloat(msg2.payload);\n    msg2.topic='Woonkamer PV (bt)';\n}\n\nif (T_woonkamer_BT2 !== undefined)\n{\n    msg3.payload = T_woonkamer_BT2;\n    msg3.payload = Number(msg3.payload).toFixed(2);\n    msg3.payload = parseFloat(msg3.payload);\n    msg3.topic='Woonkamer PV2 (bt)'; \n}\n\nif (T_woonkamer_BT3_vvw !== undefined)\n{\n    msg4.payload = T_woonkamer_BT3_vvw;\n    msg4.payload = Number(msg4.payload).toFixed(2);\n    msg4.payload = parseFloat(msg4.payload);\n    msg4.topic='T_woonkamer_BT3_vvw';\n}\n\nif (T_woonkamer_BT4_vvw !== undefined)\n{\n    msg5.payload = T_woonkamer_BT4_vvw;\n    msg5.payload = Number(msg5.payload).toFixed(1);\n    msg5.payload = parseFloat(msg5.payload);\n    msg5.topic='T_woonkamer_BT4_vvw';\n}\n\nif (Tado !== undefined)\n{\n    msg6.payload = Tado;\n    msg6.payload = Number(msg6.payload).toFixed(1);\n    msg6.payload = parseFloat(msg6.payload);\n    msg6.topic='Tado';  \n}\n\nif (Echo_Temp !== undefined)\n{\n    msg7.payload = Echo_Temp;\n    msg7.payload = Number(msg7.payload).toFixed(1);\n    msg7.payload = parseFloat(msg7.payload);\n    msg7.topic='Echo'; \n}\n\nreturn [[msg1, msg2, msg3, msg4, msg5, msg6, msg7]];\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2160,
        "wires": [
            [
                "8cb1aceef81045bd"
            ]
        ]
    },
    {
        "id": "a734f98c5d02604e",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2160,
        "wires": [
            [
                "9f3df8b1cba0bbda"
            ]
        ]
    },
    {
        "id": "fa81c798d517834f",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR part",
        "info": "",
        "x": 3140,
        "y": 140,
        "wires": []
    },
    {
        "id": "8bd536b323fb865c",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC part",
        "info": "",
        "x": 3140,
        "y": 780,
        "wires": []
    },
    {
        "id": "e861faea1a81715d",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "SP >>",
        "info": "",
        "x": 3130,
        "y": 820,
        "wires": []
    },
    {
        "id": "b5f581c27a02b8a0",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "SS part",
        "info": "",
        "x": 3110,
        "y": 1740,
        "wires": []
    },
    {
        "id": "4dc131a257d753d0",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "SP >>",
        "info": "",
        "x": 3130,
        "y": 180,
        "wires": []
    },
    {
        "id": "dade0dbb40c3945a",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 15,
        "width": 5,
        "height": 1,
        "name": "Room actual",
        "label": "Room actual",
        "format": "{{msg.payload}} °C ",
        "layout": "row-spread",
        "className": "",
        "x": 3570,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0d58a1e854263ec4",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "",
        "group": "9b8ec8b1b9f66309",
        "order": 4,
        "width": 11,
        "height": 6,
        "label": "WAR Time chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "40",
        "removeOlder": "24",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#de425b",
            "#00876c",
            "#f59b56",
            "#000000",
            "#000000",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4180,
        "y": 520,
        "wires": [
            [
                "c26a112b706b6d55"
            ]
        ]
    },
    {
        "id": "b92812725c4e8443",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3460,
        "y": 540,
        "wires": [
            [
                "5b0c451c1ec63b84",
                "6c95ed35d3dcaea3"
            ]
        ]
    },
    {
        "id": "01d75eec1bfe68d4",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Dash_WAR_OnOff",
        "links": [
            "0380b395668eee8e",
            "7bd79e0421697e75"
        ],
        "x": 3365,
        "y": 200,
        "wires": [
            [
                "0c8eb8257035ca5f",
                "81e0133d16c51789"
            ]
        ]
    },
    {
        "id": "942f2ca34abfe8ac",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC toggle on/off",
        "links": [
            "c9df0ea076346fde",
            "657bf94dca5e4a3f"
        ],
        "x": 3375,
        "y": 780,
        "wires": [
            [
                "25b8320badf7ef88",
                "e8990d184ea1eca6"
            ]
        ]
    },
    {
        "id": "12e9ac12cf2fde5c",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "softstart on_off",
        "links": [
            "84f7cbc2cc8c135d"
        ],
        "x": 3295,
        "y": 1760,
        "wires": [
            [
                "c66f65978915e688",
                "7790b731fd9a1374"
            ]
        ]
    },
    {
        "id": "dc69bdbe82bc7c6e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "-3",
        "label": "-3",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3550,
        "y": 880,
        "wires": []
    },
    {
        "id": "604a8e4b260ab341",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "-2",
        "label": "-2",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3550,
        "y": 920,
        "wires": []
    },
    {
        "id": "2acac67ac20fecaa",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 12,
        "width": 2,
        "height": 1,
        "name": "-1",
        "label": "-1",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3550,
        "y": 960,
        "wires": []
    },
    {
        "id": "38b237621bd70775",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 18,
        "width": 2,
        "height": 1,
        "name": "+1",
        "label": "+1",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3550,
        "y": 1080,
        "wires": []
    },
    {
        "id": "07ec6cc26e34e858",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 20,
        "width": 2,
        "height": 1,
        "name": "+2",
        "label": "+2",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3550,
        "y": 1120,
        "wires": []
    },
    {
        "id": "a859857d1be789c9",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 22,
        "width": 2,
        "height": 1,
        "name": "+3",
        "label": "+3",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3550,
        "y": 1160,
        "wires": []
    },
    {
        "id": "354fe89415b3f383",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 4150,
        "y": 560,
        "wires": [
            [
                "0d58a1e854263ec4"
            ]
        ]
    },
    {
        "id": "ecf47b4f156ae616",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Load on boot WAR",
        "func": "var SP_DIRECT_virt          = global.get('SP_DIRECT_virt',\"file\");\n    if (SP_DIRECT_virt === undefined)        {global.set('SP_DIRECT_virt',20,\"file\"); SP_DIRECT_virt=20;}\n    \nvar Correction_0_WAR_on_off = global.get('Correction_0_WAR_on_off',\"file\");\n    if (Correction_0_WAR_on_off === undefined)        {global.set('Correction_0_WAR_on_off',0,\"file\"); Correction_0_WAR_on_off=0;}\n\nvar war_ot1                 = global.get('war_ot1',\"file\");                             // Outside temperature high         (warm outside)\nvar war_ot2                 = global.get('war_ot2',\"file\");                             // Outside temperature intermediate (intermediate outside temperature)\nvar war_ot3                 = global.get('war_ot3',\"file\");                             // Outside temperature low          (cold outside)\nvar war_wt1                 = global.get('war_wt1',\"file\");                             // Water temperature low            (cold water)\nvar war_wt2                 = global.get('war_wt2',\"file\");                             // Water temperature intermediate   (intermediate water temperature)\nvar war_wt3                 = global.get('war_wt3',\"file\");                             // Water temperature high           (warm water)\n\n\n\nvar check = (war_ot1+war_ot2+war_ot3+war_wt1+war_wt2+war_wt3);\nif (isNaN(check) === true || check === undefined)     // if the variables are added to eachother and the result is Not a Number, produce an error message.\n    {   \n        return null;\n    }\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={};\n\n\nmsg1.payload = SP_DIRECT_virt;\nif (SP_DIRECT_virt === undefined) {msg1=null;}\n\nmsg2.payload = Correction_0_WAR_on_off;\nif (Correction_0_WAR_on_off === undefined) {msg2=null;}\n\nmsg3.payload = war_ot1;\nif (war_ot1 === undefined) {msg3=null;}\n\nmsg4.payload = war_ot2;\nif (war_ot2 === undefined) {msg4=null;}\n\nmsg5.payload = war_ot3;\nif (war_ot3 === undefined) {msg5=null;}\n\nmsg6.payload = war_wt1;\nif (war_wt1 === undefined) {msg6=null;}\n\nmsg7.payload = war_wt2;\nif (war_wt2 === undefined) {msg7=null;}\n\nmsg8.payload = war_wt3;\nif (war_wt3 === undefined) {msg8=null;}\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8];\n\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3170,
        "y": 340,
        "wires": [
            [
                "8329aedf9204b75d"
            ],
            [
                "0c8eb8257035ca5f",
                "81e0133d16c51789"
            ],
            [
                "9a0e227ed7718d64"
            ],
            [
                "f1d9c2e3346b1e43"
            ],
            [
                "4950af3d6534aa47"
            ],
            [
                "388bec4d296db98d"
            ],
            [
                "e07cc2b915729d33"
            ],
            [
                "f2daac0935cc9d81"
            ]
        ],
        "outputLabels": [
            "SP_DIRECT_virt",
            "Correction_0_WAR_on_off",
            "war_ot1",
            "war_ot2",
            "war_ot3",
            "war_wt1",
            "war_wt2",
            "war_wt3"
        ]
    },
    {
        "id": "aa92d770db68e68b",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "1 Trigger / 5 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3180,
        "y": 260,
        "wires": [
            [
                "ecf47b4f156ae616"
            ]
        ]
    },
    {
        "id": "8c2afa46f759d9cd",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Load on boot 4",
        "func": "var DHW_Target_Temp         = global.get('DHW_Target_Temp',\"file\");\n//let msg1={};\nmsg.payload = DHW_Target_Temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 120,
        "wires": [
            [
                "158e0bb2b00cd4ba"
            ]
        ],
        "outputLabels": [
            "DHW_Target_Temp"
        ]
    },
    {
        "id": "6c42a1a32ed02491",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "1 Trigger / minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 60,
        "wires": [
            [
                "8c2afa46f759d9cd"
            ]
        ]
    },
    {
        "id": "2081818c5b84e07f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Load on boot SS",
        "func": "var Correction_2_softstart_on_off           = global.get('Correction_2_softstart_on_off',\"file\");\nvar F_SS_reset_after_defrost                = global.get('F_SS_reset_after_defrost',\"file\");\n\nlet msg1={};    // Correction_2_softstart_on_off\nlet msg2={};    // F_SS_reset_after_defrost\n\n\nif (Correction_2_softstart_on_off === undefined) \n    {\n        Correction_2_softstart_on_off = 0;\n        global.set('Correction_2_softstart_on_off',0,\"file\");\n        \n    }\nif (F_SS_reset_after_defrost === undefined) {\n    global.set('F_SS_reset_after_defrost',0,\"file\");\n    \n}\n\n\nmsg1.payload = Correction_2_softstart_on_off;\nmsg2.payload = F_SS_reset_after_defrost;\n\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3150,
        "y": 1820,
        "wires": [
            [
                "c66f65978915e688",
                "7790b731fd9a1374"
            ],
            [
                "2f436c5ec33c9291"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off",
            ""
        ]
    },
    {
        "id": "5ebd5b33f81038ea",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "1 Trigger / 30 minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "x": 3180,
        "y": 1780,
        "wires": [
            [
                "2081818c5b84e07f"
            ]
        ]
    },
    {
        "id": "12842f4ef6ffc342",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "1179fa790d2d89ca",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "T outside (advanced Functions tab)",
        "label": "WAR",
        "format": "({{msg.payload}} °C)",
        "layout": "row-left",
        "className": "",
        "x": 3880,
        "y": 420,
        "wires": []
    },
    {
        "id": "1f5d513050d612a1",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "1179fa790d2d89ca",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "RTC PV (Home_HEAT)",
        "label": "RTC",
        "format": "({{msg.payload}} °C)",
        "layout": "row-left",
        "className": "",
        "x": 4010,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1eb00088db267256",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "group": "1179fa790d2d89ca",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "SoftStart txt",
        "label": "SoftStart",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3400,
        "y": 1900,
        "wires": []
    },
    {
        "id": "cc1c74d4b3b87c5e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 20,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4230,
        "y": 160,
        "wires": []
    },
    {
        "id": "e5a709273b24888d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4250,
        "y": 180,
        "wires": []
    },
    {
        "id": "d0cbd630befb3d01",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 19,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4250,
        "y": 240,
        "wires": []
    },
    {
        "id": "7a2a9be0735512b6",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 23,
        "width": 2,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4270,
        "y": 260,
        "wires": []
    },
    {
        "id": "320506c25427ee87",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 33,
        "width": 2,
        "height": 3,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4270,
        "y": 320,
        "wires": []
    },
    {
        "id": "e6ca18bfd7adb287",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "TOP62 - panasonic_heat_pump/main/Fan1_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan1_Motor_Speed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 1040,
        "wires": [
            [
                "8ae2f173954488ad"
            ]
        ]
    },
    {
        "id": "42c8d2ef7cd7f120",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "TOP63 - panasonic_heat_pump/main/Fan2_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan2_Motor_Speed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 1160,
        "wires": [
            [
                "b3cbb0e85ba0fb42"
            ]
        ]
    },
    {
        "id": "1ed98a1d47eb56f0",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "Fan1",
        "label": "Fan 1",
        "format": "{{msg.payload}} rpm",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 1040,
        "wires": []
    },
    {
        "id": "79dc18dd1cca1e73",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 12,
        "width": 6,
        "height": 1,
        "name": "Compressor runtime",
        "label": "Compressor runtime",
        "format": "{{msg.payload}} min",
        "layout": "row-spread",
        "className": "",
        "x": 960,
        "y": 980,
        "wires": []
    },
    {
        "id": "2b065128513763fa",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Store information",
        "func": "var ss_chart = msg;\nglobal.set(\"ss_chart\", ss_chart,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 1760,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "9548ee234cc5af7a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Load information",
        "func": "let msg1={};\nmsg1 = global.get(\"ss_chart\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 1740,
        "wires": [
            [
                "37ae6fb47a326b5e"
            ]
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "69b1892c29513016",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 3560,
        "y": 1740,
        "wires": [
            [
                "9548ee234cc5af7a"
            ]
        ]
    },
    {
        "id": "72bcb750dc791f05",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "Store information",
        "func": "var rtc_chart = msg;\nglobal.set(\"rtc_chart\", rtc_chart,\"file\") || [];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4710,
        "y": 1460,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "075a460a2ecc3a9d",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 4700,
        "y": 1420,
        "wires": [
            [
                "72bcb750dc791f05"
            ]
        ]
    },
    {
        "id": "7bf73fde5dbbe654",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Load information",
        "func": "let msg1={};\nmsg1 = global.get(\"rtc_chart\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4270,
        "y": 1400,
        "wires": [
            [
                "b32f014cb3ec752e"
            ]
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "af1e900e0be88b34",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 4100,
        "y": 1400,
        "wires": [
            [
                "7bf73fde5dbbe654"
            ]
        ]
    },
    {
        "id": "aa33ae9640c6a434",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "Store information",
        "func": "var war_chart = msg;\nglobal.set(\"war_chart\", war_chart,\"file\") || [];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4420,
        "y": 600,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "c26a112b706b6d55",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 4410,
        "y": 560,
        "wires": [
            [
                "aa33ae9640c6a434"
            ]
        ]
    },
    {
        "id": "74e2096239928bfc",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Load information",
        "func": "let msg1={};\nmsg1 = global.get(\"war_chart\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4190,
        "y": 420,
        "wires": [
            [
                "0d58a1e854263ec4"
            ]
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "df2ff07ddeb07106",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 4160,
        "y": 380,
        "wires": [
            [
                "74e2096239928bfc"
            ]
        ]
    },
    {
        "id": "ea3029991749f77b",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP15 - panasonic_heat_pump/main/Heat_Energy_Production",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Production",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1520,
        "wires": [
            [
                "4b0bb57d44bd8bb1"
            ]
        ]
    },
    {
        "id": "fa2eba3089ca0ef4",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "group": "fb77ab43998a2f18",
        "order": 2,
        "width": 26,
        "height": 8,
        "label": "Energy",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#056647",
            "#d1102b",
            "#0082cd",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1040,
        "y": 1600,
        "wires": [
            [
                "ba8181d980146bf5"
            ]
        ]
    },
    {
        "id": "3b552bccda090181",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP40 - panasonic_heat_pump/main/DHW_Energy_Production",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Production",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1640,
        "wires": [
            [
                "b4d652a4c0313e8a"
            ]
        ]
    },
    {
        "id": "8a140f3a3a1ff736",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP67 - panasonic_heat_pump/main/Compressor_Current",
        "topic": "panasonic_heat_pump/main/Compressor_Current",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1820,
        "wires": [
            [
                "9ed43df7ef7fa246"
            ]
        ]
    },
    {
        "id": "1cbdb190d6f52cb6",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "group": "fb77ab43998a2f18",
        "order": 4,
        "width": 26,
        "height": 7,
        "label": "Efficiency",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 1940,
        "wires": [
            [
                "2ec8265263c71358"
            ]
        ]
    },
    {
        "id": "fe8e23b8971b868e",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "COP calculated",
        "links": [
            "306b69356454f3ff",
            "5787c91b303f2538"
        ],
        "x": 820,
        "y": 1980,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ],
        "l": true
    },
    {
        "id": "b1933566192d3b78",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP53 - panasonic_heat_pump/main/Eva_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Eva_Outlet_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 2040,
        "wires": [
            [
                "9534d89253d426ca"
            ]
        ]
    },
    {
        "id": "fae151e3fc249477",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Current [A]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1820,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "21857afb8366acf2",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Defrost State [-]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1880,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "039ca8047ee5b833",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EVA outlet [°C]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 2040,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "8e0dc8ab2999f4ec",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 970,
        "y": 1760,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "38b10c117605255d",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Heat | Energy production",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1520,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "53393ad3ce2b9113",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Heat | Energy consumption",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1560,
        "wires": [
            [
                "fa2eba3089ca0ef4",
                "b3e1e417d51330e7"
            ]
        ]
    },
    {
        "id": "3a6bb7844523ece7",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW | Energy production",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1640,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "ca8fd698c67b1cfa",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW | Energy consumption",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1700,
        "wires": [
            [
                "fa2eba3089ca0ef4",
                "bbe6832628277539"
            ]
        ]
    },
    {
        "id": "b3e1e417d51330e7",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "Heat | Energy consumption",
        "mode": "link",
        "links": [],
        "x": 1085,
        "y": 1560,
        "wires": []
    },
    {
        "id": "bbe6832628277539",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "DHW | Energy consumption",
        "mode": "link",
        "links": [],
        "x": 1075,
        "y": 1700,
        "wires": []
    },
    {
        "id": "8627726ba882e493",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "links": [
            "9de1bde370b68508"
        ],
        "x": 235,
        "y": 1560,
        "wires": [
            [
                "79ff4d14869086b3"
            ]
        ]
    },
    {
        "id": "4b0bb57d44bd8bb1",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1520,
        "wires": [
            [
                "38b10c117605255d"
            ]
        ]
    },
    {
        "id": "b4d652a4c0313e8a",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1640,
        "wires": [
            [
                "3a6bb7844523ece7"
            ]
        ]
    },
    {
        "id": "990e0858767f91fc",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1700,
        "wires": [
            [
                "ca8fd698c67b1cfa"
            ]
        ]
    },
    {
        "id": "9ed43df7ef7fa246",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1820,
        "wires": [
            [
                "fae151e3fc249477"
            ]
        ]
    },
    {
        "id": "6d77bc12fe8024ee",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1880,
        "wires": [
            [
                "21857afb8366acf2"
            ]
        ]
    },
    {
        "id": "9534d89253d426ca",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 2040,
        "wires": [
            [
                "039ca8047ee5b833"
            ]
        ]
    },
    {
        "id": "79ff4d14869086b3",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1560,
        "wires": [
            [
                "53393ad3ce2b9113"
            ]
        ]
    },
    {
        "id": "9e7985132053da99",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_off",
        "label": "",
        "tooltip": "",
        "group": "ef3dbc543ae92bec",
        "order": 5,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_off",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+20",
        "step": "0.1",
        "className": "",
        "x": 3550,
        "y": 1400,
        "wires": [
            [
                "7d582005c7d66f28",
                "e64935081974f391"
            ]
        ]
    },
    {
        "id": "47b72adc26e2025f",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "Disable heat above dT",
        "label": "Activate above dT",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3380,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6a4e29a621172a7e",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_on",
        "label": "",
        "tooltip": "",
        "group": "ef3dbc543ae92bec",
        "order": 7,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_on",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-20",
        "max": "2",
        "step": "0.1",
        "className": "",
        "x": 3550,
        "y": 1440,
        "wires": [
            [
                "7d582005c7d66f28",
                "e64935081974f391"
            ]
        ]
    },
    {
        "id": "449411f64f3ffe0b",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Enable heat below dT",
        "label": "Deactivate below dT",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3380,
        "y": 1440,
        "wires": []
    },
    {
        "id": "4b2cff40b8a3ecc9",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "spacer 1x2",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4470,
        "y": 940,
        "wires": []
    },
    {
        "id": "7386864c75dbce5c",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "DHW_Target_Temp",
        "mode": "link",
        "links": [
            "b057826d31d24adf",
            "56131f5116b20fba"
        ],
        "x": 795,
        "y": 120,
        "wires": []
    },
    {
        "id": "3f63919ddd4f0ea7",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Dash - DHW (SP) link in",
        "links": [
            "e62a354ce682ea6f",
            "42734e97a85d5537",
            "8339e07a5f353522",
            "c50593739ea98afa",
            "550d51c7fe788f9e"
        ],
        "x": 415,
        "y": 80,
        "wires": [
            [
                "158e0bb2b00cd4ba",
                "bd709071acae11c7"
            ]
        ]
    },
    {
        "id": "62bb9a3778a8e0c4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "",
        "func": "global.set(\"chart-water-heat\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "8cea97ace96d4c67",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "",
        "func": "global.set(\"chart-water-dhw\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "1afae37bbb9eee4f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "",
        "func": "global.set(\"chart-kamertemperatuur\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "aeca371dc97489c4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "load",
        "func": "let msg1={};\nmsg1 = global.get(\"chart-kamertemperatuur\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2200,
        "wires": [
            [
                "8cb1aceef81045bd"
            ]
        ]
    },
    {
        "id": "eea147e0b371b347",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "load",
        "func": "let msg1={};\nmsg1 = global.get(\"chart-water-heat\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2260,
        "wires": [
            [
                "9802bf01ebf45d28"
            ]
        ]
    },
    {
        "id": "f6a75e4b3dd9cf4c",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "load",
        "func": "let msg1={};\nmsg1 = global.get(\"chart-water-dhw\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2340,
        "wires": [
            [
                "9789265573ab4c80"
            ]
        ]
    },
    {
        "id": "12b317db9b7ce136",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 2240,
        "wires": [
            [
                "aeca371dc97489c4",
                "eea147e0b371b347",
                "f6a75e4b3dd9cf4c"
            ]
        ]
    },
    {
        "id": "65770940f38c7f51",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3650,
        "y": 280,
        "wires": [
            [
                "b991be16b9662a3e",
                "81e0133d16c51789",
                "0c8eb8257035ca5f",
                "850fb0ccb76b25cf"
            ]
        ]
    },
    {
        "id": "94942dfd61d7fa3d",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3890,
        "y": 780,
        "wires": [
            [
                "e8990d184ea1eca6",
                "25b8320badf7ef88",
                "b4051f61cf6d4d65",
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "0e8ef97d6a106fe8",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3600,
        "y": 1840,
        "wires": [
            [
                "c66f65978915e688",
                "7790b731fd9a1374",
                "39c4c5d262a3065b",
                "0a397aae1191ff03"
            ]
        ]
    },
    {
        "id": "3d3b432c844ba87e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "ForceDHW out",
        "mode": "link",
        "links": [
            "6ae86dc05a6a3c4a"
        ],
        "x": 795,
        "y": 240,
        "wires": []
    },
    {
        "id": "0609b7d54d31dafb",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "mode": "link",
        "links": [
            "cc201d2b1a4948f9",
            "20e2544a8277d8c2"
        ],
        "x": 795,
        "y": 180,
        "wires": []
    },
    {
        "id": "25a5987e8a1aaf9c",
        "type": "bar-chart-data",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "bar-chart DHW COP-12months",
        "x_interval": "months",
        "x_size": "12",
        "unit": "",
        "precision": 2,
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 930,
        "y": 2800,
        "wires": [
            [
                "35c9b0fcbdf3c9e0"
            ]
        ]
    },
    {
        "id": "b09d20349841eaed",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Once per 15minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 260,
        "y": 3020,
        "wires": [
            [
                "d4198e0e57720e55"
            ]
        ]
    },
    {
        "id": "d4198e0e57720e55",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Function - bucket 1 + 2 combined",
        "func": "var dhw     = global.get(\"COP_DHW_24m\",\"file\");\nvar heat    = global.get(\"COP_HEAT_24m\",\"file\"); \nlet msg1={}, msg2={};\n\nmsg1 = dhw;\nmsg2 = heat;\n\nvar varlabels;\nif (heat === undefined){varlabels = msg1.payload[0].labels;}else{varlabels = msg2.payload[0].labels;}\n\nvar varData1;// dhw\nif (dhw === undefined){varData1 = [0,0,0,0,0,0,0,0,0,0,0,0];}else{varData1 = msg1.payload[0].data[0];}\n\nvar varData2;// heat\nif (heat === undefined){varData2 = [0,0,0,0,0,0,0,0,0,0,0,0];}else{varData2 = msg2.payload[0].data[0];}\n\nvar varSeries1     = \"DHW\"; // dhw\nvar varSeries2     = \"HEAT\"; // heat\n\nvar m={};\n    m.labels    = varlabels;\n    m.series    = [varSeries1, varSeries2];\n    m.data      = [varData1, varData2];\n\n\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 3020,
        "wires": [
            [
                "eee624aa045ae22a"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "8859608d9186c4e4",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Bucket 1 + 2  combined to chart",
        "info": "",
        "x": 270,
        "y": 2980,
        "wires": []
    },
    {
        "id": "278b50b68f01198e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Load bar-chart data",
        "func": "var heat = global.get(\"COP_HEAT_24m\",\"file\");\nvar dhw = global.get(\"COP_DHW_24m\",\"file\");\n\n// note: if you need to correct the COP monthly chart because it does not show values. Copy/paste the content of \"COP_DHW_24m\" or \"COP_HEAT_24m\" in the lines below. Line 8 or 9. \n// Uncomment the corresponding line 8 or 9. \n// adjust the incorrect value and press [Done] > [Deploy] > [Restore after boot]\n\n//dhw = {\"payload\":[{\"labels\":[\"2022-01\",\"2022-02\",\"2022-03\",\"2022-04\",\"2022-05\",\"2022-06\",\"2022-07\",\"2022-08\",\"2022-09\",\"2022-10\",\"2022-11\",\"2022-12\"],\"series\":[\"DHW\"],\"data\":[[0,0,0,0,3.84,3.05,1.13,3.65,3.68,3.89,3.29,2.79]]}],\"topic\":\"DHW\",\"_msgid\":\"46ca0b6da9dae345\",\"_event\":\"node:5787c91b303f2538\",\"bar_keys\":[\"202201\",\"202202\",\"202203\",\"202204\",\"202205\",\"202206\",\"202207\",\"202208\",\"202209\",\"202210\",\"202211\",\"202212\"],\"data_counter\":[{\"202212\":4814}],\"topics\":[\"DHW\"],\"DHW_last\":0,\"data_min\":0,\"data_max\":3.89,\"data_sum\":25.32,\"settings\":{\"unit\":\"\",\"x_size\":\"12\",\"precision\":2,\"is_meter_reading\":false,\"agg_by\":\"avg\"}};\n//heat = {\"payload\":[{\"labels\":[\"2022-01\",\"2022-02\",\"2022-03\",\"2022-04\",\"2022-05\",\"2022-06\",\"2022-07\",\"2022-08\",\"2022-09\",\"2022-10\",\"2022-11\",\"2022-12\"],\"series\":[\"HEAT\"],\"data\":[[0,0,0,0,4.86,6.01,0.64,0,6.57,7.43,6.32,4.96]]}],\"topic\":\"HEAT\",\"_msgid\":\"a3d2b37df2f169e3\",\"_event\":\"node:306b69356454f3ff\",\"bar_keys\":[\"202201\",\"202202\",\"202203\",\"202204\",\"202205\",\"202206\",\"202207\",\"202208\",\"202209\",\"202210\",\"202211\",\"202212\"],\"data_counter\":[{\"202212\":85520}],\"topics\":[\"HEAT\"],\"HEAT_last\":0,\"data_min\":0,\"data_max\":7.43,\"data_sum\":36.79,\"settings\":{\"unit\":\"\",\"x_size\":\"12\",\"precision\":\"2\",\"is_meter_reading\":false,\"agg_by\":\"avg\"}}\n\nmsg1 = heat;\nmsg2 = dhw;\n\n\n\nif (heat === undefined)     {\n    if (dhw === undefined)  {\n        return [null,null];\n    }\n    \n    return [null,msg2];\n}\n\nelse    {\n    if (dhw === undefined)  {\n        return [msg1,null];\n    }\n    \n    return [msg1,msg2];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2600,
        "wires": [
            [
                "f5f7d3b912113a33"
            ],
            [
                "25a5987e8a1aaf9c"
            ]
        ],
        "outputLabels": [
            "COP_HEAT_24m",
            "COP_DHW_24m"
        ]
    },
    {
        "id": "93a7de2857166209",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Restore after boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "trigger",
        "x": 230,
        "y": 2600,
        "wires": [
            [
                "278b50b68f01198e"
            ]
        ]
    },
    {
        "id": "d63cf14c266a32c5",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 210,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "d5724fa53412c7c1",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "31 Days information",
        "info": "",
        "x": 210,
        "y": 2560,
        "wires": []
    },
    {
        "id": "eee624aa045ae22a",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "2c380c0bbcfb5eb1",
        "name": "COP DHW + COP HEAT (12m)",
        "group": "fb77ab43998a2f18",
        "order": 6,
        "width": 26,
        "height": 7,
        "label": "Monthly COP",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#007585",
            "#de425b",
            "#f59b56",
            "#fff18f",
            "#89bf77",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1290,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "3c6cbf1cc644de40",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 390,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "ad2577846265e4ee",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "links": [
            "306b69356454f3ff"
        ],
        "x": 145,
        "y": 2700,
        "wires": [
            [
                "c28ac0a0c107c5e3"
            ]
        ]
    },
    {
        "id": "c302223665944545",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "links": [
            "5787c91b303f2538"
        ],
        "x": 145,
        "y": 2800,
        "wires": [
            [
                "4dc4c11e169604ca"
            ]
        ]
    },
    {
        "id": "9a77a77bdc585373",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 2700,
        "wires": [
            [
                "f5f7d3b912113a33"
            ]
        ]
    },
    {
        "id": "721b7d606f558c73",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 2800,
        "wires": [
            [
                "25a5987e8a1aaf9c"
            ]
        ]
    },
    {
        "id": "35c9b0fcbdf3c9e0",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "2114aed06fe6d5aa",
        "name": "Store information to COP_DHW_24m",
        "func": "var myArray210 = msg;\nglobal.set(\"COP_DHW_24m\", myArray210,\"file\");\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2800,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "47a9e516229e0256",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "e1f45532e4338e4a",
        "name": "Store information to COP_HEAT_24m",
        "func": "var myArray4 = msg;\nglobal.set(\"COP_HEAT_24m\", myArray4,\"file\");\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2700,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "7e69bda9aa493902",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 710,
        "y": 2900,
        "wires": []
    },
    {
        "id": "4dc4c11e169604ca",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 2800,
        "wires": [
            [
                "721b7d606f558c73"
            ]
        ]
    },
    {
        "id": "c28ac0a0c107c5e3",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HEAT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 2700,
        "wires": [
            [
                "9a77a77bdc585373"
            ]
        ]
    },
    {
        "id": "f5f7d3b912113a33",
        "type": "bar-chart-data",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "bar-chart HEAT COP-12months",
        "x_interval": "months",
        "x_size": "12",
        "unit": "",
        "precision": "2",
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 930,
        "y": 2700,
        "wires": [
            [
                "47a9e516229e0256"
            ]
        ]
    },
    {
        "id": "43403f14c1a863a4",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "bf4af523ba16d457",
        "name": "Line - Water",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Operating mode</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "592f552754e017f5",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "bf4af523ba16d457",
        "name": "Line - Water",
        "order": 11,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "05f3b66c7b91e0c6",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "1179fa790d2d89ca",
        "name": "Line",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 970,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "f38de05b84881512",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "name": "Line",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 850,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5429970cdd04e922",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "spacer 6x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4230,
        "y": 220,
        "wires": []
    },
    {
        "id": "5191d46e46766a6b",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "1179fa790d2d89ca",
        "name": "Line",
        "order": 17,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4330,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6cce5b6bd4157c5b",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "fb77ab43998a2f18",
        "name": "Line",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1070,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "dc1b09eb3278501e",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "fb77ab43998a2f18",
        "name": "Line",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1070,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "23aa1aeed6d15e49",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "fb77ab43998a2f18",
        "name": "Line",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1070,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "f9bad51c9301e2d7",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "trigger",
        "x": 140,
        "y": 1600,
        "wires": [
            [
                "bda2df97c3dfd6ad",
                "9d4206dc389ad732"
            ]
        ]
    },
    {
        "id": "bda2df97c3dfd6ad",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "func": "let msg1={}\nmsg1 = flow.get(\"chart_energy\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1600,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "ba8181d980146bf5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "func": "flow.set(\"chart_energy\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "2ec8265263c71358",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "func": "flow.set(\"chart_efficiency\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "9d4206dc389ad732",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "func": "let msg1={}\nmsg1 = flow.get(\"chart_efficiency\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1940,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "17c5ba9bb0b58a11",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Runtime",
        "func": "// compressor runnint time\nvar start = global.get(\"compressor_start\", \"file\");\nlet msg1 = {};\n\nif (msg.payload > 0) {\n    if (start !== undefined && start != null) {\n        var current_time = new Date().getTime();\n        var TimeElapsed = ((current_time - start) / 1000 / 60); // minutes\n        msg1.payload = TimeElapsed;\n        msg1.payload = Number(msg1.payload).toFixed(0);\n        msg1.payload = parseFloat(msg1.payload);\n        global.set(\"compressor_runtime\", msg1.payload, \"file\");\n        global.set(\"compressor_last_runtime\", msg1.payload, \"file\"); //remember last runtime\n        return msg1;                                    // Value of time elapsed\n\n    }\n    else {\n        start = new Date().getTime();\n        global.set(\"compressor_start\", start, \"file\");\n        return null;\n\n    }\n}\nelse {\n    global.set(\"compressor_start\", undefined, \"file\");\n    global.set(\"compressor_runtime\", 0, \"file\");\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 980,
        "wires": [
            [
                "49a94006dd1947ac"
            ]
        ]
    },
    {
        "id": "49a94006dd1947ac",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 980,
        "wires": [
            [
                "79dc18dd1cca1e73",
                "b65cef840ae30edb"
            ]
        ]
    },
    {
        "id": "f2daac0935cc9d81",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_wt3",
        "label": "",
        "tooltip": "Range 20 / 60",
        "group": "052caff3b2365345",
        "order": 17,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt3",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "20",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 3600,
        "y": 440,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf"
            ]
        ]
    },
    {
        "id": "4950af3d6534aa47",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_ot3",
        "label": "",
        "tooltip": "Range -20 / 15",
        "group": "052caff3b2365345",
        "order": 16,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot3",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "-20",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 3440,
        "y": 440,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf"
            ]
        ]
    },
    {
        "id": "07c9121f1be83415",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 9,
        "width": 2,
        "height": 1,
        "name": "warm spacer 2x1",
        "label": "Warm",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4520,
        "y": 180,
        "wires": []
    },
    {
        "id": "a00885bfd0ed77a7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 12,
        "width": 2,
        "height": 1,
        "name": "Inter spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4510,
        "y": 220,
        "wires": []
    },
    {
        "id": "fa5d110ee0083845",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "name": "Line - Temperature profile",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Temperature profile</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4590,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f76c271c4a48a3e7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 15,
        "width": 2,
        "height": 1,
        "name": "Cold 2x1",
        "label": "Cold",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4490,
        "y": 260,
        "wires": []
    },
    {
        "id": "5b9847446fee98a9",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 6,
        "width": 2,
        "height": 1,
        "name": "Weather spacer 2x1",
        "label": "Weather",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4540,
        "y": 400,
        "wires": []
    },
    {
        "id": "02bef4c27cae892f",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "name": "Line - Setup ",
        "order": 18,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Result</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4530,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "0366fd634f110ba4",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 29,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 4370,
        "y": 400,
        "wires": []
    },
    {
        "id": "be5c89aff3235cfd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1x2",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4470,
        "y": 900,
        "wires": []
    },
    {
        "id": "3cf1a2dd31dacbca",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "name": "Line - Setup ",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3410,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "ca0d9f423e83d3e2",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "name": "Line - RTC results",
        "order": 26,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>RTC results</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3390,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "db206585adea91d8",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "group": "9b8ec8b1b9f66309",
        "name": "Line - Setup ",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4420,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "5bada38f261d4a06",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "Check operation mode",
        "func": "var OM = global.get('Operating_Mode_State',\"file\");\nlet msg1={};\nif (OM == 0 || OM == 2 || OM == 3 || OM == 4 || OM == 6)\n{\n    msg1.payload = OM;\n    return [msg,msg1];\n}\nelse\n{\n    msg.payload = 1;\n    return msg;}\n\n\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1280,
        "wires": [
            [
                "081dae9f3555ade6"
            ],
            []
        ]
    },
    {
        "id": "2347fd7ebf82b618",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "link in 1",
        "links": [
            "a3180920b08e8108"
        ],
        "x": 235,
        "y": 1700,
        "wires": [
            [
                "990e0858767f91fc"
            ]
        ]
    },
    {
        "id": "9faace07ea16ba4d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "Fan2",
        "label": "Fan 2",
        "format": "{{msg.payload}} rpm",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c3c748a1b5f04d42",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC gui changes to function trigger",
        "mode": "link",
        "links": [
            "c3a9e17b02222cee"
        ],
        "x": 4805,
        "y": 860,
        "wires": []
    },
    {
        "id": "a7ed974cef55c457",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR gui changes to function trigger",
        "mode": "link",
        "links": [
            "3f0803a3a230aca2",
            "83bb8e9c13b649dd"
        ],
        "x": 3735,
        "y": 640,
        "wires": []
    },
    {
        "id": "69d5d3a718793320",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "SS gui changes to function trigger",
        "mode": "link",
        "links": [
            "4c81e32b9d30b212"
        ],
        "x": 3955,
        "y": 1860,
        "wires": []
    },
    {
        "id": "7d582005c7d66f28",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 4280,
        "y": 860,
        "wires": [
            [
                "c3c748a1b5f04d42"
            ]
        ]
    },
    {
        "id": "850fb0ccb76b25cf",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3600,
        "y": 640,
        "wires": [
            [
                "a7ed974cef55c457"
            ]
        ]
    },
    {
        "id": "0a397aae1191ff03",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3830,
        "y": 1860,
        "wires": [
            [
                "69d5d3a718793320"
            ]
        ]
    },
    {
        "id": "af16eced17f4bc5c",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3860,
        "y": 2460,
        "wires": [
            [
                "6acc923b4ebb49e4"
            ]
        ]
    },
    {
        "id": "6acc923b4ebb49e4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "name": "set.F_SS_stage2",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"F_SS_stage2\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4050,
        "y": 2460,
        "wires": [
            [
                "b1118094796c2de3"
            ]
        ]
    },
    {
        "id": "b1118094796c2de3",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "126583bf986bb2c7"
        ],
        "x": 4275,
        "y": 2460,
        "wires": []
    },
    {
        "id": "a392ecbc53d0aa62",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "name": "1 Trigger / 30 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3180,
        "y": 2460,
        "wires": [
            [
                "6b24736b375621b3",
                "023ecd610152e924"
            ]
        ]
    },
    {
        "id": "6b24736b375621b3",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "name": "Load on boot SS",
        "func": "\nvar F_SS_stage2     = global.get('F_SS_stage2',\"file\");\n    if (F_SS_stage2===undefined)    \n        {\n            F_SS_stage2 = 15;\n            global.set('F_SS_stage2',F_SS_stage2,\"file\");\n        }\n\nlet msg1={};\n\nmsg1.payload = F_SS_stage2; msg1.topic = \"F_SS_stage2\";\nreturn [msg1];        \n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n\n\n\n// Code added here will be run once\n// whenever the node is started.\n\n\n",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 2460,
        "wires": [
            [
                "6d347eebf409d174"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off"
        ]
    },
    {
        "id": "6d347eebf409d174",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "c2a0123d2e2c91f0",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "5 mins",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 mins",
                "value": 10,
                "type": "num"
            },
            {
                "label": "15 mins",
                "value": 15,
                "type": "num"
            },
            {
                "label": "20 mins",
                "value": 20,
                "type": "num"
            },
            {
                "label": "25 mins",
                "value": 25,
                "type": "num"
            },
            {
                "label": "30 mins",
                "value": 30,
                "type": "num"
            },
            {
                "label": "45 mins",
                "value": 45,
                "type": "num"
            },
            {
                "label": "1 hour",
                "value": 60,
                "type": "num"
            },
            {
                "label": "1 h 15 mins",
                "value": 75,
                "type": "num"
            },
            {
                "label": "1 h 30 mins",
                "value": 90,
                "type": "num"
            },
            {
                "label": "1 h 45 mins",
                "value": 105,
                "type": "num"
            },
            {
                "label": "2 hours",
                "value": 120,
                "type": "num"
            },
            {
                "label": "3 hours",
                "value": 180,
                "type": "num"
            },
            {
                "label": "4 hours",
                "value": 240,
                "type": "num"
            },
            {
                "label": "5 hours",
                "value": 300,
                "type": "num"
            },
            {
                "label": "6 hours",
                "value": 360,
                "type": "num"
            },
            {
                "label": "7 hours",
                "value": 420,
                "type": "num"
            },
            {
                "label": "8 hours",
                "value": 480,
                "type": "num"
            },
            {
                "label": "9 hours",
                "value": 540,
                "type": "num"
            },
            {
                "label": "10 hours",
                "value": 600,
                "type": "num"
            },
            {
                "label": "12 hours",
                "value": 720,
                "type": "num"
            },
            {
                "label": "18 hours",
                "value": 1080,
                "type": "num"
            },
            {
                "label": "24 hours",
                "value": 1440,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3600,
        "y": 2460,
        "wires": [
            [
                "af16eced17f4bc5c"
            ]
        ]
    },
    {
        "id": "023ecd610152e924",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "name": "Load on boot SS",
        "func": "\nvar F_SS_stage2_limit     = global.get('F_SS_stage2_limit',\"file\");\n    if (F_SS_stage2_limit===undefined)    \n        {\n            F_SS_stage2_limit = 1;\n            global.set('F_SS_stage2_limit',F_SS_stage2_limit,\"file\");\n        }\n\nlet msg1={};\n\nmsg1.payload = F_SS_stage2_limit; msg1.topic = \"F_SS_stage2_limit\";\nreturn [msg1];        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 2520,
        "wires": [
            [
                "3b7535829c2cdf6b"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off"
        ]
    },
    {
        "id": "3b7535829c2cdf6b",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "name": "Cap SP increase",
        "label": "Max. setpoint increase",
        "tooltip": "",
        "group": "c2a0123d2e2c91f0",
        "order": 8,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 3630,
        "y": 2520,
        "wires": [
            [
                "cc3e8e6c49910b24"
            ]
        ]
    },
    {
        "id": "cc3e8e6c49910b24",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3860,
        "y": 2520,
        "wires": [
            [
                "98a53971ecd61da7"
            ]
        ]
    },
    {
        "id": "98a53971ecd61da7",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "name": "set.F_SS_stage2_limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"F_SS_stage2_limit\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4060,
        "y": 2520,
        "wires": [
            [
                "b1118094796c2de3"
            ]
        ]
    },
    {
        "id": "6efc9729afea79a2",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off POWER",
        "label": "Action: Turn off/on power",
        "tooltip": "Enables or disables the heat function based on below set deltas",
        "group": "ef3dbc543ae92bec",
        "order": 9,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3600,
        "y": 1520,
        "wires": [
            [
                "d407159ae6560fd6"
            ]
        ]
    },
    {
        "id": "d407159ae6560fd6",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set.F_RTC.F1_power_state",
        "func": "\nmsg.topic = \"Function - RTC automation (power off/on)\";\nglobal.set(\"F_RTC.F1_power_state\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 1280,
        "wires": [
            [
                "5bcad017001638fd"
            ]
        ]
    },
    {
        "id": "5bcad017001638fd",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4250,
        "y": 1300,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "d1aaf53ae9beb422",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "c2a0123d2e2c91f0",
        "order": 15,
        "width": 6,
        "height": 1,
        "name": "Current runtime",
        "label": "Current/last runtime",
        "format": "{{msg.payload}} Min",
        "layout": "row-spread",
        "className": "",
        "x": 3400,
        "y": 2580,
        "wires": []
    },
    {
        "id": "b65cef840ae30edb",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Compressor runtime",
        "mode": "link",
        "links": [
            "e33c35973b22ff0b"
        ],
        "x": 1035,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e33c35973b22ff0b",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "name": "link in 5",
        "links": [
            "b65cef840ae30edb"
        ],
        "x": 3285,
        "y": 2580,
        "wires": [
            [
                "d1aaf53ae9beb422"
            ]
        ]
    },
    {
        "id": "2fdb58826d7b6432",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "c2a0123d2e2c91f0",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Minimum runtime",
        "label": "Runtime",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 3490,
        "y": 2420,
        "wires": []
    },
    {
        "id": "e4f68946c7b21da7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "c2a0123d2e2c91f0",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "Compressor",
        "label": "Frequency",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "className": "",
        "x": 3850,
        "y": 2600,
        "wires": []
    },
    {
        "id": "6fc2967e18fedff3",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "c2a0123d2e2c91f0",
        "name": "Line",
        "order": 5,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4030,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "a8db39ee44e93a18",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "c2a0123d2e2c91f0",
        "name": "Line",
        "order": 13,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Compressor</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4030,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "cdf7664223f16687",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "group": "c2a0123d2e2c91f0",
        "order": 17,
        "width": 6,
        "height": 1,
        "name": "Function softstart - Current correction (SS)",
        "label": "Current correction",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 4040,
        "y": 1940,
        "wires": []
    },
    {
        "id": "23b6190afc840bdc",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "c2a0123d2e2c91f0",
        "name": "Line",
        "order": 16,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Result</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4030,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "f3ab44f6bb3c013a",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "name": "link in 7",
        "links": [
            "c57a81d1dee5b8a9"
        ],
        "x": 3705,
        "y": 2600,
        "wires": [
            [
                "e4f68946c7b21da7"
            ]
        ]
    },
    {
        "id": "881c9c83727201e4",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "1179fa790d2d89ca",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "SP (WAR) - Home HEAT Functions tab",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-right",
        "className": "",
        "x": 3870,
        "y": 600,
        "wires": []
    },
    {
        "id": "946190a858bafe3d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Color",
        "func": "var war_state          = global.get('Correction_0_WAR_on_off',\"file\");\n    if (war_state === undefined)    {return null;}\n\nlet msg1={};\n\n\n    if (war_state == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (war_state == 1) \n        {\n            msg1.color = \"\";\n        }\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3630,
        "y": 600,
        "wires": [
            [
                "881c9c83727201e4"
            ]
        ]
    },
    {
        "id": "e64935081974f391",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 4000,
        "y": 1080,
        "wires": [
            [
                "38a2e1df7e0bdb2a",
                "aae82d0c01404d51"
            ]
        ]
    },
    {
        "id": "26028dafb645f0a9",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "name": "Line - Setup ",
        "order": 26,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Advanced</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4450,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "78b397adf806a09f",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 27,
        "width": 2,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4150,
        "y": 140,
        "wires": []
    },
    {
        "id": "2994451c952d77ae",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "052caff3b2365345",
        "order": 31,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3897.666748046875,
        "y": 36.66666793823242,
        "wires": []
    },
    {
        "id": "47e76e01a5cfb304",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Color",
        "func": "var Correction_2_softstart_on_off          = global.get('Correction_2_softstart_on_off',\"file\");\n    if (Correction_2_softstart_on_off === undefined)    {return null;}\n\nlet msg1={};\n\n\n    if (Correction_2_softstart_on_off == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (Correction_2_softstart_on_off == 1) \n        {\n            msg1.color = \"\";\n        }\nif (msg.payload > 0){msg.payload = '+' + msg.payload;}\n\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3820,
        "y": 1900,
        "wires": [
            [
                "1b40f688e5fbc5dd"
            ]
        ]
    },
    {
        "id": "0d3da6a8d7fa38ee",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Color",
        "func": "var F_RTC_state = global.get('F_RTC.state',\"file\");\n\nlet msg1={};\n\n\nif (F_RTC_state == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\nif (F_RTC_state == 1) \n        {\n            msg1.color = \"\";\n        }\nif (msg.payload > 0){msg.payload = '+' + msg.payload;}\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 1600,
        "wires": [
            [
                "45643e4e39e1d248"
            ]
        ]
    },
    {
        "id": "b7b3c4dcda507ecb",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 21,
        "width": 3,
        "height": 1,
        "name": "Outside temp.",
        "label": "Actual outside",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3840,
        "y": 340,
        "wires": []
    },
    {
        "id": "05065bbd47aa9dd3",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "trigger Loaded WAR profile from panasonic",
        "links": [
            "93404b62f7fb0fb2",
            "b46cfcf8ce6d8f91"
        ],
        "x": 3135,
        "y": 520,
        "wires": [
            [
                "ecf47b4f156ae616"
            ]
        ]
    },
    {
        "id": "4faba89ea8ec838c",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3180,
        "y": 860,
        "wires": [
            [
                "48ac4170551d07e2"
            ]
        ]
    },
    {
        "id": "00dd6c3fd833a5cf",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Label",
        "func": "var current_sp          =global.get('Main_Target_Temp');                        //\nvar Heating_Mode        =global.get('Heating_Mode',\"file\");\n\n    if (current_sp === undefined || Heating_Mode === undefined)    {return null;}\n\nlet msg1={};\n    if (current_sp == 0 || Heating_Mode == 0) \n        {\n            msg1.label = \"Temperature shift\";\n        }\n\n    if (current_sp >= 20 && Heating_Mode == 1) \n        {\n            msg1.label = \"Final water temperature\";\n        }\n\n\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3820,
        "y": 1980,
        "wires": [
            [
                "2f6dcfe431b67d95"
            ]
        ]
    },
    {
        "id": "6c95ed35d3dcaea3",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "function 6",
        "func": "let msg1={};\nlet msg2={};\nlet msg3={};\n\nvar Tb0 =   global.get(\"T_outside_panasonic\",\"file\");\n    if (Tb0 === undefined)  {return null;}\nvar Tsp =   global.get('F_WAR_SP');\n    if (Tsp === undefined)  {return null;}  \nvar Tb1 =   global.get(\"T_outside_custom\",\"file\");\n\nmsg1.payload    = Tb0;\nmsg1.payload    = Number(msg1.payload).toFixed(1);\nmsg1.payload    = parseFloat(msg1.payload);\nmsg1.topic      = 'T outside';\n\nmsg2.payload    = Tsp;\nmsg2.payload    = Number(msg2.payload).toFixed(1);\nmsg2.payload    = parseFloat(msg2.payload);\nmsg2.topic      = 'SP WAR';\n\nmsg3.payload    = Tb1;\nmsg3.payload    = Number(msg3.payload).toFixed(1);\nmsg3.payload    = parseFloat(msg3.payload);\nmsg3.topic      = 'T outside custom';\n\n\nif (Tb1 === undefined)  \n    {\n        return [[msg1,msg2,null]];\n    }\nelse \n    {\n        return [[msg1,msg2,msg3]];\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3920,
        "y": 520,
        "wires": [
            [
                "0d58a1e854263ec4"
            ]
        ]
    },
    {
        "id": "1fc3414887db6c0f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Create table in context",
        "func": "var stored_value = flow.get(\"sctab\",\"file\");\n\nif (msg.payload == \"RESET\")\n    {\n        flow.set(\"sctab\",undefined,\"file\"); \n        return null;\n    }\n\nelse if (stored_value !== undefined) \n    {\n        let sctab = [];\n        sctab = stored_value; \n        msg.payload = [...sctab];\n        return msg;\n    }\n    \nelse\n    {\n        let sctab = [];\n        flow.set(\"sctab\", sctab,\"file\");        \n    }\n    \n    \n\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 2020,
        "wires": [
            [
                "ccf20ebdd2bc2ad5"
            ]
        ]
    },
    {
        "id": "e649dffb7b88341d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "16ec453c8cb345ac",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "Flow version",
        "label": "Flow version",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1570,
        "y": 1980,
        "wires": []
    },
    {
        "id": "87de9f606819ee7c",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Clear",
        "group": "16ec453c8cb345ac",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "clear",
        "payload": "RESET",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1990,
        "y": 1980,
        "wires": [
            [
                "1fc3414887db6c0f",
                "1fa1afeeb1c84d32",
                "97186cf285d61502"
            ]
        ]
    },
    {
        "id": "031e62b0bf3df7d7",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Input LOGS",
        "links": [
            "0380b395668eee8e",
            "1b0aafd65d5593dd",
            "9a7dda15052b4034",
            "40abfbbe563b32ac",
            "84f7cbc2cc8c135d",
            "8e16d1ef3e972c95",
            "9815e18a26e4cd85",
            "c77c4767a9dd84f4",
            "c9df0ea076346fde",
            "f0b20c8165a68430",
            "a2c6183556ca72d1",
            "34cc66e23b5eec55",
            "246757b0d4390b0d",
            "b050d4f2b24f1e16",
            "ab33a053cbe2d0cc",
            "2a72a0a50c226d0f",
            "275cdfc608a893b8",
            "7c92e0b9848865b4",
            "2989d5851e2457ae",
            "e7e7a120cf9e9001",
            "37cde18eb34c1bbc",
            "238183547350dfc1",
            "fc8adbd756b4bb38",
            "537be69084ee7842",
            "69d3e55ab1e37484",
            "9e1b71b301e9e79d",
            "a6c7a3c898949de7",
            "ca0190e54c9749cb",
            "5c671bda81284e37",
            "8091cb1951d5fb85",
            "5f7b921ab9a4ce7c",
            "e0217508a82c4d43",
            "ce0115cd2e7f2ac7",
            "4c70cc2db4654795"
        ],
        "x": 1370,
        "y": 2060,
        "wires": [
            [
                "46c5b8fae5c96441"
            ]
        ],
        "l": true
    },
    {
        "id": "22443324686e908d",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "System start",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "SYSTEM",
        "payload": "Start---------------------------------------------------------------",
        "payloadType": "str",
        "x": 1380,
        "y": 2020,
        "wires": [
            [
                "6966950676b3438b",
                "a2d45addc303107f"
            ]
        ]
    },
    {
        "id": "6966950676b3438b",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "ToLogs",
        "mode": "link",
        "links": [
            "dc6f884b1aa816ef"
        ],
        "x": 1505,
        "y": 2040,
        "wires": []
    },
    {
        "id": "46d0a8b4fabd20c4",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "New day log line",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "------------------------------------------------------------------------------------------------",
        "payloadType": "str",
        "x": 1950,
        "y": 2060,
        "wires": [
            [
                "9fb2ab0ff0488d63"
            ]
        ]
    },
    {
        "id": "29a9b4d9e823126c",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "topic": "panasonic_heat_pump/LWT",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1320,
        "y": 2400,
        "wires": [
            [
                "9ab36aee321695b7"
            ]
        ]
    },
    {
        "id": "9ab36aee321695b7",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1610,
        "y": 2400,
        "wires": [
            [
                "56bc942b17cf740c"
            ]
        ]
    },
    {
        "id": "56bc942b17cf740c",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "panasonic_heat_pump/LWT",
                "fromt": "str",
                "to": "SYSTEM - HEISHAMON Connection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 2400,
        "wires": [
            [
                "7ec2785759270a3f"
            ]
        ]
    },
    {
        "id": "70d422652df2468e",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Heishamon connection status",
        "info": "",
        "x": 1330,
        "y": 2360,
        "wires": []
    },
    {
        "id": "647564ca1e204b5f",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "TOP76 - panasonic_heat_pump/main/Heating_Mode",
        "topic": "panasonic_heat_pump/main/Heating_Mode",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1400,
        "y": 2460,
        "wires": [
            [
                "6215a77a119228d1",
                "f18205dcad572d9c"
            ]
        ]
    },
    {
        "id": "6215a77a119228d1",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "function 1",
        "func": "//Only check Heating_Mode at startup and display in log (filter will block same messages)\nlet msg1={};\n\nvar Heating_Mode = global.get(\"Heating_Mode\",\"file\");\n\nif (msg.payload == 0)\n    {\n        msg1.payload = \"Heatpump is WAR mode (compensation curve)\";\n        msg1.topic = \"SYSTEM\";\n        if (Heating_Mode != 0)\n            {\n                global.set(\"Heating_Mode\",0,\"file\");\n            }\n        return msg1;\n    }\n\nelse if (msg.payload == 1) \n    {\n    msg1.payload = \"Heatpump is in DIRECT mode\";\n    msg1.topic = \"SYSTEM\";\n    if (Heating_Mode != 1)\n            {\n                global.set(\"Heating_Mode\",1,\"file\");\n            }\n    return msg1;\n    }\nelse\n    {\n        return null\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 2460,
        "wires": [
            [
                "2cb940cabdae70e5"
            ]
        ]
    },
    {
        "id": "a2c6183556ca72d1",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2085,
        "y": 2460,
        "wires": []
    },
    {
        "id": "dc6f884b1aa816ef",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "link in 4",
        "links": [
            "6966950676b3438b"
        ],
        "x": 1525,
        "y": 2280,
        "wires": [
            [
                "2dc5c2ac3212179c"
            ]
        ]
    },
    {
        "id": "2dc5c2ac3212179c",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "function 2",
        "func": "if (msg.payload == \"Start---------------------------------------------------------------\")\n {flow.set(\"persistency_test\",msg,\"file\");}\n\nvar stored_value = flow.get(\"persistency_test\",\"file\")\n\n\n\nif (stored_value !== undefined)\n {return null;}\nelse \n {\n msg.payload = \"Persistent storage is not configured correctly. This flow will not function correctly until you do!\";\n msg.topic = \"SYSTEM WARNING\";\n return msg;\n }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2320,
        "wires": [
            [
                "9a7dda15052b4034"
            ]
        ]
    },
    {
        "id": "9a7dda15052b4034",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1635,
        "y": 2280,
        "wires": []
    },
    {
        "id": "82deff483aabb062",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "SYSTEM",
        "payload": "Persistence",
        "payloadType": "str",
        "x": 1330,
        "y": 2320,
        "wires": [
            [
                "2dc5c2ac3212179c"
            ]
        ]
    },
    {
        "id": "8c9a955c41e3e669",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Persistent storage check",
        "info": "",
        "x": 1310,
        "y": 2280,
        "wires": []
    },
    {
        "id": "ccf20ebdd2bc2ad5",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "16ec453c8cb345ac",
        "name": "Log to dashboard",
        "order": 4,
        "width": 25,
        "height": 16,
        "format": "<div ng-repeat=\"line in msg.payload track by $index\">\n<div ng-bind-html=\"line\" ></div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2450,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "9fb2ab0ff0488d63",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "Add word to scrolling table",
        "func": "let pay = msg.payload;\n\n// Read scrolling table from context\nlet sctab = flow.get('sctab',\"file\");\n\nif (sctab === undefined || pay === undefined)\n    {\n        return null;\n    }\nelse if (msg.topic==\"populate\")\n    {\n        msg.payload = [...sctab];\n        \n        return msg;\n    }\n\nelse\n    {\n        // Modify scrolling table by adding msg.payload as first element\n        let size = sctab.unshift(pay);\n         \n        // Remove last element from scrolling table\n        if (size >300) sctab.pop();\n         \n        // Update context for scrolling text\n        flow.set('sctab',sctab,\"file\");\n         \n        // Shalow copy updated scrolling table to msg.payload\n        msg.payload = [...sctab];\n         \n        return msg;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 2180,
        "wires": [
            [
                "ccf20ebdd2bc2ad5"
            ]
        ]
    },
    {
        "id": "ae6175191a94d7ec",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "commands/#",
        "topic": "panasonic_heat_pump/commands/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1290,
        "y": 2180,
        "wires": [
            [
                "49edcd3fcf15db5c"
            ]
        ]
    },
    {
        "id": "5e4c3c30025c30ee",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "",
        "func": "var DateTime = msg.time;\nvar Source = msg.topic;\nvar Value = msg.payload;\nmsg1 = {};\nmsg1.payload = (DateTime + \" - \" + Source + \": \" + Value);\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 2180,
        "wires": [
            [
                "9fb2ab0ff0488d63"
            ]
        ]
    },
    {
        "id": "49edcd3fcf15db5c",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "panasonic_heat_pump/commands/",
                "fromt": "str",
                "to": "<b>MQTT Command: </b>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 2180,
        "wires": [
            [
                "1e0df57eb3e96bf7"
            ]
        ]
    },
    {
        "id": "2e07cb8c215afb98",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "Start",
        "payloadType": "str",
        "x": 1990,
        "y": 2020,
        "wires": [
            [
                "1fc3414887db6c0f"
            ]
        ]
    },
    {
        "id": "c83f2c1b98fec551",
        "type": "ui_ui_control",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "events": "all",
        "x": 1980,
        "y": 1940,
        "wires": [
            [
                "1fc3414887db6c0f"
            ]
        ]
    },
    {
        "id": "48b67765f5bf4521",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "16ec453c8cb345ac",
        "order": 5,
        "width": 25,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 1830,
        "y": 1940,
        "wires": []
    },
    {
        "id": "47cc58d8c2f4aae6",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 2100,
        "wires": [
            [
                "5e4c3c30025c30ee"
            ]
        ]
    },
    {
        "id": "8a78dd26f20bb676",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "populate",
        "x": 2160,
        "y": 2060,
        "wires": [
            [
                "9fb2ab0ff0488d63"
            ]
        ]
    },
    {
        "id": "125ce7bdd39ba9ad",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 4450,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "cac91a6a0390c860",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 4210,
        "y": 1760,
        "wires": [
            [
                "2b065128513763fa"
            ]
        ]
    },
    {
        "id": "9a106cdefc873348",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "b1f2db1845798273",
        "name": "Link in from HA - Room Setpoint",
        "links": [
            "7a27b2c8c4721ed9",
            "1911fbfbf89866a8"
        ],
        "x": 3125,
        "y": 1180,
        "wires": [
            [
                "1b8f5447c498c1d6"
            ]
        ]
    },
    {
        "id": "af715d4c79137c30",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "b1f2db1845798273",
        "name": "Link out to HA - Room Setpoint",
        "mode": "link",
        "links": [
            "476043129c88de94"
        ],
        "x": 3125,
        "y": 1140,
        "wires": []
    },
    {
        "id": "2cb940cabdae70e5",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1950,
        "y": 2460,
        "wires": [
            [
                "a2c6183556ca72d1"
            ]
        ]
    },
    {
        "id": "a2d45addc303107f",
        "type": "moment",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "ETC/UTC",
        "adjAmount": "0",
        "adjType": "hours",
        "adjDir": "add",
        "format": "DD/MM HH:mm:ss",
        "locale": "en-US",
        "output": "time",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 1680,
        "y": 2020,
        "wires": [
            [
                "5e4c3c30025c30ee"
            ]
        ]
    },
    {
        "id": "46c5b8fae5c96441",
        "type": "moment",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "ETC/UTC",
        "adjAmount": "0",
        "adjType": "hours",
        "adjDir": "add",
        "format": "DD/MM HH:mm:ss",
        "locale": "en-US",
        "output": "time",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 1680,
        "y": 2060,
        "wires": [
            [
                "47cc58d8c2f4aae6"
            ]
        ]
    },
    {
        "id": "7ec2785759270a3f",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2030,
        "y": 2400,
        "wires": [
            [
                "a2d45addc303107f"
            ]
        ]
    },
    {
        "id": "bd709071acae11c7",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "set DHW_SP_LOW",
        "func": "var solar_state         = global.get('solar_state',\"file\");                     //\nvar DHW_SP_LOW          = global.get('DHW_SP_LOW',\"file\");                      //\n\nif (solar_state == 1 || solar_state == 2)\n    {\n        return null;\n    }\n    \nelse\n    {\n        if (msg.payload != DHW_SP_LOW)\n            {\n                global.set('DHW_SP_LOW',msg.payload,\"file\");\n            }\n        return null;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7764079e5c12e488",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "function 7",
        "func": "if (msg.payload > 0){msg.payload = '+' + msg.payload;}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3420,
        "y": 1280,
        "wires": [
            [
                "501242b43a1016ea"
            ]
        ]
    },
    {
        "id": "3a196a4275cfec68",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "function 8",
        "func": "if (msg.payload > 0){msg.payload = '+' + msg.payload;}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3770,
        "y": 1940,
        "wires": [
            [
                "cdf7664223f16687"
            ]
        ]
    },
    {
        "id": "ed38db2e845981c3",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP99 - panasonic_heat_pump/main/Buffer_Installed",
        "topic": "panasonic_heat_pump/main/Buffer_Installed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1880,
        "y": 2780,
        "wires": [
            [
                "c89d0e068db5d0a3"
            ]
        ]
    },
    {
        "id": "e413e4528a583aca",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP100 - panasonic_heat_pump/main/DHW_Installed",
        "topic": "panasonic_heat_pump/main/DHW_Installed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1880,
        "y": 2820,
        "wires": [
            [
                "c90242e0d0920cb4"
            ]
        ]
    },
    {
        "id": "27765fa485cf9edc",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP101 - panasonic_heat_pump/main/Solar_Mode",
        "topic": "panasonic_heat_pump/main/Solar_Mode",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1870,
        "y": 2860,
        "wires": [
            [
                "8a2587bfa102f546"
            ]
        ]
    },
    {
        "id": "25a7c297f9a7769d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Buffer installed",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 2780,
        "wires": []
    },
    {
        "id": "a1ad83346ebe69f7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DHW installed",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 2820,
        "wires": []
    },
    {
        "id": "8d8cf818740ba383",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Solar mode",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2390,
        "y": 2860,
        "wires": []
    },
    {
        "id": "c89d0e068db5d0a3",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2780,
        "wires": [
            [
                "25a7c297f9a7769d"
            ]
        ]
    },
    {
        "id": "c90242e0d0920cb4",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2820,
        "wires": [
            [
                "a1ad83346ebe69f7"
            ]
        ]
    },
    {
        "id": "8a2587bfa102f546",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2860,
        "wires": [
            [
                "8d8cf818740ba383"
            ]
        ]
    },
    {
        "id": "3eae91d9cd1bdee8",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Heating mode",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 2700,
        "wires": []
    },
    {
        "id": "f18205dcad572d9c",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Compensation curve",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Direct",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2700,
        "wires": [
            [
                "3eae91d9cd1bdee8"
            ]
        ]
    },
    {
        "id": "8af692675b83ae82",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP81 - panasonic_heat_pump/main/Cooling_Mode",
        "topic": "panasonic_heat_pump/main/Cooling_Mode",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1870,
        "y": 2740,
        "wires": [
            [
                "420db86c7b6e5af4"
            ]
        ]
    },
    {
        "id": "84116d62e4ebcbed",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 18,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Cooling mode",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 2740,
        "wires": []
    },
    {
        "id": "420db86c7b6e5af4",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Compensation curve",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Direct",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2740,
        "wires": [
            [
                "84116d62e4ebcbed"
            ]
        ]
    },
    {
        "id": "5dc231f82f838360",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "name": "Line - Hardware information",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Hardware information</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2360,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "1bb2e188964a1341",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP59 - panasonic_heat_pump/main/Room_Heater_State",
        "topic": "panasonic_heat_pump/main/Room_Heater_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1890,
        "y": 2940,
        "wires": [
            [
                "3b1207cb272b0f70"
            ]
        ]
    },
    {
        "id": "d4e0faf63ac63064",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP58 - panasonic_heat_pump/main/DHW_Heater_State",
        "topic": "panasonic_heat_pump/main/DHW_Heater_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1890,
        "y": 2900,
        "wires": [
            [
                "a398b005199a43cf"
            ]
        ]
    },
    {
        "id": "a398b005199a43cf",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2900,
        "wires": [
            [
                "7e7348fb4ac5bc99"
            ]
        ]
    },
    {
        "id": "3b1207cb272b0f70",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2940,
        "wires": [
            [
                "d576dddb4d172860"
            ]
        ]
    },
    {
        "id": "7e7348fb4ac5bc99",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DHW heater state",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2410,
        "y": 2900,
        "wires": []
    },
    {
        "id": "d576dddb4d172860",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Room heater state",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2410,
        "y": 2940,
        "wires": []
    },
    {
        "id": "4ac3620489b6a382",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "548e51986bce11b0",
        "name": "Line - panasonic",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2140,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "a0baaad72b5322f9",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP11 - panasonic_heat_pump/main/Operations_Hours",
        "topic": "panasonic_heat_pump/main/Operations_Hours",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1880,
        "y": 2980,
        "wires": [
            [
                "f4c673f35d3ad0dd"
            ]
        ]
    },
    {
        "id": "a8de78895c96410f",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP12 - panasonic_heat_pump/main/Operations_Counter",
        "topic": "panasonic_heat_pump/main/Operations_Counter",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1890,
        "y": 3020,
        "wires": [
            [
                "ccdeb93d0df404fd"
            ]
        ]
    },
    {
        "id": "f4c673f35d3ad0dd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Operation hours",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 2980,
        "wires": []
    },
    {
        "id": "ccdeb93d0df404fd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Operation counter",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2410,
        "y": 3020,
        "wires": []
    },
    {
        "id": "01b95384bec879c2",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP91 - panasonic_heat_pump/main/DHW_Heater_Operations_Hours",
        "topic": "panasonic_heat_pump/main/DHW_Heater_Operations_Hours",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1930,
        "y": 3060,
        "wires": [
            [
                "d6822a7d071e95a2"
            ]
        ]
    },
    {
        "id": "c5fa76779fb49ffe",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP90 - panasonic_heat_pump/main/Room_Heater_Operations_Hours",
        "topic": "panasonic_heat_pump/main/Room_Heater_Operations_Hours",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1930,
        "y": 3100,
        "wires": [
            [
                "5b3ff627c4ccac4d"
            ]
        ]
    },
    {
        "id": "d6822a7d071e95a2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Backup heater hours (DHW)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2440,
        "y": 3060,
        "wires": []
    },
    {
        "id": "5b3ff627c4ccac4d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Backup heater hours (HEAT)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2450,
        "y": 3100,
        "wires": []
    },
    {
        "id": "4d2f479ee6166e7b",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "name": "Line - Operation information",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Operation information</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2180,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "b53bc6358e871056",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4570,
        "y": 1060,
        "wires": [
            [
                "e7e7a120cf9e9001"
            ]
        ]
    },
    {
        "id": "e7e7a120cf9e9001",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "Send to log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 4655,
        "y": 1060,
        "wires": []
    },
    {
        "id": "087a748b7ca8e4f0",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "Get Room setpoint",
        "func": "global.set(\"WoonkamerSP\", msg.payload, \"file\");\nvar WoonkamerSP = msg.payload;\n    \nmsg.topic = \"RTC\"\nmsg.payload = \"Room setpoint changed to: \" + WoonkamerSP + \" °C\";\n\n//check of Night reduction room setpoint is niet actief:\nif (global.get(\"NightReductionRoomSetpoint.state\", \"file\") == 0) {\n    let msg2 = {}; //pin2 ---> link-out to Room setpoint NORMAL on dashboard Scheduler\n    msg2.payload = WoonkamerSP; \n    if (global.get('NightReductionRoomSetpoint.NORMAL', \"file\") == WoonkamerSP) { return null; } //only send when different\n    global.set(\"NightReductionRoomSetpoint.NORMAL\", WoonkamerSP, \"file\");\n    return [msg,msg2];\n    }\n\n\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4410,
        "y": 1080,
        "wires": [
            [
                "b53bc6358e871056"
            ],
            [
                "28d654bc8270de5e"
            ]
        ]
    },
    {
        "id": "69581a5f53d2c488",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "Load on boot SS-addon Quiet mode3",
        "func": "var SS_Quietmode_on_off = global.get('SS_Quietmode_on_off',\"file\");\n\nlet msg1={};\nif (SS_Quietmode_on_off === undefined) \n    {\n    SS_Quietmode_on_off = 0;\n    global.set('SS_Quietmode_on_off',0,\"file\");\n        \n    }\n\nmsg1.payload = SS_Quietmode_on_off;\n\nmsg1.source = \"boot\";\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3230,
        "y": 2160,
        "wires": [
            [
                "a423271481d5d54d"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off"
        ]
    },
    {
        "id": "a423271481d5d54d",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "SS_Quietmode_on_off",
        "label": "Quietmode",
        "tooltip": "",
        "group": "c2a0123d2e2c91f0",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3530,
        "y": 2160,
        "wires": [
            [
                "9445da7cceab14b2"
            ]
        ]
    },
    {
        "id": "9445da7cceab14b2",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3730,
        "y": 2160,
        "wires": [
            [
                "66396fc1dbfcc832"
            ]
        ]
    },
    {
        "id": "66396fc1dbfcc832",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "SS_Quietmode_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Function - SoftStart Quietmode\";\nglobal.set(\"SS_Quietmode_on_off\",msg.payload,\"file\");\n\nvar Quiet_Mode_Level = global.get('Quiet_Mode_Level', \"file\") || 0; //check current Quietmode level\n\n                //pin1 to input LOGS\nlet msg2 = {};  //pin2 to Exit to Set Quietlevel link-in\nlet msg3 = {};  //pin3 to refresh state switch on dashboard\n\nif (msg.source === undefined) { msg2.source = \"GUI\"; }\n\nif (msg.source == \"boot\") { msg.payload += \" (actual level: \" + Quiet_Mode_Level + \")\"; return [msg, null]; }\n\n//get Quietmode_time, error when no time!\nvar Quietmode_time = global.get('Quietmode_time', \"file\"); //after this time the Quietmode will restore to its previous level\n\nif (msg.payload == 1) \n    { \n        global.set(\"StartTimeQuietmode\", undefined); //always reset SS Quietmode timer\n\n        // if allready at level 3,  disable it\n        if (Quiet_Mode_Level == 3) { msg.payload = \"SoftStart Quietmode (3 --> 3) <b>blocked</b>, level allready 3\"; \n            global.set(\"SS_Quietmode_on_off\", 0, \"file\"); // do not enable\n            msg3.payload = \"0\";\n            return [msg, null, msg3]; // log and update the switch\n            }\n        \n        //if Previous_Quiet_Mode_Level excists, set it to current Quiet_Mode_Level\n        var Storedlevel = global.get('Previous_Quiet_Mode_Level', \"file\");\n        if (Storedlevel != undefined) { Quiet_Mode_Level = Storedlevel; } //geen vorige waarde bij boot\n \n        msg.payload = \"on (timer: \" + Quietmode_time + \" min, restore level \" + Quiet_Mode_Level + \")\"; \n        global.set('Previous_Quiet_Mode_Level', Quiet_Mode_Level, \"file\"); // save current level for restore\n\n        //set the new Quietlevel now if needed:\n        var Current = Quiet_Mode_Level; //current level\n        //only send msg when change needed\n        if (Current != Previous_Quiet_Mode_Level) \n            {\n                msg2.topic = \"Function - SoftStart Quietmode\";\n                msg2.payload = 3; //send Quietlevel 3\n                msg2.source = \"SoftStart Quietmode\";\n                return [msg, msg2];\n            } else { return [msg, null]; }     // send nothing to Exit to Quietlevel-change\n     }\n\nif (msg.payload == 0) \n    { \n        global.set(\"StartTimeQuietmode\", undefined); //always reset SS Quietmode timer\n\n        var Previous_Quiet_Mode_Level = global.get('Previous_Quiet_Mode_Level', \"file\"); // check previous Quietmode level\n        if (Previous_Quiet_Mode_Level === undefined) { Previous_Quiet_Mode_Level = 0; } \n\n        // fix: Showing to log if not needed:\n        var Quiet_Mode_Level = global.get('Quiet_Mode_Level', \"file\"); // check current Quietmode level\n        if (Quiet_Mode_Level == Previous_Quiet_Mode_Level)\n            { msg.payload = \"off\"; } else { msg.payload = \"off (restored to level \" + Previous_Quiet_Mode_Level + \")\"; }\n\n        //restore when user/scheduler switches SoftStart Quietmode OFF\n        ////////////////////global.set('Previous_Quiet_Mode_Level', undefined, \"file\"); // delete old stored Previous_Quiet_Mode_Level\n        //set the old Quietlevel now if needed:\n        var Current = Quiet_Mode_Level; //current level\n        \n        //only send msg when change needed\n        if (Current != Previous_Quiet_Mode_Level) \n            {\n                msg2.topic = \"Function - SoftStart Quietmode\";\n                msg2.payload = Previous_Quiet_Mode_Level; //send previous Quietlevel \n                msg2.source = \"SoftStart Quietmode\";\n                return [msg, msg2];\n            } else { return [msg, null]; }     //send nothing to Exit to Quietlevel-change\n    }\n\n\nreturn [msg, msg2]; // Pin1 to log    Pin2 to Setquitemode inputbox\n\n\n\n//Quietmode-Addon further handled in function node: Function Quietmode add-on (WP Control)\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3930,
        "y": 2160,
        "wires": [
            [
                "2a72a0a50c226d0f"
            ],
            [
                "32f39bf7fb5e5369"
            ],
            [
                "69581a5f53d2c488"
            ]
        ]
    },
    {
        "id": "2a72a0a50c226d0f",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "Correction_2_softstart_on_off",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 4145,
        "y": 2120,
        "wires": []
    },
    {
        "id": "cc398f298c681782",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "name": "Check operation mode",
        "func": "if (global.get('ForceDefrost', \"file\") == 1) { // During defrost show status on Home dashboard\n    msg.payload = \"*Defrosting*\";\n    return msg;\n}\n\n//var OM = msg.payload;\nvar OM = global.get('Operating_Mode_State', \"file\");\nmsg.topic = \"Current state\";\nif (OM == 0) {\n    msg.payload = \"Heat only\";\n} else if (OM == 1) {\n    msg.payload = \"Cool only\";\n} else if (OM == 2) {\n    msg.payload = \"Auto(Heat)\";\n} else if (OM == 3) {\n    msg.payload = \"DHW only\";\n} else if (OM == 4) {\n    msg.payload = \"Heat+DHW\";\n} else if (OM == 5) {\n    msg.payload = \"Cool+DHW\";\n} else if (OM == 6) {\n    msg.payload = \"Auto(Heat)+DHW\";\n} else if (OM == 7) {\n    msg.payload = \"Auto(Cool)\";\n} else if (OM == 8) {\n    msg.payload = \"Auto(Cool)+DHW)\";\n} else {\n    return null;\n}\n\nreturn msg;\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1400,
        "wires": [
            [
                "ef9758a537d81735"
            ]
        ]
    },
    {
        "id": "ef9758a537d81735",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "bf4af523ba16d457",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Current state",
        "label": "Actual",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 650,
        "y": 1400,
        "wires": []
    },
    {
        "id": "702993e29cd93413",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "name": "link in Operation Mode status (HOME)",
        "links": [
            "4ff74e2b48b1d597",
            "6c685782864f1787"
        ],
        "x": 235,
        "y": 1400,
        "wires": [
            [
                "cc398f298c681782"
            ]
        ]
    },
    {
        "id": "46b7fe12f60ad08b",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "bf4af523ba16d457",
        "name": "Line - Water",
        "order": 4,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Water temperature</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "11c006e989f63390",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "2b0c8e162d47abbb",
        "name": "Line - Scheduler",
        "order": 4,
        "width": 24,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Scheduler</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2440,
        "y": 3300,
        "wires": [
            []
        ]
    },
    {
        "id": "a3195a537640d528",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "at boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 3140,
        "y": 2120,
        "wires": [
            [
                "69581a5f53d2c488"
            ]
        ]
    },
    {
        "id": "b690e6a46d9553ba",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "name": "Line",
        "order": 8,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Custom functions</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 910,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "96c650af80111193",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "1179fa790d2d89ca",
        "name": "Line Custom functions",
        "order": 4,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Custom functions</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4680,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "344b1fdaa89016c8",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3840,
        "y": 2260,
        "wires": [
            [
                "98d6df4515c25447"
            ]
        ]
    },
    {
        "id": "98d6df4515c25447",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "set.Quietmode time",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"Quietmode_time\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "5444f8ed7b1fa765",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "1 Trigger / 30 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3180,
        "y": 2260,
        "wires": [
            [
                "ce7653d3e7a11177"
            ]
        ]
    },
    {
        "id": "ce7653d3e7a11177",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "Load on boot Quietmode time",
        "func": "\nvar Quietmode_time = global.get('Quietmode_time',\"file\");\n    if (Quietmode_time===undefined)    \n        {\n            Quietmode_time = 5; //default 5 minutes\n            global.set('Quietmode_time', Quietmode_time,\"file\");\n        }\n\nlet msg1={};\n\nmsg1.payload = Quietmode_time; msg1.topic = \"Quietmode_time\";\nreturn [msg1];        \n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 3450,
        "y": 2260,
        "wires": [
            [
                "042a326783f2a657"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off"
        ]
    },
    {
        "id": "042a326783f2a657",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "c2a0123d2e2c91f0",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "5 mins",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 mins",
                "value": 10,
                "type": "num"
            },
            {
                "label": "15 mins",
                "value": 15,
                "type": "num"
            },
            {
                "label": "20 mins",
                "value": 20,
                "type": "num"
            },
            {
                "label": "25 mins",
                "value": 25,
                "type": "num"
            },
            {
                "label": "30 mins",
                "value": 30,
                "type": "num"
            },
            {
                "label": "45 mins",
                "value": 45,
                "type": "num"
            },
            {
                "label": "1 hour",
                "value": 60,
                "type": "num"
            },
            {
                "label": "1 h 15 mins",
                "value": 75,
                "type": "num"
            },
            {
                "label": "1 h 30 mins",
                "value": 90,
                "type": "num"
            },
            {
                "label": "1 h 45 mins",
                "value": 105,
                "type": "num"
            },
            {
                "label": "2 hours",
                "value": 120,
                "type": "num"
            },
            {
                "label": "3 hours",
                "value": 180,
                "type": "num"
            },
            {
                "label": "4 hours",
                "value": 240,
                "type": "num"
            },
            {
                "label": "5 hours",
                "value": 300,
                "type": "num"
            },
            {
                "label": "6 hours",
                "value": 360,
                "type": "num"
            },
            {
                "label": "7 hours",
                "value": 420,
                "type": "num"
            },
            {
                "label": "8 hours",
                "value": 480,
                "type": "num"
            },
            {
                "label": "9 hours",
                "value": 540,
                "type": "num"
            },
            {
                "label": "10 hours",
                "value": 600,
                "type": "num"
            },
            {
                "label": "12 hours",
                "value": 720,
                "type": "num"
            },
            {
                "label": "18 hours",
                "value": 1080,
                "type": "num"
            },
            {
                "label": "24 hours",
                "value": 1440,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3680,
        "y": 2260,
        "wires": [
            [
                "344b1fdaa89016c8"
            ]
        ]
    },
    {
        "id": "ab31019d5a2a15b3",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "group": "c2a0123d2e2c91f0",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "Quietmode time",
        "label": "Quietmode time",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 3600,
        "y": 2220,
        "wires": []
    },
    {
        "id": "32f39bf7fb5e5369",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "link out to set Quietlevel",
        "mode": "link",
        "links": [
            "765b4d77a9fd44cc"
        ],
        "x": 4145,
        "y": 2200,
        "wires": []
    },
    {
        "id": "579bc2c10d3c83a1",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "Exit to Set Quietlevel link-in",
        "info": "",
        "x": 4290,
        "y": 2200,
        "wires": []
    },
    {
        "id": "a3ab6c0ec376501c",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "Exit to InputLOGS",
        "info": "",
        "x": 4270,
        "y": 2120,
        "wires": []
    },
    {
        "id": "8bd83650dae791b5",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "17610af3c50fa4f3",
        "name": "SS_Quietmode_on_off",
        "links": [
            "625620e079bcddd3"
        ],
        "x": 3345,
        "y": 2120,
        "wires": [
            [
                "a423271481d5d54d"
            ]
        ]
    },
    {
        "id": "97186cf285d61502",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 1980,
        "wires": [
            [
                "c83f2c1b98fec551"
            ]
        ]
    },
    {
        "id": "1fa1afeeb1c84d32",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2190,
        "y": 1940,
        "wires": [
            [
                "729f15cc004fcc21"
            ]
        ]
    },
    {
        "id": "729f15cc004fcc21",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": " - ... Clear",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SYSTEM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 1940,
        "wires": [
            [
                "46c5b8fae5c96441"
            ]
        ]
    },
    {
        "id": "8b99fa1a632fa6aa",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "21.47 beta (experimental)",
        "payloadType": "str",
        "x": 1350,
        "y": 1960,
        "wires": [
            [
                "e649dffb7b88341d",
                "8da7c93f059466f2"
            ]
        ]
    },
    {
        "id": "8da7c93f059466f2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "b7f740331bca1b3f",
        "order": 1,
        "width": 25,
        "height": 1,
        "name": "Flow version",
        "label": "Flow version ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1570,
        "y": 1940,
        "wires": []
    },
    {
        "id": "8d9c639aa58c9a3e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "16ec453c8cb345ac",
        "order": 3,
        "width": 17,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 1830,
        "y": 1980,
        "wires": []
    },
    {
        "id": "b57cce7cc9fa92ea",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "6d5e44060139d9d1"
        ],
        "x": 4805,
        "y": 780,
        "wires": []
    },
    {
        "id": "ca0190e54c9749cb",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link out 28",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 4805,
        "y": 820,
        "wires": []
    },
    {
        "id": "91fcc102b422de3b",
        "type": "ui_gauge",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Frequency",
        "group": "bf4af523ba16d457",
        "order": 9,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value}}",
        "min": 0,
        "max": "120",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "36",
        "seg2": "69",
        "className": "",
        "x": 930,
        "y": 920,
        "wires": []
    },
    {
        "id": "2ca9ec858ebd4887",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t7",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 24,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t7",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3690,
        "y": 1200,
        "wires": [
            [
                "e64935081974f391",
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "290133f7fd948e25",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "+custom",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 25,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t7_custom_cor",
        "topicType": "str",
        "format": "+{{value}}",
        "min": "4",
        "max": "30",
        "step": 1,
        "className": "",
        "x": 3560,
        "y": 1200,
        "wires": [
            [
                "ab1290025b96a1df",
                "a19cd490d0cc5d13"
            ]
        ]
    },
    {
        "id": "ab1290025b96a1df",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "save +custom",
        "func": "// save on change only\nvar rtc_t7_custom_cor = global.get('rtc_t7_custom_cor',\"file\");\nif (msg.payload == rtc_t7_custom_cor)   {\n    return null;\n}\nelse    {\n    global.set('rtc_t7_custom_cor', msg.payload, \"file\");\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3980,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "5be8fe10022fcc46",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 23,
        "width": 3,
        "height": 1,
        "name": "Custom",
        "label": "Custom",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3420,
        "y": 1200,
        "wires": []
    },
    {
        "id": "bb54f8581c258040",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 14,
        "width": 2,
        "height": 2,
        "name": "filler b",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3730,
        "y": 1020,
        "wires": []
    },
    {
        "id": "fb7f16aa29565d78",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 4100,
        "y": 1360,
        "wires": [
            [
                "38a2e1df7e0bdb2a"
            ]
        ]
    },
    {
        "id": "8ae2f173954488ad",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Set Fan1_Speed",
        "func": "var Fan1_Speed = msg.payload;\nglobal.set('Fan1_Speed', Fan1_Speed); // Memory Only\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1040,
        "wires": [
            [
                "1ed98a1d47eb56f0"
            ]
        ]
    },
    {
        "id": "b3cbb0e85ba0fb42",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Set Fan2_Speed",
        "func": "var Fan2_Speed = msg.payload;\nglobal.set('Fan2_Speed', Fan2_Speed); // Memory Only\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1160,
        "wires": [
            [
                "9faace07ea16ba4d"
            ]
        ]
    },
    {
        "id": "1daf8c5944f23d71",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "link in 12",
        "links": [
            "c57a81d1dee5b8a9"
        ],
        "x": 515,
        "y": 920,
        "wires": [
            [
                "17c5ba9bb0b58a11",
                "91fcc102b422de3b"
            ]
        ]
    },
    {
        "id": "6366ce3358b65976",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "link in 13",
        "links": [
            "7ce3c0d525800846"
        ],
        "x": 155,
        "y": 300,
        "wires": [
            [
                "23197820b73be2c8"
            ]
        ]
    },
    {
        "id": "ffa2e7745e5aed4c",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "link in 14",
        "links": [
            "6c685782864f1787"
        ],
        "x": 235,
        "y": 1880,
        "wires": [
            [
                "6d77bc12fe8024ee"
            ]
        ]
    },
    {
        "id": "ecbb543ba37d9962",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link in 20",
        "links": [
            "a22898dfdc4ff0ca"
        ],
        "x": 3355,
        "y": 1040,
        "wires": [
            [
                "dade0dbb40c3945a"
            ]
        ]
    },
    {
        "id": "57d858f4dd89a4c8",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "F_RTC.incremental_setpoints_state on/off",
        "label": "Enable between +3 and +{{msg.custom}}",
        "tooltip": "",
        "group": "ef3dbc543ae92bec",
        "order": 2,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3700,
        "y": 1320,
        "wires": [
            [
                "083547591b89bc09"
            ]
        ]
    },
    {
        "id": "083547591b89bc09",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set F_RTC.incremental_setpoints_state on/off",
        "func": "\nmsg.topic = \"Function - RTC incremental_setpoints\";\nglobal.set(\"F_RTC.incremental_setpoints_state\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4080,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "2f436c5ec33c9291",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "label": "Restart after defrost",
        "tooltip": "",
        "group": "c2a0123d2e2c91f0",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3180,
        "y": 1980,
        "wires": [
            [
                "b2003add7c0ba5a9"
            ]
        ]
    },
    {
        "id": "b2003add7c0ba5a9",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3350,
        "y": 1980,
        "wires": [
            [
                "8df6915186a6430a"
            ]
        ]
    },
    {
        "id": "8df6915186a6430a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "function 10",
        "func": "\nvar F_SS_reset_after_defrost                = global.get('F_SS_reset_after_defrost',\"file\");\n\nif (msg.payload != F_SS_reset_after_defrost) {\n    global.set('F_SS_reset_after_defrost',msg.payload,\"file\");\n}\n\n//return msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3490,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "f8d7e53aed62cd14",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off_OM",
        "label": "Action: Change operating mode",
        "tooltip": "Enables or disables the heat function based on below set deltas",
        "group": "ef3dbc543ae92bec",
        "order": 8,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3580,
        "y": 1480,
        "wires": [
            [
                "64773410c77751fa"
            ]
        ]
    },
    {
        "id": "64773410c77751fa",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set.F_RTC.F2_OM_state",
        "func": "\nmsg.topic = \"Function - RTC automation (Operating mode)\";\nglobal.set(\"F_RTC.F2_OM_state\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4010,
        "y": 1320,
        "wires": [
            [
                "5bcad017001638fd"
            ]
        ]
    },
    {
        "id": "85d4c15e56ecc525",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "name": "Line 7x1 automations",
        "order": 3,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n\t<left>Automations</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3380,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "a19cd490d0cc5d13",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "custom",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3200,
        "y": 1320,
        "wires": [
            [
                "2d7930a2b848335e",
                "57d858f4dd89a4c8"
            ]
        ]
    },
    {
        "id": "2d7930a2b848335e",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "name": "Line 7x1 ",
        "order": 1,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 0px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 0px solid #a39d99;\n    box-shadow: 0 0 0px #a39d99\";\n\t>\n\t<left>Incremental setpoints</left>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3360,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "28ade256a9b75487",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "55a0fb67fbe206cf"
        ],
        "x": 4655,
        "y": 1100,
        "wires": []
    },
    {
        "id": "28d654bc8270de5e",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4570,
        "y": 1100,
        "wires": [
            [
                "28ade256a9b75487"
            ]
        ]
    },
    {
        "id": "1e0df57eb3e96bf7",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "MQTT_source",
        "func": "var MQTT_Source = global.get('MQTT_Source') || \"unknown\"; //Memory Only\n\nmsg.payload = \"<b>\" + msg.payload;\nmsg.payload += \"</b> (\" + MQTT_Source + \")\";\n\nglobal.set('MQTT_Source', undefined); // reset and wait for next command.\n\nreturn msg;\n\n/*\n\nmqtt-source added for:\n======================\n-Function SoftStart (corrections)\n-Function Reduce Pump Peed\n-Power on/off (rtc, scheduler, gui)\n-Quietmode (scheduler, gui)\n-SS_Quietmode\n\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 2180,
        "wires": [
            [
                "46c5b8fae5c96441",
                "9202d8b025b48df6"
            ]
        ]
    },
    {
        "id": "fadad1e2505bf86d",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Quiet mode",
        "label": "Quiet mode",
        "tooltip": "",
        "place": "Select option",
        "group": "548e51986bce11b0",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Level 0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Level 1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Level 2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Level 3",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1830,
        "y": 200,
        "wires": [
            [
                "cb924439a66154f1",
                "5be142bd732c8d96",
                "e4b5c256b8c34faa"
            ]
        ]
    },
    {
        "id": "493be73ce31c8c96",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Operation mode",
        "label": "Operation mode",
        "tooltip": "",
        "place": "Select option",
        "group": "548e51986bce11b0",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Heat only (0)",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Cool only (1)",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Auto (2)",
                "value": 2,
                "type": "num"
            },
            {
                "label": "DHW only (3)",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Heat+DHW (4)",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Cool+DHW (5)",
                "value": 5,
                "type": "num"
            },
            {
                "label": "Auto+DHW (6)",
                "value": 6,
                "type": "num"
            },
            {
                "label": "Auto(Cool) (7)",
                "value": 7,
                "type": "num"
            },
            {
                "label": "Auto(Cool)+DHW (8)",
                "value": 8,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1780,
        "y": 300,
        "wires": [
            [
                "367f1fc8966e2514"
            ]
        ]
    },
    {
        "id": "d286bfab06c854b3",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Pump flow 100%",
        "label": "Service mode (100%)",
        "tooltip": "Set pump flow to maximum",
        "group": "fea7672db2f050c9",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1590,
        "y": 360,
        "wires": [
            [
                "99fca21d30786e83"
            ]
        ]
    },
    {
        "id": "69e62408ae1d45fd",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET1 SetHeatpump",
        "topic": "panasonic_heat_pump/commands/SetHeatpump",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2720,
        "y": 100,
        "wires": []
    },
    {
        "id": "c168a66c6bcdd403",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET3 SetQuietMode",
        "topic": "panasonic_heat_pump/commands/SetQuietMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2720,
        "y": 240,
        "wires": []
    },
    {
        "id": "2c3aa272de5edf1f",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET9 SetOperationMode",
        "topic": "panasonic_heat_pump/commands/SetOperationMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 320,
        "wires": []
    },
    {
        "id": "6715b2c07ffdaf0f",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET14 SetPump",
        "topic": "panasonic_heat_pump/commands/SetPump",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2730,
        "y": 360,
        "wires": []
    },
    {
        "id": "6d5e44060139d9d1",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "OperationMode",
        "links": [
            "b50ab0a4981f9d17",
            "c6801a6c865543b3",
            "c959ee1f94c31c45",
            "fab44b5501eca10e",
            "b57cce7cc9fa92ea"
        ],
        "x": 1515,
        "y": 320,
        "wires": [
            [
                "493be73ce31c8c96",
                "585e4d6a54d44021"
            ]
        ]
    },
    {
        "id": "98757de0a2842b4b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "conversion function",
        "func": "// SET15 SetMaxPumpDuty decimal value translate to hexadecimal in service menu 64 to 254\n// First find out the upper and lower limit of the waterpump. Trial and arror by injecting a number as payload to the mqtt topic. fill them in in the two lines below!!!\n//\nvar lowerlimit=64; // Lowest value\nvar upperlimit=254; // Hihghes value\n// Note, the default setting was 149, which is ~45%\n\nvar range=(upperlimit-lowerlimit); // This is the range of operation for the waterpump. You need to test this manually and correct the values if needed.\n\n\nmsg.payload = ((msg.payload) / 100 * range) + lowerlimit; // calculation\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"F_ReducePumpSpeed.SavedPumpspeed\", msg.payload, \"file\"); // edit 13-12-2022\nglobal.set(\"F_ReducePumpSpeed.PumpMaxFlowSetting\", msg.payload, \"file\"); // edit 13-12-2022\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 460,
        "wires": [
            [
                "5eebb66e29e252f6"
            ]
        ]
    },
    {
        "id": "43ad0d01b0c84de9",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET15 SetMaxPumpDuty",
        "topic": "panasonic_heat_pump/commands/SetMaxPumpDuty",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 460,
        "wires": []
    },
    {
        "id": "765b4d77a9fd44cc",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Link-in Quietmode set",
        "links": [
            "14327004637e05c7",
            "7c6f02c851467bc0",
            "32f39bf7fb5e5369"
        ],
        "x": 1515,
        "y": 240,
        "wires": [
            [
                "fadad1e2505bf86d",
                "e4b5c256b8c34faa"
            ]
        ]
    },
    {
        "id": "98c49c9eca38ccfc",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "1 Trigger / 30 minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "trigger",
        "x": 1310,
        "y": 160,
        "wires": [
            [
                "a26b41289a59dba3",
                "a45a6b8b1ac4b46d",
                "d9a7bffb1a15426e",
                "b203a1c024a72593",
                "34397163757fd58b",
                "7c74fd1faa32c81d",
                "30b65b7d5afd13d0"
            ]
        ]
    },
    {
        "id": "a6faaf6380e6d040",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET2 SetHolidayMode",
        "topic": "panasonic_heat_pump/commands/SetHolidayMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2720,
        "y": 820,
        "wires": []
    },
    {
        "id": "c318be9105a9e8e5",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET4 SetPowerfulMode",
        "topic": "panasonic_heat_pump/commands/SetPowerfulMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 880,
        "wires": []
    },
    {
        "id": "b8e7b80b511e3054",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET10 SetForceDHW",
        "topic": "panasonic_heat_pump/commands/SetForceDHW",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2720,
        "y": 960,
        "wires": []
    },
    {
        "id": "aa26d12b996f9c57",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET11 SetDHWTemp",
        "topic": "panasonic_heat_pump/commands/SetDHWTemp",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2720,
        "y": 1020,
        "wires": []
    },
    {
        "id": "97d91018b611d85e",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET12 SetForceDefrost",
        "topic": "panasonic_heat_pump/commands/SetForceDefrost",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 1060,
        "wires": []
    },
    {
        "id": "6c56f45eddcf6890",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET13 SetForceSterilization",
        "topic": "panasonic_heat_pump/commands/SetForceSterilization",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d4c237094a0d52f9",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET17 SetZones",
        "topic": "panasonic_heat_pump/commands/SetZones",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2730,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d66211d6bd2170ac",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET18 SetFloorHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorHeatDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 1320,
        "wires": []
    },
    {
        "id": "71bc8ac0ba520e9e",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET19 SetFloorCoolDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorCoolDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 1360,
        "wires": []
    },
    {
        "id": "99beaa5dde77b94c",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET20 SetDHWHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetDHWHeatDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ec2e17164979af03",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET21 SetHeaterDelayTime",
        "topic": "panasonic_heat_pump/commands/SetHeaterDelayTime",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ad4e8ac090e4b449",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET22 SetHeaterStartDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStartDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 1480,
        "wires": []
    },
    {
        "id": "9b9c2c12ee2f9256",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET23 SetHeaterStopDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStopDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 1520,
        "wires": []
    },
    {
        "id": "365cb4a95d68eb3e",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET24 SetMainSchedule",
        "topic": "panasonic_heat_pump/commands/SetMainSchedule",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 1560,
        "wires": []
    },
    {
        "id": "0dc2ead6142f18c4",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "SET16 SetCurves",
        "topic": "panasonic_heat_pump/commands/SetCurves",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2370,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c6559a95bb3c55fb",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force DHW",
        "label": "Forceful DHW",
        "tooltip": "Forces DHW cycle (operating mode should be set first to include DHW mode (operation mode 3, 4, 5 or 6) to function)",
        "group": "548e51986bce11b0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1770,
        "y": 960,
        "wires": [
            [
                "859dc9276ee75464"
            ]
        ]
    },
    {
        "id": "17cf53c8acbfb4e1",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "Holiday Mode",
        "label": "Holiday Mode",
        "tooltip": "Off / On Holiday mode",
        "group": "548e51986bce11b0",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1820,
        "y": 820,
        "wires": [
            [
                "bdb7e8e0217cec66",
                "2f577f48a3804703"
            ]
        ]
    },
    {
        "id": "30554cbb35314761",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 960,
        "wires": [
            [
                "2f25f344ad661680",
                "6db2abfba9e25737",
                "7f6107d49ab83c40",
                "22afde8747ce6ca0",
                "de0e892a0157baca",
                "05d3e85b3963e4e2"
            ]
        ]
    },
    {
        "id": "4dee981d88ea5cf3",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHW (SP)",
        "label": "DHW setpoint",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 9,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "40",
        "max": "75",
        "step": 1,
        "className": "",
        "x": 1770,
        "y": 1020,
        "wires": [
            [
                "6e6c991de9f27149"
            ]
        ]
    },
    {
        "id": "ae99edee7ea44ce2",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1020,
        "wires": [
            [
                "550d51c7fe788f9e",
                "bc84f4340c3e5b0a"
            ]
        ]
    },
    {
        "id": "45a93847a1d11766",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "Force defrost",
        "label": "Force defrost",
        "tooltip": "",
        "group": "548e51986bce11b0",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1770,
        "y": 1060,
        "wires": [
            [
                "5e3a9447502864ad",
                "3de982eda6f5e1a3"
            ]
        ]
    },
    {
        "id": "ccb9e79ff06190fa",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force sterilization",
        "label": "Force sterilization",
        "tooltip": "Forces sterilization cycle (operating mode should be set first to include DHW mode (operation mode 3, 4, 5 or 6) to function)",
        "group": "548e51986bce11b0",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1790,
        "y": 1100,
        "wires": [
            [
                "53ae8019411d666d"
            ]
        ]
    },
    {
        "id": "20e2544a8277d8c2",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force sterilization",
        "links": [
            "4f62466c41bb3667",
            "0609b7d54d31dafb"
        ],
        "x": 1635,
        "y": 1080,
        "wires": [
            [
                "ccb9e79ff06190fa"
            ]
        ]
    },
    {
        "id": "91fa7e389b484d7c",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Panasonic Main Scheduler",
        "label": "Panasonic main scheduler",
        "tooltip": "It is possible to use both Panasonic and NodeRed scheduler running at the same time. This is not recommended, make sure the schedules are not conflicting",
        "group": "fea7672db2f050c9",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1820,
        "y": 1560,
        "wires": [
            [
                "089ba42c8f7f7a61",
                "88e644ce965a6890"
            ]
        ]
    },
    {
        "id": "69ea88923a102a5d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heater Stop delta",
        "label": "Stop delta",
        "tooltip": "Turn off backup heater again when the temperature is xx °C lower than setpoint (only J-series)",
        "group": "26d9e6cf24507b4f",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-8",
        "max": "0",
        "step": 1,
        "className": "",
        "x": 1790,
        "y": 1520,
        "wires": [
            [
                "a2d7de4325e4bf91",
                "db41038f69a63144"
            ]
        ]
    },
    {
        "id": "7c7fd14d9f6ec530",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heater Start delta",
        "label": "Start delta",
        "tooltip": "Turn on backup heater when the temperature is xx °C lower than setpoint (only J-series)",
        "group": "26d9e6cf24507b4f",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-10",
        "max": "-2",
        "step": 1,
        "className": "",
        "x": 1790,
        "y": 1480,
        "wires": [
            [
                "78816343589b199a",
                "4694bfeaa76d43f1"
            ]
        ]
    },
    {
        "id": "02af248fc547b96b",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heater Delay Time",
        "label": "Delay time",
        "tooltip": "In case the final water temperature is not reached within the specified delay time turn on the backup heater (only J-series)",
        "group": "26d9e6cf24507b4f",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} min",
        "min": "0",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 1790,
        "y": 1440,
        "wires": [
            [
                "4021cdadbdc7768d",
                "c2baf1abae4e4441"
            ]
        ]
    },
    {
        "id": "b8abd042ad10fed8",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHW delta",
        "label": "DHW delta",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 8,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-10",
        "max": "0",
        "step": 1,
        "className": "",
        "x": 1770,
        "y": 1400,
        "wires": [
            [
                "c803b9ad018fe78e",
                "e85a5bbd08082721"
            ]
        ]
    },
    {
        "id": "2d364a067e4a7b4a",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Cool delta",
        "label": "Cool delta",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 1760,
        "y": 1360,
        "wires": [
            [
                "7139256ff024b872",
                "f66e9fca72401ab4"
            ]
        ]
    },
    {
        "id": "a89b41c6600cac07",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heat delta",
        "label": "Heat delta",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 1770,
        "y": 1320,
        "wires": [
            [
                "9b2a45a90495e067",
                "9e59dd1bbe56fc88"
            ]
        ]
    },
    {
        "id": "e31636baf16e3b69",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Powerful mode",
        "label": "Powerful mode",
        "tooltip": "",
        "place": "Set powerful mode run time in minutes",
        "group": "548e51986bce11b0",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Off",
                "value": 0,
                "type": "num"
            },
            {
                "label": "30 minutes",
                "value": 1,
                "type": "num"
            },
            {
                "label": "60 minutes",
                "value": 2,
                "type": "num"
            },
            {
                "label": "90 minutes",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1820,
        "y": 880,
        "wires": [
            [
                "979c5ca99c054740",
                "b7a195156eedf201"
            ]
        ]
    },
    {
        "id": "1f2cb9545d7e212d",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Set zones",
        "label": "Set active zones",
        "tooltip": "Set the active zones",
        "place": "Select option",
        "group": "fea7672db2f050c9",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Zone 1",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Zone 2",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Zone 1 and 2",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1760,
        "y": 1280,
        "wires": [
            [
                "2ed9d626c929fb95",
                "5b0e15b0804a4452"
            ]
        ]
    },
    {
        "id": "a6854436b6e1c7e8",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "TOP44 - panasonic_heat_pump/main/Error",
        "topic": "panasonic_heat_pump/main/Error",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1630,
        "y": 1620,
        "wires": [
            [
                "fce687f80b334b9e",
                "7813313c8fae18d5"
            ]
        ]
    },
    {
        "id": "fce687f80b334b9e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Current error",
        "label": "Current error",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1930,
        "y": 1600,
        "wires": []
    },
    {
        "id": "4118b2ccecf6a6de",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "PumpMaxFlowSetting",
        "links": [
            "c723f3f3bbdacfe7"
        ],
        "x": 2295,
        "y": 420,
        "wires": []
    },
    {
        "id": "bdb7e8e0217cec66",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HolidayMode",
        "links": [
            "e8684c407d602e87"
        ],
        "x": 2195,
        "y": 820,
        "wires": []
    },
    {
        "id": "979c5ca99c054740",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "PowerfulMode",
        "mode": "link",
        "links": [
            "f70b59196295efc0"
        ],
        "x": 2195,
        "y": 880,
        "wires": []
    },
    {
        "id": "859dc9276ee75464",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 960,
        "wires": [
            [
                "c6559a95bb3c55fb",
                "092a9db0d9b923b3",
                "7c74eef7b504ee67"
            ]
        ]
    },
    {
        "id": "092a9db0d9b923b3",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceDHW",
        "links": [
            "12e43571a8c16fa2",
            "67b8e26842cf7615",
            "14d2ae6b4af7e45e"
        ],
        "x": 2195,
        "y": 960,
        "wires": []
    },
    {
        "id": "5e3a9447502864ad",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceDefrost",
        "links": [
            "01744f1093a2fd51"
        ],
        "x": 2195,
        "y": 1060,
        "wires": []
    },
    {
        "id": "f7a9ec88877581f5",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "1 Trigger / 30 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 1320,
        "y": 1280,
        "wires": [
            [
                "8e9f91dd021c2ccd",
                "13b0a160e7f2d0a0",
                "119d9c04e028ad98",
                "50f5134fb3ba9e38",
                "332fb342687e1121",
                "58ee259d850d95ac",
                "afa82ddd168a4ea4",
                "0897b055d53c8a84",
                "d9cbcc885d31c1fd",
                "00660af047d90d84",
                "fb1ef412a32707e7",
                "849755bc336c0289"
            ]
        ]
    },
    {
        "id": "2ed9d626c929fb95",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SetZones",
        "links": [
            "9c4e9ed4c3ac1779"
        ],
        "x": 2195,
        "y": 1280,
        "wires": []
    },
    {
        "id": "9b2a45a90495e067",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "FloorHeatDelta",
        "links": [
            "4c1c4526944e820e"
        ],
        "x": 2195,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7139256ff024b872",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "FloorCoolDelta",
        "mode": "link",
        "links": [
            "25041e53f134e3fb",
            "c32298a87a338b1d"
        ],
        "x": 2195,
        "y": 1360,
        "wires": []
    },
    {
        "id": "c803b9ad018fe78e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHWHeatDelta",
        "links": [
            "5e35dee1374d6829"
        ],
        "x": 2195,
        "y": 1400,
        "wires": []
    },
    {
        "id": "4021cdadbdc7768d",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HeaterDelayTime",
        "links": [
            "bfcbe2fb120f457c"
        ],
        "x": 2195,
        "y": 1440,
        "wires": []
    },
    {
        "id": "78816343589b199a",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HeaterStartDelta",
        "links": [
            "0e3197d36afc45dc"
        ],
        "x": 2195,
        "y": 1480,
        "wires": []
    },
    {
        "id": "a2d7de4325e4bf91",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HeaterStopDelta",
        "links": [
            "ca1f0fdf0dd05c89"
        ],
        "x": 2195,
        "y": 1520,
        "wires": []
    },
    {
        "id": "089ba42c8f7f7a61",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "PanasonicMainScheduler",
        "links": [
            "c5cba27eac8a70a2",
            "e8d5ff3e213ef505"
        ],
        "x": 2195,
        "y": 1560,
        "wires": []
    },
    {
        "id": "3de982eda6f5e1a3",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1060,
        "wires": [
            [
                "a20fe452e34c26f2"
            ]
        ]
    },
    {
        "id": "5b0e15b0804a4452",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1280,
        "wires": [
            [
                "3c054d7f511af4eb"
            ]
        ]
    },
    {
        "id": "564fcdd537853126",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1320,
        "wires": [
            [
                "3b2ded71a11dfb75"
            ]
        ]
    },
    {
        "id": "381a37d17ef728cc",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1360,
        "wires": [
            [
                "c5f279c69179fd5b"
            ]
        ]
    },
    {
        "id": "cb354767e9f35bc0",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1400,
        "wires": [
            [
                "8ddf4987d6b31ae5"
            ]
        ]
    },
    {
        "id": "df60cdb125adaf72",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1440,
        "wires": [
            [
                "5182a29718a4142e"
            ]
        ]
    },
    {
        "id": "9b3cba642f3daa70",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1480,
        "wires": [
            [
                "08d04747592e753f"
            ]
        ]
    },
    {
        "id": "9e998e80ed82590d",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1520,
        "wires": [
            [
                "b6dd964e2537fb76"
            ]
        ]
    },
    {
        "id": "88e644ce965a6890",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1560,
        "wires": [
            [
                "87449349b95f6091"
            ]
        ]
    },
    {
        "id": "cb924439a66154f1",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "links": [
            "b1b3e80155e49c5c"
        ],
        "x": 1975,
        "y": 200,
        "wires": []
    },
    {
        "id": "a26b41289a59dba3",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var2a         = global.get('Quiet_Mode_Level',\"file\");\nlet msg1={};\nmsg1.source = \"boot\";\n\nif(var2a === undefined)     {return null;}\nelse                        {msg1.payload = var2a;\n                            msg1.topic = \"Quiet Mode\"; \n                            return msg1;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 200,
        "wires": [
            [
                "fadad1e2505bf86d"
            ]
        ],
        "outputLabels": [
            "Quiet Mode"
        ]
    },
    {
        "id": "a45a6b8b1ac4b46d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('Operating_Mode_State',\"file\");\nlet msg1={};\n\nif (var1 === undefined)      {\n                                return null;\n                            }\n\nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'Operation Mode'; \n                            msg1.source = \"boot\";\n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 280,
        "wires": [
            [
                "493be73ce31c8c96"
            ]
        ],
        "outputLabels": [
            "Operation Mode"
        ]
    },
    {
        "id": "d9a7bffb1a15426e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var Heatpump_State                    = global.get('Heatpump_State',\"file\");\nlet msg1={};\n\nif (Heatpump_State === undefined)      \n    {\n        return null;    \n    }\n\nelse\n    {\n        msg1.payload = Heatpump_State;\n        msg1.topic = 'Heatpump State'; \n        msg1.source = 'boot'; //if using flow it will generate a mqqt-command every minute\n        return msg1;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 140,
        "wires": [
            [
                "7b3d20aa8c9abb1e"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "b203a1c024a72593",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1 = global.get('F_ReducePumpSpeed.PumpMaxFlowSetting',\"file\");\nlet msg1={};\n\nif (var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            var1 = (var1-64) / (254-64) * 100;\n                            var1 = Number(var1).toFixed(0);\n                            msg1.payload = var1;\n                            msg1.topic = 'PumpMaxFlowSetting'; \n                            \n\n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 380,
        "wires": [
            [
                "2c13c33324bb6c6e",
                "ea184fe6e1240203"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "34397163757fd58b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HolidayMode',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HolidayMode'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 820,
        "wires": [
            [
                "17cf53c8acbfb4e1"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "7c74fd1faa32c81d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('PowerfulMode',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'PowerfulMode'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 880,
        "wires": [
            [
                "e31636baf16e3b69"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "de0e892a0157baca",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('ForceDHW',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'ForceDHW'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 960,
        "wires": [
            [
                "c6559a95bb3c55fb"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "2f25f344ad661680",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('DHW_Target_Temp',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'DHW_Target_Temp'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1020,
        "wires": [
            [
                "4dee981d88ea5cf3"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "05d3e85b3963e4e2",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('ForceDefrost',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'ForceDefrost'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1060,
        "wires": [
            [
                "45a93847a1d11766"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "0897b055d53c8a84",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('SetZones',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'SetZones'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1280,
        "wires": [
            [
                "1f2cb9545d7e212d"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "afa82ddd168a4ea4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('FloorHeatDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'FloorHeatDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1320,
        "wires": [
            [
                "a89b41c6600cac07"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "58ee259d850d95ac",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('FloorCoolDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'FloorCoolDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1360,
        "wires": [
            [
                "2d364a067e4a7b4a"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "332fb342687e1121",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('DHWHeatDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'DHWHeatDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1400,
        "wires": [
            [
                "b8abd042ad10fed8"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "50f5134fb3ba9e38",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HeaterDelayTime',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HeaterDelayTime'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1440,
        "wires": [
            [
                "02af248fc547b96b"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "119d9c04e028ad98",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HeaterStartDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HeaterStartDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1480,
        "wires": [
            [
                "7c7fd14d9f6ec530"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "13b0a160e7f2d0a0",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HeaterStopDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HeaterStopDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1520,
        "wires": [
            [
                "69ea88923a102a5d"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "8e9f91dd021c2ccd",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('PanasonicMainScheduler',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'PanasonicMainScheduler'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1560,
        "wires": [
            [
                "91fa7e389b484d7c"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "53ae8019411d666d",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1100,
        "wires": [
            [
                "ccb9e79ff06190fa",
                "0a683587ca4fc25c",
                "7cfe771e9583a82d"
            ]
        ]
    },
    {
        "id": "0a683587ca4fc25c",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceSterilization",
        "mode": "link",
        "links": [
            "a628a3d5d7be0e8b",
            "4982424c661376ea"
        ],
        "x": 2195,
        "y": 1100,
        "wires": []
    },
    {
        "id": "05e2f23adde7a6fc",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HEAT SP lower limit",
        "label": "Minimum temp.",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 11,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "20",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 1800,
        "y": 1160,
        "wires": [
            [
                "9170caebad3acdcf"
            ]
        ]
    },
    {
        "id": "ede3b3328704cab1",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HEAT SP upper limit",
        "label": "Maximum temp.",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 12,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "21",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 1800,
        "y": 1200,
        "wires": [
            [
                "58d199ee200d7b16"
            ]
        ]
    },
    {
        "id": "22afde8747ce6ca0",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HEAT_SP_upper_limit',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HEAT_SP_upper_limit'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1200,
        "wires": [
            [
                "ede3b3328704cab1"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "9170caebad3acdcf",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1160,
        "wires": [
            [
                "9fcae1bec983aa1f"
            ]
        ]
    },
    {
        "id": "58d199ee200d7b16",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1200,
        "wires": [
            [
                "887a43d150c20eb2"
            ]
        ]
    },
    {
        "id": "9fcae1bec983aa1f",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HEAT SP lower limit",
        "links": [
            "8206cc922dc8874d"
        ],
        "x": 2195,
        "y": 1160,
        "wires": []
    },
    {
        "id": "887a43d150c20eb2",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HEAT SP upper limit",
        "links": [
            "170936d914847ac0"
        ],
        "x": 2195,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7f6107d49ab83c40",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HEAT_SP_lower_limit',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HEAT_SP_lower_limit'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1160,
        "wires": [
            [
                "05e2f23adde7a6fc"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "6db2abfba9e25737",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('SetForceSterilization',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'SetForceSterilization'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1100,
        "wires": [
            [
                "ccb9e79ff06190fa"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "071ac5a0f08a8fdb",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "set HeatPump Power state",
        "links": [
            "346a3528a7770803",
            "ee7e3fc1d241d09e",
            "f217f942f56cbfa9",
            "7a30c0f0dbf50e03"
        ],
        "x": 1405,
        "y": 100,
        "wires": [
            [
                "7b3d20aa8c9abb1e"
            ]
        ]
    },
    {
        "id": "6ae86dc05a6a3c4a",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceDHW IN",
        "links": [
            "3d3b432c844ba87e"
        ],
        "x": 1625,
        "y": 940,
        "wires": [
            [
                "c6559a95bb3c55fb"
            ]
        ]
    },
    {
        "id": "2f577f48a3804703",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 820,
        "wires": [
            [
                "bcda53f9e43821c5"
            ]
        ]
    },
    {
        "id": "b7a195156eedf201",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 880,
        "wires": [
            [
                "1742dd060b79dfd1"
            ]
        ]
    },
    {
        "id": "99fca21d30786e83",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 360,
        "wires": [
            [
                "47b7f4736455a3cb"
            ]
        ]
    },
    {
        "id": "7b3d20aa8c9abb1e",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heat pump power",
        "label": "Heat pump power",
        "tooltip": "",
        "group": "bf4af523ba16d457",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1850,
        "y": 100,
        "wires": [
            [
                "4673d329949e0652"
            ]
        ]
    },
    {
        "id": "6e6c991de9f27149",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1940,
        "y": 1020,
        "wires": [
            [
                "ae99edee7ea44ce2"
            ]
        ]
    },
    {
        "id": "56131f5116b20fba",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "links": [
            "7386864c75dbce5c"
        ],
        "x": 1625,
        "y": 1000,
        "wires": [
            [
                "4dee981d88ea5cf3"
            ]
        ]
    },
    {
        "id": "550d51c7fe788f9e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "mode": "link",
        "links": [
            "3f63919ddd4f0ea7"
        ],
        "x": 2195,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e85a5bbd08082721",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1400,
        "wires": [
            [
                "cb354767e9f35bc0"
            ]
        ]
    },
    {
        "id": "c2baf1abae4e4441",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1440,
        "wires": [
            [
                "df60cdb125adaf72"
            ]
        ]
    },
    {
        "id": "4694bfeaa76d43f1",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1480,
        "wires": [
            [
                "9b3cba642f3daa70"
            ]
        ]
    },
    {
        "id": "db41038f69a63144",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1520,
        "wires": [
            [
                "9e998e80ed82590d"
            ]
        ]
    },
    {
        "id": "f66e9fca72401ab4",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1360,
        "wires": [
            [
                "381a37d17ef728cc"
            ]
        ]
    },
    {
        "id": "9e59dd1bbe56fc88",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1320,
        "wires": [
            [
                "564fcdd537853126"
            ]
        ]
    },
    {
        "id": "3ed1fd544412f391",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "links": [
            "158b8983b1dd0aa9"
        ],
        "x": 1405,
        "y": 1360,
        "wires": [
            [
                "2d364a067e4a7b4a"
            ]
        ]
    },
    {
        "id": "dcec18e192df8d64",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "26d9e6cf24507b4f",
        "name": "Line - Setup ",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Backup heater</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2490,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "be17c89704b598d8",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "26d9e6cf24507b4f",
        "name": "Line - Setup ",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2490,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "ea184fe6e1240203",
        "type": "ui_slider",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "fea7672db2f050c9",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 1550,
        "y": 420,
        "wires": [
            [
                "684cdf95f8172514",
                "c9428fcff7af5f3a"
            ]
        ]
    },
    {
        "id": "2c13c33324bb6c6e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Current max flow",
        "format": "{{msg.payload  | number: 0}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1330,
        "y": 420,
        "wires": []
    },
    {
        "id": "684cdf95f8172514",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "group": "fea7672db2f050c9",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "SET {{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Pump_Max_Flow",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1810,
        "y": 460,
        "wires": [
            [
                "7cfabb437dca890f",
                "c12983167828c39b"
            ]
        ]
    },
    {
        "id": "c9428fcff7af5f3a",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pump_Max_Flow",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 420,
        "wires": [
            [
                "9e1f07f9825bd79d"
            ]
        ]
    },
    {
        "id": "9e1f07f9825bd79d",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": " ",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2110,
        "y": 420,
        "wires": [
            [
                "4118b2ccecf6a6de",
                "684cdf95f8172514"
            ]
        ]
    },
    {
        "id": "32c4b461266d4a6e",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link in 9",
        "links": [
            "8f0e209ac14bdb9a",
            "f45559f5e72abee8"
        ],
        "x": 1205,
        "y": 380,
        "wires": [
            [
                "b203a1c024a72593"
            ]
        ]
    },
    {
        "id": "b4efe8320bae812d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Model",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2370,
        "y": 1680,
        "wires": []
    },
    {
        "id": "115cf15b6254cb9c",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "name": "Line - panasonic",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Hardware configuration</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2020,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "313780cf94ef9d1c",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "name": "Line - 1",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1820,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "d9cbcc885d31c1fd",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].model;\n                            msg1.topic = 'Model'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1680,
        "wires": [
            [
                "b4efe8320bae812d"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "00660af047d90d84",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].power;\n                            msg1.topic = 'Power'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1720,
        "wires": [
            [
                "d60532c945c70ab1"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "d60532c945c70ab1",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Heat capacity",
        "format": "{{msg.payload}} kW",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 1720,
        "wires": []
    },
    {
        "id": "fb1ef412a32707e7",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].phase;\n                            msg1.topic = 'Phase'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1760,
        "wires": [
            [
                "7216a1bd8dc26f16"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "7216a1bd8dc26f16",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Power connection",
        "format": "{{msg.payload}} Phase",
        "layout": "row-spread",
        "className": "",
        "x": 2410,
        "y": 1760,
        "wires": []
    },
    {
        "id": "849755bc336c0289",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].type;\n                            msg1.topic = 'Type'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1800,
        "wires": [
            [
                "ca8be52d82cfb2da"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "ca8be52d82cfb2da",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2370,
        "y": 1800,
        "wires": []
    },
    {
        "id": "85737143f803169a",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "name": "Line - Setup 2",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Water pump</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "80dd0b992f3f7c9a",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "26d9e6cf24507b4f",
        "name": "Line - heat limits",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Heat water temperature limits</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2340,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "7cfabb437dca890f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "filter",
        "func": "var value_file = global.get(\"F_ReducePumpSpeed.PumpMaxFlowSetting\",\"file\");\nvar value_mem = global.get(\"F_ReducePumpSpeed.PumpMaxFlowSetting\");\n\nif (value_file === undefined)        {return msg;}\n\nif (msg.payload == value_file)\n    {\n        return null;\n    }\nelse\n    {\n        //global.set(\"F_ReducePumpSpeed.PumpMaxFlowSetting\",msg.payload,\"file\"); //this is wrong! // edit 13-12-2022\n        return msg;        \n    }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 460,
        "wires": [
            [
                "98757de0a2842b4b"
            ]
        ]
    },
    {
        "id": "c12983167828c39b",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 500,
        "wires": [
            [
                "684cdf95f8172514"
            ]
        ]
    },
    {
        "id": "7813313c8fae18d5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Last error",
        "func": "if (msg.payload == \"No error\") { return null; };\n\nmsg.topic = \"SYSTEM - Last error\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 1620,
        "wires": [
            [
                "0db2bdc455e4bffe"
            ]
        ]
    },
    {
        "id": "0db2bdc455e4bffe",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2250,
        "y": 1620,
        "wires": [
            [
                "2989d5851e2457ae"
            ]
        ]
    },
    {
        "id": "2989d5851e2457ae",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2395,
        "y": 1620,
        "wires": []
    },
    {
        "id": "a845813900ca9e55",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Exit to log",
        "info": "",
        "x": 2480,
        "y": 1620,
        "wires": []
    },
    {
        "id": "9717750d0d528f9c",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Dummy error",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "H62",
        "payloadType": "str",
        "x": 1910,
        "y": 1700,
        "wires": [
            [
                "7813313c8fae18d5"
            ]
        ]
    },
    {
        "id": "5be142bd732c8d96",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "if changed",
        "func": "let msg99={};   // pin1 to log\n    msg99.topic = \"USER SetQuietMode\";\n    msg99.payload = msg.payload;\nlet msg2 = {};  // pin2 to switch SS_Quietmode\n\nif (msg.source === undefined) { msg.source = \"GUI\"; }\n\nif (msg.source == \"scheduler\") { // if scheduler updates the Quietmode level then disable Quietmode\n    global.set('Previous_Quiet_Mode_Level', msg.payload, \"file\");\n    //global.set('Quiet_Mode_Level', msg.payload, \"file\"); //no, let the function after SS_Quietmode do this\n    // and disable switch:\n    msg2.payload = 0;\n    msg99.topic = \"Scheduler\";\n    msg99.payload = \"Disable SoftStart Quietmode because scheduler changes level\"\n    return [msg99, msg2];\n}\n\nglobal.set('Previous_Quiet_Mode_Level', Quiet_Mode_Level, \"file\"); // save current level for restore\nvar Quiet_Mode_Level = msg.payload; //check new Quietmode level\n\n//check if SS_Quietmode_on_off switch is enabled and update message to log\nvar SS_Quietmode_on_off = global.get(\"SS_Quietmode_on_off\", \"file\"); // Status switch SS_Quietmode Add-on\nif (SS_Quietmode_on_off === 1) //if on then warn user in log\n{\n    msg99.topic = \"USER\";\n    msg99.payload = \"SoftStart Quietmode will now restore to level \" + Quiet_Mode_Level ; \n    //also disable SS_Quietmode_on_off switch if user selects Quietmode 0 (no use to set and restore both te level 0)\n    if (Quiet_Mode_Level == 0) {\n        msg99.payload = \"SoftStart Quietmode makes no sence to set and restore to \" + Quiet_Mode_Level + \" (DISABLED)\"; \n        global.set('Previous_Quiet_Mode_Level', 0, \"file\");\n        msg2.payload = 0; //send to switch SS_Quietmode_on_off to disable\n        return [msg99, msg2];\n    }\n\n    //also disable SS_Quietmode_on_off switch if user selects Quietmode 3 (no use to set and restore both te level 3)\n    if (Quiet_Mode_Level == 3) {\n        msg99.topic = \"Wat moet hier?\";\n        msg99.payload = \"SoftStart Quietmode makes no sence to set and restore to \" + Quiet_Mode_Level + \" (DISABLED)\"; \n        global.set('Previous_Quiet_Mode_Level', 0, \"file\");\n        msg2.payload = 0; //send to switch SS_Quietmode_on_off to disable\n        return [msg99, msg2];\n    }\n}\n\nreturn [msg99,msg2];\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 160,
        "wires": [
            [
                "238183547350dfc1"
            ],
            [
                "625620e079bcddd3"
            ]
        ]
    },
    {
        "id": "238183547350dfc1",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "To input logs",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2215,
        "y": 140,
        "wires": []
    },
    {
        "id": "625620e079bcddd3",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "8bd83650dae791b5"
        ],
        "x": 2215,
        "y": 180,
        "wires": []
    },
    {
        "id": "1f12871cda6c40b3",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT = global.get('MQTT', \"file\");\nlet msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\nmsg66.topic = \"SYSTEM\";\n\nif (msg.source == \"mqtt\") {return null;} // Block. no function after setting the GUI toggles.\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {   // Block all msg, and log it.\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                        \n}\n\nif (msg.source == \"GUI\") {\n    global.set('MQTT_Source', msg.source);\n    return [msg, null]; // allow when user action  \n    }\n\nif (MQTT.block_active == 0) { return [msg, null]; // allow rtc, scheduler \n    }\n    \n\n\n    // *****************************************************************************\n    //  MQTT.block_mode = BLOCK ALL (1)\n    //  MQTT.block_mode = CUSTOM (2)\n    //  MQTT.block_mode = UNRESTRICTED (3)\n    // *****************************************************************************\n        \n    if (MQTT.block_active == 1 && MQTT.block_mode == 2) \n    {\n     \n\n        //  MQTT_default_2 = CUSTOM\n\n        \n            //**********************************************************************\n            //MQTT.allow_rtc_onoff\n            //**********************************************************************\n            if (MQTT.allow_rtc_onoff == 1)      {\n                global.set('MQTT_Source', \"rtc on/off\");\n                return [msg,null];        //  Pass through msg.\n                }\n            //**********************************************************************\n            //MQTT.allow_solar\n            //**********************************************************************\n            else if (MQTT.allow_solar == 1)      {\n                global.set('MQTT_Source', \"solar\");\n                return [msg,null];        //  Pass through msg.\n                }\n            //**********************************************************************\n            //MQTT.allow_scheduler\n            //**********************************************************************\n            else if (MQTT.allow_scheduler == 1)   {\n                global.set('MQTT_Source', \"scheduler\");\n                return [msg,null];              //  Pass through msg.\n                } \n\n    }\n    \n\nmsg66.payload = \"MQTT-Commands are blocked!\";\nreturn [null,msg66];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 100,
        "wires": [
            [
                "aad17e70a817393e",
                "69e62408ae1d45fd"
            ],
            [
                "85327198ddc6e251"
            ]
        ]
    },
    {
        "id": "85327198ddc6e251",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 100,
        "wires": []
    },
    {
        "id": "eeae40f40c5ecf87",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n\n\n    ////////////////////////////////////////////////////////////////////////////\n    //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is allowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT.allow_rtc_onoff\n        //**********************************************************************\n        //if (MQTT.allow_rtc_onoff == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_solar\n        //**********************************************************************\n        //if (MQTT.allow_solar == 1)          {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_scheduler\n        //**********************************************************************\n        if (MQTT.allow_scheduler == 1)      {return [msg,null];}        //  Pass through msg.\n        else                                      {return [null,null];}       //  Block\n        \n        //return [null,null];\n    }\n\n\n\nif (MQTT.block_active == 0) {\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 240,
        "wires": [
            [
                "c168a66c6bcdd403"
            ],
            [
                "d65b99037cb3740d"
            ]
        ]
    },
    {
        "id": "2810d417aa5c3457",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1) {                                           //  MQTT_default_1 = BLOCK ALL\n        let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n        msg66.topic = \"SYSTEM\";\n        msg66.payload = \"MQTT-Commands are blocked!\";\n        return [null, msg66];                                                   //  Block msg, and log it.\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 2) {                                           //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is aloowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT\n        //**********************************************************************\n        if (MQTT.allow_rtc_onoff == 1 || MQTT.allow_solar == 1 || MQTT.allow_scheduler == 1)      {\n            if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"flow\"); }\n            return [msg, null];                                                 //  Pass through msg.\n            }\n        else                                      {return [null,null];}         //  Block\n        \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                           //  MQTT_default_3 = UNRESTRICTED\n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"flow\"); }\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', msg.source); }\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 320,
        "wires": [
            [
                "2c3aa272de5edf1f",
                "aad17e70a817393e"
            ],
            [
                "29f1c1eaf91ec977"
            ]
        ]
    },
    {
        "id": "47b7f4736455a3cb",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "let msg99 = {}; // pin 2 - To Notify msg (and input LOGS)\n\nif (global.get('MQTT.block_active', \"file\") == 1) {\n    msg99.topic = \"SYSTEM\";\n    msg99.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg99];\n    }\n    \nglobal.set('MQTT_Source', \"GUI\");\nmsg99.topic = \"USER\";\nmsg99.payload = \"Pump Service-mode (max flow): \" + msg.payload;\nreturn [msg, msg99];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 360,
        "wires": [
            [
                "6715b2c07ffdaf0f"
            ],
            [
                "e0217508a82c4d43"
            ]
        ]
    },
    {
        "id": "5eebb66e29e252f6",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 460,
        "wires": [
            [
                "43ad0d01b0c84de9"
            ],
            [
                "65e5ce7e8bb0e284"
            ]
        ]
    },
    {
        "id": "bcda53f9e43821c5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 820,
        "wires": [
            [
                "a6faaf6380e6d040"
            ],
            [
                "302de5d951e650b6"
            ]
        ]
    },
    {
        "id": "1742dd060b79dfd1",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 880,
        "wires": [
            [
                "c318be9105a9e8e5"
            ],
            [
                "db78ad9b985b4aa5"
            ]
        ]
    },
    {
        "id": "7c74eef7b504ee67",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1) {                                            //  MQTT_default_1 = BLOCK ALL\n        return [null, null];  \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 2) {                                            //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is aloowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT.allow_rtc_onoff\n        //**********************************************************************\n        //if (MQTT.allow_rtc_onoff == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_solar\n        //**********************************************************************\n        //if (MQTT.allow_solar == 1)          {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_scheduler\n        //**********************************************************************\n        if (MQTT.allow_scheduler == 1)      {return [msg,null];}        //  Pass through msg.\n        else                                      {return [null,null];}       //  Block\n        \n        //return [null,null];\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                            //  MQTT_default_3 = UNRESTRICTED\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    return [msg,null];\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 960,
        "wires": [
            [
                "b8e7b80b511e3054"
            ],
            [
                "e1d9c3b48e3b4cba"
            ]
        ]
    },
    {
        "id": "bc84f4340c3e5b0a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1020,
        "wires": [
            [
                "aa26d12b996f9c57"
            ],
            [
                "9b7f15d048bb1f60"
            ]
        ]
    },
    {
        "id": "a20fe452e34c26f2",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1) {                                            //  MQTT_default_1 = BLOCK ALL\n        return [null, null];  \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 2) {                                            //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is aloowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT.allow_rtc_onoff\n        //**********************************************************************\n        //if (MQTT.allow_rtc_onoff == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_solar\n        //**********************************************************************\n        //if (MQTT.allow_solar == 1)          {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_scheduler\n        //**********************************************************************\n        if (MQTT.allow_scheduler == 1)      {return [msg,null];}        //  Pass through msg.\n        else                                      {return [null,null];}       //  Block\n        \n        //return [null,null];\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                            //  MQTT_default_3 = UNRESTRICTED\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1060,
        "wires": [
            [
                "97d91018b611d85e"
            ],
            [
                "749ce60adde338d9"
            ]
        ]
    },
    {
        "id": "7cfe771e9583a82d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1) {                                            //  MQTT_default_1 = BLOCK ALL\n        return [null, null];  \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 2) {                                            //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is aloowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT.allow_rtc_onoff\n        //**********************************************************************\n        //if (MQTT.allow_rtc_onoff == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_solar\n        //**********************************************************************\n        //if (MQTT.allow_solar == 1)          {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_scheduler\n        //**********************************************************************\n        if (MQTT.allow_scheduler == 1)      {return [msg,null];}        //  Pass through msg.\n        else                                      {return [null,null];}       //  Block\n        \n        //return [null,null];\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                            //  MQTT_default_3 = UNRESTRICTED\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1100,
        "wires": [
            [
                "6c56f45eddcf6890"
            ],
            [
                "c6e07a956cf2f293"
            ]
        ]
    },
    {
        "id": "3c054d7f511af4eb",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1280,
        "wires": [
            [
                "d4c237094a0d52f9"
            ],
            [
                "b8ed3bef56b272a1"
            ]
        ]
    },
    {
        "id": "3b2ded71a11dfb75",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1320,
        "wires": [
            [
                "d66211d6bd2170ac"
            ],
            [
                "f94a97e9d42084d7"
            ]
        ]
    },
    {
        "id": "c5f279c69179fd5b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1360,
        "wires": [
            [
                "71bc8ac0ba520e9e"
            ],
            [
                "400c912774a24583"
            ]
        ]
    },
    {
        "id": "8ddf4987d6b31ae5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1400,
        "wires": [
            [
                "99beaa5dde77b94c"
            ],
            [
                "f2e85ff23b3dc136"
            ]
        ]
    },
    {
        "id": "5182a29718a4142e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1440,
        "wires": [
            [
                "ec2e17164979af03"
            ],
            [
                "a863b940531858e1"
            ]
        ]
    },
    {
        "id": "08d04747592e753f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1480,
        "wires": [
            [
                "ad4e8ac090e4b449"
            ],
            [
                "6111292139d84986"
            ]
        ]
    },
    {
        "id": "b6dd964e2537fb76",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1520,
        "wires": [
            [
                "9b9c2c12ee2f9256"
            ],
            [
                "6886cb05525f8d0b"
            ]
        ]
    },
    {
        "id": "87449349b95f6091",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1560,
        "wires": [
            [
                "365cb4a95d68eb3e"
            ],
            [
                "16e91d824cef95e3"
            ]
        ]
    },
    {
        "id": "d65b99037cb3740d",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 240,
        "wires": []
    },
    {
        "id": "29f1c1eaf91ec977",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 320,
        "wires": []
    },
    {
        "id": "e0217508a82c4d43",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "c764c19340b7b720"
        ],
        "x": 2565,
        "y": 360,
        "wires": []
    },
    {
        "id": "65e5ce7e8bb0e284",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 460,
        "wires": []
    },
    {
        "id": "302de5d951e650b6",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 820,
        "wires": []
    },
    {
        "id": "db78ad9b985b4aa5",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 880,
        "wires": []
    },
    {
        "id": "e1d9c3b48e3b4cba",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 960,
        "wires": []
    },
    {
        "id": "9b7f15d048bb1f60",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 1020,
        "wires": []
    },
    {
        "id": "749ce60adde338d9",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c6e07a956cf2f293",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2555,
        "y": 1100,
        "wires": []
    },
    {
        "id": "6886cb05525f8d0b",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2555,
        "y": 1520,
        "wires": []
    },
    {
        "id": "16e91d824cef95e3",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2555,
        "y": 1560,
        "wires": []
    },
    {
        "id": "6111292139d84986",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2555,
        "y": 1480,
        "wires": []
    },
    {
        "id": "a863b940531858e1",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2555,
        "y": 1440,
        "wires": []
    },
    {
        "id": "f2e85ff23b3dc136",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2555,
        "y": 1400,
        "wires": []
    },
    {
        "id": "400c912774a24583",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2555,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f94a97e9d42084d7",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2555,
        "y": 1320,
        "wires": []
    },
    {
        "id": "b8ed3bef56b272a1",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2555,
        "y": 1280,
        "wires": []
    },
    {
        "id": "89467c0f49c8ec80",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "name": "Line - Setup 3",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "4a2670b477ab7f75",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "548e51986bce11b0",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Force defrost",
        "label": "Force defrost routine",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1320,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3acac369aa9d0bae",
        "type": "ui_slider",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "slider",
        "label": "Low speed",
        "tooltip": "",
        "group": "fea7672db2f050c9",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 1550,
        "y": 520,
        "wires": [
            [
                "2f7ff35f7c2ca99f"
            ]
        ]
    },
    {
        "id": "265aa477d413b30c",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1630,
        "y": 680,
        "wires": [
            [
                "9c06f243d9fa02cd"
            ]
        ]
    },
    {
        "id": "9c06f243d9fa02cd",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "label": "Reduce pump speed",
        "tooltip": "Reduce pump speed when compressor is off",
        "group": "fea7672db2f050c9",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1860,
        "y": 680,
        "wires": [
            [
                "cf98942a82cf52e5"
            ]
        ]
    },
    {
        "id": "cf98942a82cf52e5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "status",
        "func": "let msg1 ={}; // SET15 SetMaxPumpDuty\nlet msg99={}; // log\nmsg99.topic = \"Function Pump speed\";\n\nvar PumpSpeed = global.get(\"F_ReducePumpSpeed.PumpMaxFlowSetting\", \"file\");   //actual pumpspeed\nvar LowSpeed = global.get(\"F_ReducePumpSpeed.LowSpeed\", \"file\");              //lowest speed set\nvar SavedPumpspeed = global.get(\"F_ReducePumpSpeed.SavedPumpspeed\", \"file\");  //value to restore to\n    if (SavedPumpspeed === undefined) \n        {\n        SavedPumpspeed = PumpSpeed; // default pumpspeed\n        global.set(\"F_ReducePumpSpeed.SavedPumpspeed\", SavedPumpspeed, \"file\");\n        }  \n\n\n\n\nif (msg.payload == 1) { // switch is ON\n    global.set('F_ReducePumpSpeed.state', 1, \"file\");\n    msg99.payload = 1;\n    return [null,msg99];\n}\n\n\n\n\nif (msg.payload == 0) { // switch is OFF\n    global.set('F_ReducePumpSpeed.state', 0, \"file\");\n \n    //check restore or not:\n    msg99.payload = 0;\n    if (PumpSpeed < SavedPumpspeed) \n        {\n            PumpSpeed = SavedPumpspeed; //restore old speed\n            //****calculate Pumpspeed --> percentage******\n            var var1 = PumpSpeed;\n            var1 = (var1 - 64) / (254 - 64) * 100;\n            var1 = \" (\" + Number(var1).toFixed(0) + \"%)\";\n            //********************************************\n            global.set(\"F_ReducePumpSpeed.PumpMaxFlowSetting\", PumpSpeed, \"file\"); //store current setting\n            msg1.payload = PumpSpeed;\n            msg99.payload = \"0 (restored to: \" + PumpSpeed + var1 + \")\"; //to log\n            return [msg1,msg99];\n        }\n    \n}\n    return [null,msg99];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 680,
        "wires": [
            [
                "315fddd6f5ad04a4"
            ],
            [
                "5c671bda81284e37"
            ]
        ]
    },
    {
        "id": "f45559f5e72abee8",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link out 29",
        "mode": "link",
        "links": [
            "32c4b461266d4a6e",
            "403a171a02400af0"
        ],
        "x": 2565,
        "y": 620,
        "wires": []
    },
    {
        "id": "879b071f7e013653",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Function Reduce pump speed",
        "func": "//check if enabled (switch)\nvar ReducePumpSpeed = global.get('F_ReducePumpSpeed.state', \"file\");\n\nif (ReducePumpSpeed === undefined || ReducePumpSpeed == 0) \n    {\n        ReducePumpSpeed = 0;\n        global.set('F_ReducePumpSpeed.state', 0, \"file\");\n        return null; // exit\n    }\n\n// uitzondering maken tijdens defrost?\nif (global.get('ForceDefrost', \"file\") == 1) {\n    //let msg99 = {};\n    //msg99.topic = \"[debug]\"\n    //msg99.payload = \"Not reducing pump speed while defrosting <test>\"; // checked 3 times, working ok\n    return [null, null]; // exit during defrost\n}\n\nvar Freq=msg.payload;//incoming msg payload is compressor Hz\n\nlet msg1={};    //  Pin 1 - Pumpspeed to set\nlet msg99 = {}; //  pin 2 - To log\n\nvar PumpSpeed = global.get(\"F_ReducePumpSpeed.PumpMaxFlowSetting\",\"file\"); //default pumpspeed\nif (PumpSpeed === undefined) {return null;} //exit;\n\nvar SavedPumpspeed = global.get(\"F_ReducePumpSpeed.SavedPumpspeed\", \"file\"); \nif (SavedPumpspeed === undefined) \n    { \n        SavedPumpspeed = PumpSpeed; //Store default pumpspeed\n    global.set(\"F_ReducePumpSpeed.SavedPumpspeed\", PumpSpeed, \"file\"); \n    }\n\nvar LowSpeed = global.get(\"F_ReducePumpSpeed.LowSpeed\", \"file\");\nif (LowSpeed === undefined) {\n    LowSpeed = 100; //Store Low pumpspeed\n    global.set(\"F_ReducePumpSpeed.LowSpeed\", LowSpeed, \"file\");\n}\n\n\nmsg.topic = \"Waterpump\";\n\nif (Freq > 0) //if compressor is running:\n    {                                       \n        if (PumpSpeed < SavedPumpspeed) \n            {\n                PumpSpeed = SavedPumpspeed; //restore old speed\n                //****calculate Pumpspeed --> percentage******\n                var var1 = PumpSpeed;\n                var1 = (var1 - 64) / (254 - 64) * 100;\n                var1 = \" (\" + Number(var1).toFixed(0) + \"%)\";\n                //********************************************\n                global.set(\"F_ReducePumpSpeed.PumpMaxFlowSetting\", PumpSpeed, \"file\"); //store current setting\n                msg1.payload = PumpSpeed;\n                msg99.topic = \"Function Pump speed\";\n                msg99.payload = \"restored to: \" + PumpSpeed + var1;\n                return [msg1,msg99];\n            }\n\n    } \n\nif (Freq == 0) //if compressor is off:\n        {                                  \n            if (PumpSpeed > LowSpeed)\n                {\n                    PumpSpeed = LowSpeed; //save new pumpspeed \n                    //****calculate Pumpspeed --> percentage******\n                    var var1 = PumpSpeed;\n                    var1 = (var1 - 64) / (254 - 64) * 100;\n                    var1 = \" (\" + Number(var1).toFixed(0) + \"%)\";\n                    //********************************************\n                    global.set(\"F_ReducePumpSpeed.PumpMaxFlowSetting\", PumpSpeed, \"file\"); //store current setting\n                    msg1.payload = PumpSpeed;\n                    msg99.topic = \"Function Pump speed\";\n                    msg99.payload = \"reduced to \" + PumpSpeed + var1;\n                    return [msg1, msg99];\n                }\n\n        } \n        \n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 600,
        "wires": [
            [
                "676beb3babed5817"
            ],
            [
                "17f55cbc1fe21549"
            ]
        ]
    },
    {
        "id": "73a3b137b4661912",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link in 17",
        "links": [
            "c57a81d1dee5b8a9"
        ],
        "x": 1215,
        "y": 600,
        "wires": [
            [
                "879b071f7e013653"
            ]
        ]
    },
    {
        "id": "676beb3babed5817",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1630,
        "y": 580,
        "wires": [
            [
                "315fddd6f5ad04a4"
            ]
        ]
    },
    {
        "id": "17f55cbc1fe21549",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1630,
        "y": 620,
        "wires": [
            [
                "5c671bda81284e37"
            ]
        ]
    },
    {
        "id": "315fddd6f5ad04a4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\n\nglobal.set('MQTT_Source', \"Function Pump speed\");\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 580,
        "wires": [
            [
                "f45559f5e72abee8",
                "62ecfb10d045c9aa"
            ],
            [
                "68685dfaa9b474b6"
            ]
        ]
    },
    {
        "id": "68685dfaa9b474b6",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 580,
        "wires": []
    },
    {
        "id": "62ecfb10d045c9aa",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET15 SetMaxPumpDuty",
        "topic": "panasonic_heat_pump/commands/SetMaxPumpDuty",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 580,
        "wires": []
    },
    {
        "id": "5c671bda81284e37",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link out Log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2205,
        "y": 620,
        "wires": []
    },
    {
        "id": "5dfdbd7fb948ef4a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load",
        "func": "let msg99={}; //status of switch to Input LOGS (at start)\n\nvar PumpSpeed = global.get(\"F_ReducePumpSpeed.PumpMaxFlowSetting\",\"file\"); //default pumpspeed\nif (PumpSpeed === undefined) {return null;} //exit;\n\nvar SavedPumpspeed = global.get(\"F_ReducePumpSpeed.SavedPumpspeed\", \"file\"); \nif (SavedPumpspeed === undefined) \n    { \n        SavedPumpspeed = PumpSpeed; //Store default pumpspeed\n        global.set(\"F_ReducePumpSpeed.SavedPumpspeed\", SavedPumpspeed, \"file\"); \n    }\n\nvar LowSpeed = global.get(\"F_ReducePumpSpeed.LowSpeed\", \"file\");\nif (LowSpeed === undefined) {\n    LowSpeed = PumpSpeed; //Store default pumpspeed\n    global.set(\"F_ReducePumpSpeed.LowSpeed\", LowSpeed, \"file\");\n}\n\n// ReducePumpSpeed switch setup\nvar ReducePumpSpeed = global.get('F_ReducePumpSpeed.state', \"file\");\n\nif (ReducePumpSpeed === undefined) \n    {\n        ReducePumpSpeed = 0;\n        global.set('F_ReducePumpSpeed.state', 0, \"file\");\n    }\n\n\nmsg99.topic = \"Function Pump speed\";\nmsg99.payload = ReducePumpSpeed;\nreturn msg99;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 680,
        "wires": [
            [
                "265aa477d413b30c"
            ]
        ]
    },
    {
        "id": "f09a0c75d24764b9",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "at boot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1280,
        "y": 680,
        "wires": [
            [
                "5dfdbd7fb948ef4a"
            ]
        ]
    },
    {
        "id": "2f7ff35f7c2ca99f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "conversion function",
        "func": "// SET15 SetMaxPumpDuty decimal value translate to hexadecimal in service menu 64 to 254\n// First find out the upper and lower limit of the waterpump. Trial and arror by injecting a number as payload to the mqtt topic. fill them in in the two lines below!!!\n//\nvar lowerlimit=64; // Lowest value\nvar upperlimit=254; // Hihghes value\n// Note, the default setting was 149, which is ~45%\n\nvar range=(upperlimit-lowerlimit); // This is the range of operation for the waterpump. You need to test this manually and correct the values if needed.\n\n\nmsg.payload = ((msg.payload) / 100 * range) + lowerlimit; // calculation\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 520,
        "wires": [
            [
                "298594735f133ef3"
            ]
        ]
    },
    {
        "id": "298594735f133ef3",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Save",
        "func": "global.set(\"LowSpeed\", msg.payload, \"file\");\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 520,
        "wires": []
    },
    {
        "id": "30b65b7d5afd13d0",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1 = global.get(\"F_ReducePumpSpeed.LowSpeed\", \"file\");\nlet msg1={};\n\nvar PumpSpeed = global.get(\"F_ReducePumpSpeed.PumpMaxFlowSetting\", \"file\"); //default pumpspeed\nif (PumpSpeed === undefined) { return null; } //exit;\n\nif (var1 === undefined)     \n    {\n        global.set(\"F_ReducePumpSpeed.LowSpeed\", PumpSpeed, \"file\"); \n        var1 = PumpSpeed;\n    }\n                            \nvar1 = (var1-64) / (254-64) * 100;\nvar1 = Number(var1).toFixed(0);\nmsg1.payload = var1;\nmsg1.topic = 'LowSpeed';\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 520,
        "wires": [
            [
                "3acac369aa9d0bae"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "f6e0cc6687051bf1",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Filter",
        "func": "if (global.get('VirtualState') == msg.payload) return null;\n\nglobal.set('VirtualState', msg.payload); //always set VirtualState\n\nif (msg.source == \"boot\") {\n    //node.warn(msg.source);\n    return null;\n}\n\nif (msg.source == \"mqtt\") { \n    //node.warn(msg.source);\n    return null; \n    }\n\nif (msg.source === undefined) {\n    msg.source = \"GUI\";\n    global.set('MQTT_Source', \"GUI\");\n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2250,
        "y": 100,
        "wires": [
            [
                "1f12871cda6c40b3"
            ]
        ]
    },
    {
        "id": "585e4d6a54d44021",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Filter",
        "func": "var last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\nvar current_value   = global.get('Operating_Mode_State',\"file\");\n\n\nif (last_value === undefined || last_msgid === undefined){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return null;\n}\n\nif (last_msgid == msg._msgid){\n    return null;\n}\n\nif (msg.payload != current_value || msg.payload != last_value){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 320,
        "wires": [
            [
                "e21920a5a6155306"
            ]
        ]
    },
    {
        "id": "e4b5c256b8c34faa",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Filter",
        "func": "// check if SS_Quietmode_on_off \nvar SS_Quietmode_on_off = global.get(\"SS_Quietmode_on_off\", \"file\");\n\nif (msg.source == \"scheduler\" && SS_Quietmode_on_off === 1) {   // if scheduler updates the Quietmode level then disable Quietmode\n    return [null,msg];                                          // pin2 to node \"if changed\"\n}\n\n\nif (msg.source === undefined) {\n    msg.source = \"GUI\";\n    global.set('MQTT_Source', \"GUI\");\n    } else { global.set('MQTT_Source', msg.source); }\n\nvar last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\nvar current_value   = global.get('Quiet_Mode_Level',\"file\");\n\nif (last_value === undefined || last_msgid === undefined){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return null;\n}\n\nif (last_msgid == msg._msgid){\n    return null;\n}\n\nif (msg.payload != current_value || msg.payload != last_value){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return msg;\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 240,
        "wires": [
            [
                "1041d65c575cae05"
            ],
            [
                "5be142bd732c8d96"
            ]
        ]
    },
    {
        "id": "e21920a5a6155306",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2270,
        "y": 320,
        "wires": [
            [
                "2810d417aa5c3457"
            ]
        ]
    },
    {
        "id": "1041d65c575cae05",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2270,
        "y": 240,
        "wires": [
            [
                "eeae40f40c5ecf87"
            ]
        ]
    },
    {
        "id": "367f1fc8966e2514",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "filter",
        "func": "if (msg.source === undefined) {\n    msg.source = \"GUI\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 300,
        "wires": [
            [
                "585e4d6a54d44021"
            ]
        ]
    },
    {
        "id": "aad17e70a817393e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "c3a9e17b02222cee"
        ],
        "x": 2635,
        "y": 160,
        "wires": []
    },
    {
        "id": "fca8ea8f1117c808",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "To Function RTC",
        "info": "",
        "x": 2740,
        "y": 160,
        "wires": []
    },
    {
        "id": "4673d329949e0652",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2060,
        "y": 100,
        "wires": [
            [
                "f6e0cc6687051bf1"
            ]
        ]
    },
    {
        "id": "9202d8b025b48df6",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "to update mqtt msg/dag label",
        "mode": "link",
        "links": [
            "2cc4d65eb692223b"
        ],
        "x": 1845,
        "y": 2180,
        "wires": []
    },
    {
        "id": "a938de76db0b71f6",
        "type": "tab",
        "label": "WP Control",
        "disabled": false,
        "info": "\n---\n\n"
    },
    {
        "id": "0077cf76d14c5757",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "2c893b32851ad2a2",
            "fa82488bbb78cd7c",
            "9ac43b3e57349093",
            "121250d0adaabb74",
            "bec0abeb65096b50",
            "16a78ece414b3c3f",
            "d812dc07d5eb627a",
            "2cbf5dc56d038900",
            "8f95cf0d80fef38e",
            "ea494b908a0574c7",
            "cbded61fe1f8bfa6",
            "93fa79b319daf34d",
            "9dad0ebe8e5b9c2a",
            "820cd8755edee724",
            "df752804bad7d4c9",
            "846a789dca74329d",
            "aa66f523450fd337",
            "6c127111459a7668",
            "3614cf0c48d0f160",
            "9285cfa754ee552e",
            "a861b75804a0978a",
            "a0d8b4706f8d61b1",
            "3b23831ccc3641c6",
            "b131edf180140fb6",
            "4ff74e2b48b1d597",
            "905527b22aae9dc8",
            "35ca9241fc9fc7a1",
            "12a26bbb7c8070d7",
            "aec0cb2b18e02d8b",
            "0771fea18659deea",
            "8ed91c4260d9b758",
            "7ce3c0d525800846",
            "46aa3584ebd4caad",
            "85919acf34d78bae",
            "609ce750edb0db2b",
            "8f6938d08a85ad26",
            "93eb54b8be16fd2c",
            "75ecf6650a5109d6",
            "a5dd53dd3d0d1b7f",
            "dd45b1caa253346b",
            "d54ac3b979428b64",
            "52945322ab63b965",
            "f34333d0f62bbd2d",
            "d69bd0a7c3dd5d4f",
            "bb8e93b0650250f5",
            "64a44fa6b9450bc7",
            "39aabf25524d867e",
            "3ec15c8e37ccda1b",
            "b9adf06497b1e231",
            "c57a81d1dee5b8a9",
            "62d663629483143e",
            "e5fb067144c27e1b",
            "ff3dd227527b76c3",
            "9de1bde370b68508",
            "b1b3e80155e49c5c",
            "8206cc922dc8874d",
            "170936d914847ac0",
            "8572da168a9397e1",
            "76803a7773afbef6",
            "3097c4184ba03f0b",
            "158cd656457b884a",
            "10ca1d93fdd1afe2",
            "a3180920b08e8108",
            "b9da2620c239be36",
            "aea8ceb9687abadf",
            "9e366042611cd253",
            "10068b1def52810f",
            "5053e21b4c187e48",
            "2063c96f1ba07327",
            "5f7b921ab9a4ce7c",
            "61ed1c56d1ec2c21",
            "7a30c0f0dbf50e03",
            "72ecd08129670f6d",
            "7ae9d386f40efb4d",
            "d613171223cb64d2",
            "303e9746fe17030f"
        ],
        "x": 154,
        "y": 1539,
        "w": 1422,
        "h": 1362
    },
    {
        "id": "5a496e1f1ea93a38",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "REQUIRED INPUTS FOR FUNCTIONS",
        "style": {
            "fill": "#ffffbf",
            "label": true,
            "stroke": "#ff0000"
        },
        "nodes": [
            "a22898dfdc4ff0ca",
            "6051d06bc75eda72",
            "014b79ca42e19493",
            "e9504e95fc5e9a19",
            "d6a9c376dde9c43f",
            "df9c3a6c0a51be9b",
            "219066f9a22a1c23",
            "b122913e258a4ec3",
            "e0563a18c1b95632",
            "9c94c9210206cd04",
            "0564f7a406df196e",
            "0fc49e124d4f36cf",
            "70aff6c79b777590",
            "f0b20c8165a68430",
            "10470efbce38731d",
            "9e0ae6aff4c599b2",
            "ae708cb35f6a5163",
            "ea89c213947bdf26",
            "a8d51c8773f8f17f",
            "2caf61fe8673aedb"
        ],
        "x": 154,
        "y": 79,
        "w": 1572,
        "h": 422
    },
    {
        "id": "cd2050a861736ec5",
        "type": "group",
        "z": "a938de76db0b71f6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9b245060787d2ecd",
            "ba4a12897a805cee",
            "a1e757cb1d79e3f9",
            "3472c99aef20f07f",
            "4f8c3c7d06c1b19a",
            "eda4721e720d1975",
            "8501242129d89e2c",
            "e8684c407d602e87",
            "f70b59196295efc0",
            "690250e7cb51c576",
            "695ce56812fda3d2",
            "12e43571a8c16fa2",
            "f4fadebd69120ccb",
            "a79fac04465c243e",
            "01744f1093a2fd51",
            "ab34ebcc109b74de",
            "10b4e15b0f3199ad",
            "283dd6b0185b554b",
            "cb2c4d61eeec2c6f",
            "1281e2b1451c301f",
            "e164eaa22e0fa1dc",
            "a25d1f5d91c84a33",
            "f9edb4875d3f2c5b",
            "9c4e9ed4c3ac1779",
            "4c1c4526944e820e",
            "c32298a87a338b1d",
            "5e35dee1374d6829",
            "78ddc73a94ec89be",
            "e11f7d8caf20dbba",
            "3fb7221a7218435a",
            "460a1a83313cfcc5",
            "8121e5bfa638e9ab",
            "58a904f891a8e2cc",
            "7caff8b1418d65da",
            "5f758eb9af24eb35",
            "bfcbe2fb120f457c",
            "0e3197d36afc45dc",
            "ca1f0fdf0dd05c89",
            "c5cba27eac8a70a2",
            "2c34d9f3299bef00",
            "5d952499e2fba893",
            "a628a3d5d7be0e8b",
            "fd08994eed1621be",
            "cd3f44853ed1a6cd",
            "a0d48945187b9bf6",
            "5023bec7ba5973f3",
            "ad6a84d6161eab48",
            "d7fdd42d981a2d7d",
            "a82dac1b05afcaac",
            "a815d38c5137d852",
            "a0f14e8ff8b7b008",
            "3bab99eab669bd21",
            "182df2f14a9ca82f",
            "ce9434fc05a5b849",
            "bf5c0eefd9f68f35",
            "d90d8243969aecef",
            "8f0e209ac14bdb9a",
            "0b10bc17b24896b7",
            "6c685782864f1787"
        ],
        "x": 144,
        "y": 2939,
        "w": 1172,
        "h": 982
    },
    {
        "id": "94f57429e16c8e82",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "COP calculation function",
        "style": {
            "label": true
        },
        "nodes": [
            "f4e55b938e645737",
            "43b60b667e5e5610",
            "306b69356454f3ff",
            "5787c91b303f2538"
        ],
        "x": 1644,
        "y": 1819,
        "w": 502,
        "h": 122
    },
    {
        "id": "b37318d1b7f66e33",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "NightReduction logic",
        "style": {
            "label": true
        },
        "nodes": [
            "5a629acf35a11cc1",
            "3151f56b9d086c84",
            "849bb02e7d0f4dfa",
            "e3c1faa5a1fb80c6",
            "3f05f1c6e437d5d3",
            "2b04b7dd5ea852f2",
            "f0b7868c48887de4",
            "b1dbfa8badec14e4",
            "4f05df9205955fba",
            "a852d7a03c2a4cb0",
            "038f578f8cc12163",
            "64489162c0113379",
            "d283d9a5d5181aed",
            "3a9f53d1ad6ec693",
            "0884ccad88528175",
            "c77c4767a9dd84f4",
            "6815e3004fa8b341",
            "db81c5d226a5dab3",
            "91bece54d7a13eb3",
            "afb8bfd949251c6c"
        ],
        "x": 134,
        "y": 3959,
        "w": 1362,
        "h": 302
    },
    {
        "id": "992121a08b66faa3",
        "type": "group",
        "z": "a938de76db0b71f6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e248409fb553d16c",
            "914dbce5e778229e",
            "472cd4f84e3e8b1d",
            "36f8eea1b3a6c839",
            "5b8f3786bc1abbb1",
            "c5060d82a2dec953",
            "2649d773ad06b50d",
            "2a06d5d8012e9ce7",
            "f6ed813fba6b5c87",
            "7c9af6a20115c38e",
            "dee73ffd96da5786",
            "13909c8cd33f26ef",
            "1cf37ff9fa4fc42b",
            "6c93a57f910e03c2",
            "de3a55570f77aeb2",
            "f0ae9eea42cf90ea",
            "25041e53f134e3fb",
            "158b8983b1dd0aa9",
            "25323c5d6bbdbebe",
            "79d819b649cddcfb",
            "467ba90fcd17c451",
            "f5ccbd22c1c9fe22",
            "6fc958da73fbdf09",
            "4dfb2312d5cb06d5",
            "f2aa79821dfd1110",
            "1d63998e541e4d5a",
            "dea135ecc9872411",
            "f13532d971be853e",
            "b665e9aa13d44f8e",
            "6a50ef63d9d35647",
            "0e8ca4bb561b59ed",
            "497a87221c5618c5",
            "6b2644c3a510f50f",
            "b43820fd5a21f4e7"
        ],
        "x": 2338,
        "y": 53,
        "w": 1968,
        "h": 888
    },
    {
        "id": "7987a450598985bb",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "Panasonic internal WAR > Node Red WAR",
        "style": {
            "label": true
        },
        "nodes": [
            "1055c816d0b21553",
            "4f0447af5e532d6f",
            "91e1151b60bc9a35",
            "dc036a2e660127ec",
            "5e56ba56cb2fd474",
            "246757b0d4390b0d",
            "87bd21b4647187d2",
            "123d7b6352639620",
            "b46cfcf8ce6d8f91",
            "b758728ae007c639",
            "ab60719365f6bde0",
            "8944d416f44e4183",
            "fde418209aab6a87",
            "9005e7a87f86a06e",
            "dfd98e02f46447fb",
            "c0a54684ef46f711",
            "07bfc2f9f00870d7"
        ],
        "x": 64,
        "y": 4439,
        "w": 1132,
        "h": 302
    },
    {
        "id": "1d8b21349d38bc85",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "WAR import/export",
        "style": {
            "label": true
        },
        "nodes": [
            "3a027c0cd9f8a957",
            "1acb7989b3df5970",
            "fa6cbe3250ca3abf",
            "c5bf8e25eda73442",
            "156858ac3d8408dd",
            "c4d5d436d1a4b0e4",
            "f70eae138246bae0",
            "4af0ddb4ff3ccf32",
            "418e761f03c6c9cd",
            "88e74ca7c5982d24",
            "b1bc9035edfd596b",
            "ae97f18776a1de28"
        ],
        "x": 1234,
        "y": 4439,
        "w": 1132,
        "h": 162
    },
    {
        "id": "d2b7e1d6e85a96cf",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "FUNCTIONS",
        "style": {
            "fill": "#ffbfbf",
            "fill-opacity": "0.75",
            "label": true
        },
        "nodes": [
            "d593fd3f7b87de1c",
            "90ec77dc04772b5c",
            "3c0adb2ef465094a",
            "d44ff20770c3e9a1",
            "3f0803a3a230aca2",
            "899964bbc5334847",
            "126583bf986bb2c7",
            "92b75262811f09f9",
            "44d83d4e58d63689",
            "add6fa4d403dd143",
            "8b1072427fdbc1e0",
            "4e9f98728f7e93f3",
            "e340492700d3f5b3",
            "16054e8334890ad8",
            "d16f38ef74db786a",
            "18fd7ac120089042",
            "93404b62f7fb0fb2",
            "34cc66e23b5eec55",
            "663fd79ce5a1610d",
            "c54efadb07816cb9",
            "b36e73e43970dc7c",
            "04af9373e9f7a428",
            "5dc94533cb5cb4d7",
            "af810463b7f5e825",
            "e7cdb0bd6ae8b198",
            "e9d9dc531d3b166d",
            "4369249a4c68c277",
            "51526ab18642b30b",
            "38ef77936170789f",
            "3a7f1334a9422bd3",
            "02792d9ac26ffc27",
            "346a3528a7770803",
            "fab44b5501eca10e",
            "fd481458ee82463b",
            "c477f38740192ea9",
            "7bd31985b9223517",
            "cc0bfd5240e5cd1c",
            "50d7d63eec1f72e1",
            "eca1e570e844713e",
            "65e47b8ca0c36fca",
            "36856525108ec859",
            "c3a9e17b02222cee",
            "bedbded591fa9076",
            "d4cd561c0ac4473e",
            "ac55192973591af6",
            "4051d3cb1ad86dbd",
            "0ccf5d93deef2e68",
            "4c81e32b9d30b212",
            "549c557827b37714",
            "0d996033de2ed84e",
            "2ade66982bca360c",
            "c5506b5fe3e4d571",
            "cb987aa12172f46f",
            "4223b24f5dc06d8e",
            "b19026440632f6e1",
            "b7b7a74af61be9e8",
            "987d38642eaa3c4c",
            "56dc48f96b44ec8e",
            "7c6f02c851467bc0",
            "b4fb9f63c90d4afb",
            "0f365a79d7e2857d",
            "d8a6057be4ca32cd",
            "d53e66c37991fa8e",
            "1cbf3f3272baec48",
            "1a9b736187a463f7",
            "148fdf6802233c77",
            "1b409e1ea72f94dd",
            "7ddd3f5d8f76897e",
            "2f5e3d38d1cdd9b2",
            "823ef896afa239af",
            "7fafbc0171abf5e3",
            "dc59e4105ac39717",
            "1bf606367c4ff65f",
            "e81634fb88703859",
            "5e9da82d3dfe26da",
            "398d29ed6f37b424",
            "2695bccfb69a52d5",
            "0cde3fce7ebc5dce",
            "2c5b52fee866e46a",
            "c86e3d7ad005b93a"
        ],
        "x": 144,
        "y": 619,
        "w": 2102,
        "h": 882
    },
    {
        "id": "f2aa79821dfd1110",
        "type": "group",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Relative humidity > Dewpoint calculation",
        "style": {
            "label": true
        },
        "nodes": [
            "2bb5988706fb572a",
            "37a369fd9ad03085",
            "0df0e84326dbeec7",
            "cdd89d5c10c71407",
            "030fbd5026e5a295",
            "7122d217051222ff"
        ],
        "x": 2364,
        "y": 79,
        "w": 1182,
        "h": 162
    },
    {
        "id": "2c893b32851ad2a2",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP0 - panasonic_heat_pump/main/Heatpump_State",
        "topic": "panasonic_heat_pump/main/Heatpump_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 500,
        "y": 1700,
        "wires": [
            [
                "2063c96f1ba07327"
            ]
        ]
    },
    {
        "id": "fa82488bbb78cd7c",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP1 - panasonic_heat_pump/main/Pump_Flow",
        "topic": "panasonic_heat_pump/main/Pump_Flow",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 520,
        "y": 1760,
        "wires": [
            [
                "ea494b908a0574c7"
            ]
        ]
    },
    {
        "id": "9ac43b3e57349093",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP2 - panasonic_heat_pump/main/Force_DHW_State",
        "topic": "panasonic_heat_pump/main/Force_DHW_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 500,
        "y": 1820,
        "wires": [
            [
                "df752804bad7d4c9"
            ]
        ]
    },
    {
        "id": "121250d0adaabb74",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP5 - panasonic_heat_pump/main/Main_Inlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Inlet_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 500,
        "y": 1940,
        "wires": [
            [
                "d613171223cb64d2"
            ]
        ]
    },
    {
        "id": "bec0abeb65096b50",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP6 - panasonic_heat_pump/main/Main_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Outlet_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 500,
        "y": 2000,
        "wires": [
            [
                "303e9746fe17030f"
            ]
        ]
    },
    {
        "id": "16a78ece414b3c3f",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP4 - panasonic_heat_pump/main/Operating_Mode_State",
        "topic": "panasonic_heat_pump/main/Operating_Mode_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 1880,
        "wires": [
            [
                "9e366042611cd253",
                "4ff74e2b48b1d597"
            ]
        ]
    },
    {
        "id": "d812dc07d5eb627a",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP20 - panasonic_heat_pump/main/ThreeWay_Valve_State",
        "topic": "panasonic_heat_pump/main/ThreeWay_Valve_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 2120,
        "wires": [
            [
                "6c127111459a7668"
            ]
        ]
    },
    {
        "id": "2cbf5dc56d038900",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP70 - panasonic_heat_pump/main/Sterilization_Temp",
        "topic": "panasonic_heat_pump/main/Sterilization_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 490,
        "y": 2300,
        "wires": [
            [
                "a861b75804a0978a"
            ]
        ]
    },
    {
        "id": "8f95cf0d80fef38e",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP69 - panasonic_heat_pump/main/Sterilization_State",
        "topic": "panasonic_heat_pump/main/Sterilization_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 500,
        "y": 2240,
        "wires": [
            [
                "93fa79b319daf34d"
            ]
        ]
    },
    {
        "id": "62d663629483143e",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Read values from Heishamon and put them in global variables and link out",
        "info": "",
        "x": 520,
        "y": 1580,
        "wires": []
    },
    {
        "id": "ea494b908a0574c7",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 1760,
        "wires": [
            [
                "820cd8755edee724"
            ]
        ]
    },
    {
        "id": "cbded61fe1f8bfa6",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 2180,
        "wires": [
            [
                "3614cf0c48d0f160"
            ]
        ]
    },
    {
        "id": "93fa79b319daf34d",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 2240,
        "wires": [
            [
                "9285cfa754ee552e"
            ]
        ]
    },
    {
        "id": "9dad0ebe8e5b9c2a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Heatpump_State",
        "func": "var VirtualState = global.get('VirtualState');\n\nvar Heatpump_State = global.get('Heatpump_State',\"file\");\n\nif (Heatpump_State != msg.payload)\n{\n    msg.topic = 'Heatpump_State';\n    global.set('Heatpump_State',msg.payload,\"file\");\n\n    let msg99={};\n    msg99.topic = '[Debug]';\n    msg99.payload = 'Real Heatpump_State = ' + msg.payload + ', VirtualState = ' + VirtualState;\n    \n    //return msg99;           <----for debugging to log\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1620,
        "wires": [
            [
                "5f7b921ab9a4ce7c"
            ]
        ],
        "outputLabels": [
            "original payload from mqtt topic"
        ]
    },
    {
        "id": "820cd8755edee724",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Pump_Flow",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Pump_Flow';\nglobal.set(\"Pump_Flow\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1760,
        "wires": [
            [
                "3b23831ccc3641c6"
            ]
        ]
    },
    {
        "id": "df752804bad7d4c9",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Force_DHW_State",
        "func": "var current = global.get(\"Force_DHW_State\");\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Force_DHW_State';\n\nif (current != msg.payload)\n{\n    global.set(\"Force_DHW_State\",msg.payload);\n    return msg;\n}\n\nelse\n{\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1820,
        "wires": [
            [
                "b131edf180140fb6"
            ]
        ]
    },
    {
        "id": "846a789dca74329d",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Operating_Mode_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Operating_Mode_State';\nglobal.set(\"Operating_Mode_State\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "aa66f523450fd337",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Target_Z1_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Main_Target_Temp';\nglobal.set(\"Main_Target_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2060,
        "wires": [
            [
                "12a26bbb7c8070d7"
            ]
        ]
    },
    {
        "id": "6c127111459a7668",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.ThreeWay_Valve_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'ThreeWay_Valve_State';\nglobal.set(\"ThreeWay_Valve_State\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2120,
        "wires": [
            [
                "aec0cb2b18e02d8b"
            ]
        ]
    },
    {
        "id": "3614cf0c48d0f160",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Quiet_Mode_Level",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Quiet_Mode_Level';\nglobal.set(\"Quiet_Mode_Level\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2180,
        "wires": [
            [
                "0771fea18659deea"
            ]
        ]
    },
    {
        "id": "9285cfa754ee552e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Sterilization_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Sterilization_State';\nglobal.set(\"Sterilization_State\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2240,
        "wires": [
            [
                "8ed91c4260d9b758"
            ]
        ]
    },
    {
        "id": "a861b75804a0978a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Sterilization_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Sterilization_Temp';\nglobal.set(\"Sterilization_Temp\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2300,
        "wires": [
            [
                "7ce3c0d525800846"
            ]
        ]
    },
    {
        "id": "a0d8b4706f8d61b1",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "to Shutdown detection",
        "mode": "link",
        "links": [
            "e5ee81fbd045b5ef"
        ],
        "x": 1535,
        "y": 1700,
        "wires": []
    },
    {
        "id": "3b23831ccc3641c6",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Pump_Flow",
        "links": [
            "43b60b667e5e5610",
            "5d54922367195a62",
            "5eef2d3a1816ae18"
        ],
        "x": 1535,
        "y": 1760,
        "wires": []
    },
    {
        "id": "b131edf180140fb6",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Force_DHW_State",
        "links": [
            "5eef2d3a1816ae18",
            "5f3bf84b25568561"
        ],
        "x": 1535,
        "y": 1820,
        "wires": []
    },
    {
        "id": "4ff74e2b48b1d597",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Operating_Mode_State",
        "links": [
            "5eef2d3a1816ae18",
            "5f3bf84b25568561",
            "702993e29cd93413"
        ],
        "x": 1535,
        "y": 1880,
        "wires": []
    },
    {
        "id": "905527b22aae9dc8",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Main_Inlet_Temp",
        "links": [
            "1d97c2a9ed08db30",
            "43b60b667e5e5610",
            "5eef2d3a1816ae18"
        ],
        "x": 1535,
        "y": 1940,
        "wires": []
    },
    {
        "id": "35ca9241fc9fc7a1",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Main_Outlet_Temp",
        "links": [
            "43b60b667e5e5610",
            "5eef2d3a1816ae18",
            "9dc0d35330d31725",
            "18262dc9129cb370",
            "126583bf986bb2c7"
        ],
        "x": 1535,
        "y": 2000,
        "wires": []
    },
    {
        "id": "12a26bbb7c8070d7",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Main_Target_Temp",
        "links": [
            "024bef9dc12b8273",
            "5eef2d3a1816ae18",
            "9164505967cf30be"
        ],
        "x": 1535,
        "y": 2060,
        "wires": []
    },
    {
        "id": "aec0cb2b18e02d8b",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "ThreeWay_Valve_State",
        "links": [
            "5eef2d3a1816ae18",
            "6bdcf84066368733",
            "b51f6522ce8b3103",
            "5f3bf84b25568561",
            "32693e0b1629f74a",
            "7c9af6a20115c38e"
        ],
        "x": 1535,
        "y": 2120,
        "wires": []
    },
    {
        "id": "0771fea18659deea",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Quiet_Mode_Level",
        "links": [
            "5eef2d3a1816ae18",
            "5f3bf84b25568561"
        ],
        "x": 1535,
        "y": 2180,
        "wires": []
    },
    {
        "id": "8ed91c4260d9b758",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Sterilization_State",
        "links": [
            "5eef2d3a1816ae18",
            "5f3bf84b25568561"
        ],
        "x": 1535,
        "y": 2240,
        "wires": []
    },
    {
        "id": "7ce3c0d525800846",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Sterilization_Temp",
        "links": [
            "5eef2d3a1816ae18",
            "6366ce3358b65976"
        ],
        "x": 1535,
        "y": 2300,
        "wires": []
    },
    {
        "id": "46aa3584ebd4caad",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "links": [
            "e17b09af13812496"
        ],
        "x": 675,
        "y": 2360,
        "wires": [
            [
                "aea8ceb9687abadf",
                "10068b1def52810f"
            ]
        ]
    },
    {
        "id": "85919acf34d78bae",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.WoonkamerSP",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'WoonkamerSP';\nglobal.set(\"WoonkamerSP\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2360,
        "wires": [
            [
                "64a44fa6b9450bc7"
            ]
        ]
    },
    {
        "id": "a22898dfdc4ff0ca",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T_woonkamer_BT",
        "links": [
            "5eef2d3a1816ae18",
            "ea8203d2d9d4529b",
            "02f25651d70831c9",
            "13ef5341a6b8f4e8",
            "899964bbc5334847",
            "ecbb543ba37d9962"
        ],
        "x": 1685,
        "y": 460,
        "wires": []
    },
    {
        "id": "609ce750edb0db2b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP9 - panasonic_heat_pump/main/DHW_Target_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Target_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 490,
        "y": 2420,
        "wires": [
            [
                "93eb54b8be16fd2c"
            ]
        ]
    },
    {
        "id": "8f6938d08a85ad26",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP10 - panasonic_heat_pump/main/DHW_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 2480,
        "wires": [
            [
                "a5dd53dd3d0d1b7f"
            ]
        ]
    },
    {
        "id": "93eb54b8be16fd2c",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 2420,
        "wires": [
            [
                "75ecf6650a5109d6"
            ]
        ]
    },
    {
        "id": "75ecf6650a5109d6",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.DHW_Target_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'DHW_Target_Temp';\nglobal.set(\"DHW_Target_Temp\",msg.payload,\"file\");\n\n\nvar SolarFunction_active = global.get('SolarFunction_active',\"file\");\nif (SolarFunction_active == 1) \n    {\n        global.set(\"DHW_SP_LOW\",msg.payload,\"file\");\n    }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2420,
        "wires": [
            [
                "dd45b1caa253346b"
            ]
        ]
    },
    {
        "id": "a5dd53dd3d0d1b7f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.DHW_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'DHW_Temp';\nglobal.set(\"DHW_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2480,
        "wires": [
            [
                "d54ac3b979428b64"
            ]
        ]
    },
    {
        "id": "dd45b1caa253346b",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "DHW_Target_Temp",
        "mode": "link",
        "links": [
            "473053520368f99d"
        ],
        "x": 1535,
        "y": 2420,
        "wires": []
    },
    {
        "id": "d54ac3b979428b64",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "DHW_Temp",
        "links": [
            "4cfdc172228a42bb",
            "5eef2d3a1816ae18",
            "992b1344cc8fd4eb",
            "c6997c53221fb9a0"
        ],
        "x": 1535,
        "y": 2480,
        "wires": []
    },
    {
        "id": "52945322ab63b965",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Source: Panasonic MQTT",
        "info": "",
        "x": 410,
        "y": 1660,
        "wires": []
    },
    {
        "id": "f34333d0f62bbd2d",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "TOP29 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 440,
        "y": 2540,
        "wires": [
            [
                "39aabf25524d867e"
            ]
        ]
    },
    {
        "id": "d69bd0a7c3dd5d4f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "set.Z1_Heat_Curve_Target_High_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Z1_Heat_Curve_Target_High_Temp';\nglobal.set(\"Z1_Heat_Curve_Target_High_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 2540,
        "wires": [
            [
                "bb8e93b0650250f5"
            ]
        ]
    },
    {
        "id": "bb8e93b0650250f5",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "Z1_Heat_Curve_Target_High_Temp",
        "links": [],
        "x": 1535,
        "y": 2540,
        "wires": []
    },
    {
        "id": "64a44fa6b9450bc7",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "WoonkamerSP_custom",
        "mode": "link",
        "links": [
            "02f25651d70831c9"
        ],
        "x": 1535,
        "y": 2360,
        "wires": []
    },
    {
        "id": "39aabf25524d867e",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 2540,
        "wires": [
            [
                "d69bd0a7c3dd5d4f"
            ]
        ]
    },
    {
        "id": "3ec15c8e37ccda1b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "topic": "panasonic_heat_pump/main/Compressor_Freq",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 500,
        "y": 2600,
        "wires": [
            [
                "b9adf06497b1e231"
            ]
        ]
    },
    {
        "id": "b9adf06497b1e231",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.compressor_frequency",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'compressor_frequency';\nglobal.set(\"compressor_frequency\",msg.payload,\"file\");\nglobal.set(\"compressor_frequency\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2600,
        "wires": [
            [
                "c57a81d1dee5b8a9"
            ]
        ]
    },
    {
        "id": "c57a81d1dee5b8a9",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "mode": "link",
        "links": [
            "126583bf986bb2c7",
            "1daf8c5944f23d71",
            "f3ab44f6bb3c013a",
            "32c013973096ab65",
            "73a3b137b4661912"
        ],
        "x": 1535,
        "y": 2600,
        "wires": []
    },
    {
        "id": "f4e55b938e645737",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "COP_calculated",
        "func": "var runtime =   global.get('compressor_runtime', \"file\");                                    // Get the global variable for absorbed energy of the heatpump\nif (runtime === undefined || runtime < 2)    {\n    return null;\n}\n\nelse    {                                                                               // if not, continue.\n        var Main_Outlet_Temp=global.get('Main_Outlet_Temp');                            // Get the global variable for water Outlet temperature\n        var Main_Inlet_Temp=global.get('Main_Inlet_Temp');                              // Get the global variable for water inlet temperature\n        var Pump_Flow=global.get('Pump_Flow');                                          // Get the global variable for water flow\n        var Energy_Consumption;                                                         // declare variable\n        var Heat_Energy_Consumption;                                                    // declare variable\n        var COP_calculated;                                                             // declare variable\n        var Watt_heat_c;                                                                // declare variable\n        var ThreeWay_Valve_State=global.get('ThreeWay_Valve_State');                    // Get the global variable for 3-way valve position.   0=HEAT / 1=DHW\n        \n        if (ThreeWay_Valve_State == 0){\n                Energy_Consumption = global.get('Heat_Energy_Consumption');             // Get the global variable for absorbed energy of the heatpump heat\n                if (Energy_Consumption === undefined || isNaN(Energy_Consumption) === true) {\n                    Heat_Energy_Consumption = 0;\n                    return null;\n                }\n        }\n        \n        if (ThreeWay_Valve_State == 1){\n                Energy_Consumption = global.get('DHW_Energy_Consumption');       // Get the global variable for absorbed energy of the heatpump dhw\n                if (Energy_Consumption === undefined || isNaN(Energy_Consumption) === true) {\n                    Heat_Energy_Consumption = 0;\n                    return null;\n                }\n        }\n                \n                \n        let msg1={}, msg2={};\n        //**********************************************************************\n        if (ThreeWay_Valve_State == 0 && Main_Outlet_Temp !== undefined && Main_Inlet_Temp !== undefined && Pump_Flow !== undefined && Energy_Consumption != 0){    //  HEAT mode\n\n            Watt_heat_c             = (Main_Outlet_Temp - Main_Inlet_Temp) * 4.187 * (Pump_Flow / 60) * 1000;\n            \n            COP_calculated          = Watt_heat_c / Energy_Consumption;\n            msg1.payload            = COP_calculated\n            msg1.topic              = \"COP_HEAT\";\n            msg1.payload            = Number(msg1.payload).toFixed(2);\n            msg1.payload            = parseFloat(msg1.payload);\n            global.set('COP_HEAT', msg1.payload);\n\n            if (msg1.payload > 0) {\n                return [msg1,null];\n            }\n            if (msg1.payload === undefined){\n                return [null,null];\n            }\n            else {\n                msg1.payload = 0;\n                return [msg1,null];\n            }\n            \n        }\n            \n        //**********************************************************************\n        if (ThreeWay_Valve_State == 1 && Main_Outlet_Temp !== undefined && Main_Inlet_Temp !== undefined && Pump_Flow !== undefined && Energy_Consumption != 0)    // DHW mode\n            {\n                \n                Watt_heat_c             = (Main_Outlet_Temp - Main_Inlet_Temp) * 4.187 * (Pump_Flow / 60) * 1000;\n                COP_calculated          = Watt_heat_c / Energy_Consumption;\n                msg2.payload            = COP_calculated\n                msg2.topic              = \"COP_DHW\";\n                msg2.payload            = Number(msg2.payload).toFixed(2);\n                msg2.payload            = parseFloat(msg2.payload);\n                global.set('COP_DHW', msg2.payload );\n                \n                if (msg2.payload > 0) {\n                    return [null,msg2];\n                }\n                if (msg2.payload === undefined){\n                    return [null,null];\n                }\n                else    {\n                    msg2.payload = 0;\n                    return [null,msg2];\n                }\n        }\n}    ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1880,
        "wires": [
            [
                "306b69356454f3ff"
            ],
            [
                "5787c91b303f2538"
            ]
        ],
        "outputLabels": [
            "COP HEAT [-]",
            "COP DHW [-]"
        ]
    },
    {
        "id": "e5fb067144c27e1b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP16 - panasonic_heat_pump/main/Heat_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Consumption",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 2660,
        "wires": [
            [
                "ff3dd227527b76c3"
            ]
        ]
    },
    {
        "id": "ff3dd227527b76c3",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Heat_Energy_Consumption",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Heat_Energy_Consumption';\nglobal.set(\"Heat_Energy_Consumption\",msg.payload,);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2660,
        "wires": [
            [
                "9de1bde370b68508"
            ]
        ]
    },
    {
        "id": "9de1bde370b68508",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Heat_Energy_Consumption",
        "mode": "link",
        "links": [
            "8627726ba882e493",
            "b7d8864b9b2d4308",
            "6a7fa8b57f2d9800",
            "e6ea853dc5ace9bb",
            "857891f927155d13",
            "54ee6a2c638d4db0",
            "35439402440fe5ce",
            "a0189b7182dca441",
            "4fd3947f1f3ca1e1",
            "4f2af928ceac2afd",
            "b24f95487a5295cb"
        ],
        "x": 1535,
        "y": 2660,
        "wires": []
    },
    {
        "id": "43b60b667e5e5610",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "",
        "links": [
            "35ca9241fc9fc7a1",
            "3b23831ccc3641c6",
            "905527b22aae9dc8"
        ],
        "x": 1685,
        "y": 1880,
        "wires": [
            [
                "f4e55b938e645737"
            ]
        ]
    },
    {
        "id": "306b69356454f3ff",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "COP HEAT",
        "mode": "link",
        "links": [
            "ad2577846265e4ee",
            "fe8e23b8971b868e"
        ],
        "x": 2105,
        "y": 1860,
        "wires": []
    },
    {
        "id": "6051d06bc75eda72",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "TOP33 - panasonic_heat_pump/main/Room_Thermostat_Temp",
        "topic": "panasonic_heat_pump/main/Room_Thermostat_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 440,
        "y": 460,
        "wires": [
            [
                "2caf61fe8673aedb"
            ]
        ]
    },
    {
        "id": "014b79ca42e19493",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "CONNECT >> Custom sensor - livingroom temperature",
        "links": [
            "5b8382118c6c3e1e"
        ],
        "x": 390,
        "y": 380,
        "wires": [
            [
                "10470efbce38731d",
                "ae708cb35f6a5163"
            ]
        ],
        "l": true
    },
    {
        "id": "e9504e95fc5e9a19",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "You can use your own custom external sensors",
        "info": "",
        "x": 370,
        "y": 120,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "d6a9c376dde9c43f",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T_outside",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "4051d3cb1ad86dbd"
        ],
        "x": 935,
        "y": 200,
        "wires": []
    },
    {
        "id": "df9c3a6c0a51be9b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "TOP14 - panasonic_heat_pump/main/Outside_Temp",
        "topic": "panasonic_heat_pump/main/Outside_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 200,
        "wires": [
            [
                "a8d51c8773f8f17f"
            ]
        ]
    },
    {
        "id": "219066f9a22a1c23",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "CONNECT >> Custom sensor - outside temperature",
        "links": [
            "3a1c7ae1443e0666"
        ],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "a8d51c8773f8f17f"
            ]
        ],
        "l": true
    },
    {
        "id": "9b245060787d2ecd",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3040,
        "wires": [
            [
                "ba4a12897a805cee"
            ]
        ]
    },
    {
        "id": "ba4a12897a805cee",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.PumpMaxFlowSetting",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'PumpMaxFlowSetting';\nglobal.set(\"F_ReducePumpSpeed.PumpMaxFlowSetting\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "a1e757cb1d79e3f9",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [],
        "x": 655,
        "y": 3020,
        "wires": [
            [
                "9b245060787d2ecd"
            ]
        ]
    },
    {
        "id": "3472c99aef20f07f",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3100,
        "wires": [
            [
                "4f8c3c7d06c1b19a"
            ]
        ]
    },
    {
        "id": "4f8c3c7d06c1b19a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.HolidayMode",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HolidayMode';\nglobal.set(\"HolidayMode\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "eda4721e720d1975",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3160,
        "wires": [
            [
                "8501242129d89e2c"
            ]
        ]
    },
    {
        "id": "8501242129d89e2c",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.PowerfulMode",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'PowerfulMode';\nglobal.set(\"PowerfulMode\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "e8684c407d602e87",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "bdb7e8e0217cec66"
        ],
        "x": 655,
        "y": 3080,
        "wires": [
            [
                "3472c99aef20f07f"
            ]
        ]
    },
    {
        "id": "f70b59196295efc0",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "979c5ca99c054740"
        ],
        "x": 655,
        "y": 3140,
        "wires": [
            [
                "eda4721e720d1975"
            ]
        ]
    },
    {
        "id": "690250e7cb51c576",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3220,
        "wires": [
            [
                "695ce56812fda3d2"
            ]
        ]
    },
    {
        "id": "695ce56812fda3d2",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.ForceDHW",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'ForceDHW';\nglobal.set(\"ForceDHW\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "12e43571a8c16fa2",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "092a9db0d9b923b3"
        ],
        "x": 195,
        "y": 3220,
        "wires": [
            [
                "690250e7cb51c576"
            ]
        ]
    },
    {
        "id": "f4fadebd69120ccb",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3280,
        "wires": [
            [
                "a79fac04465c243e"
            ]
        ]
    },
    {
        "id": "a79fac04465c243e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.ForceDefrost",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'ForceDefrost';\nglobal.set(\"ForceDefrost\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 3280,
        "wires": [
            [
                "6c685782864f1787"
            ]
        ]
    },
    {
        "id": "01744f1093a2fd51",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "5e3a9447502864ad"
        ],
        "x": 655,
        "y": 3260,
        "wires": [
            [
                "f4fadebd69120ccb"
            ]
        ]
    },
    {
        "id": "ab34ebcc109b74de",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3340,
        "wires": [
            [
                "10b4e15b0f3199ad"
            ]
        ]
    },
    {
        "id": "10b4e15b0f3199ad",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.SetZones",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'SetZones';\nglobal.set(\"SetZones\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "283dd6b0185b554b",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3400,
        "wires": [
            [
                "cb2c4d61eeec2c6f"
            ]
        ]
    },
    {
        "id": "cb2c4d61eeec2c6f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.FloorHeatDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'FloorHeatDelta';\nglobal.set(\"FloorHeatDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "1281e2b1451c301f",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3520,
        "wires": [
            [
                "e164eaa22e0fa1dc",
                "bf5c0eefd9f68f35"
            ]
        ]
    },
    {
        "id": "e164eaa22e0fa1dc",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.FloorCoolDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'FloorCoolDelta';\nglobal.set(\"FloorCoolDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "a25d1f5d91c84a33",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3580,
        "wires": [
            [
                "f9edb4875d3f2c5b"
            ]
        ]
    },
    {
        "id": "f9edb4875d3f2c5b",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.DHWHeatDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'DHWHeatDelta';\nglobal.set(\"DHWHeatDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3580,
        "wires": [
            []
        ]
    },
    {
        "id": "9c4e9ed4c3ac1779",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "2ed9d626c929fb95"
        ],
        "x": 655,
        "y": 3320,
        "wires": [
            [
                "ab34ebcc109b74de"
            ]
        ]
    },
    {
        "id": "4c1c4526944e820e",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "9b2a45a90495e067"
        ],
        "x": 655,
        "y": 3380,
        "wires": [
            [
                "283dd6b0185b554b"
            ]
        ]
    },
    {
        "id": "c32298a87a338b1d",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "7139256ff024b872"
        ],
        "x": 655,
        "y": 3500,
        "wires": [
            [
                "1281e2b1451c301f"
            ]
        ]
    },
    {
        "id": "5e35dee1374d6829",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "c803b9ad018fe78e"
        ],
        "x": 655,
        "y": 3560,
        "wires": [
            [
                "a25d1f5d91c84a33"
            ]
        ]
    },
    {
        "id": "78ddc73a94ec89be",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3640,
        "wires": [
            [
                "e11f7d8caf20dbba"
            ]
        ]
    },
    {
        "id": "e11f7d8caf20dbba",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.HeaterDelayTime",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HeaterDelayTime';\nglobal.set(\"HeaterDelayTime\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 3640,
        "wires": [
            []
        ]
    },
    {
        "id": "3fb7221a7218435a",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3700,
        "wires": [
            [
                "460a1a83313cfcc5"
            ]
        ]
    },
    {
        "id": "460a1a83313cfcc5",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.HeaterStartDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HeaterStartDelta';\nglobal.set(\"HeaterStartDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "8121e5bfa638e9ab",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3760,
        "wires": [
            [
                "58a904f891a8e2cc"
            ]
        ]
    },
    {
        "id": "58a904f891a8e2cc",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.HeaterStopDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HeaterStopDelta';\nglobal.set(\"HeaterStopDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 3760,
        "wires": [
            []
        ]
    },
    {
        "id": "7caff8b1418d65da",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3820,
        "wires": [
            [
                "5f758eb9af24eb35"
            ]
        ]
    },
    {
        "id": "5f758eb9af24eb35",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.PanasonicMainScheduler",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'PanasonicMainScheduler';\nglobal.set(\"PanasonicMainScheduler\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 3820,
        "wires": [
            []
        ]
    },
    {
        "id": "bfcbe2fb120f457c",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "4021cdadbdc7768d"
        ],
        "x": 655,
        "y": 3620,
        "wires": [
            [
                "78ddc73a94ec89be"
            ]
        ]
    },
    {
        "id": "0e3197d36afc45dc",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "78816343589b199a"
        ],
        "x": 655,
        "y": 3680,
        "wires": [
            [
                "3fb7221a7218435a"
            ]
        ]
    },
    {
        "id": "ca1f0fdf0dd05c89",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "a2d7de4325e4bf91"
        ],
        "x": 655,
        "y": 3740,
        "wires": [
            [
                "8121e5bfa638e9ab"
            ]
        ]
    },
    {
        "id": "c5cba27eac8a70a2",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "089ba42c8f7f7a61"
        ],
        "x": 655,
        "y": 3800,
        "wires": [
            [
                "7caff8b1418d65da"
            ]
        ]
    },
    {
        "id": "2c34d9f3299bef00",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "Put settings from GUI - DASH into variables",
        "info": "",
        "x": 450,
        "y": 2980,
        "wires": []
    },
    {
        "id": "b1b3e80155e49c5c",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "",
        "links": [
            "14327004637e05c7",
            "cb924439a66154f1"
        ],
        "x": 235,
        "y": 2180,
        "wires": [
            [
                "cbded61fe1f8bfa6"
            ]
        ]
    },
    {
        "id": "5d952499e2fba893",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.SetForceSterilization",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'SetForceSterilization';\nglobal.set(\"SetForceSterilization\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 3880,
        "wires": [
            []
        ]
    },
    {
        "id": "a628a3d5d7be0e8b",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "0a683587ca4fc25c"
        ],
        "x": 195,
        "y": 3880,
        "wires": [
            [
                "5d952499e2fba893"
            ]
        ]
    },
    {
        "id": "8206cc922dc8874d",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "links": [
            "9fcae1bec983aa1f"
        ],
        "x": 255,
        "y": 2800,
        "wires": [
            [
                "8572da168a9397e1"
            ]
        ]
    },
    {
        "id": "170936d914847ac0",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "links": [
            "887a43d150c20eb2"
        ],
        "x": 255,
        "y": 2860,
        "wires": [
            [
                "76803a7773afbef6"
            ]
        ]
    },
    {
        "id": "8572da168a9397e1",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.HEAT_SP_lower_limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HEAT_SP_lower_limit';\nglobal.set(\"HEAT_SP_lower_limit\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "76803a7773afbef6",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.HEAT_SP_upper_limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HEAT_SP_upper_limit';\nglobal.set(\"HEAT_SP_upper_limit\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "a0d48945187b9bf6",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP98 - panasonic_heat_pump/main/Heater_Stop_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Stop_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 3760,
        "wires": [
            [
                "8121e5bfa638e9ab"
            ]
        ]
    },
    {
        "id": "cd3f44853ed1a6cd",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP97 - panasonic_heat_pump/main/Heater_Start_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Start_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 3700,
        "wires": [
            [
                "3fb7221a7218435a"
            ]
        ]
    },
    {
        "id": "fd08994eed1621be",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP96 - panasonic_heat_pump/main/Heater_Delay_Time",
        "topic": "panasonic_heat_pump/main/Heater_Delay_Time",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 3640,
        "wires": [
            [
                "78ddc73a94ec89be"
            ]
        ]
    },
    {
        "id": "5023bec7ba5973f3",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP22 - panasonic_heat_pump/main/DHW_Heat_Delta",
        "topic": "panasonic_heat_pump/main/DHW_Heat_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 3580,
        "wires": [
            [
                "a25d1f5d91c84a33"
            ]
        ]
    },
    {
        "id": "ad6a84d6161eab48",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP23 - panasonic_heat_pump/main/Heat_Delta",
        "topic": "panasonic_heat_pump/main/Heat_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 3400,
        "wires": [
            [
                "283dd6b0185b554b"
            ]
        ]
    },
    {
        "id": "d7fdd42d981a2d7d",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP24 - panasonic_heat_pump/main/Cool_Delta",
        "topic": "panasonic_heat_pump/main/Cool_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 3520,
        "wires": [
            [
                "1281e2b1451c301f"
            ]
        ]
    },
    {
        "id": "a815d38c5137d852",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP17 - panasonic_heat_pump/main/Powerful_Mode_Time",
        "topic": "panasonic_heat_pump/main/Powerful_Mode_Time",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 400,
        "y": 3160,
        "wires": [
            [
                "eda4721e720d1975"
            ]
        ]
    },
    {
        "id": "a82dac1b05afcaac",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP19 - panasonic_heat_pump/main/Holiday_Mode_State",
        "topic": "panasonic_heat_pump/main/Holiday_Mode_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 3100,
        "wires": [
            [
                "3472c99aef20f07f"
            ]
        ]
    },
    {
        "id": "3097c4184ba03f0b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP18 - panasonic_heat_pump/main/Quiet_Mode_Level",
        "topic": "panasonic_heat_pump/main/Quiet_Mode_Level",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 490,
        "y": 2180,
        "wires": [
            [
                "cbded61fe1f8bfa6"
            ]
        ]
    },
    {
        "id": "a0f14e8ff8b7b008",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP13 - panasonic_heat_pump/main/Main_Schedule_State",
        "topic": "panasonic_heat_pump/main/Main_Schedule_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 400,
        "y": 3820,
        "wires": [
            [
                "7caff8b1418d65da"
            ]
        ]
    },
    {
        "id": "3bab99eab669bd21",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP94 - panasonic_heat_pump/main/Zones_State",
        "topic": "panasonic_heat_pump/main/Zones_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 3340,
        "wires": [
            [
                "ab34ebcc109b74de"
            ]
        ]
    },
    {
        "id": "182df2f14a9ca82f",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "topic": "panasonic_heat_pump/main/Defrosting_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 3280,
        "wires": [
            [
                "f4fadebd69120ccb"
            ]
        ]
    },
    {
        "id": "5a629acf35a11cc1",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "Night reduction",
        "label": "Change temperature with",
        "tooltip": "",
        "group": "9aec7afe54746c39",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "night_reduction_correction",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-20",
        "max": "0",
        "step": "1",
        "className": "",
        "x": 840,
        "y": 4220,
        "wires": [
            [
                "3a9f53d1ad6ec693"
            ]
        ]
    },
    {
        "id": "3151f56b9d086c84",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "set.NightReductionWaterTemp.correction",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"NightReductionWaterTemp.correction\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 4220,
        "wires": [
            []
        ]
    },
    {
        "id": "849bb02e7d0f4dfa",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "1 Trigger / 30 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 4080,
        "wires": [
            [
                "e3c1faa5a1fb80c6"
            ]
        ]
    },
    {
        "id": "e3c1faa5a1fb80c6",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "Load on boot nachtverlaging",
        "func": "var on_off = global.get('NightReductionWaterTemp.state',\"file\");\n    if (on_off === undefined) { global.set('NightReductionWaterTemp.state',0,\"file\");}\nvar correction = global.get('NightReductionWaterTemp.correction',\"file\");\nvar value = global.get('NightReductionWaterTemp.current_value',\"file\");\n\nlet msg1={}, msg2={},msg3={};\n\n\nmsg1.payload = value;\nmsg2.payload = on_off;\nmsg3.payload = correction;\n\nif(value === undefined) {msg2=null,msg3=null;}\nif(on_off === undefined) {msg2=null,msg3=null;}\n\nif(on_off == 1)\n    {\n    global.set(\"NightReductionWaterTemp.current_value\",correction,\"file\");\n    msg1.payload = correction;\n    }\n\nif(on_off == 0)\n    {\n    global.set(\"NightReductionWaterTemp.current_value\",0,\"file\");\n    msg1.payload = 0;\n    }\n\n\n\nreturn [msg1,msg2,msg3];\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 4080,
        "wires": [
            [
                "3f05f1c6e437d5d3"
            ],
            [
                "f0b7868c48887de4"
            ],
            [
                "5a629acf35a11cc1"
            ]
        ],
        "outputLabels": [
            "NightReduction_current_value",
            "nightreduction_on_off",
            "NightReduction_correction"
        ]
    },
    {
        "id": "3f05f1c6e437d5d3",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "group": "1179fa790d2d89ca",
        "order": 16,
        "width": 2,
        "height": 1,
        "name": "nightreduction read",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 4040,
        "wires": []
    },
    {
        "id": "2b04b7dd5ea852f2",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "group": "1179fa790d2d89ca",
        "order": 15,
        "width": 3,
        "height": 1,
        "name": "text nightreduction",
        "label": "Night reduction",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 4040,
        "wires": []
    },
    {
        "id": "f0b7868c48887de4",
        "type": "ui_switch",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "Nightreduction",
        "label": "",
        "tooltip": "",
        "group": "1179fa790d2d89ca",
        "order": 14,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 840,
        "y": 4120,
        "wires": [
            [
                "64489162c0113379"
            ]
        ]
    },
    {
        "id": "b1dbfa8badec14e4",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "NightReductionWaterTemp.state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"NightReductionWaterTemp.state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 4120,
        "wires": [
            []
        ]
    },
    {
        "id": "4f05df9205955fba",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "geprogrammeerde reductie",
        "info": "",
        "x": 870,
        "y": 4180,
        "wires": []
    },
    {
        "id": "a852d7a03c2a4cb0",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "current value",
        "info": "",
        "x": 830,
        "y": 4000,
        "wires": []
    },
    {
        "id": "038f578f8cc12163",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "toggle",
        "info": "",
        "x": 810,
        "y": 4080,
        "wires": []
    },
    {
        "id": "64489162c0113379",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1010,
        "y": 4120,
        "wires": [
            [
                "b1dbfa8badec14e4",
                "e3c1faa5a1fb80c6",
                "d283d9a5d5181aed",
                "0884ccad88528175",
                "db81c5d226a5dab3"
            ]
        ]
    },
    {
        "id": "d283d9a5d5181aed",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "nightreduction_on_off",
        "mode": "link",
        "links": [
            "73ee925b927ed0c6",
            "3ab7a10b46379da2",
            "44d83d4e58d63689"
        ],
        "x": 1155,
        "y": 4080,
        "wires": []
    },
    {
        "id": "3a9f53d1ad6ec693",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1010,
        "y": 4220,
        "wires": [
            [
                "3151f56b9d086c84",
                "db81c5d226a5dab3"
            ]
        ]
    },
    {
        "id": "10ca1d93fdd1afe2",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.DHW_Energy_Consumption",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'DHW_Energy_Consumption';\nglobal.set(\"DHW_Energy_Consumption\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2720,
        "wires": [
            [
                "a3180920b08e8108"
            ]
        ]
    },
    {
        "id": "158cd656457b884a",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP41 - panasonic_heat_pump/main/DHW_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Consumption",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 2720,
        "wires": [
            [
                "10ca1d93fdd1afe2"
            ]
        ]
    },
    {
        "id": "5787c91b303f2538",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "COP DHW",
        "mode": "link",
        "links": [
            "c302223665944545",
            "fe8e23b8971b868e"
        ],
        "x": 2105,
        "y": 1900,
        "wires": []
    },
    {
        "id": "0884ccad88528175",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Function NightReduction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 4040,
        "wires": [
            [
                "c77c4767a9dd84f4"
            ]
        ]
    },
    {
        "id": "c77c4767a9dd84f4",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 1375,
        "y": 4040,
        "wires": []
    },
    {
        "id": "b122913e258a4ec3",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "set.T_room_custom",
        "func": "let msg99={};        \n\nif (msg.payload == \"check\") \n        {\n            global.set(\"T_room_custom\",undefined,\"file\");\n            msg99.topic = \"SETUP - Sensors\";\n            msg99.payload = \"Custom room temperature sensor reset.\";\n            return [null,msg99];\n        }\n\n\n\nif (msg.payload == \"too_old\") \n    {\n        global.set(\"T_room_custom\",undefined,\"file\");\n\n        msg99.topic = \"SETUP - Sensors\";\n        msg99.payload = \"Custom room temperature sensor not found. Using TOP33\";\n\n        return [null,msg99];\n    }\n\n\nelse\n    {\n        msg.payload = Number(msg.payload).toFixed(2);\n        msg.payload = parseFloat(msg.payload);\n        \n        if (msg.payload < -1000)                                                // rough sanity check\n            {\n                global.set(\"T_room_custom\",undefined,\"file\");\n                return null;\n            }\n        \n        var stored_value = global.get('T_room_custom',\"file\");\n        if (stored_value != msg.payload)            {global.set(\"T_room_custom\",msg.payload,\"file\");}\n\n        msg99.topic = \"SETUP - Sensors\";\n        msg99.payload = \"Custom room temperature sensor FOUND and used\";// (\" + msg.payload + \"°C)\";\n        \n        return [msg,msg99];\n    }\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 400,
        "wires": [
            [
                "9c94c9210206cd04"
            ],
            [
                "9e0ae6aff4c599b2"
            ]
        ]
    },
    {
        "id": "e0563a18c1b95632",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "set.TOP33_Room_Thermostat_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nvar stored_value = global.get('TOP33_Room_Thermostat_Temp');\nif (stored_value != msg.payload)\n{\n    global.set(\"TOP33_Room_Thermostat_Temp\",msg.payload);\n    \n}\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 460,
        "wires": [
            [
                "9c94c9210206cd04"
            ]
        ]
    },
    {
        "id": "9c94c9210206cd04",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "filter T_room",
        "func": "var TOP33               = global.get('TOP33_Room_Thermostat_Temp');             // The default heatpump outside temperature sensor\nvar T_room_custom       = global.get('T_room_custom',\"file\");                          // Custom outside temperature sensor\nvar T_room;\n\nlet msg1={};\n\nif (T_room_custom === undefined)\n    {\n        T_room = TOP33;\n    }\nelse\n    {\n        T_room = T_room_custom;\n    }\n\n\nmsg1.payload = T_room;\nmsg1.payload = Number(msg1.payload).toFixed(2);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic = 'T_room';\n\nvar stored_value        = global.get('T_room');\n\nif (stored_value != T_room)\n{\n    global.set(\"T_room\",msg1.payload);\n    \n}\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 460,
        "wires": [
            [
                "0fc49e124d4f36cf"
            ]
        ]
    },
    {
        "id": "0564f7a406df196e",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "You can use your own custom external sensors",
        "info": "",
        "x": 370,
        "y": 340,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "0fc49e124d4f36cf",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1590,
        "y": 460,
        "wires": [
            [
                "a22898dfdc4ff0ca",
                "2d8aa1dabf329822"
            ]
        ]
    },
    {
        "id": "70aff6c79b777590",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "check",
        "payloadType": "str",
        "x": 660,
        "y": 320,
        "wires": [
            [
                "10470efbce38731d",
                "b122913e258a4ec3"
            ]
        ]
    },
    {
        "id": "f0b20c8165a68430",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 1685,
        "y": 180,
        "wires": []
    },
    {
        "id": "10470efbce38731d",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "op1": "",
        "op2": "too_old",
        "op1type": "nul",
        "op2type": "str",
        "duration": "12",
        "extend": true,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 900,
        "y": 420,
        "wires": [
            [
                "b122913e258a4ec3"
            ]
        ]
    },
    {
        "id": "9e0ae6aff4c599b2",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1410,
        "y": 400,
        "wires": [
            [
                "f0b20c8165a68430"
            ]
        ]
    },
    {
        "id": "ae708cb35f6a5163",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 890,
        "y": 380,
        "wires": [
            [
                "b122913e258a4ec3"
            ]
        ]
    },
    {
        "id": "e248409fb553d16c",
        "type": "mqtt out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "SET6 SetZ1CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1CoolRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 4130,
        "y": 480,
        "wires": []
    },
    {
        "id": "914dbce5e778229e",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "label": "Cool setpoint",
        "tooltip": "",
        "group": "273f74f363a57507",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "5",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 3170,
        "y": 480,
        "wires": [
            [
                "472cd4f84e3e8b1d",
                "6c93a57f910e03c2"
            ]
        ]
    },
    {
        "id": "472cd4f84e3e8b1d",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3360,
        "y": 480,
        "wires": [
            [
                "36f8eea1b3a6c839"
            ]
        ]
    },
    {
        "id": "36f8eea1b3a6c839",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3510,
        "y": 480,
        "wires": [
            [
                "79d819b649cddcfb"
            ]
        ]
    },
    {
        "id": "5b8f3786bc1abbb1",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "TOP28 - panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2610,
        "y": 480,
        "wires": [
            [
                "c5060d82a2dec953",
                "467ba90fcd17c451"
            ]
        ]
    },
    {
        "id": "c5060d82a2dec953",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2980,
        "y": 480,
        "wires": [
            [
                "914dbce5e778229e",
                "6c93a57f910e03c2"
            ]
        ]
    },
    {
        "id": "2649d773ad06b50d",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "273f74f363a57507",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Cool status",
        "label": "Cool status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3170,
        "y": 360,
        "wires": []
    },
    {
        "id": "2a06d5d8012e9ce7",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "OFF",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2980,
        "y": 360,
        "wires": [
            [
                "2649d773ad06b50d"
            ]
        ]
    },
    {
        "id": "f6ed813fba6b5c87",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Check operation mode",
        "func": "var OM = global.get('Operating_Mode_State',\"file\");\nlet msg1={};\nif (OM == 1 || OM == 5 || OM == 7 || OM == 8)\n{\n    msg1.payload = OM;\n    return [msg,msg1];\n}\nelse\n{\n    msg.payload = 1;\n    return msg;}\n\n\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 360,
        "wires": [
            [
                "2a06d5d8012e9ce7"
            ],
            []
        ]
    },
    {
        "id": "7c9af6a20115c38e",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "links": [
            "aec0cb2b18e02d8b"
        ],
        "x": 2475,
        "y": 360,
        "wires": [
            [
                "f6ed813fba6b5c87"
            ]
        ]
    },
    {
        "id": "dee73ffd96da5786",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "273f74f363a57507",
        "name": "Line - Setup ",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3170,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "2bb5988706fb572a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "f2aa79821dfd1110",
        "name": "",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\n\nvar RH = context.get('RH');\nvar T = context.get('Temperature');\n\nif (msg.topic == \"RH\")\n{\n    context.set('RH',msg.payload);\n    if (T===undefined)\n        {return null;}\n}\n\n\nif (msg.topic == \"Temperature\")\n{\n    context.set('Temperature',msg.payload);\n    if (RH===undefined)\n        {return null;}\n}\n\n\n\n\nif (RH !== undefined && T !== undefined)\n{\n    var Td = T - (( 100-RH ) / 5);\n    let msg1={};\n    let msg2={};\n    \n    msg1.payload = Td;\n    msg1.payload = Number(msg1.payload).toFixed(1);\n    msg1.payload = parseFloat(msg1.payload);\n    msg1.topic = \"Dew Point (°C)\";\n    flow.set(\"dew_point\",msg1);\n    \n    \n    msg2.payload = T;\n    msg2.payload = Number(msg2.payload).toFixed(1);\n    msg2.payload = parseFloat(msg2.payload);\n    msg2.topic = \"Temperature\"\n    \n    return [[msg1,msg2]];\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3140,
        "y": 160,
        "wires": [
            [
                "6fc958da73fbdf09",
                "497a87221c5618c5"
            ]
        ]
    },
    {
        "id": "37a369fd9ad03085",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "f2aa79821dfd1110",
        "name": "RH",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "RH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2990,
        "y": 120,
        "wires": [
            [
                "2bb5988706fb572a"
            ]
        ]
    },
    {
        "id": "0df0e84326dbeec7",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "f2aa79821dfd1110",
        "name": "Temperature",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Temperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2990,
        "y": 200,
        "wires": [
            [
                "2bb5988706fb572a"
            ]
        ]
    },
    {
        "id": "cdd89d5c10c71407",
        "type": "ui_chart",
        "z": "a938de76db0b71f6",
        "g": "f2aa79821dfd1110",
        "name": "",
        "group": "397a51ddac8419aa",
        "order": 1,
        "width": 11,
        "height": 10,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3470,
        "y": 200,
        "wires": [
            [
                "6a50ef63d9d35647"
            ]
        ]
    },
    {
        "id": "030fbd5026e5a295",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "f2aa79821dfd1110",
        "name": "CONNECT >> Custom sensor - Humidity (for humidity dewpoint)",
        "links": [
            "b70243b30a7c5db8"
        ],
        "x": 2630,
        "y": 120,
        "wires": [
            [
                "37a369fd9ad03085",
                "1d63998e541e4d5a"
            ]
        ],
        "l": true
    },
    {
        "id": "7122d217051222ff",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "f2aa79821dfd1110",
        "name": "CONNECT >> Custom sensor - Temperature  (for humidity dewpoint)",
        "links": [
            "21b7700ac74fcbe8"
        ],
        "x": 2640,
        "y": 200,
        "wires": [
            [
                "0df0e84326dbeec7",
                "dea135ecc9872411"
            ]
        ],
        "l": true
    },
    {
        "id": "13909c8cd33f26ef",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Cool status",
        "label": "Cool status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3170,
        "y": 660,
        "wires": []
    },
    {
        "id": "1cf37ff9fa4fc42b",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "name": "Line - Setup ",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3170,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "6c93a57f910e03c2",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "label": "Cool setpoint",
        "tooltip": "",
        "group": "830a81a1c54c6ef5",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "5",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 3170,
        "y": 740,
        "wires": [
            [
                "de3a55570f77aeb2"
            ]
        ]
    },
    {
        "id": "de3a55570f77aeb2",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3350,
        "y": 740,
        "wires": [
            [
                "914dbce5e778229e",
                "f13532d971be853e"
            ]
        ]
    },
    {
        "id": "f0ae9eea42cf90ea",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Cool delta",
        "label": "Cool delta",
        "tooltip": "",
        "group": "830a81a1c54c6ef5",
        "order": 4,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 3160,
        "y": 780,
        "wires": [
            [
                "25323c5d6bbdbebe"
            ]
        ]
    },
    {
        "id": "25041e53f134e3fb",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "cool input",
        "links": [
            "7139256ff024b872",
            "ce9434fc05a5b849"
        ],
        "x": 3035,
        "y": 780,
        "wires": [
            [
                "f0ae9eea42cf90ea"
            ]
        ]
    },
    {
        "id": "158b8983b1dd0aa9",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "mode": "link",
        "links": [
            "3ed1fd544412f391"
        ],
        "x": 3485,
        "y": 780,
        "wires": []
    },
    {
        "id": "25323c5d6bbdbebe",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3360,
        "y": 780,
        "wires": [
            [
                "158b8983b1dd0aa9",
                "f13532d971be853e"
            ]
        ]
    },
    {
        "id": "ce9434fc05a5b849",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "Source TOP24 cool_delta",
        "mode": "link",
        "links": [
            "25041e53f134e3fb"
        ],
        "x": 1275,
        "y": 3460,
        "wires": []
    },
    {
        "id": "bf5c0eefd9f68f35",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1110,
        "y": 3460,
        "wires": [
            [
                "ce9434fc05a5b849"
            ]
        ]
    },
    {
        "id": "79d819b649cddcfb",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "func": "var FloorCoolDelta                      = global.get('FloorCoolDelta',\"file\");\nvar Z1_Cool_Request_Temp                = global.get(\"Z1_Cool_Request_Temp\");\nvar dew_point                           = flow.get(\"dew_point\");\n\nlet msg1={};\n\n\nif (FloorCoolDelta !== undefined && Z1_Cool_Request_Temp !== undefined && dew_point !== undefined)\n{\n    dew_point                               = dew_point.payload;\n    if (msg.payload >= (dew_point + FloorCoolDelta))\n        {\n            return msg;\n            \n        }\n    \n    else\n        {\n            msg.payload = (dew_point + FloorCoolDelta);\n            msg.payload = Math.ceil(msg.payload);\n            return msg;\n            \n        }\n\n}\nelse \n{\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 480,
        "wires": [
            [
                "6b2644c3a510f50f"
            ]
        ]
    },
    {
        "id": "467ba90fcd17c451",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2950,
        "y": 520,
        "wires": [
            [
                "f5ccbd22c1c9fe22"
            ]
        ]
    },
    {
        "id": "f5ccbd22c1c9fe22",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "set.Z1_Cool_Request_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Z1_Cool_Request_Temp';\nglobal.set(\"Z1_Cool_Request_Temp\",msg.payload);\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2880,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6fc958da73fbdf09",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Calculated dew point",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3200,
        "y": 900,
        "wires": []
    },
    {
        "id": "4dfb2312d5cb06d5",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "name": "Line - Setup ",
        "order": 5,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3170,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "1d63998e541e4d5a",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 3700,
        "y": 120,
        "wires": []
    },
    {
        "id": "dea135ecc9872411",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Room temperature",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3450,
        "y": 260,
        "wires": []
    },
    {
        "id": "a3180920b08e8108",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "DHW_Energy_Consumption",
        "mode": "link",
        "links": [
            "05c67c5f7508a04d",
            "2347fd7ebf82b618"
        ],
        "x": 1535,
        "y": 2720,
        "wires": []
    },
    {
        "id": "b9da2620c239be36",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP27 - panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 2060,
        "wires": [
            [
                "aa66f523450fd337"
            ]
        ]
    },
    {
        "id": "f13532d971be853e",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "COOL gui changes to function trigger2",
        "mode": "link",
        "links": [],
        "x": 3485,
        "y": 740,
        "wires": []
    },
    {
        "id": "6815e3004fa8b341",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "NR gui changes to function trigger",
        "mode": "link",
        "links": [
            "44d83d4e58d63689"
        ],
        "x": 1375,
        "y": 4180,
        "wires": []
    },
    {
        "id": "db81c5d226a5dab3",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1200,
        "y": 4180,
        "wires": [
            [
                "6815e3004fa8b341"
            ]
        ]
    },
    {
        "id": "d90d8243969aecef",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP95 - panasonic_heat_pump/main/Max_Pump_Duty",
        "topic": "panasonic_heat_pump/main/Max_Pump_Duty",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 3040,
        "wires": [
            [
                "9b245060787d2ecd",
                "0b10bc17b24896b7"
            ]
        ]
    },
    {
        "id": "8f0e209ac14bdb9a",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "Max_Pump_Duty_Currentvalue",
        "mode": "link",
        "links": [
            "32c4b461266d4a6e",
            "403a171a02400af0"
        ],
        "x": 1035,
        "y": 3000,
        "wires": []
    },
    {
        "id": "0b10bc17b24896b7",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 3000,
        "wires": [
            [
                "8f0e209ac14bdb9a"
            ]
        ]
    },
    {
        "id": "aea8ceb9687abadf",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 2360,
        "wires": [
            [
                "85919acf34d78bae"
            ]
        ]
    },
    {
        "id": "1fea7e86a5a61e8b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "name": "TOP92 - panasonic_heat_pump/main/Heat_Pump_Model",
        "topic": "panasonic_heat_pump/main/Heat_Pump_Model",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 4360,
        "wires": [
            [
                "8ef3101cc4e83705"
            ]
        ]
    },
    {
        "id": "8ef3101cc4e83705",
        "type": "function",
        "z": "a938de76db0b71f6",
        "name": "Heatpump type (Panasonic)",
        "func": "var panasonic = global.get('panasonic',\"file\");\n\nif (panasonic === undefined || panasonic.payload[0].nr != msg.payload  || (panasonic.payload[0].model === 'unknown' && panasonic.payload[0].nr != 255))    {\n    global.set('panasonic',undefined,\"file\");\n    \n    var model;\n    var phase;\n    var type;\n    var power;\n    var nr;\n    \n    if (msg.payload == 0)   {model = 'WH-MDC05H3E5';    power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 1)   {model = 'WH-MDC07H3E5';    power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 2)   {model = 'WH-UX09HE5';      power = '9';        phase = '1';        type = 'T-CAP';}\n    if (msg.payload == 3)   {model = 'WH-UD09HE8';      power = '9';        phase = '3';        type = 'HP';}\n    if (msg.payload == 4)   {model = 'WH-UX09HE8';      power = '9';        phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 5)   {model = 'WH-UX12HE8';      power = '12';       phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 6)   {model = 'WH-UX16HE8';      power = '16';       phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 7)   {model = 'WH-UD05HE5';      power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 8)   {model = 'WH-UD09JE5';      power = '9';        phase = '1';        type = 'HP';}\n    if (msg.payload == 9)   {model = 'WH-MDC05J3E5';    power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 10)  {model = 'WH-MDC09H3E5';    power = '9';        phase = '1';        type = 'HP';}\n    if (msg.payload == 11)  {model = 'WH-MXC09H3E5';    power = '9';        phase = '1';        type = 'T-CAP';}\n    if (msg.payload == 12)  {model = 'WH-UD09JE5';      power = '9';        phase = '1';        type = 'HP - All-In-One';}\n    if (msg.payload == 13)  {model = 'WH-UX12HE8';      power = '12';       phase = '3';        type = 'T-CAP - All-In-One';}\n    if (msg.payload == 14)  {model = 'WH-UQ09HE8';      power = '9';        phase = '3';        type = 'T-CAP - Super Quiet';}\n    if (msg.payload == 15)  {model = 'WH-UD09HE5';      power = '9';        phase = '1';        type = 'HP';}\n    if (msg.payload == 16)  {model = 'WH-UD09HE5';      power = '9';        phase = '1';        type = 'HP - All-In-One';}\n    if (msg.payload == 17)  {model = 'WH-UD05JE5';      power = '5';        phase = '1';        type = 'HP - All-In-One';}\n    if (msg.payload == 18)  {model = 'WH-UD07JE5';      power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 19)  {model = 'WH-UD07HE5-1';    power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 20)  {model = 'WH-MDC07J3E5';    power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 21)  {model = 'WH-MDC09J3E5';    power = '9';        phase = '1';        type = 'HP';}\n    if (msg.payload == 22)  {model = 'WH-UD05JE5';      power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 23)  {model = 'WH-MXC09J3E8';    power = '9';        phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 24)  {model = 'WH-MXC12J9E8';    power = '12';       phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 25)  {model = 'WH-UD12HE5';      power = '12';       phase = '1';        type = 'T-CAP';}\n    if (msg.payload == 26)  {model = 'WH-UD07JE5';      power = '7';        phase = '1';        type = 'HP - All-In-One Compact';}\n    if (msg.payload == 27)  {model = 'WH-MDC07J3E5';    power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 28)  {model = 'WH-MDC05J3E5';    power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 255) {model = 'unknown';         power = 'unknown';  phase = 'unknown';  type = 'unknown';}\n    \n    let panasonic={};\n        panasonic.type = type;\n        panasonic.phase = phase;\n        panasonic.power = power;\n        panasonic.model = model;\n        panasonic.nr = msg.payload;\n    \n    global.set('panasonic',{payload:[panasonic]},\"file\");\n    return msg;\n}\n\n\nelse    {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 4360,
        "wires": [
            []
        ]
    },
    {
        "id": "1055c816d0b21553",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "TOP29 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 4560,
        "wires": [
            [
                "b758728ae007c639",
                "9005e7a87f86a06e"
            ]
        ]
    },
    {
        "id": "4f0447af5e532d6f",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "TOP30 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 4520,
        "wires": [
            [
                "b758728ae007c639",
                "dfd98e02f46447fb"
            ]
        ]
    },
    {
        "id": "91e1151b60bc9a35",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "TOP31 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 4660,
        "wires": [
            [
                "b758728ae007c639",
                "c0a54684ef46f711"
            ]
        ]
    },
    {
        "id": "dc036a2e660127ec",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "TOP32 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 4700,
        "wires": [
            [
                "b758728ae007c639",
                "07bfc2f9f00870d7"
            ]
        ]
    },
    {
        "id": "5e56ba56cb2fd474",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "function 3",
        "func": "var war_ot1         = global.get('war_ot1',\"file\");                 // Outside temperature high         (warm outside)\nvar war_ot2         = global.get('war_ot2',\"file\");                 // Outside temperature intermediate (intermediate outside temperature)\nvar war_ot3         = global.get('war_ot3',\"file\");                 // Outside temperature low          (cold outside)\n\nvar war_wt1         = global.get('war_wt1',\"file\");                 // Water temperature low            (cold water)\nvar war_wt2         = global.get('war_wt2',\"file\");                 // Water temperature intermediate   (intermediate water temperature)\nvar war_wt3         = global.get('war_wt3',\"file\");                 // Water temperature high           (warm water)\nlet msg99={};\n\n/*\n                weer    buiten      water\n                warm    war_ot1     war_wt1\n                        war_ot2     war_wt2\n                cold    war_ot3     war_wt3\n*/\n\nif (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp\")   {global.set('Z1_Heat_Curve_Outside_Low_Temp',msg.payload);}\nif (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp\")  {global.set('Z1_Heat_Curve_Outside_High_Temp',msg.payload);}\nif (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp\")    {global.set('Z1_Heat_Curve_Target_Low_Temp',msg.payload);}\nif (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp\")   {global.set('Z1_Heat_Curve_Target_High_Temp',msg.payload);}\n\nif ((war_ot1+war_ot2+war_ot3+war_wt1+war_wt2+war_wt3)>-1000)\n    {\n        msg99.topic=\"SYSTEM\";\n        msg99.payload=\"WAR settings OK\";\n        return [null,msg99]\n    }\n\nmsg99.topic=\"Function WAR\";\n\n\nif (war_wt2===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp\")\n            {\n                global.set('war_wt2',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP29 from Panasonic (Z1_Heat_Curve_Target_High_Temp = \" + msg.payload + \"°C)\";\n                if (war_wt3===undefined)\n                    {\n                        global.set('war_wt3',msg.payload,\"file\");\n                    }\n                return [msg,msg99]\n            }\n    }\n    \nif (war_wt1===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp\")\n            {\n                global.set('war_wt1',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP30 from Panasonic (Z1_Heat_Curve_Target_Low_Temp = \" + msg.payload + \"°C)\";\n                \n                \n                return [msg,msg99]\n            }\n    }\n\nif (war_ot1===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp\")\n            {\n                global.set('war_ot1',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP31 from Panasonic (Z1_Heat_Curve_Outside_High_Temp = \" + msg.payload + \"°C)\";\n                return [msg,msg99]\n            }\n    }\nif (war_ot2===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp\")\n            {\n                global.set('war_ot2',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP32 from Panasonic (Z1_Heat_Curve_Outside_Low_Temp = \" + msg.payload + \"°C)\";\n                if (war_ot3===undefined)\n                    {\n                        global.set('war_ot3',msg.payload-1,\"file\");\n                    }\n                return [msg,msg99]\n            }\n    }\n\nreturn null;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 4640,
        "wires": [
            [
                "123d7b6352639620"
            ],
            [
                "87bd21b4647187d2"
            ]
        ],
        "outputLabels": [
            "",
            "ToLog"
        ]
    },
    {
        "id": "246757b0d4390b0d",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 1155,
        "y": 4660,
        "wires": []
    },
    {
        "id": "87bd21b4647187d2",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1050,
        "y": 4660,
        "wires": [
            [
                "246757b0d4390b0d"
            ]
        ]
    },
    {
        "id": "123d7b6352639620",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1060,
        "y": 4620,
        "wires": [
            [
                "b46cfcf8ce6d8f91"
            ]
        ]
    },
    {
        "id": "b46cfcf8ce6d8f91",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "05065bbd47aa9dd3"
        ],
        "x": 1155,
        "y": 4620,
        "wires": []
    },
    {
        "id": "b758728ae007c639",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 4600,
        "wires": [
            [
                "5e56ba56cb2fd474"
            ]
        ]
    },
    {
        "id": "91bece54d7a13eb3",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "nightreduction read",
        "links": [
            "4223b24f5dc06d8e"
        ],
        "x": 375,
        "y": 4020,
        "wires": [
            [
                "afb8bfd949251c6c"
            ]
        ]
    },
    {
        "id": "afb8bfd949251c6c",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "Color",
        "func": "var nr_state = global.get('NightReductionWaterTemp.state',\"file\");\n    if (nr_state === undefined)    {return null;}\n\nlet msg1={};\n\n\n    if (nr_state == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (nr_state == 1) \n        {\n            msg1.color = \"\";\n        }\nif (msg.payload > 0){msg.payload = '+' + msg.payload;}\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 4020,
        "wires": [
            [
                "3f05f1c6e437d5d3"
            ]
        ]
    },
    {
        "id": "ea89c213947bdf26",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "f0b20c8165a68430"
            ]
        ]
    },
    {
        "id": "fde418209aab6a87",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "name": "Line - Setup ",
        "order": 32,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Internal Panasonic profile (read-only)</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 510,
        "y": 4480,
        "wires": [
            []
        ]
    },
    {
        "id": "8944d416f44e4183",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 34,
        "width": 3,
        "height": 1,
        "name": "Outside temp.",
        "label": "<font color=gray>Outside temp.</font>",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 680,
        "y": 4620,
        "wires": []
    },
    {
        "id": "ab60719365f6bde0",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 35,
        "width": 3,
        "height": 1,
        "name": "Water temp.",
        "label": "<font color=gray>Water temp.</font>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 690,
        "y": 4480,
        "wires": []
    },
    {
        "id": "3a027c0cd9f8a957",
        "type": "ui_button",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "",
        "group": "052caff3b2365345",
        "order": 30,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Export",
        "tooltip": "This will send the above temperature profile to the Panasonic heatpump (internal).",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Export current profile to heatpump?",
        "payloadType": "str",
        "topic": "Please confirm",
        "topicType": "str",
        "x": 1310,
        "y": 4500,
        "wires": [
            [
                "1acb7989b3df5970"
            ]
        ]
    },
    {
        "id": "1acb7989b3df5970",
        "type": "ui_toast",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "Abort",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Deploy?",
        "x": 1460,
        "y": 4500,
        "wires": [
            [
                "fa6cbe3250ca3abf"
            ]
        ]
    },
    {
        "id": "fa6cbe3250ca3abf",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "Confirm",
        "func": "\nif (msg.payload == 'Yes') \n    {\n            \n        var war_ot1         = global.get('war_ot1',\"file\");                 // Outside temperature high         (warm outside)\n        var war_ot2         = global.get('war_ot2',\"file\");                 // Outside temperature intermediate (intermediate outside temperature)\n        //var war_ot3         = global.get('war_ot3',\"file\");                 // Outside temperature low          (cold outside)\n        var war_wt1         = global.get('war_wt1',\"file\");                 // Water temperature low            (cold water)\n        var war_wt2         = global.get('war_wt2',\"file\");                 // Water temperature intermediate   (intermediate water temperature)\n        //var war_wt3         = global.get('war_wt3',\"file\");                 // Water temperature high           (warm water)\n        \n        let msg1    ={};    //  pin 1 - export JSON\n        let msg99   ={};    //  pin 2 - output to log\n        \n        msg1.topic = \"JSON_ZONE1_HEAT\"\n        msg1.payload = {\n                        \t\"zone1\": {\n                        \t\t\"heat\": {\n                        \t\t\t\"target\": {\n                        \t\t\t\t\"high\": war_wt2,\n                        \t\t\t\t\"low\": war_wt1\n                        \t\t\t},\n                        \t\t\t\"outside\": {\n                        \t\t\t\t\"high\": war_ot1,\n                        \t\t\t\t\"low\": war_ot2\n                        \t\t\t}\n                        \t\t}\n                        \t}\n                        }\n        msg99.topic = \"SYSTEM\";\n        msg99.payload = \"Exported settings with WAR temperature profile to Panasonic heatpump\";\n        \n        node.send([msg1,msg99]);\n    }\nreturn null;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 4500,
        "wires": [
            [
                "c5bf8e25eda73442"
            ],
            [
                "156858ac3d8408dd"
            ]
        ],
        "outputLabels": [
            "export JSON",
            "output to log"
        ]
    },
    {
        "id": "c5bf8e25eda73442",
        "type": "json",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1850,
        "y": 4480,
        "wires": [
            [
                "b1bc9035edfd596b"
            ]
        ]
    },
    {
        "id": "156858ac3d8408dd",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 1955,
        "y": 4520,
        "wires": []
    },
    {
        "id": "c4d5d436d1a4b0e4",
        "type": "mqtt out",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "SET16 SetCurves",
        "topic": "panasonic_heat_pump/commands/SetCurves",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2250,
        "y": 4480,
        "wires": []
    },
    {
        "id": "f70eae138246bae0",
        "type": "ui_button",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "",
        "group": "052caff3b2365345",
        "order": 28,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Import",
        "tooltip": "This will read the internal Panasonic profile and save it in this Node Red flow",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Import Panasonic profile into Node Red?",
        "payloadType": "str",
        "topic": "Please confirm",
        "topicType": "str",
        "x": 1310,
        "y": 4560,
        "wires": [
            [
                "4af0ddb4ff3ccf32"
            ]
        ]
    },
    {
        "id": "4af0ddb4ff3ccf32",
        "type": "ui_toast",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "Abort",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Deploy?",
        "x": 1460,
        "y": 4560,
        "wires": [
            [
                "418e761f03c6c9cd"
            ]
        ]
    },
    {
        "id": "418e761f03c6c9cd",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "Confirm",
        "func": "\nif (msg.payload == 'Yes') \n    {\n        let msg99={};\n        var Z1_Heat_Curve_Outside_Low_Temp      = global.get('Z1_Heat_Curve_Outside_Low_Temp');\n        var Z1_Heat_Curve_Outside_High_Temp     = global.get('Z1_Heat_Curve_Outside_High_Temp');\n        var Z1_Heat_Curve_Target_Low_Temp       = global.get('Z1_Heat_Curve_Target_Low_Temp');\n        var Z1_Heat_Curve_Target_High_Temp      = global.get('Z1_Heat_Curve_Target_High_Temp');\n        \n        \n        global.set('war_ot1',Z1_Heat_Curve_Outside_High_Temp,\"file\");                 // Outside temperature high         (warm outside)\n        global.set('war_ot2',Z1_Heat_Curve_Outside_Low_Temp,\"file\");                 // Outside temperature intermediate (intermediate outside temperature)\n        global.set('war_ot3',Z1_Heat_Curve_Outside_Low_Temp-1,\"file\");                 // Outside temperature low          (cold outside)\n        \n        global.set('war_wt1',Z1_Heat_Curve_Target_Low_Temp,\"file\");                 // Water temperature low            (cold water)\n        global.set('war_wt2',Z1_Heat_Curve_Target_High_Temp,\"file\");                 // Water temperature intermediate   (intermediate water temperature)\n        global.set('war_wt3',Z1_Heat_Curve_Target_High_Temp,\"file\");\n        \n        \n        \n        msg99.topic = \"SYSTEM\";\n        msg99.payload = \"Import profile from Panasonic heatpump to Node Red\";\n    \n        msg.payload = \"Done\" ;\n        msg.topic = \"\";\n        \n    \n        return msg;\n        \n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 4560,
        "wires": [
            [
                "88e74ca7c5982d24"
            ]
        ]
    },
    {
        "id": "88e74ca7c5982d24",
        "type": "ui_toast",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Done",
        "x": 1850,
        "y": 4560,
        "wires": [
            []
        ]
    },
    {
        "id": "9005e7a87f86a06e",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 39,
        "width": 3,
        "height": 1,
        "name": "war_wt2",
        "label": "",
        "format": "<font color=gray>{{value}} °C</font>",
        "layout": "row-center",
        "className": "",
        "x": 720,
        "y": 4560,
        "wires": []
    },
    {
        "id": "dfd98e02f46447fb",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 37,
        "width": 3,
        "height": 1,
        "name": "war_wt1",
        "label": "",
        "format": "<font color=gray>{{value}} °C</font>",
        "layout": "row-center",
        "className": "",
        "x": 720,
        "y": 4520,
        "wires": []
    },
    {
        "id": "c0a54684ef46f711",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 36,
        "width": 3,
        "height": 1,
        "name": "war_ot1",
        "label": "",
        "format": "<font color=gray>{{value}} °C</font>",
        "layout": "row-center",
        "className": "",
        "x": 720,
        "y": 4660,
        "wires": []
    },
    {
        "id": "07bfc2f9f00870d7",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 38,
        "width": 3,
        "height": 1,
        "name": "war_ot2",
        "label": "",
        "format": "<font color=gray>{{value}} °C</font>",
        "layout": "row-center",
        "className": "",
        "x": 720,
        "y": 4700,
        "wires": []
    },
    {
        "id": "b665e9aa13d44f8e",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2950,
        "y": 280,
        "wires": [
            [
                "0e8ca4bb561b59ed"
            ]
        ]
    },
    {
        "id": "6a50ef63d9d35647",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Store chart",
        "func": "var myArray = msg;\nflow.set(\"chart_cool\", myArray,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3710,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0e8ca4bb561b59ed",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Restore chart",
        "func": "let msg1={};\nmsg1 = flow.get(\"chart_cool\",\"file\");\nif (msg1 === undefined)\n    {return null;}\nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3120,
        "y": 280,
        "wires": [
            [
                "cdd89d5c10c71407"
            ]
        ]
    },
    {
        "id": "497a87221c5618c5",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3300,
        "y": 160,
        "wires": [
            [
                "cdd89d5c10c71407"
            ]
        ]
    },
    {
        "id": "a8d51c8773f8f17f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T_outside - Input selector",
        "func": "//***********************************************************************************\nlet msg1={};            //  pin 1 - panasonic_heat_pump/main/Outside_Temp output\nlet msg99={};           //  pin 2 - To log\nlet msg2={};            //  pin 3 - custom sensor output\nlet msg3={};            //  pin 4 - final output. selected custom sensor or default panasonic_heat_pump/.. sensor\n//  \n//  return [msg1,msg99,msg2,msg3]\n\nmsg99.topic = \"SETUP - Sensors\";\n\n\nvar Heating_Mode    = global.get('Heating_Mode',\"file\");\n    if (Heating_Mode === undefined)     {return null;}\n\nvar T_outside_custom = global.get(\"T_outside_custom\",\"file\");\n\n//***********************************************************************************\n// Timer how long the compressoris on. Runtime\n//\nvar CurrentTime = new Date().getTime();\nvar StartTime = context.get(\"StartTime\");\nif (StartTime === undefined)\n    {\n        context.set(\"StartTime\",CurrentTime);\n        return null;\n    }\nelse\n    {\n        var TimeElapsed = ((CurrentTime - StartTime)/1000);\n        TimeElapsed = parseFloat(TimeElapsed.toFixed(0));\n//        node.warn(TimeElapsed);\n    }\n//***********************************************************************************\n\n//***********************************************************************************\n//\n//  Set delay after which the function will switch back from custom sensor to panasonic internal sensor. \n//  Choosen delay is 2 hours, 60 seconds x 60 x 2 = 7200 seconds\n//\n//***********************************************************************************\n\n//***********************************************************************************\n//  \nif (msg.topic == \"panasonic_heat_pump/main/Outside_Temp\")\n    {\n        msg1 = msg;\n        msg1.payload = Number(msg1.payload).toFixed(1);\n        msg1.payload = parseFloat(msg1.payload);\n        \n        global.set(\"T_outside_panasonic\",msg1.payload,\"file\");\n\n        if (T_outside_custom === undefined)\n            {\n                msg3 = msg1;\n                global.set(\"T_outside\",msg3.payload,\"file\");\n                msg99.payload = \"Custom outside temperature sensor not found\";\n                return [msg1,null,null,msg3]\n            //  return [msg1,msg99,msg2,msg3]\n            }\n        else if (Heating_Mode == 1 && TimeElapsed > 7200)\n            {\n                msg3 = msg1;\n                global.set(\"T_outside_custom\",undefined,\"file\");\n                global.set(\"T_outside\",msg3.payload,\"file\");\n                msg99.payload = \"Custom outside temperature sensor LOST. Using TOP14 instead\";// (\" + msg3.payload + \"°C)\";\n                return [msg1,null,null,msg3]\n            //  return [msg1,msg99,msg2,msg3]\n            }\n        else if (Heating_Mode == 0)\n            {\n                msg3 = msg1;\n                global.set(\"T_outside\",msg3.payload,\"file\");\n                msg99.payload = \"Heatpump is in compensation mode (WAR). Custom outside temperature sensor ignored. Using TOP14 instead\";\n                return [msg1,null,null,msg3]\n            //  return [msg1,msg99,msg2,msg3]\n            }\n        else\n            {\n                return [msg1,null,null,null]\n            //  return [msg1,msg99,msg2,msg3]\n            }\n    }    \n//******************************************************************************\nelse\n    {\n        msg2 = msg;\n        msg2.payload = Number(msg2.payload).toFixed(1);\n        msg2.payload = parseFloat(msg2.payload);\n        global.set(\"T_outside_custom\",msg2.payload,\"file\");\n        \n        if (Heating_Mode == 0)\n            {\n                context.set(\"StartTime\",CurrentTime);\n                msg99.payload = \"Custom outside temperature sensor FOUND, but not used. Heatpump is in compensation mode (WAR) and using TOP14\";\n                return [null,msg99,msg2,null];\n            //  return [msg1,msg99,msg2,msg3]\n            }\n        if (Heating_Mode == 1)\n            {\n                context.set(\"StartTime\",CurrentTime);\n                msg3 = msg2;\n                msg3.topic = \"custom sensor\";\n                msg99.payload = \"Custom outside temperature sensor FOUND and used\";// (\" + msg2.payload + \"°C)\";\n                global.set(\"T_outside\",msg3.payload,\"file\");\n                return [null,msg99,msg2,msg3];\n            //  return [msg1,msg99,msg2,msg3]\n            }\n    }\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 180,
        "wires": [
            [],
            [
                "ea89c213947bdf26"
            ],
            [],
            [
                "d6a9c376dde9c43f"
            ]
        ],
        "outputLabels": [
            "panasonic_heat_pump/main/Outside_Temp output",
            "To log",
            "custom sensor output",
            "Final output"
        ]
    },
    {
        "id": "303e9746fe17030f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Main_Outlet_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(2);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Main_Outlet_Temp';\nglobal.set(\"Main_Outlet_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2000,
        "wires": [
            [
                "35ca9241fc9fc7a1"
            ]
        ]
    },
    {
        "id": "2caf61fe8673aedb",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 890,
        "y": 460,
        "wires": [
            [
                "e0563a18c1b95632"
            ]
        ]
    },
    {
        "id": "d613171223cb64d2",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Main_Inlet_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(2);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Main_Inlet_Temp\"\nglobal.set(\"Main_Inlet_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1940,
        "wires": [
            [
                "905527b22aae9dc8"
            ]
        ]
    },
    {
        "id": "9e366042611cd253",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 1880,
        "wires": [
            [
                "846a789dca74329d"
            ]
        ]
    },
    {
        "id": "b1bc9035edfd596b",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "Block?",
        "func": "if (global.get('MQTT', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 4480,
        "wires": [
            [
                "c4d5d436d1a4b0e4"
            ],
            [
                "ae97f18776a1de28"
            ]
        ]
    },
    {
        "id": "ae97f18776a1de28",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2105,
        "y": 4480,
        "wires": []
    },
    {
        "id": "6b2644c3a510f50f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3840,
        "y": 480,
        "wires": [
            [
                "e248409fb553d16c"
            ],
            [
                "b43820fd5a21f4e7"
            ]
        ]
    },
    {
        "id": "b43820fd5a21f4e7",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 3945,
        "y": 480,
        "wires": []
    },
    {
        "id": "10068b1def52810f",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "to WoonkamerSP",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 2320,
        "wires": []
    },
    {
        "id": "6c685782864f1787",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "mode": "link",
        "links": [
            "1ebb1a2803291fd7",
            "702993e29cd93413",
            "afa5bf9f7c3531bc",
            "ffa2e7745e5aed4c"
        ],
        "x": 1275,
        "y": 3280,
        "wires": []
    },
    {
        "id": "3adf2738c40e2c50",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "group": "052caff3b2365345",
        "order": 40,
        "width": 8,
        "height": 1,
        "name": "Outside temp.",
        "label": "<font color=gray>In DIRECT mode, the water temperature high is variable</font>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 700,
        "y": 4800,
        "wires": []
    },
    {
        "id": "5053e21b4c187e48",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "msg.source mqtt",
        "rules": [
            {
                "t": "set",
                "p": "source",
                "pt": "msg",
                "to": "mqtt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1700,
        "wires": [
            [
                "7ae9d386f40efb4d"
            ]
        ]
    },
    {
        "id": "2063c96f1ba07327",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 1700,
        "wires": [
            [
                "5053e21b4c187e48",
                "9dad0ebe8e5b9c2a"
            ]
        ]
    },
    {
        "id": "5f7b921ab9a4ce7c",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "to log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1535,
        "y": 1620,
        "wires": []
    },
    {
        "id": "61ed1c56d1ec2c21",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "delay",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1250,
        "y": 1660,
        "wires": [
            [
                "72ecd08129670f6d"
            ]
        ]
    },
    {
        "id": "7a30c0f0dbf50e03",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "to switch Heatpump_State",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb"
        ],
        "x": 1535,
        "y": 1660,
        "wires": []
    },
    {
        "id": "72ecd08129670f6d",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Reset VirtualState",
        "func": "global.set('VirtualState', undefined); //reset every time the state is changing\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1660,
        "wires": [
            [
                "7a30c0f0dbf50e03"
            ]
        ]
    },
    {
        "id": "7ae9d386f40efb4d",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Filter",
        "func": "var VirtualState = global.get('VirtualState');  // Memory Only\nif (msg.payload == VirtualState) return null;   // only send if needed\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1700,
        "wires": [
            [
                "a0d8b4706f8d61b1",
                "61ed1c56d1ec2c21"
            ]
        ]
    },
    {
        "id": "2d8aa1dabf329822",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "name": "debug 104",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1770,
        "y": 580,
        "wires": []
    },
    {
        "id": "89251fd3ee02e8b9",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "name": "debug 105",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1170,
        "y": 580,
        "wires": []
    },
    {
        "id": "d593fd3f7b87de1c",
        "type": "complete",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "scope": [
            "cb987aa12172f46f"
        ],
        "uncaught": false,
        "x": 310,
        "y": 1360,
        "wires": [
            [
                "987d38642eaa3c4c"
            ]
        ]
    },
    {
        "id": "90ec77dc04772b5c",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 740,
        "wires": [
            [
                "148fdf6802233c77"
            ]
        ]
    },
    {
        "id": "3c0adb2ef465094a",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "25",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 860,
        "wires": [
            [
                "1a9b736187a463f7"
            ]
        ]
    },
    {
        "id": "d44ff20770c3e9a1",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "25",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 1120,
        "wires": [
            [
                "d53e66c37991fa8e"
            ]
        ]
    },
    {
        "id": "3f0803a3a230aca2",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in WAR2DIRECT function",
        "links": [
            "8dcafc6e30726812",
            "a7ed974cef55c457"
        ],
        "x": 245,
        "y": 740,
        "wires": [
            [
                "d4cd561c0ac4473e"
            ]
        ]
    },
    {
        "id": "899964bbc5334847",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in RTC Function",
        "links": [
            "a22898dfdc4ff0ca"
        ],
        "x": 245,
        "y": 840,
        "wires": [
            [
                "4e9f98728f7e93f3"
            ]
        ]
    },
    {
        "id": "126583bf986bb2c7",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Link in SoftStart function",
        "links": [
            "0380b395668eee8e",
            "35ca9241fc9fc7a1",
            "8dcafc6e30726812",
            "b1118094796c2de3",
            "c57a81d1dee5b8a9"
        ],
        "x": 245,
        "y": 1120,
        "wires": [
            [
                "d53e66c37991fa8e",
                "c86e3d7ad005b93a"
            ]
        ]
    },
    {
        "id": "92b75262811f09f9",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 980,
        "wires": [
            [
                "1cbf3f3272baec48"
            ]
        ]
    },
    {
        "id": "44d83d4e58d63689",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in Nightreduction Function",
        "links": [
            "6815e3004fa8b341",
            "b91f0b27e28d647b",
            "d283d9a5d5181aed"
        ],
        "x": 245,
        "y": 980,
        "wires": [
            [
                "e340492700d3f5b3"
            ]
        ]
    },
    {
        "id": "add6fa4d403dd143",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Calculate new SP",
        "func": "/*\nThis function has the purpose to regularly check the actual SP from the heatpump against the calculated setpoint in from the dashboard/functions. \nOnly when there is a deviation between the two, the new setpoint gets sent through MQTT to SET5.\n*/\n//*****************************************************************************\nlet msg1={};        // pin 1 - SP_Final\nlet msg99={};       // pin 2 - To Log\nlet msg2={};        // pin 3 - SHIFT_Final\n// return [msg1,msg99,msg2]\n\nmsg99.topic = \"Function - Calculate new SP\";        // ToLog\n\n\nvar SP_Final            =global.get('SP_DIRECT_virt',\"file\");                   //\n    if (SP_Final===undefined) {node.warn('Calculate new SP - SP_Final');return null;}\n\nvar F_WAR_onoff         =global.get('Correction_0_WAR_on_off',\"file\");          //\n    if (F_WAR_onoff === undefined) {F_WAR_onoff = 0;}\n    \nvar F_WAR_SP            =global.get('F_WAR_SP');                                //\n    if (F_WAR_SP===undefined) {node.warn('Calculate new SP - F_WAR_SP');return null;}\n\nvar F_RTC_state         =global.get('F_RTC.state',\"file\");          //\n        if (F_RTC_state === undefined) {F_RTC_state=0;}\n        \nvar F_RTC_correction    =global.get('F_RTC.correction_value');                        // Memory Only!\n    if (F_RTC_correction === undefined) { node.warn('Calculate new SP - F_RTC_correction');return null;}\n\nvar F_SS_state          =global.get('Correction_2_softstart_on_off',\"file\");    //\n        if (F_SS_state === undefined) {F_SS_state=0;}\n        \nvar F_SS_correction     =global.get('F_SS_correction');                         //\n    if (F_SS_correction===undefined) {node.warn('Calculate new SP - F_SS_correction');return null;}\n\nvar F_NR_state          =global.get('NightReductionWaterTemp.state',\"file\");            //\n        if (F_NR_state === undefined) {F_NR_state=0;}\n        \nvar F_NR_correction     =global.get('F_NR_correction');                         //\n    if (F_NR_correction===undefined) {node.warn('Calculate new SP - F_NR_correction');return null;}\n\nvar current_sp          =global.get('Main_Target_Temp');                        //\n    if (current_sp===undefined) {node.warn('Calculate new SP - current_sp');return null;}\n\nvar Heating_Mode        =global.get('Heating_Mode',\"file\");\n    if (Heating_Mode===undefined) {node.warn('Calculate new SP - Heating_Mode');return null;}\n\nvar Operating_Mode      =global.get('Operating_Mode_State',\"file\")              //\n\nvar HEAT_SP_lower_limit =global.get('HEAT_SP_lower_limit',\"file\")               //\n    if (HEAT_SP_lower_limit === undefined)  {HEAT_SP_lower_limit = 20;}\n    \nvar HEAT_SP_upper_limit =global.get('HEAT_SP_upper_limit',\"file\")               //\n    if (HEAT_SP_upper_limit === undefined)  {HEAT_SP_upper_limit = 100;}\n\n\n//*****************************************************************************\nif (Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)                         // check if all variables are present befor checking\n            // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    {\n        return null;\n    }\n//*****************************************************************************\n//*****************************************************************************\n\nif (current_sp == 0 || Heating_Mode == 0)\n    {\n\n        var SHIFT_Final_old = global.get('SHIFT_Final',\"file\");\n            if (SHIFT_Final_old === undefined) {SHIFT_Final_old=0;}\n        \n        if (F_RTC_state == 0) { F_RTC_correction = 0;}\n        if (F_SS_state == 0)    {F_SS_correction = 0;}\n        if (F_NR_state == 0)    {F_NR_correction = 0;}\n        \n        var SHIFT_Final = F_RTC_correction + F_SS_correction + F_NR_correction;\n        \n        msg2.payload = SHIFT_Final;\n        msg2.topic = \"Shift\";\n        \n        if (msg2.payload < -5)  {msg2.payload = -5;}\n        if (msg2.payload > 5)   {msg2.payload = 5;}\n        \n        \n//        if (SHIFT_Final_old != SHIFT_Final)\n//            {\n//                global.set('SHIFT_Final',msg2.payload,\"file\");\n//            }\n        msg99.payload   = \"New final T shift calculated: Current T shift: \" + SHIFT_Final_old + \" °C. New calculated T shift:  \" + msg2.payload + \" °C\";\n        \n        return [null,msg99,msg2]\n        //return [SP,toLog,shift]\n    }\n//*****************************************************************************\n//*****************************************************************************\nif (current_sp >= 20 && Heating_Mode == 1)\n    {\n        if (F_WAR_onoff==1)                 {SP_Final   =F_WAR_SP;}\n        if (F_RTC_state == 1)               {SP_Final   = SP_Final  + F_RTC_correction;}\n        if (F_NR_state==1)                  {SP_Final   =SP_Final   + F_NR_correction;}\n        if (F_SS_state==1)                  {SP_Final   =SP_Final   + F_SS_correction;}\n        if (SP_Final<HEAT_SP_lower_limit)   {SP_Final   =HEAT_SP_lower_limit}\n        if (SP_Final>HEAT_SP_upper_limit)   {SP_Final   =HEAT_SP_upper_limit}\n        if (SP_Final<20)                    {SP_Final   =20;}\n    \n        //*****************************************************************************\n        SP_Final = Number(SP_Final).toFixed(0);\n        SP_Final = parseFloat(SP_Final);\n        msg1.payload    = SP_Final;\n        msg1.topic  = \"SP_Final\";\n        \n        global.set('SP_Final',SP_Final,\"file\")\n        \n         if (global.get('Debugging', \"file\") == 1) {\n            msg99.topic = \"*** Function Calculate new SP\";\n            msg99.payload   = \"New final SP calculated: Current setpont: \" + current_sp + \" °C. New calculated setpoint:  <b>\" + SP_Final + \"</b> °C\";//debug\n         }\n\n\n        //*****************************************************************************\n\n        if (SP_Final ==  current_sp)                                            // Check only if there is a difference between SP and current value, a signal should be sent.\n            {\n                return [null,null,null];\n                //return [SP,toLog,shift]\n            }\n        else\n            {\n                if (global.get('Debugging', \"file\") == 1)  return [msg1,msg99,null];  //debug\n                return [msg1, null, null]; \n                //return [SP,toLog,shift]\n            }\n    }\n    \n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1360,
        "wires": [
            [
                "93404b62f7fb0fb2",
                "b36e73e43970dc7c",
                "5e9da82d3dfe26da"
            ],
            [
                "663fd79ce5a1610d"
            ],
            [
                "93404b62f7fb0fb2",
                "b19026440632f6e1"
            ]
        ],
        "outputLabels": [
            "SP_Final",
            "ToLog",
            "Shift to SET5"
        ]
    },
    {
        "id": "8b1072427fdbc1e0",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 700,
        "wires": [
            [
                "36856525108ec859"
            ]
        ]
    },
    {
        "id": "4e9f98728f7e93f3",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 840,
        "wires": [
            [
                "1a9b736187a463f7"
            ]
        ]
    },
    {
        "id": "e340492700d3f5b3",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 980,
        "wires": [
            [
                "1cbf3f3272baec48"
            ]
        ]
    },
    {
        "id": "16054e8334890ad8",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Correction_2_softstart",
        "links": [
            "4c49268a7054041c",
            "02f25651d70831c9"
        ],
        "x": 1555,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d16f38ef74db786a",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SP_WAR (function on)",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "080c11bcc5a2ac73",
            "11338381e8665522"
        ],
        "x": 1555,
        "y": 740,
        "wires": []
    },
    {
        "id": "18fd7ac120089042",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Correction_1_RTC",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "e6999514a091fd05"
        ],
        "x": 1555,
        "y": 780,
        "wires": []
    },
    {
        "id": "93404b62f7fb0fb2",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SP_Final",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "05065bbd47aa9dd3",
            "1f4a153d2239272b"
        ],
        "x": 1745,
        "y": 1340,
        "wires": []
    },
    {
        "id": "34cc66e23b5eec55",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 1755,
        "y": 1240,
        "wires": []
    },
    {
        "id": "663fd79ce5a1610d",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1650,
        "y": 1240,
        "wires": [
            [
                "34cc66e23b5eec55"
            ]
        ]
    },
    {
        "id": "c54efadb07816cb9",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SP RTC result",
        "mode": "link",
        "links": [
            "1bb2933854287555"
        ],
        "x": 1555,
        "y": 820,
        "wires": []
    },
    {
        "id": "b36e73e43970dc7c",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1830,
        "y": 1340,
        "wires": [
            [
                "5dc94533cb5cb4d7",
                "e7cdb0bd6ae8b198"
            ]
        ]
    },
    {
        "id": "04af9373e9f7a428",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Compare SP",
        "func": "/*\nThis function has the purpose to regularly check the actual SP from the heatpump against the calculated setpoint in from the dashboard/functions. \nOnly when there is a deviation between the two, the new setpoint gets sent through MQTT to SET5.\n*/\nvar Heating_Mode        =global.get('Heating_Mode',\"file\");\nvar SP_Final            =global.get('SP_Final',\"file\");\nvar SHIFT_Final         =global.get('SHIFT_Final',\"file\");\n\nvar current_sp          =global.get('Main_Target_Temp');  \nvar Operating_Mode      =global.get('Operating_Mode_State',\"file\")\n\n\n//*****************************************************************************\nif (SP_Final === undefined || current_sp === undefined || Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)                         // check if all variables are present befor checking\n            // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    {\n        msg.payload = 99;\n        return [msg,null];\n    }\n\nelse\n    {\n        if (current_sp == 0 || Heating_Mode == 0)\n            {\n                // Panasonic native WAR mode used\n                if (SHIFT_Final ==  current_sp)\n                    {\n                        msg.payload = 99;\n                        return [msg,null];\n                    }\n                else\n                    {\n                        return null;\n                    }\n            }        \n        if (current_sp >= 20 && Heating_Mode == 1)\n            {\n                // Panasonic Direct modus used\n                if (SP_Final ==  current_sp)                                            // Check only if there is a difference between SP and current value, a signal should be sent.\n                    {\n                        msg.payload = 99;\n                        if (global.get('Debugging', \"file\") == 1) {\n                            let msg99={}; msg99.topic = \"*** Function Compare SP\";\n                            msg99.payload = \"New final SP calculated: Current setpont: \" + current_sp + \" °C. New calculated setpoint:  \" + SP_Final + \" °C\";//debug\n                            if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Compare SP\"); }// only set when undefined\n                            return [msg,msg99];//disable msg99\n                            }\n                        return [msg, null]; \n                    }\n                else\n                    {\n                        return null;\n                    }\n            }\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1460,
        "wires": [
            [
                "5dc94533cb5cb4d7",
                "af810463b7f5e825"
            ],
            [
                "663fd79ce5a1610d"
            ]
        ]
    },
    {
        "id": "5dc94533cb5cb4d7",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "99",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1150,
        "y": 1460,
        "wires": [
            [
                "b7b7a74af61be9e8"
            ]
        ]
    },
    {
        "id": "af810463b7f5e825",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "99",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 540,
        "y": 1460,
        "wires": [
            [
                "04af9373e9f7a428"
            ]
        ]
    },
    {
        "id": "e7cdb0bd6ae8b198",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "trigger",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1460,
        "wires": [
            [
                "af810463b7f5e825"
            ]
        ]
    },
    {
        "id": "e9d9dc531d3b166d",
        "type": "complete",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "scope": [
            "0d996033de2ed84e"
        ],
        "uncaught": false,
        "x": 300,
        "y": 880,
        "wires": [
            [
                "38ef77936170789f"
            ]
        ]
    },
    {
        "id": "4369249a4c68c277",
        "type": "complete",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "scope": [
            "2ade66982bca360c"
        ],
        "uncaught": false,
        "x": 300,
        "y": 1020,
        "wires": [
            [
                "3a7f1334a9422bd3"
            ]
        ]
    },
    {
        "id": "51526ab18642b30b",
        "type": "complete",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "scope": [
            "c5506b5fe3e4d571",
            "b4fb9f63c90d4afb"
        ],
        "uncaught": false,
        "x": 300,
        "y": 1160,
        "wires": [
            [
                "02792d9ac26ffc27"
            ]
        ]
    },
    {
        "id": "38ef77936170789f",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 530,
        "y": 880,
        "wires": [
            [
                "1a9b736187a463f7"
            ]
        ]
    },
    {
        "id": "3a7f1334a9422bd3",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 530,
        "y": 1020,
        "wires": [
            [
                "1cbf3f3272baec48"
            ]
        ]
    },
    {
        "id": "02792d9ac26ffc27",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 530,
        "y": 1160,
        "wires": [
            [
                "d53e66c37991fa8e"
            ]
        ]
    },
    {
        "id": "346a3528a7770803",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb"
        ],
        "x": 1845,
        "y": 900,
        "wires": []
    },
    {
        "id": "fab44b5501eca10e",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "6d5e44060139d9d1"
        ],
        "x": 1695,
        "y": 940,
        "wires": []
    },
    {
        "id": "fd481458ee82463b",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Result",
        "info": "",
        "x": 290,
        "y": 1320,
        "wires": []
    },
    {
        "id": "c477f38740192ea9",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "ToLog",
        "info": "",
        "x": 1850,
        "y": 1240,
        "wires": []
    },
    {
        "id": "7bd31985b9223517",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "FUNCTIONS",
        "info": "",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "cc0bfd5240e5cd1c",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Triggers",
        "info": "",
        "x": 230,
        "y": 660,
        "wires": []
    },
    {
        "id": "50d7d63eec1f72e1",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "eca1e570e844713e",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SUM OF ALL FUNCTIONS",
        "info": "",
        "x": 970,
        "y": 1320,
        "wires": []
    },
    {
        "id": "65e47b8ca0c36fca",
        "type": "mqtt out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SP Ta corrected - SET5 SetZ1HeatRequest",
        "topic": "panasonic_heat_pump/commands/SetZ1HeatRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2050,
        "y": 1460,
        "wires": []
    },
    {
        "id": "36856525108ec859",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 700,
        "wires": [
            [
                "148fdf6802233c77"
            ]
        ]
    },
    {
        "id": "c3a9e17b02222cee",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in RTC Function1",
        "links": [
            "c3c748a1b5f04d42",
            "aad17e70a817393e"
        ],
        "x": 245,
        "y": 800,
        "wires": [
            [
                "bedbded591fa9076"
            ]
        ]
    },
    {
        "id": "bedbded591fa9076",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 800,
        "wires": [
            [
                "1a9b736187a463f7"
            ]
        ]
    },
    {
        "id": "d4cd561c0ac4473e",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 740,
        "wires": [
            [
                "148fdf6802233c77"
            ]
        ]
    },
    {
        "id": "ac55192973591af6",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "TOP27>0 : Pass",
        "func": "var current_sp          =global.get('Main_Target_Temp');                        // TOP27\nif (current_sp > 0)\n    {\n        return msg;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 700,
        "wires": [
            [
                "8b1072427fdbc1e0"
            ]
        ]
    },
    {
        "id": "4051d3cb1ad86dbd",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in 8",
        "links": [
            "d6a9c376dde9c43f"
        ],
        "x": 245,
        "y": 700,
        "wires": [
            [
                "ac55192973591af6"
            ]
        ]
    },
    {
        "id": "0ccf5d93deef2e68",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 1080,
        "wires": [
            [
                "d53e66c37991fa8e"
            ]
        ]
    },
    {
        "id": "4c81e32b9d30b212",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Link in SoftStart function",
        "links": [
            "69d5d3a718793320",
            "8dcafc6e30726812"
        ],
        "x": 245,
        "y": 1080,
        "wires": [
            [
                "0ccf5d93deef2e68"
            ]
        ]
    },
    {
        "id": "549c557827b37714",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1590,
        "y": 860,
        "wires": [
            [
                "663fd79ce5a1610d"
            ]
        ]
    },
    {
        "id": "0d996033de2ed84e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function WAR2DIRECT",
        "func": "// All these functions ONLY need to be executed when the heatpump is in HEAT mode. \nlet msg1    ={};        //  pin 1 - SP_WAR (function on)\nlet msg99   ={};        //  pin 2 - Log information\n\n//******************************************************************************\nvar ThreeWay_Valve_State=global.get('ThreeWay_Valve_State');                    // Get the global variable for current possition of the three way valve. ROOM or DHW mode. (0=HEAT / 1=DHW)\n    if (ThreeWay_Valve_State === undefined) {return null;}\nvar Operating_Mode      =global.get('Operating_Mode_State',\"file\")\n    if (Operating_Mode === undefined) {return null;}\nvar current_sp          =global.get('Main_Target_Temp');                        // TOP27\n    if (current_sp === undefined)   {return null;}\nvar Heating_Mode        =global.get('Heating_Mode',\"file\");                     // TOP76 - Compensation curve or DIRECT mode\n    if (Heating_Mode === undefined) {return null}\nvar war_state           =global.get('Correction_0_WAR_on_off',\"file\");          // Get the global variable. Used to see if the WAR function is enabled.\n    if (war_state === undefined){war_state=0;}\n\n//******************************************************************************\nvar war_ot1         = global.get('war_ot1',\"file\");                             // Outside temperature high         (warm outside)\nvar war_ot2         = global.get('war_ot2',\"file\");                             // Outside temperature intermediate (intermediate outside temperature)\nvar war_ot3         = global.get('war_ot3',\"file\");                             // Outside temperature low          (cold outside)\nvar war_wt1         = global.get('war_wt1',\"file\");                             // Water temperature low            (cold water)\nvar war_wt2         = global.get('war_wt2',\"file\");                             // Water temperature intermediate   (intermediate water temperature)\nvar war_wt3         = global.get('war_wt3',\"file\");                             // Water temperature high           (warm water)\n\n//******************************************************************************\nvar check = (war_ot1+war_ot2+war_ot3+war_wt1+war_wt2+war_wt3);\nif (isNaN(check) || check === undefined)     // if the variables are added to eachother and the result is Not a Number, produce an error message.\n    {   msg99.payload = \"Profile temperatures are not correctly set in the dashboard. Waiting for Panasonic import or user input\"; \n        msg99.topic = \"Function WAR\";\n        return [null,msg99];\n    }\n\n\nvar SP_start       = global.get('SP_DIRECT_virt',\"file\");                  // Get the global variable for SP_DIRECT_virt. Value is set through the dashboard\nif (SP_start === undefined) \n    {\n        SP_start = 20;\n        global.set('SP_DIRECT_virt',20,\"file\");\n    }\n\nvar war_Tb          = global.get('T_outside',\"file\");           // Outdoor temperature.\nif (isNaN(war_Tb) === true || war_Tb === undefined || war_Tb < -50)                      // if the variable is Not a Number, produce an error message.\n    {\n        msg99.payload = \"T_outside is not valid. Waiting for correct value.\"; \n        msg99.topic = \"Function WAR\";\n        return [null,msg99];\n    }\n\nvar F_WAR_old_SP    = global.get('F_WAR_SP');\n    if (F_WAR_old_SP === undefined) \n        {\n            F_WAR_old_SP = SP_start;\n            global.set('F_WAR_SP',SP_start);\n        }\n\n\n\n////////////////////////////////////////////////////////////////////////////////\n//      Calculation of the NR WAR Setpoint\n////////////////////////////////////////////////////////////////////////////////\n\nvar SP_war;                                                     // set empty starting variable\n\nif (war_Tb => war_ot1) \n    {SP_war = war_wt1;}                                         // Range 1\n\nif (war_Tb < war_ot1 && war_Tb > war_ot2)                       // Range 2\n    {SP_war = (((war_wt1-war_wt2)*((war_Tb-war_ot1)/(war_ot1-war_ot2)))+war_wt1);}\n\n\nif (war_Tb <= war_ot2 && war_Tb > war_ot3)                      // Range 3\n    {SP_war = (((war_wt2-war_wt3)*((war_Tb-war_ot2)/(war_ot2-war_ot3)))+war_wt2);}\n\nif (war_Tb <= war_ot3)                                          // Range 4\n    {SP_war = war_wt3;}                                            \n\nSP_war = Number(SP_war).toFixed(0);\nSP_war = parseFloat(SP_war);\n\n\n\n\n////////////////////////////////////////////////////////////////////////////////\n//      SET27 = 0 >>> External Thermostate being used or Compensation curve\n////////////////////////////////////////////////////////////////////////////////\nif (current_sp == 0 || Heating_Mode == 0)\n    {\n        if (war_state==1)\n            {\n                global.set('Correction_0_WAR_on_off',0,\"file\")\n                msg99.payload = \"RoomThermostat found or using Compensation curve. Using internal Panasonic WAR function. NodeRed WAR function is now disabled\"; \n                msg99.topic = \"Function WAR\";\n                return [null,msg99];\n            }\n        global.set('F_WAR_SP',SP_war);\n        return [msg1,null]\n    }\n    \n////////////////////////////////////////////////////////////////////////////////\n//      SET27 > 0 >>> WAR Function\n////////////////////////////////////////////////////////////////////////////////\nelse\n    {\n        if (ThreeWay_Valve_State==1 || Operating_Mode === undefined || current_sp == 0 || Heating_Mode == 0 || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)\n            {\n                return null;                                                        // If state is 1 (DHW mode), correction 0 is direclty exported to the message and the function ends here.\n            }\n        else\n            {\n                msg1.payload = SP_war;                                                         // required\n                msg1.topic='SP_war';\n                msg1.source = 'WAR';\n                \n                if (war_state==0)                                               // If the state is 1 (enabled), AND outside temperature contains a value.\n                                                                                                // Only if above conditions are met, we will go through the calculation.\n                    {\n                        global.set('F_WAR_SP',SP_start);\n                        \n                        return [msg1,null]\n                        \n                    }\n\n                    \n                if (war_state==1)\n                    {\n\n                        if (SP_war == F_WAR_old_SP)\n                            {\n                                return [msg1,null]\n                            }\n                        else\n                            {\n                                global.set('F_WAR_SP',SP_war);\n\n                                msg99.payload   = \"Setpoint change: From \" + F_WAR_old_SP + \" to \" + SP_war + \" °C\"; \n                                msg99.topic     = \"Function WAR\";\n                                \n                                return [msg1,msg99];\n                            }\n                    }\n                    ////////////////////////////////////////////////////////////////////////////////\n            }\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 740,
        "wires": [
            [
                "d16f38ef74db786a",
                "823ef896afa239af"
            ],
            [
                "663fd79ce5a1610d"
            ]
        ],
        "outputLabels": [
            "SP_WAR (function on)",
            "ToLog"
        ],
        "info": "# ALL IN ONE FUNCTION\n\nThis function takes care of WAR, RTC and SoftStart. Comments are within"
    },
    {
        "id": "2ade66982bca360c",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function RTC correction",
        "func": "var Operating_Mode      =global.get('Operating_Mode_State',\"file\")\n\nif (Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)\n    {   \n        return null;\n    }\n\nelse \n{   \n    let msg1={};    // pin 1 - current correction\n    let msg2={};    // pin 2 - current sp\n    let msg99={};   // pin 3\n    msg99.topic = \"Function RTC\"\n    let msg3={};    //  pin 4 - start sp\n    \n    \n    \n    var F_RTC_state = global.get('F_RTC.state',\"file\");         // Get the global variable. Used to see if the RTC function is enabled.\n    if (F_RTC_state === undefined) { F_RTC_state = 0; global.set('F_RTC.state',0,\"file\");}\n        \n    var F_RTC_old_correction = global.get('F_RTC.correction_value');\n        if (F_RTC_old_correction === undefined) { F_RTC_old_correction = 0; global.set('F_RTC.correction_value',0);}\n    \n    var F_WAR_SP                =   global.get('F_WAR_SP');\n        if (F_WAR_SP === undefined) {/*node.warn('RTC correction F_WAR_SP');*/return null}\n    \n    if (F_RTC_state == 0)                         \n        {\n            rtc_correction = 0;               // If RTC is disabled, set correction to 0. end if\n            msg1.payload = rtc_correction; \n            msg1.topic = \"rtc_correction\";\n            \n            msg2.payload = F_WAR_SP + rtc_correction; \n            msg2.topic = \"SP RTC result\";\n            \n            msg3.payload = F_WAR_SP;\n            msg3.topic = \"Start SP\";\n            \n            global.set('F_RTC.correction_value',rtc_correction);\n            return [msg1,msg2,null,msg3]; \n            \n        }\n    \n    else\n        {\n        \n            // Declaration of variables including their values.    \n            var rtc_correction  = 0;                                                // declare local variable, start with value zero\n            var rtc_PV          = global.get('T_room');                             // Get the global variable. THe room temperature for RoomTemperatureCompensation you want to control.\n                if (rtc_PV === undefined) {/*node.warn('RTC correction rtc_PV');*/return null;}\n            var rtc_SP          = global.get('WoonkamerSP',\"file\");                 // Virtual target temperature setpoint for RTC. Set in Dashboard.\n                if (rtc_SP === undefined) {/*node.warn('RTC correction rtc_SP');*/return null;}\n            //var rtc_Tb          = global.get('T_outside',\"file\");                   // Outdoor temperature.\n        \n            var rtc_dT          = (rtc_PV-rtc_SP);                                  // local variable for calculated temperature difference. If > 0 it is too warm, If < 0 it is too cold. \n            rtc_dT = Number(rtc_dT).toFixed(2);\n            rtc_dT = parseFloat(rtc_dT);\n            //node.warn(rtc_dT);\n            //\n            // below are the variables containing the temperature ranges.\n            var rtc_t1          = global.get('rtc_t1',\"file\");                      // Range +3\n            var rtc_t2          = global.get('rtc_t2',\"file\");                      // Range +2\n            var rtc_t3          = global.get('rtc_t3',\"file\");                      // Range +1\n            \n            var rtc_t4          = global.get('rtc_t4',\"file\");                      // Range -1\n            var rtc_t5          = global.get('rtc_t5',\"file\");                      // Range -2\n            var rtc_t6          = global.get('rtc_t6',\"file\");                      // Range -3\n            var rtc_t7          = global.get('rtc_t7', \"file\");                     // Range -custom\n                if (rtc_t7 === undefined) { rtc_t7 = rtc_t6 -0.1;}                  // default just below rtc_t6        \n\n            var rtc_t7_custom_cor = global.get('rtc_t7_custom_cor', \"file\");\n                if (rtc_t7_custom_cor === undefined) {\n                    rtc_t7_custom_cor = 10; // +10 correction default\n                    global.set('rtc_t7_custom_cor', rtc_t7_custom_cor, \"file\");\n                }\n\n            if (isNaN(rtc_t1+rtc_t2+rtc_t3+rtc_t4+rtc_t5+rtc_t6+rtc_t7) === true)               // if the variables are added to eachother and the result is Not a Number, produce an error message.\n                {\n                    msg99.payload = \"RTC function temperatures are not correctly set in the dashboard. Please correct this in the GUI.\"\n                    return [null,null,msg99,null]\n                    \n                }\n            \n            // ADJUST THE VALUES BELOW TO YOUR OWN SITUATION\n        \n            if (rtc_dT >= rtc_t1) {rtc_correction = rtc_correction -1;}                 // It is way too hot.\n            if (rtc_dT >= rtc_t2) {rtc_correction = rtc_correction -1;}                 // It is too hot.\n            if (rtc_dT >= rtc_t3) {rtc_correction = rtc_correction -1;}                 // It is a little too hot.\n        \n            if (rtc_dT < rtc_t3 && rtc_dT > rtc_t4) {rtc_correction = 0;}               // It is right in the middle.... Nice\n\n            if (rtc_dT <= rtc_t4) {rtc_correction = rtc_correction +1;}                 // It is a little too cold\n            if (rtc_dT <= rtc_t5) {rtc_correction = rtc_correction +1;}                 // It is a little a fair bit colder\n            if (rtc_dT <= rtc_t6) {rtc_correction = 3;}                 // It is a little way too cold\n//            node.warn(rtc_dT);\n//            node.warn(rtc_correction);\n\n            // Use incremental_setpoints if switch enabled\n            var F_RTC_incremental_setpoints_state = global.get('F_RTC.incremental_setpoints_state', \"file\");    //switch on/off\n            if (F_RTC_incremental_setpoints_state === undefined) { F_RTC_incremental_setpoints_state = 0;}\n            if ((rtc_dT < rtc_t6 && rtc_dT > rtc_t7) && F_RTC_incremental_setpoints_state == 1)                // in range (between +3 and +custom)\n            {\n                // calculate correction (between +3 and +custom):\n                rtc_correction = rtc_t7_custom_cor - 3;                                 // example (15-3)=12 degrees\n                // calculate temp range:\n                var Range = (rtc_t6 - rtc_t7); // -2.2 - -4.0 = 1.8                     //calculate No. steps    0.1 degrees steps?\n                Range = (Range * 10);                                                   // 18 steps\n                // devide rtc_correction through steps:\n                rtc_correction = (rtc_correction / Range);                              // 12 / 18 = 0.67 degrees-steps\n                // Calculate actual step:\n                var Actual_step = (rtc_t6 - rtc_dT) * 10;                               // stap 17 van 18\n                Actual_step = Number(Actual_step).toFixed(0);\n                // Apply correction at this step:\n                rtc_correction = (Actual_step * rtc_correction);                        // 18 * 0.67 = 11.32\n                rtc_correction = Number(rtc_correction).toFixed(1);                     // 11,3\n                rtc_correction = parseFloat(rtc_correction);\n                rtc_correction = rtc_correction + 3;                                     // 11.3 + 3 = 14.3\n                rtc_correction = Number(rtc_correction).toFixed(1);\n                rtc_correction = parseFloat(rtc_correction);\n                // Show in log what incremental setpoint correction should be and continue:\n                msg99.payload = \"incremental setpoint correction at \" + rtc_PV +  \"°C \" + \"--> \" + rtc_correction + \" °C\";\n                //rtc_correction = (rtc_correction - 3);\n\n                node.send([null, null, msg99, null]); // only to log and continue code from here\n            }\n            \n            if (rtc_dT <= rtc_t7) { rtc_correction = rtc_t7_custom_cor; }                 // It is way too cold: use custom\n            \n            /////////////////////////////////////////////////////////\n            /////////////////////////////////////////////////////////\n        }\n//****************************************************************************** \n    msg1.payload = rtc_correction; \n    msg1.topic = \"rtc_correction\";\n    \n    msg2.payload = F_WAR_SP + rtc_correction; \n    msg2.topic = \"SP RTC result\";\n\n    msg3.payload = F_WAR_SP;\n    msg3.topic = \"Start SP\";\n\n    var T_room = global.get('T_room'); // memory only\n            \n    if (F_RTC_old_correction == rtc_correction)\n        {\n            return [msg1,msg2,null,msg3]; \n        }\n    \n    else\n        {\n            global.set('F_RTC.correction_value',msg1.payload)\n            msg99.payload = \"Correction change: From \" + F_RTC_old_correction + \" to \" + rtc_correction + \" °C (Room actual: \" + T_room + \" °C)\";\n            if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"function rtc\"); }\n            return [msg1,msg2,msg99,msg3]; \n        }\n    \n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 820,
        "wires": [
            [
                "18fd7ac120089042",
                "e81634fb88703859"
            ],
            [
                "c54efadb07816cb9"
            ],
            [
                "549c557827b37714"
            ],
            []
        ],
        "outputLabels": [
            "rtc_correction",
            "SP RTC result",
            "ToLog",
            "Start SP"
        ]
    },
    {
        "id": "c5506b5fe3e4d571",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function NightReduction",
        "func": "\n////////////////////////////////////////////////////////////////////////////////\n// Night Reduction\nvar Operating_Mode      =global.get('Operating_Mode_State',\"file\")\nif (Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)\n    {\n        return null;\n    }\nelse\n    {\n        var nr_correction = global.get('NightReductionWaterTemp.correction',\"file\");\n            if (nr_correction === undefined) \n                {\n                    nr_correction=0;\n                    global.set('NightReductionWaterTemp.correction',0,\"file\");\n                }\n        \n        ////////////////////////////////////////////////////////////////////////////////\n        \n        let msg1={}, msg99={};\n        msg1.payload = nr_correction; \n        msg1.topic = \"nr_correction\";\n        \n        global.set('F_NR_correction',msg1.payload)\n        \n        \n        msg99.payload = \"New correction: \" + nr_correction + \" °C\"; \n        msg99.topic = \"Function NightReduction\";\n        \n        return [msg1,msg99];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 980,
        "wires": [
            [
                "4223b24f5dc06d8e",
                "dc59e4105ac39717"
            ],
            [
                "663fd79ce5a1610d"
            ]
        ],
        "outputLabels": [
            "nr_correction",
            "ToLog"
        ]
    },
    {
        "id": "cb987aa12172f46f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function SoftStart",
        "func": "//////////////////////////////// SOFTSTART /////////////////////////////////////\nlet msg1={};        // pin 1 - F_SS_correction\nlet msg99={};       // pin 2 - To Log\n    msg99.topic = \"Function SoftStart\";\n\nvar F_SS_reset_after_defrost = global.get('F_SS_reset_after_defrost',\"file\");\n    if (F_SS_reset_after_defrost === undefined){\n        F_SS_reset_after_defrost = 0;\n    }\nif (F_SS_reset_after_defrost == 0) { // uitzondering maken tijdens defrost                                   \n    if (global.get('ForceDefrost', \"file\") == 1) \n        {\n            msg99.payload = \"temporally disabled during defrost\"; \n            return [null, msg99];\n        }\n}\n\nvar ThreeWay_Valve_State= global.get('ThreeWay_Valve_State');\n    if(ThreeWay_Valve_State===undefined){return null;}\n    \nvar F_SS_state          = global.get('Correction_2_softstart_on_off',\"file\");       // Get the global variable. Used to see if the softstart function is enabled.\n    if(F_SS_state===undefined)  {global.set('Correction_2_softstart_on_off',0,\"file\");F_SS_state=0;}\n    \nvar F_SS_correction     = 0;\nvar HEAT_SP_lower_limit = global.get('HEAT_SP_lower_limit', \"file\") || 20; \nvar F_SS_old_correction = global.get('F_SS_correction');\n    if (F_SS_old_correction===undefined)    {F_SS_old_correction='0'}\n    //F_SS_old_correction = Number(F_SS_old_correction).toFixed(1);                 // can be removed\n    //F_SS_old_correction = parseFloat(F_SS_old_correction);                        // can be removed\n    \nvar ss_Hz               = global.get('compressor_frequency');                       // Get the global variable for current compressor frequency\n    if (ss_Hz === undefined)    {return null;}\nvar Operating_Mode      = global.get('Operating_Mode_State',\"file\");\nvar SP_start            = global.get('F_WAR_SP');                                   //  Setpoint after WAR calculation\n    if (SP_start === undefined)    {return null;}\n    var F_RTC_correction = global.get('F_RTC.correction_value');                    //  Correction of the RTC function Memory Only!\n    F_RTC_correction    = Number(F_RTC_correction).toFixed(1);                      // round it\n    F_RTC_correction    = parseFloat(F_RTC_correction);\n        if (F_RTC_correction===undefined) {F_RTC_correction=0}\n\nvar F_NR_state = global.get('NightReductionWaterTemp.state', \"file\");                   \nif (F_NR_state === undefined) { F_NR_state = 0; }\n\nif (F_NR_state == 0) { F_NR_correction = 0; }\nvar F_NR_correction     = global.get('F_NR_correction');                            //  Correction of the NightReduction function\n        if (F_NR_correction===undefined) {F_NR_correction=0}\nvar F_SS_SP_start       = SP_start + F_RTC_correction + F_NR_correction;            //  Calculate the starting temperature (SP) for the SoftStart function \n\nvar Defrost             = global.get('ForceDefrost',\"file\")\n    if (Defrost === undefined)  {Defrost = 0;}\n\n//\n\n//***********************************************************************************\nif (F_SS_state == 0 || ss_Hz == 0 || ThreeWay_Valve_State != 0 || Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8 || Defrost==1)                     //  Check if the function is enabled. Check if the compressor is running. Check if 3wayvalvue is in HEAT mode(0).\n    {\n        F_SS_correction = 0;                                                        //  If the function is off, or the compressor is off, set  correction to zero\n        global.set('F_SS_correction',F_SS_correction);                              //  Set the correctionvalue\n        global.set('StartTime', undefined, \"file\");\n        global.set('F_SS_actual_stage', undefined);                                 // 11-01-2023 reset (for debugging/System Check remember the softstart stage)\n        msg1.payload = F_SS_correction; \n        msg1.topic = 'Compressor off. F_SS_correction 0';\n        \n        if (Defrost == 1) {msg1.topic = 'Function SoftStart';msg99.payload = \"Defrost - Correction: 0\"}\n        return [msg1,null];\n    }\n//***********************************************************************************\n//\nelse\n    {\n        var F_SS_new_SP;                                                            //  declare an empty variable\n        var ss_PV_Ta            = global.get('Main_Outlet_Temp');                   //  PV (Ta/outlet) Temperature of water.\n        var ss_PV_Tr            = global.get('Main_Inlet_Temp');                    //  PV (Tr/inlet) Temperature of water\n            if (ss_PV_Ta === undefined || ss_PV_Tr === undefined)   {return null;}\n        var T = '';\n        var C = '';\n        \n        //\n        //***********************************************************************************\n        /////// Timer how long the compressor is on. Runtime //////////\n        var CurrentTime = new Date().getTime();\n        //var StartTime = context.get(\"StartTime\");\n        var StartTime = global.get('StartTime', \"file\");\n        if (StartTime === undefined)\n            {\n                StartTime = CurrentTime;\n                global.set('StartTime', StartTime, \"file\");\n            }\n        var TimeElapsed = ((CurrentTime - StartTime)/1000);\n        TimeElapsed = parseFloat(TimeElapsed.toFixed(0));\n\n\n        //***********************************************************************************\n        var Stage_1_Duration = 180;                                                // Stage 1 - Pump just started duration in seconds\n        //***********************************************************************************\n            \n        if (TimeElapsed < Stage_1_Duration)\n            {\n                global.set('F_SS_actual_stage', \"Stage 1 - just started\");          // 11-01-2023 remember actual stage for debugging/system check)\n                global.set('F_SS_correction_active',1);\n                F_SS_correction = -2;                                               //  Set the starting correction to -3\n                F_SS_new_SP = F_SS_SP_start + F_SS_correction;                      //  Calculate the NEW SP.\n                \n                T = ' - (STARTUP)';\n                \n                if (ss_PV_Ta -2 > F_SS_new_SP)                                      //  Check if the NEW SP is not too low (2C below Ta) \n                    {\n                        F_SS_new_SP             = ss_PV_Ta -2;                      //  NEW SP\n                        F_SS_correction         = F_SS_new_SP - F_SS_SP_start;      //  NEW CORRECTION\n                        T = ' - (CATCH)';\n                    }\n                if (F_SS_new_SP > F_SS_SP_start + 7)                                //  Check if the NEW SP is not too high (4C above original SP) \n                    {\n                        F_SS_new_SP             = F_SS_SP_start + 7;                //  NEW SP\n                        F_SS_correction         = 7;                                //  NEW CORRECTION\n                        T = ' - (CATCH)';\n                    }\n                \n            }\n        \n        //***********************************************************************************\n        //      Stage 2 - waiting for pump to relax\n        //***********************************************************************************\n        var F_SS_stage2 = global.get('F_SS_stage2',\"file\");\n        var F_SS_stage2_limit = global.get('F_SS_stage2_limit',\"file\");\n        F_SS_stage2 = F_SS_stage2 * 60;                                             // convert minutes to seconds\n        \n        \n        if (TimeElapsed >= Stage_1_Duration && TimeElapsed < (F_SS_stage2))\n            {\n                global.set('F_SS_actual_stage', \"Stage 2 - waiting for pump to relax\");          // 11-01-2023 remember actual stage for debugging/system check)\n                global.set('F_SS_correction_active',1);\n                \n                F_SS_new_SP                     = ss_PV_Ta -1;                      //  NEW SP\n                    if (F_SS_new_SP < F_SS_SP_start -3)\n                        {\n                            F_SS_new_SP = F_SS_SP_start -3;\n                        }\n                F_SS_correction                 = F_SS_new_SP - F_SS_SP_start;      //  NEW CORRECTION\n                \n                if (F_SS_correction > F_SS_stage2_limit)\n                    {\n                        F_SS_correction = F_SS_stage2_limit;\n                        F_SS_new_SP = F_SS_SP_start + F_SS_stage2_limit;\n                        C = ' (Capped)'\n                    }\n                T = ' - (STABLE)';\n                \n                if (TimeElapsed <= 300 && F_SS_correction > 0)\n                    {\n                        F_SS_correction = 0;\n                    }\n                if (TimeElapsed > 300 && TimeElapsed <= 600 && F_SS_correction > 1)\n                    {\n                        F_SS_correction = 1;\n                    }\n                \n            }\n        //***********************************************************************************\n        //      Stage 3 - Pump has relaxed. Remove correction, back to original setpoint\n        if (TimeElapsed >= F_SS_stage2)\n            {\n                    global.set('F_SS_actual_stage', \"Stage 3 - Pump has relaxed, back to original setpoint\");          // 11-01-2023 remember actual stage for debugging/system check)\n                    global.set('F_SS_correction_active',0);\n                    F_SS_correction             = 0;                                //  NEW CORRECTION\n                    F_SS_new_SP                 = F_SS_SP_start                     //  NEW SP\n                    T = ' - (ENDING)';\n            }\n    }\n//***********************************************************************************\n//\n\nglobal.set('F_SS_correction',F_SS_correction);\nmsg1.payload = F_SS_correction; \nmsg1.topic = 'F_SS_correction ' + T;\n\n//*****************************************************************************\n// calculate temp SP_Final *note* only for log message\nvar F_WAR_onoff = global.get('Correction_0_WAR_on_off', \"file\") || 0;\nvar F_WAR_SP    = global.get('F_WAR_SP');\nvar F_RTC_state = global.get('F_RTC.state', \"file\") || 0;\nvar F_NR_state  = global.get('NightReductionWaterTemp.state', \"file\") || 0;\n    if (F_NR_state == 0) { F_NR_correction = 0; }\nvar SP_Final    = global.get('SP_DIRECT_virt', \"file\");\n    if (F_WAR_onoff == 1) { SP_Final = F_WAR_SP; }\n    if (F_RTC_state == 1) { SP_Final = SP_Final + F_RTC_correction; }\n    if (F_NR_state  == 1) { SP_Final = SP_Final + F_NR_correction; }\n\n//*****************************************************************************\n\n\nif (F_SS_old_correction == F_SS_correction) {\n        context.set(\"StartTime_phase2\",undefined);\n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }\n        return [msg1,null];\n}\n\nif (F_SS_correction > F_SS_old_correction)                                    //  reduced response scenario (stage 2)\n{\n    var StartTime_phase2 = context.get(\"StartTime_phase2\");\n    if (StartTime_phase2 === undefined) \n            {\n                StartTime_phase2 = CurrentTime;\n                context.set(\"StartTime_phase2\",StartTime_phase2);\n            }\n    \n    var TimeElapsed_phase2 = ((CurrentTime - StartTime_phase2)/1000);\n    TimeElapsed_phase2 = parseFloat(TimeElapsed.toFixed(0));\n    \n    if ( (TimeElapsed > Stage_1_Duration && TimeElapsed_phase2 < 80) || (TimeElapsed < Stage_1_Duration && TimeElapsed_phase2 < 9) )   \n        {\n            global.set('F_SS_correction',F_SS_old_correction);\n            if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }\n            msg99.payload = \"Test************************************** SP: \" + msg1.payload;\n            return [msg1,msg99];//change back msg99 to null\n        }\n    \n    else {\n        SP_Final += F_SS_correction;\n        SP_Final = Math.round(SP_Final * 10) / 10;\n\n        msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + F_SS_correction + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n        var current_sp = global.get('Main_Target_Temp');    \n        context.set(\"StartTime_phase2\", CurrentTime); \n        var Debugging = global.get('Debugging', \"file\");                                            \n        if (Number(SP_Final).toFixed(0) == current_sp && Debugging == 0) return [null, null];   //update 9-12-2022 (only send when needed) \n        if (Number(SP_Final).toFixed(0) == current_sp && Debugging == 1) { msg99.topic = \"*** \" + msg99.topic;    return [null, msg99];}  //update 9-12-2022 (send when Extend logging is on)\n        if (Number(SP_Final).toFixed(0) < HEAT_SP_lower_limit)           return [null, null];   //update 16-01-2023 (only send when sp higher then HEAT_SP_lower_limit) \n        //if (global.get('Debugging', \"file\") == 1) {\n        //    var compressor_runtime = global.get('compressor_runtime', \"file\")\n        //    msg99.topic = \"***** \" + msg99.topic;\n        //    msg99.payload = \"SP_start: \" + F_SS_SP_start + \", old_corr: \" + F_SS_old_correction + \", new corr: \" + F_SS_correction + \", Inlet: \" + ss_PV_Tr + \", Outlet: \" + ss_PV_Ta + \", SP: \" + SP_Final; node.send([null, msg99]);\n        //    return [null,msg99]; // fix 16-01-2023\n        //    } \n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }\n        return [msg1,msg99];\n        }\n        \n}\n\nelse\n    {\n        SP_Final += F_SS_correction;\n        SP_Final = Math.round(SP_Final * 10) / 10;\n        \n        msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + F_SS_correction + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n        context.set(\"StartTime_phase2\", CurrentTime);\n        var current_sp = global.get('Main_Target_Temp');  \n        var Debugging = global.get('Debugging', \"file\");                                         \n        if (Number(SP_Final).toFixed(0) == current_sp && Debugging == 0) return [null, null];    //update 9-12-2022 (only send when needed)\n        if (Number(SP_Final).toFixed(0) == current_sp && Debugging == 1) { msg99.topic = \"*** \" + msg99.topic; return [null, msg99]; }   //update 9-12-2022 (send when Extend logging is on)\n        if (Number(SP_Final).toFixed(0) < HEAT_SP_lower_limit)           return [null, null];    //update 16-01-2023 (only send when sp higher then HEAT_SP_lower_limit)\n        //if (global.get('Debugging', \"file\") == 1) {\n        //    var compressor_runtime = global.get('compressor_runtime', \"file\")\n        //    msg99.topic = \"*** \" + msg99.topic;\n        //    msg99.payload = \"SP_start: \" + F_SS_SP_start + \", old_corr: \" + F_SS_old_correction + \", new corr: \" + F_SS_correction + \", Inlet: \" + ss_PV_Tr + \", Outlet: \" + ss_PV_Ta + \", SP: \" + SP_Final; node.send([null, msg99]);\n        //    return [null, msg99]; // fix 16-01-2023\n        //    } \n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }\n        return [msg1,msg99];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1120,
        "wires": [
            [
                "16054e8334890ad8",
                "2f5e3d38d1cdd9b2"
            ],
            [
                "663fd79ce5a1610d"
            ]
        ],
        "outputLabels": [
            "F_SS_correction",
            "ToLog"
        ]
    },
    {
        "id": "4223b24f5dc06d8e",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "91bece54d7a13eb3"
        ],
        "x": 1555,
        "y": 980,
        "wires": []
    },
    {
        "id": "b19026440632f6e1",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1830,
        "y": 1380,
        "wires": [
            [
                "b7b7a74af61be9e8"
            ]
        ]
    },
    {
        "id": "b7b7a74af61be9e8",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Heatpump_State check",
        "func": "var Heatpump_State      = global.get(\"Heatpump_State\",\"file\");\n    if (Heatpump_State == 0 || Heatpump_State === undefined)\n        {\n            return null;\n            \n        }\n    else \n        {\n\n            return msg;\n            \n        }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1460,
        "wires": [
            [
                "56dc48f96b44ec8e"
            ],
            []
        ]
    },
    {
        "id": "987d38642eaa3c4c",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 530,
        "y": 1360,
        "wires": [
            [
                "add6fa4d403dd143"
            ]
        ]
    },
    {
        "id": "56dc48f96b44ec8e",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "100",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1580,
        "y": 1460,
        "wires": [
            [
                "1b409e1ea72f94dd"
            ]
        ]
    },
    {
        "id": "7c6f02c851467bc0",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out to set Quietlevel",
        "mode": "link",
        "links": [
            "765b4d77a9fd44cc"
        ],
        "x": 1555,
        "y": 1020,
        "wires": []
    },
    {
        "id": "b4fb9f63c90d4afb",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function Quietmode Add-on",
        "func": "// Make an exception (bypass) during defrost routine:\nif (global.get('ForceDefrost', \"file\") == 1) {\n    return [null, null]; // Do NOT send to log otherwise the filter node will pass this disabled-msg and SS disabled-msg in turn.\n}\n\nlet msg2 = {}; //to Input LOG\n\nvar SS_Quietmode_on_off = global.get(\"SS_Quietmode_on_off\", \"file\");                // Status switch SS_Quietmode \nif (SS_Quietmode_on_off === 0 || SS_Quietmode_on_off === undefined) \n    {\n        return [null, null];                                                        //leave function when switch is off\n    } \n\nvar Quiet_Mode_Level            = global.get('Quiet_Mode_Level', \"file\");           //check current Quietmode level\nvar Previous_Quiet_Mode_Level   = global.get('Previous_Quiet_Mode_Level', \"file\");  //check previous Quietmode level\nif (Previous_Quiet_Mode_Level === undefined) { global.set('Previous_Quiet_Mode_Level', 0, \"file\"); }\n\n//get Quietmode_time, error when no time!\nvar Quietmode_time              = global.get('Quietmode_time', \"file\");             //after this time the Quietmode will restore to its previous level\nif (Quietmode_time === undefined) \n    {\n        node.warn(\"Error: No Quietmode_time found!\");\n    }\n\n//test if compressor is off\nvar ss_Hz                           = global.get('compressor_frequency');           // Get the global variable for current compressor frequency\n\n// now the real action:\nif (ss_Hz == 0) \n    { \n        global.set(\"StartTimeQuietmode\", undefined);        // reset count time\n        if (Quiet_Mode_Level == Previous_Quiet_Mode_Level)  //allready finsihed Quietmode run and reset to Previous_Quiet_Mode_Level\n            {\n                // set Quietmode again for next run\n                msg2.topic          = \"Function - SoftStart Quietmode\";\n                msg2.payload        = \"Run finished, reset for next run\";\n                msg.payload         = 3;//send to Quietmode editbox again\n                msg.source = \"SoftStart Quietmode\";\n                return [msg, msg2];\n            }\n        return [null, null]; // exit \n    }                                                                           //reset time \n\nif (ss_Hz > 0) //start counting\n    {\n        /////// Timer how long the compressor is on.\n        var CurrentTime             = new Date().getTime();\n        var StartTimeQuietmode      = global.get(\"StartTimeQuietmode\");\n        if (StartTimeQuietmode === undefined) \n            {\n                StartTimeQuietmode  = CurrentTime;\n                global.set(\"StartTimeQuietmode\", StartTimeQuietmode);\n            }\n        var TimeElapsed             = ((CurrentTime - StartTimeQuietmode) / 1000);\n        TimeElapsed                 = parseFloat(TimeElapsed.toFixed(0));\n        //***********************************************************************************\n        var Stage_1_Duration        = (Quietmode_time * 60);                                        // Phase 1 duration in seconds\n        //***********************************************************************************\n        // Stage 1 - Compressor just started\n        if (TimeElapsed < Stage_1_Duration) \n            {\n                //do nothing, mayby something to log...\n            }\n        // Stage 2 - time to switch Quitemode back to previous state\n        if (TimeElapsed >= Stage_1_Duration) \n        {\n            var Current             = global.get('Quiet_Mode_Level', \"file\"); //check current setting Should be level 3\n            //only send msg when change needed (but send end Quietmode to log anyway)\n            msg2.topic              = \"Function - SoftStart Quietmode\";\n            msg2.payload            = \"finished, now restoring to level \" + Previous_Quiet_Mode_Level;\n            if (Current != Previous_Quiet_Mode_Level) \n                {\n                    msg.payload     = Previous_Quiet_Mode_Level; //restore Quietlevel\n                    msg.source = \"SoftStart Quietmode\";\n                    return [msg, msg2];\n                } \n            else\n                {\n                    return [null, null];                                                //send nothing\n                }\n        }\n    \n    }\n\nreturn [null, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1040,
        "wires": [
            [
                "d8a6057be4ca32cd",
                "7fafbc0171abf5e3"
            ],
            [
                "663fd79ce5a1610d"
            ]
        ],
        "outputLabels": [
            "send to Quietmode",
            "Input LOG"
        ]
    },
    {
        "id": "0f365a79d7e2857d",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Exit to Set Quietlevel link-in",
        "info": "",
        "x": 1820,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d8a6057be4ca32cd",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1470,
        "y": 1020,
        "wires": [
            [
                "7c6f02c851467bc0"
            ]
        ]
    },
    {
        "id": "d53e66c37991fa8e",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "ping",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 1120,
        "wires": [
            [
                "cb987aa12172f46f"
            ]
        ]
    },
    {
        "id": "1cbf3f3272baec48",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "ping",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 980,
        "wires": [
            [
                "c5506b5fe3e4d571"
            ]
        ]
    },
    {
        "id": "1a9b736187a463f7",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "ping",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 860,
        "wires": [
            [
                "2ade66982bca360c",
                "2695bccfb69a52d5",
                "89251fd3ee02e8b9"
            ]
        ]
    },
    {
        "id": "148fdf6802233c77",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "ping",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 740,
        "wires": [
            [
                "0d996033de2ed84e"
            ]
        ]
    },
    {
        "id": "1b409e1ea72f94dd",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active') == 1) {\n    let msg99 = {}; // pin 2 - To Log\n    msg99.topic = \"SYSTEM\";\n    msg99.payload = \"MQTT-Commands are blocked, did not send MQTT - \" + msg.topic + \" \" + msg.payload;\n    global.set('MQTT_Source', undefined); // clear if blocked\n    return [null, msg99];\n    }\n\nif (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SP Calculation\"); }// only set when undefined\n\nreturn [msg, null]; //send SP",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1460,
        "wires": [
            [
                "65e47b8ca0c36fca"
            ],
            [
                "7ddd3f5d8f76897e"
            ]
        ]
    },
    {
        "id": "7ddd3f5d8f76897e",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 1835,
        "y": 1460,
        "wires": []
    },
    {
        "id": "2f5e3d38d1cdd9b2",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 91",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 1120,
        "wires": []
    },
    {
        "id": "823ef896afa239af",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 93",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 740,
        "wires": []
    },
    {
        "id": "7fafbc0171abf5e3",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 94",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 1040,
        "wires": []
    },
    {
        "id": "dc59e4105ac39717",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 95",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 980,
        "wires": []
    },
    {
        "id": "1bf606367c4ff65f",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 96",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 880,
        "wires": []
    },
    {
        "id": "e81634fb88703859",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 97",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 820,
        "wires": []
    },
    {
        "id": "5e9da82d3dfe26da",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 98",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 1320,
        "wires": []
    },
    {
        "id": "398d29ed6f37b424",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1470,
        "y": 920,
        "wires": [
            [
                "663fd79ce5a1610d"
            ]
        ]
    },
    {
        "id": "2695bccfb69a52d5",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function RTC automation",
        "func": "////////////////////////////////////////////////////////////////////////////\n////////////////////////// RTC - ON/OFF function ///////////////////////////\n//\n//\n//  This function has the goal to act when the temperature in the room is too high.\n//  It can either turn off the heatpump, or take the [heat]-mode out of the current operating mode.\n//  \nvar MQTT = global.get('MQTT',\"file\");\n\n\nif (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_rtc_onoff == 1)){\n//node.warn('passed blockcheck');\n    let msg1    ={};        //  pin 1 - Output to power pump on/off \n    msg1.source = \"flow\";\n    \n    let msg2    ={};        //  pin 2 - Output to Operating Mode\n    let msg99   ={};        //  pin 3 - Messages to Log\n    //\n    //  return [msg1,msg2,msg99]\n    \n    var Sterilization_active        =global.get('Sterilization_active',\"file\");\n        if (Sterilization_active===undefined)   {Sterilization_active=0}\n    \n    var Force_DHW_active            =global.get('Force_DHW_active',\"file\");\n        if (Force_DHW_active===undefined)   {Force_DHW_active=0}   \n\n    var VirtualState = global.get('VirtualState'); //used to prevent unwanted shutdown detection \n    \n    var Operating_Mode              =global.get('Operating_Mode_State',\"file\");\n        if (Operating_Mode === undefined)   {node.warn('RTC on_off Operating_Mode');return null;}\n    //  Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    //\n    var F_RTC_state = global.get('F_RTC.state',\"file\");         // Get the global variable. Used to see if the RTC function is enabled.\n    if (F_RTC_state === undefined) { F_RTC_state=0;}\n    //\n    var F_RTC_F1_power_state = global.get('F_RTC.F1_power_state',\"file\");\n        if (F_RTC_F1_power_state === undefined) { F_RTC_F1_power_state=0;}         // Get the global variable. Used to see if the RTC function is enabled through GUI.\n        \n    var F_RTC_F2_OM_state = global.get('F_RTC.F2_OM_state',\"file\")\n        if (F_RTC_F2_OM_state === undefined) { F_RTC_F2_OM_state=0;}         // Get the global variable. Used to see if the RTC function is enabled through GUI.\n    \n    \n    var SolarFunction_active            = global.get(\"SolarFunction_active\",\"file\");\n        if (SolarFunction_active === undefined) {SolarFunction_active=0;}\n    //////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////////////\n    \n    \n    if ((F_RTC_F1_power_state == 0 && F_RTC_F2_OM_state == 0) || Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8 || Sterilization_active == 1 || Force_DHW_active == 1 || SolarFunction_active == 1)     //  First IF\n        {   \n            global.set('F_RTC.on_off_status',undefined,\"file\");\n            return null;\n        }\n    \n    \n    \n    else \n        {   \n            // Declaration of variables including their values.    \n            var rtc_PV          = global.get('T_room');                             // Get the global variable. THe room temperature for RoomTemperatureCompensation you want to control.\n                if (rtc_PV===undefined) {node.warn('RTC on_off rtc_PV');return null}\n            var rtc_SP          = global.get('WoonkamerSP',\"file\");                 // Virtual target temperature setpoint for RTC. Set in Dashboard. \n                if (rtc_SP===undefined) {node.warn('RTC on_off rtc_SP');return null}\n            var rtc_dT          = (rtc_PV-rtc_SP);                                  // local variable for calculated temperature difference. If > 0 it is too warm, If < 0 it is too cold. \n            \n            var Heatpump_State  = global.get('Heatpump_State',\"file\");              // get current state of the heatpump. on or off (1 or 0)\n            // below are the variables containing the temperature ranges.\n            var rtc_off         = global.get('rtc_off',\"file\");                     // Range turn heatpump off\n                if (rtc_off === undefined)  \n                    {\n                        rtc_off = 10;\n                        global.set('rtc_off',10,\"file\");\n                    }\n            var rtc_on          = global.get('rtc_on',\"file\");                      // Range turn heatpump on\n                if (rtc_on === undefined)   \n                    {\n                        rtc_on = -10;\n                        global.set('rtc_on',-10,\"file\");\n                    }\n            \n            var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n            \n            msg99.topic     = \"Function RTC\";\n            \n            //*****************************************************************************\n            //////////////////////////////////////////////////////////////////////////////////////////////////////\n            //////////////////////////////////////////////////////////////////////////////////////////////////////\n            // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n            if (rtc_off <= rtc_on)\n                {\n                    //node.warn('RTC function: Current OFF temperature is lower than the ON temperature. You must correct this !! ');\n                    msg99.payload   = \"<b>ERROR:</b> Current OFF temperature is lower than the ON temperature. You must correct this !!\"; \n                    return [null,null,msg99];\n                }\n            \n            if (rtc_dT > rtc_off)                           {global.set('F_RTC.on_off_status',0,\"file\");}\n            if (rtc_dT >= rtc_on && rtc_dT <= rtc_off)      {global.set('F_RTC.on_off_status',1,\"file\");}\n            if (rtc_dT < rtc_on)                            {global.set('F_RTC.on_off_status',2,\"file\");}\n            \n            \n            //*****************************************************************************\n            //      Scenario 1: the roomtemperature is high and above the 'off'limit. Function start\n            //*****************************************************************************\n        if (rtc_dT > rtc_off && Heatpump_State == 1 && Operating_Mode != 3 && VirtualState == 1)\n                {\n                    //  Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                    if ((Operating_Mode == 0 || Operating_Mode == 2) && F_RTC_F1_power_state == 1)\n                                                {\n                                                    global.set('F_RTC.on_off_active',1,\"file\");                           // TEST1 commented out 22-11-2022 Ed\n                                                    msg1.payload    = 0;\n                                                    msg1.source = \"flow\";\n                                                    msg1.topic      = \"new_heatpump_power\";\n                                                    msg99.payload   = \"on/off activated - Turn off power (Room temp: \" + rtc_PV + \"°C)\";\n                                                    global.set('MQTT_Source', \"rtc on/off\");\n                                                    return [msg1,null,msg99]; \n                                                }\n                                                \n                    if ((Operating_Mode == 4 || Operating_Mode == 6) && F_RTC_F2_OM_state == 1)    \n                                                {\n                                                    if (F_stored_next_operating_mode === undefined)\n                                                        {\n                                                            global.set('F_stored_next_operating_mode',Operating_Mode,\"file\");\n                                                        }\n                                                    global.set('F_RTC.on_off_active',1,\"file\");                           // TEST1 commented out 22-11-2022 Ed\n                                                    msg2.payload    = 3;\n                                                    msg2.topic      = \"new_Operating_Mode\";\n                                                    if (Operating_Mode == 4) { Operating_Mode = \"Heat+DHW\"; }\n                                                    if (Operating_Mode == 6) { Operating_Mode = \"Auto(Heat)+DHW\"; }\n                                                    msg99.payload = \"on/off activated - Operating mode from \" + Operating_Mode + \" to DHW only\";\n                                                    global.set('MQTT_Source', \"rtc on/off\");\n                                                    return [null,msg2,msg99]; \n                                                }\n                                                \n                }\n            //*****************************************************************************\n            //      Scenario 2: the roomtemperature is low enough again. Function end\n            //*****************************************************************************\n            if (rtc_dT < rtc_on)\n                {\n                if (Heatpump_State == 0 && VirtualState == 0)    \n                                                {\n                                                    global.set('F_RTC.on_off_active',0,\"file\"); \n                                                    msg1.payload    = 1;\n                                                    msg1.source = \"flow\";\n                                                    msg1.topic      = \"new_heatpump_power\";\n                                                    msg99.payload   = \"on/off - Turn on power (Room temp: \" + rtc_PV + \"°C)\";\n                                                    global.set('MQTT_Source', \"rtc on/off\");\n                                                    return [msg1,null,msg99]; \n                                                }\n                if (Heatpump_State == 1 && VirtualState == 1)    \n                                                    {\n                                                        global.set('F_RTC.on_off_active',0,\"file\"); \n                                                        var OM; // create empty\n                                                        if (F_stored_next_operating_mode === undefined && Operating_Mode != 3) \n                                                        {\n                                                            if (Operating_Mode == 0) {F_stored_next_operating_mode = 0;}\n                                                            if (Operating_Mode == 1) {F_stored_next_operating_mode = 1;}\n                                                            if (Operating_Mode == 2) {F_stored_next_operating_mode = 2;}\n                                                            if (Operating_Mode == 3) {F_stored_next_operating_mode = 3;}\n                                                            if (Operating_Mode == 4) {F_stored_next_operating_mode = 4;}\n                                                            if (Operating_Mode == 5) {F_stored_next_operating_mode = 5;}\n                                                            if (Operating_Mode == 6) {F_stored_next_operating_mode = 6;}\n                                                            if (Operating_Mode == 7) {F_stored_next_operating_mode = 7;}\n                                                            if (Operating_Mode == 8) {F_stored_next_operating_mode = 8;}\n                                                            \n                                                            //msg99.payload   = \"on/off deactivated - Previous OM not found. Restored OM to default 0 (Heat only)\";\n                                                            OM = F_stored_next_operating_mode;\n                                                            if (OM == 0) OM = \"Heat only\"; if (OM == 1) OM = \"Cool only\"; if (OM == 2) OM = \"Auto(Heat)\"; if (OM == 3) OM = \"DHW only\"; if (OM == 4) OM = \"Heat+DHW\"; if (OM == 5) OM = \"Cool+DHW\"; if (OM == 6) OM = \"Auto(Heat)+DHW\"; if (OM == 7) OM = \"Auto(Cool)\"; if (OM == 8) OM = \"Auto(Cool)+DHW)  \";\n                                                            msg99.payload = \"Operation mode to \" + OM;\n                                                            \n                                                        }\n                                                    else \n                                                        {\n                                                            //msg99.payload   = \"on/off deactivated - Restored to OM \" + F_stored_next_operating_mode;\n                                                            OM = F_stored_next_operating_mode;\n                                                            if (OM == 0) OM = \"Heat only\"; if (OM == 1) OM = \"Cool only\"; if (OM == 2) OM = \"Auto(Heat)\"; if (OM == 3) OM = \"DHW only\"; if (OM == 4) OM = \"Heat+DHW\"; if (OM == 5) OM = \"Cool+DHW\"; if (OM == 6) OM = \"Auto(Heat)+DHW\"; if (OM == 7) OM = \"Auto(Cool)\"; if (OM == 8) OM = \"Auto(Cool)+DHW)  \";\n                                                            msg99.payload = \"Restored to operation mode \" + F_stored_next_operating_mode + \" (\" + OM + \")\";\n                                                        }\n                                                    msg2.payload    = F_stored_next_operating_mode;\n                                                    msg2.topic      = \"new_Operating_Mode\";\n                                                    \n                                                    global.set('F_stored_next_operating_mode',undefined,\"file\");\n                                                    //if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"rtc on/off\"); }\n                                                    return [null,msg2,msg99]; \n                                                }\n                    \n                }  \n    //******************************************************************************\n        }\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//global.set('F_stored_next_operating_mode',4,\"file\");",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 900,
        "wires": [
            [
                "346a3528a7770803",
                "1bf606367c4ff65f"
            ],
            [
                "fab44b5501eca10e"
            ],
            [
                "398d29ed6f37b424"
            ]
        ],
        "outputLabels": [
            "Output to pump on/off ",
            "Output to Operating Mode",
            "Messages to Log"
        ]
    },
    {
        "id": "0cde3fce7ebc5dce",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "2c5b52fee866e46a",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Read me -->",
        "info": "Wat als we nu de trigger 3ms vervangen door de trigger 30 sec om de softstart te temmen in updates?\n\ndie 30sec trigger node dropt ook alle eerdere berichten behalve de laatste in die 30 seconden.",
        "x": 810,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c86e3d7ad005b93a",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "ping",
        "op1type": "nul",
        "op2type": "str",
        "duration": "30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 1040,
        "wires": [
            [
                "b4fb9f63c90d4afb"
            ]
        ]
    },
    {
        "id": "ed155b604642d354",
        "type": "tab",
        "label": "WP Degreedays",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1c223a510a8ec72d",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "Combined bar-chart",
        "style": {
            "label": true
        },
        "nodes": [
            "757d35eee93ec9e7",
            "2391637fadbbf190",
            "6472e1e423188a37",
            "41e8d01708c19225",
            "3ce36bc606018d50",
            "681a0775921a043e",
            "b2548a4bf37f2567",
            "6bb3b71758d24fd0",
            "42fb2dc4dec11e93",
            "fc68ffd1a284a6bd",
            "e598f3cca51f28d1",
            "898b02a132291b49"
        ],
        "x": 54,
        "y": 1119,
        "w": 1398,
        "h": 602
    },
    {
        "id": "6a01f1b80ccf3218",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "Source information",
        "style": {
            "label": true
        },
        "nodes": [
            "fdb9e1be23998039",
            "bddac0d27a1343a8",
            "0c9b408b44a185a3",
            "a09512145dbf8d8a",
            "2064b5a11ffc43b3"
        ],
        "x": 54,
        "y": 39,
        "w": 832,
        "h": 122
    },
    {
        "id": "2b75a55bb8fb12c6",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "W to kWh usage conversion [HEAT]",
        "style": {
            "label": true
        },
        "nodes": [
            "6a7fa8b57f2d9800",
            "5792c915eb0eb380",
            "974b24f717fe8560"
        ],
        "x": 64,
        "y": 199,
        "w": 872,
        "h": 82
    },
    {
        "id": "5ffcc1056a276bf5",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "Combined bar-chart",
        "style": {
            "label": true
        },
        "nodes": [
            "10a3251239b22cd4",
            "b44fca625044b56c",
            "6db1485dd36081ec",
            "a9584fa0cadac44b",
            "5b9db86809583efd",
            "c0f559e2c7905a0e",
            "3a9d746ecf027578",
            "5f7678f15c215dc9",
            "16b0fcf56b6d17f8",
            "d734c640b789ff1e",
            "d44f1a1993a8a44f",
            "e68356272f1f529b"
        ],
        "x": 44,
        "y": 439,
        "w": 1398,
        "h": 622
    },
    {
        "id": "27d590581cd92df1",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "W to kWh usage conversion [DHW]",
        "style": {
            "label": true
        },
        "nodes": [
            "05c67c5f7508a04d",
            "cd16de04c8fa639a",
            "2cc9fde214b13621"
        ],
        "x": 54,
        "y": 299,
        "w": 872,
        "h": 82
    },
    {
        "id": "6472e1e423188a37",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Bucket 2 - Degree days calculation",
        "style": {
            "fill": "#00876C",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "cff31036dc296d8d",
            "7629b6d3d87712ff",
            "e9d6a960b09e05b8",
            "3043e3c17ff68920"
        ],
        "x": 84,
        "y": 1439,
        "w": 1332,
        "h": 82
    },
    {
        "id": "3ce36bc606018d50",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Bucket 1 - kWh calculation",
        "style": {
            "fill": "#F59B56",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "550d61dd1ac867d3",
            "41bc927c7f5116b1",
            "dc13db3939bf2d7f",
            "61e1918ce41f34f7"
        ],
        "x": 84,
        "y": 1339,
        "w": 1332,
        "h": 82
    },
    {
        "id": "6db1485dd36081ec",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Bucket 2 - Degree days calculation",
        "style": {
            "fill": "#00876C",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "d64accce0bd0c291",
            "7887aff049a582de",
            "95923454c02c9c72",
            "29a4cb237663e973"
        ],
        "x": 84,
        "y": 779,
        "w": 1332,
        "h": 82
    },
    {
        "id": "5b9db86809583efd",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Bucket 1 - kWh calculation HEAT",
        "style": {
            "fill": "#F59B56",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "9a88d9c8f4a6c2a5",
            "38893966085dd228",
            "6988051cc52f2c86",
            "0ae4268d42429bac"
        ],
        "x": 84,
        "y": 679,
        "w": 1332,
        "h": 82
    },
    {
        "id": "d734c640b789ff1e",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Bucket 2 - kWh calculation DHW",
        "style": {
            "fill": "#DE425B",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "65322aec4f8fd58e",
            "018e987e0d4672b6",
            "91840e451e332fa6",
            "935535fc205e470c"
        ],
        "x": 84,
        "y": 579,
        "w": 1332,
        "h": 82
    },
    {
        "id": "fc68ffd1a284a6bd",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "",
        "style": {
            "fill": "#DE425B",
            "fill-opacity": "0.5",
            "label": true
        },
        "nodes": [
            "e800de9b472a5516",
            "1073d8f9d7a572a1",
            "e8a39538d051ed80",
            "868b4c6128111bb6"
        ],
        "x": 84,
        "y": 1239,
        "w": 1342,
        "h": 82
    },
    {
        "id": "d44f1a1993a8a44f",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2ee679408e4ccc6f"
        ],
        "x": 1124,
        "y": 919,
        "w": 292,
        "h": 82
    },
    {
        "id": "e598f3cca51f28d1",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4eaa2cfa2749c551"
        ],
        "x": 1124,
        "y": 1579,
        "w": 292,
        "h": 82
    },
    {
        "id": "6a7fa8b57f2d9800",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "2b75a55bb8fb12c6",
        "name": "",
        "links": [
            "9de1bde370b68508"
        ],
        "x": 105,
        "y": 240,
        "wires": [
            [
                "5792c915eb0eb380"
            ]
        ]
    },
    {
        "id": "5792c915eb0eb380",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "2b75a55bb8fb12c6",
        "name": "Energy_Consumption_HEAT_kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit;\n\n    var LastMessage = msg.payload;\n    var LastTopic= msg.topic;\n    \n    if (PreviousTime === undefined) \n        {\n            context.set('PreviousTime',CurrentTime);\n            exit = true;\n        }\n        \n    else if (PreviousMessage === undefined) \n        {\n            context.set('PreviousMessage',msg.payload);\n            exit = true;\n        }\n    else if (PreviousTopic === undefined) \n        {\n            context.set('PreviousTopic',msg.topic);\n            exit = true;\n        }\n    \n    else {\n                \n            TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n            context.set('PreviousTime',CurrentTime);\n            context.set('PreviousMessage',msg.payload);\n            context.set('PreviousTopic',msg.topic);\n            msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n            msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n            \n            \n            msg1.payload = (TimeElapsed + \"  Seconds\");\n            temp = parseFloat(TimeElapsed.toFixed(0));\n            msg2.payload = temp;\n            msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n            msg5.payload = (PreviousMessage * ( temp / 3600000 ));   //  Calculation to Wh portion\n            Number(msg5.payload).toFixed(4);\n            msg5.topic = 'Energy_Consumption_HEAT_kWh';\n       }\n    if (exit === true)\n        {return null;}\n    else     \n        {return msg5;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 240,
        "wires": [
            [
                "974b24f717fe8560"
            ]
        ],
        "outputLabels": [
            "Energy_Consumption_HEAT_kWh"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "cff31036dc296d8d",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "6472e1e423188a37",
        "name": "bar-chart-data degreedays-31d",
        "x_interval": "days",
        "x_size": "31",
        "unit": "",
        "precision": "2",
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 850,
        "y": 1480,
        "wires": [
            [
                "e9d6a960b09e05b8"
            ]
        ]
    },
    {
        "id": "41bc927c7f5116b1",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "3ce36bc606018d50",
        "name": "Store information to kwh_HEAT_31d",
        "func": "var myArray4 = msg;\nglobal.set(\"kwh_HEAT_31d\", myArray4,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1380,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "757d35eee93ec9e7",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Once per 15minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 220,
        "y": 1620,
        "wires": [
            [
                "2391637fadbbf190"
            ]
        ]
    },
    {
        "id": "2391637fadbbf190",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Function - bucket 1 + 2 +3 combined",
        "func": "var myArray1 = global.get(\"kwh_HEAT_31d\",\"file\");\nvar myArray2 = global.get(\"degreedays_31d\",\"file\");\nvar myArray3 = global.get(\"kwh_DHW_31d\",\"file\");\nif (myArray1 === undefined || myArray2 === undefined || myArray3 === undefined)\n    {\n        return null;\n        \n    }\n\nelse\n    {\n        let msg1={}, msg2={}, msg3={};\n        \n        msg1 = myArray1;\n        msg2 = myArray2;\n        msg3 = myArray3;\n        \n        var varlabels           = msg1.payload[0].labels;\n        var varkwh_heat_data    = msg1.payload[0].data[0];\n        var vargraaddagen_data  = msg2.payload[0].data[0];\n        var varkwh_dhw_data     = msg3.payload[0].data[0];\n        \n        var m={};\n            m.labels    = varlabels;\n            m.series    = ['DegreeDays (°C)', 'Energy consumption HEAT (kWh)', 'Energy consumption DHW (kWh)'];\n            m.data      = [vargraaddagen_data, varkwh_heat_data, varkwh_dhw_data];\n        \n        return {payload:[m]};\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1620,
        "wires": [
            [
                "4eaa2cfa2749c551"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "7629b6d3d87712ff",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "6472e1e423188a37",
        "name": "",
        "links": [
            "2064b5a11ffc43b3"
        ],
        "x": 125,
        "y": 1480,
        "wires": [
            [
                "3043e3c17ff68920"
            ]
        ]
    },
    {
        "id": "e9d6a960b09e05b8",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "6472e1e423188a37",
        "name": "Store information to degreedays_31d",
        "func": "var myArray5 = msg;\nglobal.set(\"degreedays_31d\", myArray5,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1480,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "fdb9e1be23998039",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "Interval 5m",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "bddac0d27a1343a8",
                "0c9b408b44a185a3"
            ]
        ]
    },
    {
        "id": "bddac0d27a1343a8",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "T_outside",
        "func": "/////\n\n///////////////////////////// MSG = T_outside //////////////////////////////////\n\n\nvar T_outside = global.get('T_outside',\"file\");\nif (T_outside === undefined)\n    {   \n        return null;\n    }\n    \nelse\n    {\n\n        msg.payload = T_outside;\n        msg.topic = 'T_outside';\n        Number(msg.payload).toFixed(1);\n        return msg;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            [
                "a09512145dbf8d8a"
            ]
        ],
        "outputLabels": [
            "T_outside"
        ]
    },
    {
        "id": "0c9b408b44a185a3",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "graaddagen_calc",
        "func": "/////\n\n///////////////////////////// Calculate T_outside //////////////////////////////\n\n\nvar T_outside = global.get('T_outside',\"file\");\nif (T_outside === undefined)\n    {   \n        return null;\n    }\n    \nelse\n    {\n        \n////\n\n///////////////////////////// MSG = graaddagen_calc ////////////////////////////\n\n        let msg1={};\n\n        var graaddagen_calc = 18 - T_outside;\n        \n        if (graaddagen_calc < 0)    {graaddagen_calc = 0;}\n                \n        msg1.topic = 'graaddagen_calc';\n        msg1.payload = graaddagen_calc;\n        Number(msg1.payload).toFixed(1);\n        \n        global.set(\"graaddagen_calc\", msg1.payload, \"file\");\n\n        return msg1;\n    }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "2064b5a11ffc43b3"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "a09512145dbf8d8a",
        "type": "link out",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "T_outside",
        "mode": "link",
        "links": [],
        "x": 845,
        "y": 80,
        "wires": []
    },
    {
        "id": "2064b5a11ffc43b3",
        "type": "link out",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "graaddagen_calc",
        "mode": "link",
        "links": [
            "e64edede4c04268f",
            "1db4f55d0a2fdbcd",
            "7629b6d3d87712ff",
            "a555a16e72eecd16",
            "a123dbb3ab4abb67",
            "23bc7334d7c99f01",
            "e9d32f77223020a8",
            "458b037edd12c828",
            "b27f3362361c5e64",
            "978657d3c3a0f2cb",
            "7771da8a0a8b3592",
            "7887aff049a582de",
            "7c5168cdea10e6fd"
        ],
        "x": 845,
        "y": 120,
        "wires": []
    },
    {
        "id": "6bb3b71758d24fd0",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 170,
        "y": 1680,
        "wires": [
            [
                "4eaa2cfa2749c551"
            ]
        ]
    },
    {
        "id": "41e8d01708c19225",
        "type": "comment",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Bucket 1 + 2 + 3 combined to chart",
        "info": "",
        "x": 240,
        "y": 1580,
        "wires": []
    },
    {
        "id": "550d61dd1ac867d3",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "3ce36bc606018d50",
        "name": "bar-chart HEAT kwh-31d",
        "x_interval": "days",
        "x_size": "31",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 1380,
        "wires": [
            [
                "41bc927c7f5116b1"
            ]
        ]
    },
    {
        "id": "4eaa2cfa2749c551",
        "type": "ui_chart",
        "z": "ed155b604642d354",
        "g": "e598f3cca51f28d1",
        "name": "kWh + Degree Days (31d)",
        "group": "87be08e6a82ef6a0",
        "order": 2,
        "width": 15,
        "height": 8,
        "label": "Last 31 days",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00876c",
            "#de425b",
            "#f59b56",
            "#fff18f",
            "#89bf77",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "681a0775921a043e",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Load bar-chart data",
        "func": "var myArray1 = global.get(\"kwh_HEAT_31d\",\"file\");\nvar myArray2 = global.get(\"degreedays_31d\",\"file\");\nvar myArray3 = global.get(\"kwh_DHW_31d\",\"file\");\n\nlet msg1={}, msg2={}, msg3={};\nmsg1 = myArray1;\nmsg2 = myArray2;\nmsg3 = myArray3;\n\nreturn [msg1,msg2,msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1200,
        "wires": [
            [
                "550d61dd1ac867d3"
            ],
            [
                "cff31036dc296d8d"
            ],
            [
                "1073d8f9d7a572a1"
            ]
        ],
        "outputLabels": [
            "kwh_HEAT_31d",
            "degreedays_31d",
            "kwh_DHW_31d"
        ]
    },
    {
        "id": "b2548a4bf37f2567",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Restore after boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "trigger",
        "x": 190,
        "y": 1200,
        "wires": [
            [
                "681a0775921a043e"
            ]
        ]
    },
    {
        "id": "3cfa3ed4419f2936",
        "type": "inject",
        "z": "ed155b604642d354",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 1250,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "974b24f717fe8560",
        "type": "link out",
        "z": "ed155b604642d354",
        "g": "2b75a55bb8fb12c6",
        "name": "kWh HEAT value (live)",
        "mode": "link",
        "links": [
            "6988051cc52f2c86",
            "dc13db3939bf2d7f",
            "ce5d0b3236face62"
        ],
        "x": 810,
        "y": 240,
        "wires": [],
        "inputLabels": [
            "kWh value (live)"
        ],
        "l": true
    },
    {
        "id": "dc13db3939bf2d7f",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "3ce36bc606018d50",
        "name": "",
        "links": [
            "974b24f717fe8560"
        ],
        "x": 125,
        "y": 1380,
        "wires": [
            [
                "61e1918ce41f34f7"
            ]
        ]
    },
    {
        "id": "61e1918ce41f34f7",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "3ce36bc606018d50",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 1380,
        "wires": [
            [
                "550d61dd1ac867d3"
            ]
        ]
    },
    {
        "id": "3043e3c17ff68920",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "6472e1e423188a37",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 1480,
        "wires": [
            [
                "cff31036dc296d8d"
            ]
        ]
    },
    {
        "id": "10a3251239b22cd4",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Once per 5minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 220,
        "y": 960,
        "wires": [
            [
                "b44fca625044b56c"
            ]
        ]
    },
    {
        "id": "b44fca625044b56c",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Function - bucket 1 + 2 + 3 combined",
        "func": "var myArray3 = global.get(\"kwh_HEAT_24h\",\"file\");\nvar myArray4 = global.get(\"degreedays_24h\",\"file\");\nvar myArray1 = global.get(\"kwh_DHW_24h\",\"file\");\nif (myArray3 === undefined || myArray4 === undefined || myArray1 === undefined)\n    {\n        return null;\n    }\n        \nelse\n    {\n        let msg1={}, msg2={}, msg3={};\n        msg1 = myArray3;\n        msg2 = myArray4;\n        msg3 = myArray1;\n        \n        var varlabels = msg1.payload[0].labels;\n        var varkwh_data_heat        = msg1.payload[0].data[0];\n        var varkwh_data_dhw         = msg3.payload[0].data[0];\n        var vargraaddagen_data      = msg2.payload[0].data[0];\n        var m={};\n            m.labels    = varlabels;\n            m.series    = ['DegreeDays (°C)', 'Energy consumption HEAT (kWh)',  'Energy consumption DHW (kWh)'];\n            m.data      = [vargraaddagen_data, varkwh_data_heat, varkwh_data_dhw];\n        \n        return {payload:[m]};\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 960,
        "wires": [
            [
                "2ee679408e4ccc6f"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "d64accce0bd0c291",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "6db1485dd36081ec",
        "name": "bar-chart-data degreedays-24h",
        "x_interval": "hours",
        "x_size": "24",
        "unit": "",
        "precision": "2",
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 850,
        "y": 820,
        "wires": [
            [
                "95923454c02c9c72"
            ]
        ]
    },
    {
        "id": "7887aff049a582de",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "6db1485dd36081ec",
        "name": "",
        "links": [
            "2064b5a11ffc43b3"
        ],
        "x": 125,
        "y": 820,
        "wires": [
            [
                "29a4cb237663e973"
            ]
        ]
    },
    {
        "id": "95923454c02c9c72",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "6db1485dd36081ec",
        "name": "Store information to degreedays_24h",
        "func": "var myArray5 = msg;\nglobal.set(\"degreedays_24h\", myArray5,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 820,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "29a4cb237663e973",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "6db1485dd36081ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 820,
        "wires": [
            [
                "d64accce0bd0c291"
            ]
        ]
    },
    {
        "id": "a9584fa0cadac44b",
        "type": "comment",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Bucket 1 + 2 + 3 combined to chart",
        "info": "",
        "x": 240,
        "y": 920,
        "wires": []
    },
    {
        "id": "2ee679408e4ccc6f",
        "type": "ui_chart",
        "z": "ed155b604642d354",
        "g": "d44f1a1993a8a44f",
        "name": "kWh + Degree Days (24h)",
        "group": "87be08e6a82ef6a0",
        "order": 4,
        "width": 15,
        "height": 8,
        "label": "Last 24 hours",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00876c",
            "#de425b",
            "#f59b56",
            "#fff18f",
            "#89bf77",
            "#ffa056",
            "#8dddd0",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "9a88d9c8f4a6c2a5",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "5b9db86809583efd",
        "name": "bar-chart HEAT kwh-24h",
        "x_interval": "hours",
        "x_size": "24",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 720,
        "wires": [
            [
                "38893966085dd228"
            ]
        ]
    },
    {
        "id": "38893966085dd228",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "5b9db86809583efd",
        "name": "Store information to kwh_HEAT_24h",
        "func": "var myArray4 = msg;\nglobal.set(\"kwh_HEAT_24h\", myArray4,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 720,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "6988051cc52f2c86",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "5b9db86809583efd",
        "name": "",
        "links": [
            "974b24f717fe8560"
        ],
        "x": 125,
        "y": 720,
        "wires": [
            [
                "0ae4268d42429bac"
            ]
        ]
    },
    {
        "id": "0ae4268d42429bac",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "5b9db86809583efd",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 720,
        "wires": [
            [
                "9a88d9c8f4a6c2a5"
            ]
        ]
    },
    {
        "id": "c0f559e2c7905a0e",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Load bar-chart data",
        "func": "var myArray3 = global.get(\"kwh_HEAT_24h\",\"file\");\nvar myArray4 = global.get(\"degreedays_24h\",\"file\");\nvar myArray1 = global.get(\"kwh_DHW_24h\",\"file\");\n\nlet msg1={}, msg2={}, msg3={};\nmsg1 = myArray3;\nmsg2 = myArray4;\nmsg3 = myArray1;\n\nreturn [msg1,msg2,msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 520,
        "wires": [
            [
                "9a88d9c8f4a6c2a5"
            ],
            [
                "d64accce0bd0c291"
            ],
            [
                "91840e451e332fa6"
            ]
        ],
        "outputLabels": [
            "kwh_31d",
            "degreedays_31d",
            ""
        ]
    },
    {
        "id": "3a9d746ecf027578",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Restore after boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "trigger",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "c0f559e2c7905a0e"
            ]
        ]
    },
    {
        "id": "5f7678f15c215dc9",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "2ee679408e4ccc6f",
                "9a88d9c8f4a6c2a5",
                "91840e451e332fa6",
                "d64accce0bd0c291"
            ]
        ]
    },
    {
        "id": "a229a39b9973d011",
        "type": "inject",
        "z": "ed155b604642d354",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 1250,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "42fb2dc4dec11e93",
        "type": "comment",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "31 Days information",
        "info": "",
        "x": 170,
        "y": 1160,
        "wires": []
    },
    {
        "id": "16b0fcf56b6d17f8",
        "type": "comment",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "24 hours information",
        "info": "",
        "x": 170,
        "y": 480,
        "wires": []
    },
    {
        "id": "05c67c5f7508a04d",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "27d590581cd92df1",
        "name": "",
        "links": [
            "a3180920b08e8108"
        ],
        "x": 95,
        "y": 340,
        "wires": [
            [
                "cd16de04c8fa639a"
            ]
        ]
    },
    {
        "id": "cd16de04c8fa639a",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "27d590581cd92df1",
        "name": "Energy_Consumption_DHW_kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit;\n\n    var LastMessage = msg.payload;\n    var LastTopic= msg.topic;\n    \n    if (PreviousTime === undefined) \n        {\n            context.set('PreviousTime',CurrentTime);\n            exit = true;\n        }\n        \n    else if (PreviousMessage === undefined) \n        {\n            context.set('PreviousMessage',msg.payload);\n            exit = true;\n        }\n    else if (PreviousTopic === undefined) \n        {\n            context.set('PreviousTopic',msg.topic);\n            exit = true;\n        }\n    \n    else {\n                \n            TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n            context.set('PreviousTime',CurrentTime);\n            context.set('PreviousMessage',msg.payload);\n            context.set('PreviousTopic',msg.topic);\n            msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n            msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n            \n            \n            msg1.payload = (TimeElapsed + \"  Seconds\");\n            temp = parseFloat(TimeElapsed.toFixed(0));\n            msg2.payload = temp;\n            msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n            msg5.payload = (PreviousMessage * ( temp / 3600000 ));   //  Calculation to Wh portion\n            Number(msg5.payload).toFixed(4);\n            msg5.topic = 'Energy_Consumption_DHW_kWh';\n       }\n    if (exit === true)\n        {return null;}\n    else     \n        {return msg5;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "2cc9fde214b13621"
            ]
        ],
        "outputLabels": [
            "Energy_Consumption_HEAT_kWh"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "2cc9fde214b13621",
        "type": "link out",
        "z": "ed155b604642d354",
        "g": "27d590581cd92df1",
        "name": "kWh DHW value (live)",
        "mode": "link",
        "links": [
            "65322aec4f8fd58e",
            "868b4c6128111bb6",
            "22538d89f57d30fe"
        ],
        "x": 800,
        "y": 340,
        "wires": [],
        "inputLabels": [
            "kWh value (live)"
        ],
        "l": true
    },
    {
        "id": "91840e451e332fa6",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "d734c640b789ff1e",
        "name": "bar-chart DHW kwh-24h",
        "x_interval": "hours",
        "x_size": "24",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 620,
        "wires": [
            [
                "935535fc205e470c"
            ]
        ]
    },
    {
        "id": "935535fc205e470c",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "d734c640b789ff1e",
        "name": "Store information to kwh_DHW_24h",
        "func": "var myArray1 = msg;\nglobal.set(\"kwh_DHW_24h\", myArray1,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 620,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "65322aec4f8fd58e",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "d734c640b789ff1e",
        "name": "",
        "links": [
            "2cc9fde214b13621"
        ],
        "x": 125,
        "y": 620,
        "wires": [
            [
                "018e987e0d4672b6"
            ]
        ]
    },
    {
        "id": "018e987e0d4672b6",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "d734c640b789ff1e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 620,
        "wires": [
            [
                "91840e451e332fa6"
            ]
        ]
    },
    {
        "id": "868b4c6128111bb6",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "fc68ffd1a284a6bd",
        "name": "",
        "links": [
            "2cc9fde214b13621"
        ],
        "x": 125,
        "y": 1280,
        "wires": [
            [
                "e8a39538d051ed80"
            ]
        ]
    },
    {
        "id": "e8a39538d051ed80",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "fc68ffd1a284a6bd",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "1073d8f9d7a572a1"
            ]
        ]
    },
    {
        "id": "1073d8f9d7a572a1",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "fc68ffd1a284a6bd",
        "name": "bar-chart DHW kwh-31d",
        "x_interval": "days",
        "x_size": "31",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 1280,
        "wires": [
            [
                "e800de9b472a5516"
            ]
        ]
    },
    {
        "id": "e800de9b472a5516",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "fc68ffd1a284a6bd",
        "name": "Store information to kwh_DHW_31d",
        "func": "var myArray1 = msg;\nglobal.set(\"kwh_DHW_31d\", myArray1,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1280,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "e68356272f1f529b",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 310,
        "y": 1020,
        "wires": [
            [
                "d64accce0bd0c291",
                "9a88d9c8f4a6c2a5",
                "91840e451e332fa6"
            ]
        ]
    },
    {
        "id": "898b02a132291b49",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 310,
        "y": 1680,
        "wires": [
            [
                "cff31036dc296d8d",
                "550d61dd1ac867d3",
                "1073d8f9d7a572a1"
            ]
        ]
    },
    {
        "id": "40b5ddfde5f28d99",
        "type": "ui_template",
        "z": "ed155b604642d354",
        "group": "87be08e6a82ef6a0",
        "name": "Line",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1590,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "67a8d20ae604a58e",
        "type": "ui_template",
        "z": "ed155b604642d354",
        "group": "87be08e6a82ef6a0",
        "name": "Line",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1590,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "966985d68ebb4990",
        "type": "tab",
        "label": "WP Solar",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bf2c1d5a22f56dd8",
        "type": "group",
        "z": "966985d68ebb4990",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "071320367f2b7a40",
            "e6e7a4c840499ff0",
            "2ab2c3aad0cba156",
            "e7e4159b16d21595",
            "c980bba812a20bc2",
            "39f8d3463d10ccfb",
            "2efa0af27c69d4d0",
            "9fca714df21ffac0",
            "70bacba09eb9f884",
            "edf195c89ff83486",
            "add57b730a3e769f",
            "af24696818983d4c",
            "26c4d827da98fd56",
            "f58197b3d1d9d1d0",
            "ce787867699a6a50",
            "a9efc23cf56dc231",
            "1c7292b507901827",
            "d31bb33a7ab5445e",
            "4aa1e7a1e212ad06",
            "8ba23174457c635d",
            "59e73e3a2c2985fa",
            "88ea0371f9cecd37"
        ],
        "x": 64,
        "y": 19,
        "w": 1302,
        "h": 728
    },
    {
        "id": "81ff790f84afd46d",
        "type": "group",
        "z": "966985d68ebb4990",
        "name": "SOLAR functions",
        "style": {
            "label": true
        },
        "nodes": [
            "e6f667136e7f2ac3",
            "56d5a2ccd5cdaa52",
            "d10277056d1d02fe",
            "199df2b0fce0a31b",
            "d60c01c296ab9701",
            "6f42eb5ce8f14538",
            "b84df04af23dbc5a",
            "3999167a968f41c5",
            "97d1263164d37f9a",
            "8e29b6d3f137cbae",
            "2acf2118927e2814",
            "e493043bd34ba3c3",
            "aa0fc024b66f7bef",
            "bec72a0fb0243efa",
            "9593ad422bc31478",
            "41aa79867da214eb",
            "ba47d2dd13c84aa8",
            "e0c261e5e8e372fb",
            "a99e3a9e7081a34c",
            "d08c9f275ae78024",
            "2b2aec0a8404885d",
            "1e0f4db7208e5055",
            "329a022ba526c218",
            "992b1344cc8fd4eb",
            "473053520368f99d",
            "28c7a4a25703f3c5",
            "67fe5d78fed38255",
            "7bc1cea7963d95f8",
            "8e16d1ef3e972c95",
            "460148df6a225d24",
            "5c90f480e0f6e8ac",
            "d4b0a313434a3fd9",
            "803505e9e8372578",
            "d6bf90086794b1ac",
            "c0ee68059878b294",
            "45de8d4b61f74361",
            "77e1377aea412936",
            "5f2ca6fd7cf3d5c5",
            "623dc28b8a4cccdd",
            "8f06615b7f974a19",
            "bd079d704c31d5a7",
            "a8beed6bcea8ec08",
            "5fb3c7be3b428b42",
            "ac392c197fe09917",
            "092043375da1c8a9",
            "153d971fff0a3ed3",
            "663fdd592413d066",
            "e5578a7ea3257441",
            "74d748cdb9ede767"
        ],
        "x": 44,
        "y": 1693,
        "w": 1342,
        "h": 1228
    },
    {
        "id": "6f4cdc97add442ff",
        "type": "group",
        "z": "966985d68ebb4990",
        "name": "Switching logic",
        "style": {
            "label": true
        },
        "nodes": [
            "2d6dc1388cdc2951",
            "e62a354ce682ea6f",
            "b50ab0a4981f9d17",
            "ee7e3fc1d241d09e",
            "37178acf2fda2d9d",
            "78507acac200e031",
            "9b92843d2d8873a3",
            "58f4dcb609fc506a"
        ],
        "x": 94,
        "y": 2979,
        "w": 902,
        "h": 202
    },
    {
        "id": "3b5324e3d80d96a1",
        "type": "group",
        "z": "966985d68ebb4990",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "6c24c2f990c17968",
            "4896062be182fe15",
            "13a19fc3eda5bac1",
            "c62d7cd04e6dcc42",
            "bc0aeeb8c2000e65",
            "b3e73f9e4ae539cb",
            "b85d6aca6a841215",
            "233708268636f815",
            "75c312c1494fea2e",
            "cfd69d5fa56c8a3d",
            "37aa061ab91471ec",
            "890a57ef3afcf284",
            "856711de93142cb9",
            "8aa8fe1b9cd61f3c",
            "7f9c4451a116b794",
            "e5a024baed5f8a58",
            "0b2d388baee905a4",
            "63bcc91caacdcf55",
            "a9994ef2e592aee1",
            "375bbd780529afe0"
        ],
        "x": 64,
        "y": 779,
        "w": 1352,
        "h": 688
    },
    {
        "id": "2efa0af27c69d4d0",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "This groups function: Calculate result of the day",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "c7ec48dc3c78df80",
            "4219518104b1ef5d",
            "aad8f63921d33903",
            "794528b156d90283",
            "42734e97a85d5537",
            "40abfbbe563b32ac",
            "39f52a7b4d2f12c9"
        ],
        "x": 114,
        "y": 551.5,
        "w": 822,
        "h": 169.5
    },
    {
        "id": "9fca714df21ffac0",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "style": {
            "fill": "#ff0000",
            "fill-opacity": "0.55",
            "label": true
        },
        "nodes": [
            "5256af8b7309c113"
        ],
        "x": 314,
        "y": 399,
        "w": 232,
        "h": 82
    },
    {
        "id": "b85d6aca6a841215",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "style": {
            "fill": "#ff0000",
            "fill-opacity": "0.55",
            "label": true
        },
        "nodes": [
            "3ddc8ec4b5d75af2"
        ],
        "x": 274,
        "y": 1119,
        "w": 232,
        "h": 82
    },
    {
        "id": "233708268636f815",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8f12203bf931d988",
            "cf528e5358dce9df",
            "4d12c082bff0d9a8",
            "3bd892e72c39999a",
            "441d5424780d9523"
        ],
        "x": 154,
        "y": 1279,
        "w": 612,
        "h": 162
    },
    {
        "id": "e5578a7ea3257441",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "9765c40bf881d992",
            "5a4e594ff048795f",
            "bdd8cc1b7fb80f3f",
            "0a090bd1c44b08c6",
            "992ca6239bbe7308",
            "ce2634259bc8d6eb",
            "16fc69e4b9ff74fd",
            "608ac27952261ad4",
            "7ed70179e6faf792",
            "2e9d5424e80ef967",
            "f3f4f51165a33ae4",
            "bfade373dc6bae1e",
            "e5cb66afb46c891b",
            "2a4ffebda936e1bf",
            "39a4db5e9a226488",
            "200de001362093f8",
            "87da7c125b68ad72",
            "2b03f7e8408f5f56",
            "941e2e6b17a45171"
        ],
        "x": 434,
        "y": 1719,
        "w": 402,
        "h": 1162
    },
    {
        "id": "ce2634259bc8d6eb",
        "type": "ui_dropdown",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "Power detection method",
        "label": "Power detection method",
        "tooltip": "",
        "place": "Select option",
        "group": "b7f22c282fde0f86",
        "order": 8,
        "width": 9,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Power live (kW)",
                "value": "kW",
                "type": "str"
            },
            {
                "label": "Today's production (kWh)",
                "value": "kWh_prod",
                "type": "str"
            },
            {
                "label": "Today's result (kWh)",
                "value": "kWh_result",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 590,
        "y": 2160,
        "wires": [
            [
                "aa0fc024b66f7bef",
                "941e2e6b17a45171"
            ]
        ]
    },
    {
        "id": "16fc69e4b9ff74fd",
        "type": "ui_numeric",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "DHW temperature setpoint - high",
        "label": "DHW temperature setpoint - high",
        "tooltip": "This setpoint is active above the {{msg.threshold}} treshold",
        "group": "b7f22c282fde0f86",
        "order": 7,
        "width": 9,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "75",
        "step": 1,
        "className": "",
        "x": 620,
        "y": 2100,
        "wires": [
            [
                "bec72a0fb0243efa"
            ]
        ]
    },
    {
        "id": "608ac27952261ad4",
        "type": "ui_numeric",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "Solar Production Threshold",
        "label": "Threshold",
        "tooltip": "",
        "group": "b7f22c282fde0f86",
        "order": 9,
        "width": 9,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} {{detection_method}}",
        "min": "-30",
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 600,
        "y": 2320,
        "wires": [
            [
                "7ed70179e6faf792",
                "9593ad422bc31478"
            ]
        ]
    },
    {
        "id": "7ed70179e6faf792",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "threshold",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2040,
        "wires": [
            [
                "16fc69e4b9ff74fd"
            ]
        ]
    },
    {
        "id": "2e9d5424e80ef967",
        "type": "ui_switch",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "Fallback to DHW temperature setpoint low",
        "label": "Fallback to default DHW (SP) below 0 W?",
        "tooltip": "This will only apply for the power detection method Option 1: Power Live (kW)",
        "group": "b7f22c282fde0f86",
        "order": 10,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 640,
        "y": 2420,
        "wires": [
            [
                "41aa79867da214eb"
            ]
        ]
    },
    {
        "id": "aad8f63921d33903",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "Function schedule export",
        "func": "//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\nvar start_today_export  = flow.get(\"start_today_export\",\"file\");                       //\nvar total_kwh_export    = flow.get('total_kwh_export',\"file\");                         //\nvar solar_state         = global.get('solar_state',\"file\");                     //\nvar DHW_SP_LOW          = global.get('DHW_SP_LOW',\"file\");                      //\nvar DHW_Target_Temp     = global.get('DHW_Target_Temp',\"file\");                 //\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\nlet msg1={};                // pin 1: kwh\nlet msg2={};                // pin 2: SP_DHW\nlet msg99={};               // pin 3: to log\n\nmsg99.topic = \"Function Solar\";\n\nif (total_kwh_export === undefined) {total_kwh_export = msg.payload;}\nif (total_kwh_export === undefined) {total_kwh_export = 0;}\n\nif (start_today_export === undefined)\n    {\n        start_today_export = total_kwh_export;\n        flow.set(\"start_today_export\",total_kwh_export,\"file\");\n    }   \n\nif (msg.topic == \"time\" && solar_state == 0)                                                        // When @ midnight, reset start_today_export to 0.\n    {\n        global.set(\"SolarFunction_active\",undefined,\"file\");        \n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        if (total_kwh_export !== undefined)\n            {\n                flow.set('start_today_export',total_kwh_export,\"file\");\n            }\n        return [msg,null,null];\n\n    }\nif (msg.topic == \"time\" && solar_state == 1)                                                        // When @ midnight, reset start_today_export to 0.\n    {\n        global.set(\"SolarFunction_active\",undefined,\"file\");        \n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        if (total_kwh_export !== undefined)\n            {\n                flow.set('start_today_export',total_kwh_export,\"file\");\n            }\n        if (DHW_Target_Temp != DHW_SP_LOW)\n            {\n                msg2.payload = DHW_SP_LOW;\n                msg99.payload       = \"New day; Reset Solar function. Set DHW SP to \" + DHW_SP_LOW;\n                return [msg, msg2, msg99];\n            }\n        else \n            {\n                msg99.payload       = \"New day; Reset Solar function. DHW SP already \" + DHW_SP_LOW;\n                return [msg,null,msg99];\n            }\n    }\n\nelse if (msg.topic == \"start\")\n    {\n        msg1.payload = total_kwh_export - start_today_export;\n        msg1.payload = Number(msg1.payload).toFixed(2);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.topic = \"kWh\";\n        return [msg1,null,null];\n    }\nelse\n    {\n        var until_now       =   (msg.payload - start_today_export);            // calculate todays production in kWh\n        msg.payload = until_now;\n        msg.payload = Number(msg.payload).toFixed(2);\n        msg.payload = parseFloat(msg.payload);\n        msg.topic = \"kWh\";\n        return [msg,null,null];\n    }\n    ",
        "outputs": 3,
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 600,
        "wires": [
            [
                "39f8d3463d10ccfb"
            ],
            [
                "42734e97a85d5537"
            ],
            [
                "40abfbbe563b32ac"
            ]
        ],
        "outputLabels": [
            "kWh today",
            "DHW_SP_LOW",
            "to log"
        ]
    },
    {
        "id": "f3f4f51165a33ae4",
        "type": "ui_switch",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "Solar",
        "label": "Solar",
        "tooltip": "",
        "group": "b7f22c282fde0f86",
        "order": 5,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 530,
        "y": 1880,
        "wires": [
            [
                "200de001362093f8"
            ]
        ]
    },
    {
        "id": "bfade373dc6bae1e",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "group": "b7f22c282fde0f86",
        "name": "Line - Setup ",
        "order": 6,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "d10277056d1d02fe",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Input - Current power",
        "links": [
            "071320367f2b7a40",
            "6c24c2f990c17968"
        ],
        "x": 85,
        "y": 2800,
        "wires": [
            [
                "663fdd592413d066"
            ]
        ]
    },
    {
        "id": "071320367f2b7a40",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "P1 Output - Power production (W)",
        "mode": "link",
        "links": [
            "4047483a87ea6ec9",
            "d10277056d1d02fe",
            "c193dd7c180a36de",
            "9b92843d2d8873a3"
        ],
        "x": 1200,
        "y": 260,
        "wires": [],
        "l": true
    },
    {
        "id": "e6e7a4c840499ff0",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "GRID PRODUCTION (EXPORT)",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "2ab2c3aad0cba156",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "Expected input is a value in Watt or kiloWatt.",
        "info": "",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "794528b156d90283",
        "type": "no-op",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "IN",
        "x": 210,
        "y": 600,
        "wires": [
            [
                "aad8f63921d33903"
            ]
        ]
    },
    {
        "id": "e7e4159b16d21595",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "1 >> CONNECT your P1 power production / export to this node",
        "links": [
            "c8359b76aff8f00e"
        ],
        "x": 830,
        "y": 100,
        "wires": [
            [
                "88ea0371f9cecd37"
            ]
        ],
        "l": true
    },
    {
        "id": "5256af8b7309c113",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "9fca714df21ffac0",
        "name": "Correction function",
        "func": "var F_Solar_export_correction;\n\nif (msg.topic == \"correction\")\n    {\n        F_Solar_export_correction = msg.payload;\n        global.set('F_Solar_export_correction',F_Solar_export_correction,\"file\");\n        \n        return null;\n    }\nelse\n    {\n    F_Solar_export_correction = global.get('F_Solar_export_correction',\"file\");   \n        if (F_Solar_export_correction === undefined)\n            {\n                F_Solar_export_correction = 1;\n            }\n        let msg1={};\n        msg1.payload = msg.payload;\n        \n        msg1.payload = Number(msg1.payload).toFixed(4);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.payload = Math.abs(msg1.payload);\n        \n        msg1.payload = msg1.payload * -1 * F_Solar_export_correction; \n        msg1.payload = Number(msg1.payload).toFixed(0);\n        msg1.topic = \"W\";\n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 440,
        "wires": [
            [
                "071320367f2b7a40",
                "c980bba812a20bc2",
                "ce787867699a6a50"
            ]
        ]
    },
    {
        "id": "e5cb66afb46c891b",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "DASHBOARD",
        "info": "",
        "x": 550,
        "y": 1760,
        "wires": []
    },
    {
        "id": "c980bba812a20bc2",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "GRID power production W to kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\nmsg6 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit = false;\n\n//  First run checks. If some variables are undefined, set current values and exit.\nif (PreviousTime === undefined) {context.set('PreviousTime',CurrentTime);       exit = true;}\nif (PreviousMessage === undefined) {context.set('PreviousMessage',msg.payload); exit = true;}\nif (PreviousTopic === undefined)  {context.set('PreviousTopic',msg.topic);    exit = true;}\n\nif (exit === true)              // IF 1\n    {   \n        return null;            // This output will automatically be skipped, next calculation will be ok.\n        \n    }\n\nelse                        // ELSE 2\n    {\n        var LastMessage = msg.payload;\n        var LastTopic= msg.topic;\n        \n        TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n        context.set('PreviousTime',CurrentTime);\n        context.set('PreviousMessage',msg.payload);\n        context.set('PreviousTopic',msg.topic);\n        msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n        msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n        \n        \n        msg1.payload = (TimeElapsed + \"  Seconds\");\n        temp = parseFloat(TimeElapsed.toFixed(0));\n        msg2.payload = temp;\n        msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n        msg5.payload = (PreviousMessage * ( temp / 3600000 ));                  //  Calculation to Wh portion\n        Number(msg5.payload).toFixed(4);\n        msg5.topic = 'GRID power production kWh';                               // msg5 = latest kWh part.\n    \n    \n    ///////////////////////////////////////////////////////////////////////////\n    // Calculation from kWh part > total kWh of today\n        var total_kwh_export = flow.get(\"total_kwh_export\",\"file\");\n        if (total_kwh_export === undefined)        {total_kwh_export = 0;}\n        \n        msg6.payload = msg5.payload + total_kwh_export;                                // msg6 = kWh total from the start of operation\n        msg6.topic = 'GRID power production kWh';\n        msg6.payload = Number(msg6.payload).toFixed(3);\n        msg6.payload = parseFloat(msg6.payload);\n        flow.set('total_kwh_export',msg6.payload,\"file\");\n       \n    ////////////////////////////////////////////////////////////////////////////\n        return [msg6];\n    \n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 440,
        "wires": [
            [
                "794528b156d90283",
                "edf195c89ff83486",
                "70bacba09eb9f884"
            ]
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "39f8d3463d10ccfb",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "P1 Output - Power production Today (kWh)",
        "mode": "link",
        "links": [
            "f2de7a857ebb62ca",
            "a27c417c537a6b65",
            "c193dd7c180a36de",
            "44925c267016b3f7"
        ],
        "x": 1170,
        "y": 580,
        "wires": [],
        "l": true
    },
    {
        "id": "199df2b0fce0a31b",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "set variable DHW_SP_HIGH",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::DHW_SP_HIGH",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "d60c01c296ab9701",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "set variable solar_detection_method",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_detection_method",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "6f42eb5ce8f14538",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_detection_method',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'DHWHeatDelta'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2160,
        "wires": [
            [
                "ce2634259bc8d6eb"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "b84df04af23dbc5a",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1880,
        "wires": [
            [
                "6f42eb5ce8f14538",
                "3999167a968f41c5",
                "8e29b6d3f137cbae",
                "2acf2118927e2814",
                "2b2aec0a8404885d",
                "1e0f4db7208e5055"
            ]
        ]
    },
    {
        "id": "3999167a968f41c5",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Load on boot",
        "func": "var variable                    = global.get('DHW_SP_HIGH',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'DHW_SP_HIGH'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2100,
        "wires": [
            [
                "16fc69e4b9ff74fd"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "97d1263164d37f9a",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "set variable solar_threshold",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_threshold",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "8e29b6d3f137cbae",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_state',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'solar_state'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1880,
        "wires": [
            [
                "f3f4f51165a33ae4",
                "28c7a4a25703f3c5"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "2acf2118927e2814",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_fallback',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'solar_fallback'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2420,
        "wires": [
            [
                "2e9d5424e80ef967"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "e493043bd34ba3c3",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "set variable solar_fallback",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_fallback",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "aa0fc024b66f7bef",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2160,
        "wires": [
            [
                "d60c01c296ab9701"
            ]
        ]
    },
    {
        "id": "bec72a0fb0243efa",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2100,
        "wires": [
            [
                "199df2b0fce0a31b"
            ]
        ]
    },
    {
        "id": "9593ad422bc31478",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2280,
        "wires": [
            [
                "97d1263164d37f9a"
            ]
        ]
    },
    {
        "id": "41aa79867da214eb",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2380,
        "wires": [
            [
                "e493043bd34ba3c3"
            ]
        ]
    },
    {
        "id": "ba47d2dd13c84aa8",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "set variable solar_state",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_state",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "e0c261e5e8e372fb",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 1840,
        "wires": [
            [
                "ba47d2dd13c84aa8"
            ]
        ]
    },
    {
        "id": "d08c9f275ae78024",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 1980,
        "wires": [
            [
                "a99e3a9e7081a34c"
            ]
        ]
    },
    {
        "id": "a99e3a9e7081a34c",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "set variable DHW_SP_LOW",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::DHW_SP_LOW",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "2d6dc1388cdc2951",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "kWh",
        "info": "",
        "x": 170,
        "y": 3020,
        "wires": []
    },
    {
        "id": "e62a354ce682ea6f",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "mode": "link",
        "links": [
            "3f63919ddd4f0ea7"
        ],
        "x": 955,
        "y": 3020,
        "wires": []
    },
    {
        "id": "2b2aec0a8404885d",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_threshold',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'solar_threshold'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2320,
        "wires": [
            [
                "608ac27952261ad4"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "42734e97a85d5537",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "DHW_SP_LOW",
        "mode": "link",
        "links": [
            "3f63919ddd4f0ea7"
        ],
        "x": 820,
        "y": 600,
        "wires": [],
        "l": true
    },
    {
        "id": "b50ab0a4981f9d17",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "mode": "link",
        "links": [
            "6d5e44060139d9d1"
        ],
        "x": 955,
        "y": 3080,
        "wires": []
    },
    {
        "id": "c7ec48dc3c78df80",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "aad8f63921d33903"
            ]
        ]
    },
    {
        "id": "2a4ffebda936e1bf",
        "type": "ui_switch",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "Override power state",
        "label": "Solar function active when heat pump is off",
        "tooltip": "Power on heat pump when power is above treshold",
        "group": "b7f22c282fde0f86",
        "order": 11,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 580,
        "y": 2480,
        "wires": [
            [
                "e6f667136e7f2ac3"
            ]
        ]
    },
    {
        "id": "1e0f4db7208e5055",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_turn_on',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'solar_turn_on'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2480,
        "wires": [
            [
                "2a4ffebda936e1bf"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "e6f667136e7f2ac3",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2440,
        "wires": [
            [
                "56d5a2ccd5cdaa52"
            ]
        ]
    },
    {
        "id": "56d5a2ccd5cdaa52",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "set variable solar_turn_on",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_turn_on",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "ee7e3fc1d241d09e",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb"
        ],
        "x": 955,
        "y": 3140,
        "wires": []
    },
    {
        "id": "4219518104b1ef5d",
        "type": "inject",
        "z": "966985d68ebb4990",
        "d": true,
        "g": "2efa0af27c69d4d0",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "start",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "aad8f63921d33903"
            ]
        ]
    },
    {
        "id": "5a4e594ff048795f",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "group": "b7f22c282fde0f86",
        "order": 14,
        "width": 9,
        "height": 1,
        "name": "DHW (SP)",
        "label": "DHW temperature setpoint",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 550,
        "y": 2680,
        "wires": []
    },
    {
        "id": "992b1344cc8fd4eb",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "links": [
            "d54ac3b979428b64"
        ],
        "x": 385,
        "y": 2640,
        "wires": [
            [
                "39a4db5e9a226488"
            ]
        ]
    },
    {
        "id": "bdd8cc1b7fb80f3f",
        "type": "ui_chart",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "",
        "group": "2bd11d2d909e2ba3",
        "order": 2,
        "width": 10,
        "height": 6,
        "label": "Power history (W)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Waiting for data ...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "2500",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#de425b",
            "#f59b56",
            "#f59b56",
            "#d62728",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 2760,
        "wires": [
            [
                "092043375da1c8a9"
            ]
        ]
    },
    {
        "id": "0a090bd1c44b08c6",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "group": "b7f22c282fde0f86",
        "name": "Line - Current values",
        "order": 12,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\nResults",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "329a022ba526c218",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nvar last = context.get('last') || 'under';\nvar threshold = 0;\nvar undermessage = {topic:'Production',payload:null};\nvar overmessage = {topic:'Consumption',payload:null};\nvar unsentmessage = null;\n\nif(msg.payload > threshold)\n    {\n        if(last == 'under')\n            {\n                undermessage.payload = threshold;\n                overmessage.payload = threshold;\n                unsentmessage = msg;\n            }\n        else\n            {\n                overmessage.payload = msg.payload;\n            }\n        last = 'over';\n    }\n\nelse\n    {\n        if(last == 'over')\n            {\n                overmessage.payload = threshold;\n                undermessage.payload = threshold;\n                unsentmessage = msg;\n            }\n        else\n            {\n                undermessage.payload = msg.payload;\n            }\n        last = 'under';\n    }\n\ncontext.set('last',last);\n\nreturn [[overmessage,undermessage],unsentmessage]\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2760,
        "wires": [
            [
                "bdd8cc1b7fb80f3f"
            ]
        ]
    },
    {
        "id": "992ca6239bbe7308",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 530,
        "y": 2800,
        "wires": [
            [
                "bdd8cc1b7fb80f3f"
            ]
        ]
    },
    {
        "id": "3ddc8ec4b5d75af2",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "b85d6aca6a841215",
        "name": "Correction function",
        "func": "var F_Solar_import_correction;\n\nif (msg.topic == \"correction\")\n    {\n        F_Solar_import_correction = msg.payload;\n        global.set('F_Solar_import_correction',F_Solar_import_correction,\"file\");\n        \n        return null;\n    }\nelse\n    {\n    F_Solar_import_correction = global.get('F_Solar_import_correction',\"file\");   \n        if (F_Solar_import_correction === undefined)\n            {\n                F_Solar_import_correction = 1;\n            }\n        let msg1={};\n        msg1.payload = msg.payload;\n        msg1.payload = Number(msg1.payload).toFixed(4);            \n        msg1.payload = parseFloat(msg1.payload);\n\n        msg1.payload = Math.abs(msg1.payload);\n\n        msg1.payload = msg1.payload * F_Solar_import_correction; \n        msg1.payload = Number(msg1.payload).toFixed(0);\n\n        msg1.topic = \"W\";\n        return msg1;\n    }\n    \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "4896062be182fe15",
                "6c24c2f990c17968",
                "890a57ef3afcf284"
            ]
        ]
    },
    {
        "id": "6c24c2f990c17968",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "P1 Output - Power consumption (W)",
        "mode": "link",
        "links": [
            "c193dd7c180a36de",
            "d10277056d1d02fe",
            "9b92843d2d8873a3"
        ],
        "x": 1230,
        "y": 1060,
        "wires": [],
        "l": true
    },
    {
        "id": "4896062be182fe15",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "GRID power consumption W to kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\nmsg6 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit = false;\n\n//  First run checks. If some variables are undefined, set current values and exit.\nif (PreviousTime === undefined) {context.set('PreviousTime',CurrentTime);       exit = true;}\nif (PreviousMessage === undefined) {context.set('PreviousMessage',msg.payload); exit = true;}\nif (PreviousTopic === undefined)  {context.set('PreviousTopic',msg.topic);    exit = true;}\n\nif (exit === true)        \n    {    return null;            // This output will automatically be skipped, next calculation will be ok.\n        \n    }\n\nelse\n    {\n        var LastMessage = msg.payload;\n        var LastTopic= msg.topic;\n        \n        TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n        context.set('PreviousTime',CurrentTime);\n        context.set('PreviousMessage',msg.payload);\n        context.set('PreviousTopic',msg.topic);\n        msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n        msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n        \n        \n        msg1.payload = (TimeElapsed + \"  Seconds\");\n        temp = parseFloat(TimeElapsed.toFixed(0));\n        msg2.payload = temp;\n        msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n        msg5.payload = (PreviousMessage * ( temp / 3600000 ));                  //  Calculation to Wh portion\n        Number(msg5.payload).toFixed(4);\n        msg5.topic = 'GRID power consumption kWh';                               // msg5 = latest kWh part.\n    \n    \n    ///////////////////////////////////////////////////////////////////////////\n    // Calculation from kWh part > total kWh of today\n        var total_kwh_import = flow.get(\"total_kwh_import\",\"file\");\n        if (total_kwh_import === undefined)         {total_kwh_import = 0;}\n        \n        msg6.payload = msg5.payload + total_kwh_import;                                // msg6 = kWh total from the start of operation\n        msg6.topic = 'GRID power consumption kWh';\n        msg6.payload = Number(msg6.payload).toFixed(3);\n        msg6.payload = parseFloat(msg6.payload);    \n        flow.set('total_kwh_import',msg6.payload,\"file\");\n        \n    ////////////////////////////////////////////////////////////////////////////\n        return msg6;\n    \n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1160,
        "wires": [
            [
                "13a19fc3eda5bac1",
                "3bd892e72c39999a",
                "cfd69d5fa56c8a3d"
            ]
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "13a19fc3eda5bac1",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "P1 Output - Power consumption (kWh)",
        "mode": "link",
        "links": [],
        "x": 1230,
        "y": 1160,
        "wires": [],
        "l": true
    },
    {
        "id": "c62d7cd04e6dcc42",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "2 >> CONNECT your P1 power consumption / import to this node",
        "links": [
            "6c183b3f2bf4e8a8"
        ],
        "x": 850,
        "y": 860,
        "wires": [
            [
                "375bbd780529afe0"
            ]
        ],
        "l": true
    },
    {
        "id": "bc0aeeb8c2000e65",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "Expected input is a value in Watt or kiloWatt.",
        "info": "",
        "x": 310,
        "y": 880,
        "wires": []
    },
    {
        "id": "b3e73f9e4ae539cb",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "GRID CONSUMPTION IMPORT (OPTIONAL)",
        "info": "",
        "x": 310,
        "y": 840,
        "wires": []
    },
    {
        "id": "370731d4b4d4b62b",
        "type": "comment",
        "z": "966985d68ebb4990",
        "name": "Instruction",
        "info": "",
        "x": 1580,
        "y": 60,
        "wires": []
    },
    {
        "id": "39a4db5e9a226488",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "group": "b7f22c282fde0f86",
        "order": 13,
        "width": 9,
        "height": 1,
        "name": "DHW (PV)",
        "label": "DHW temperature actual",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 550,
        "y": 2640,
        "wires": []
    },
    {
        "id": "473053520368f99d",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "links": [
            "dd45b1caa253346b"
        ],
        "x": 385,
        "y": 2680,
        "wires": [
            [
                "5a4e594ff048795f"
            ]
        ]
    },
    {
        "id": "28c7a4a25703f3c5",
        "type": "ui_switch",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Solar",
        "label": "",
        "tooltip": "",
        "group": "e3cc96332cd59f07",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 530,
        "y": 1800,
        "wires": [
            [
                "200de001362093f8"
            ]
        ]
    },
    {
        "id": "67fe5d78fed38255",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "group": "e3cc96332cd59f07",
        "order": 10,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Solar",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 1800,
        "wires": []
    },
    {
        "id": "200de001362093f8",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 750,
        "y": 1840,
        "wires": [
            [
                "28c7a4a25703f3c5",
                "f3f4f51165a33ae4",
                "e0c261e5e8e372fb",
                "7bc1cea7963d95f8"
            ]
        ]
    },
    {
        "id": "87da7c125b68ad72",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "detection_method",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2260,
        "wires": [
            [
                "608ac27952261ad4"
            ]
        ]
    },
    {
        "id": "e7f6912a40ec057f",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Function: End solar run",
        "func": "var solar_state                     = global.get('solar_state',\"file\");\n    if (solar_state===undefined)    {solar_state = false}\nvar DHW_Temp                        = global.get('DHW_Temp');\nvar DHW_SP_HIGH                     = global.get('DHW_SP_HIGH',\"file\");\nvar SolarFunction_active            = global.get('SolarFunction_active',\"file\");\n\n//var ThreeWay_Valve_State          = global.get('ThreeWay_Valve_State');       // threewayvalvue 1 = DHW, 0 = HEAT\nvar new_Operating_Mode_State;\n\nvar F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n\n//if (solar_state === true && DHW_Temp >= (DHW_SP_HIGH -1) && SolarFunction_active >= 1 && ThreeWay_Valve_State == 0)\nif (solar_state === true && DHW_Temp >= (DHW_SP_HIGH) && SolarFunction_active == 1)\n    {\n            let msg1={};        // pin 1: new_Operating_Mode_State\n\n            let msg99={};        // pin 4: to log\n                msg99.topic      = \"Function Solar\";\n\n\n        // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    \n            global.set(\"SolarFunction_active\",2,\"file\");\n            \n            if (F_stored_next_operating_mode !== undefined)\n                {\n                    new_Operating_Mode_State = F_stored_next_operating_mode;\n                    global.set('F_stored_next_operating_mode',undefined,\"file\");\n                    msg1.payload    = new_Operating_Mode_State;\n                    msg1.topic      = \"new_Operating_Mode_State\";                 \n                    msg99.payload   = \"DHW temperature reached DHW SP High. Restored previous OperatingMode: \" + new_Operating_Mode_State;\n                    return [msg1,msg99];\n                }\n            else\n                {\n                    msg99.payload   = \"DHW temperature reached DHW SP High. Other function still active. OperatingMode not restored\";\n                    return [null,msg99];                    \n                }\n    }\n\nelse\n    {\n        return [null,null];\n        \n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3260,
        "wires": [
            [
                "b50ab0a4981f9d17"
            ],
            [
                "1b0aafd65d5593dd"
            ]
        ],
        "outputLabels": [
            "new Operating Mode",
            "To Log"
        ]
    },
    {
        "id": "b463820910564b36",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "global.set(\"SolarFunction_active\",msg.payload,\"file\");",
        "func": "global.set(\"SolarFunction_active\",msg.payload,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 3540,
        "wires": [
            []
        ],
        "outputLabels": [
            "log"
        ]
    },
    {
        "id": "687eabbba19e80ad",
        "type": "delay",
        "z": "966985d68ebb4990",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1200,
        "y": 3540,
        "wires": [
            [
                "b463820910564b36"
            ]
        ]
    },
    {
        "id": "1d3c07584a88352f",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 3260,
        "wires": [
            [
                "e7f6912a40ec057f",
                "44ebd91968d94cfe"
            ]
        ]
    },
    {
        "id": "86d4881128cac5a7",
        "type": "comment",
        "z": "966985d68ebb4990",
        "name": "Solar functie deactivate",
        "info": "",
        "x": 200,
        "y": 3220,
        "wires": []
    },
    {
        "id": "7bc1cea7963d95f8",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Function Solar",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1920,
        "wires": [
            [
                "8e16d1ef3e972c95",
                "74d748cdb9ede767"
            ]
        ]
    },
    {
        "id": "8e16d1ef3e972c95",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1345,
        "y": 1920,
        "wires": []
    },
    {
        "id": "1b0aafd65d5593dd",
        "type": "link out",
        "z": "966985d68ebb4990",
        "name": "to log",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 990,
        "y": 3220,
        "wires": [],
        "l": true
    },
    {
        "id": "cd437e0a80c22bc0",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Function - Production - Consumption (kWh)",
        "func": "let msg1={};                    // pin 1 - todays_result            Chart 1\nlet msg2={};                    // pin 2 - export_result                Chart 2\nlet msg3={};                    // pin 3 - import_result                Chart 2\nlet msg4={};                    // pin 4 - todays_result                Chart 2\n\n\nvar start_today_export = flow.get(\"start_today_export\",\"file\");\nif (start_today_export === undefined) {start_today_export = 0}\n\nvar total_kwh_export = flow.get(\"total_kwh_export\",\"file\");\nif (total_kwh_export === undefined) {start_today_export = 0}\n\nvar export_result = total_kwh_export - start_today_export;                      // negative value = export\n\nvar start_today_import = flow.get(\"start_today_import\",\"file\");                        //\nif (start_today_import === undefined) {start_today_import = 0}\n\nvar total_kwh_import = flow.get(\"total_kwh_import\",\"file\");\nif (total_kwh_import === undefined) {total_kwh_import = 0}\n\nvar import_result =  total_kwh_import - start_today_import;                      // posotive value = import\n//if (import_result === undefined) {import_result = 0;}\n\nvar todays_result = import_result + export_result;                              // result\n\n\nif (todays_result <= 0 || todays_result > 0)\n    {\n        msg1.topic      = \"Result\";\n        msg1.payload    = todays_result;\n        //if (todays_result <= 0) { msg1.topic = \"Export\"; } else { msg1.topic = \"Import\"; }\n        msg1.payload    = Number(msg1.payload).toFixed(2);\n        msg1.payload    = parseFloat(msg1.payload);\n        \n        msg2.payload    = export_result;\n        msg2.payload    = Number(msg2.payload).toFixed(2);\n        msg2.payload    = parseFloat(msg2.payload);\n        msg2.topic      = \"Export\";\n        \n        msg3.payload    = import_result;\n        msg3.payload    = Number(msg3.payload).toFixed(2);\n        msg3.payload    = parseFloat(msg3.payload);\n        msg3.topic      = \"Import\";\n        \n        msg4.payload    = todays_result;\n        msg4.payload    = Number(msg4.payload).toFixed(2);\n        msg4.payload    = parseFloat(msg4.payload);\n        msg4.topic      = \"Result\";\n        \n        \n        return [msg1,[msg2,msg3,msg4]];\n    }\n    \nelse {return null;}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1540,
        "wires": [
            [
                "59641004033390d7",
                "88d0285e2915c5d9"
            ],
            [
                "80ef562075a4181e",
                "1a198a8a916f8d78"
            ]
        ],
        "outputLabels": [
            "todays_result",
            "export_result"
        ]
    },
    {
        "id": "65b8f729748b5ecc",
        "type": "ui_chart",
        "z": "966985d68ebb4990",
        "name": "",
        "group": "2bd11d2d909e2ba3",
        "order": 8,
        "width": 10,
        "height": 7,
        "label": "Today's result (kWh)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Waiting for data ...  (will start at midnight) ",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 980,
        "y": 1540,
        "wires": [
            [
                "70ae9b1f03816b95"
            ]
        ]
    },
    {
        "id": "59641004033390d7",
        "type": "delay",
        "z": "966985d68ebb4990",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 1540,
        "wires": [
            [
                "65b8f729748b5ecc"
            ]
        ]
    },
    {
        "id": "16bb5c2934ec3068",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 940,
        "y": 1580,
        "wires": [
            [
                "65b8f729748b5ecc"
            ]
        ]
    },
    {
        "id": "44925c267016b3f7",
        "type": "link in",
        "z": "966985d68ebb4990",
        "name": "",
        "links": [
            "39f8d3463d10ccfb",
            "75c312c1494fea2e"
        ],
        "x": 125,
        "y": 1540,
        "wires": [
            [
                "cd437e0a80c22bc0"
            ]
        ]
    },
    {
        "id": "70bacba09eb9f884",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "set total_kwh_export file",
        "func": "msg.payload = Number(msg.payload).toFixed(3);\nmsg.payload = parseFloat(msg.payload);\n\nflow.set('total_kwh_export',msg.payload,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 480,
        "wires": [
            []
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "cfd69d5fa56c8a3d",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "set total_kwh_import file",
        "func": "msg.payload = Number(msg.payload).toFixed(3);\nmsg.payload = parseFloat(msg.payload);\nflow.set('total_kwh_import',msg.payload,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1200,
        "wires": [
            []
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "8f12203bf931d988",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "233708268636f815",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "x": 250,
        "y": 1400,
        "wires": [
            [
                "4d12c082bff0d9a8"
            ]
        ]
    },
    {
        "id": "cf528e5358dce9df",
        "type": "inject",
        "z": "966985d68ebb4990",
        "d": true,
        "g": "233708268636f815",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "start",
        "x": 250,
        "y": 1360,
        "wires": [
            [
                "4d12c082bff0d9a8"
            ]
        ]
    },
    {
        "id": "4d12c082bff0d9a8",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "233708268636f815",
        "name": "Function schedule import",
        "func": "\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\nvar start_today_import  = flow.get(\"start_today_import\",\"file\");                       //\nvar total_kwh_import    = flow.get('total_kwh_import',\"file\");                         //\nvar solar_state         = global.get('solar_state',\"file\");                     //\n\nif (total_kwh_import === undefined) {total_kwh_import = msg.payload;}\nif (total_kwh_import === undefined) {total_kwh_import = 0;}\n\n\nif (start_today_import === undefined)\n    {\n        start_today_import = total_kwh_import;\n        flow.set(\"start_today_import\",total_kwh_import,\"file\");\n    }   \nif (msg.topic == \"time\" && solar_state == 0)                                                        // When @ midnight, reset start_today_import to 0.\n    {\n\n        global.set(\"SolarFunction_active\",0,\"file\");        \n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        if (total_kwh_import !== undefined)\n            {\n                flow.set('start_today_import',total_kwh_import,\"file\");\n            }\n                return [msg,null,null];\n    }\nif (msg.topic == \"time\" && solar_state == 1)                                                        // When @ midnight, reset start_today_import to 0.\n    {\n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        if (total_kwh_import !== undefined)\n            {\n                flow.set('start_today_import',total_kwh_import,\"file\");\n            }\n\n        else \n            {\n                return [msg];\n            }\n    }\n//if (msg.topic == \"start\" && solar_state == true)\nif (msg.topic == \"start\")\n    {\n        let msg1={};\n        \n        msg1.payload = total_kwh_import - start_today_import;\n        msg1.payload = Number(msg1.payload).toFixed(2);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.topic = \"kWh\";\n        return [msg1];\n    }\nelse\n    {\n        var until_now       =   (msg.payload - start_today_import);            // calculate todays production in kWh\n        msg.payload = until_now;\n        msg.payload = Number(msg.payload).toFixed(2);\n        msg.payload = parseFloat(msg.payload);\n        msg.topic = \"kWh\";\n        return [msg];\n    }\n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1320,
        "wires": [
            [
                "75c312c1494fea2e"
            ]
        ],
        "outputLabels": [
            "kWh today"
        ]
    },
    {
        "id": "3bd892e72c39999a",
        "type": "no-op",
        "z": "966985d68ebb4990",
        "g": "233708268636f815",
        "name": "IN",
        "x": 250,
        "y": 1320,
        "wires": [
            [
                "4d12c082bff0d9a8"
            ]
        ]
    },
    {
        "id": "2b03f7e8408f5f56",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "group": "2bd11d2d909e2ba3",
        "name": "Line - Charts",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "75c312c1494fea2e",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "P1 Output - Power consumption Today (kWh)",
        "mode": "link",
        "links": [
            "44925c267016b3f7",
            "c193dd7c180a36de"
        ],
        "x": 1210,
        "y": 1320,
        "wires": [],
        "l": true
    },
    {
        "id": "edf195c89ff83486",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "P1 Output - Power production (kWh)",
        "mode": "link",
        "links": [],
        "x": 1190,
        "y": 440,
        "wires": [],
        "l": true
    },
    {
        "id": "40abfbbe563b32ac",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 885,
        "y": 640,
        "wires": [],
        "inputLabels": [
            "to log"
        ]
    },
    {
        "id": "4eef204ba842c2fa",
        "type": "comment",
        "z": "966985d68ebb4990",
        "name": "1 - connect your p1 power meter (production) to the grey node",
        "info": "",
        "x": 1720,
        "y": 120,
        "wires": []
    },
    {
        "id": "9765c40bf881d992",
        "type": "ui_gauge",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "Live Gauge",
        "group": "2bd11d2d909e2ba3",
        "order": 1,
        "width": 4,
        "height": 5,
        "gtype": "gage",
        "title": "Power live",
        "label": "{{msg.topic}}",
        "format": "{{value}} W",
        "min": "-5000",
        "max": "4000",
        "colors": [
            "#f59b56",
            "#de425b",
            "#de425b"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 550,
        "y": 2840,
        "wires": []
    },
    {
        "id": "80ef562075a4181e",
        "type": "ui_chart",
        "z": "966985d68ebb4990",
        "name": "Bar Chart import_export_result",
        "group": "2bd11d2d909e2ba3",
        "order": 7,
        "width": 4,
        "height": 7,
        "label": "Today (kWh)",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for data ...  (will start at midnight) ",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f59b56",
            "#de425b",
            "#1f77b4",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 1620,
        "wires": [
            [
                "6d7bd030e2ed99b8"
            ]
        ]
    },
    {
        "id": "ecb6c9034ddc15d4",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 940,
        "y": 1660,
        "wires": [
            [
                "80ef562075a4181e"
            ]
        ]
    },
    {
        "id": "9c0c527bd2fd1a7b",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "group": "b7f22c282fde0f86",
        "order": 15,
        "width": 9,
        "height": 1,
        "name": "Current status",
        "label": "Current status",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-spread",
        "className": "",
        "x": 880,
        "y": 3320,
        "wires": []
    },
    {
        "id": "cee35b0a1e2da0ea",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "",
        "func": "var SolarFunction_active            = global.get('SolarFunction_active',\"file\");\nvar solar_function_status1          = flow.get('solar_function_status1',\"file\");\nvar solar_function_status2          = flow.get('solar_function_status2',\"file\");\n\nif (msg.payload == \"new_day\")\n    {\n        flow.set('solar_function_status1',undefined,\"file\");\n        flow.set('solar_function_status2',undefined,\"file\");\n        return null;\n    }\nelse\n{\n    let msg1={};\n    if (SolarFunction_active == 0 || SolarFunction_active === undefined) \n        {\n            msg1.payload = \"Idle\";\n            msg1.topic = 'Solar function status';\n            msg1.color = \"\";\n            return [msg1];\n        }\n    if (SolarFunction_active == 1)\n        {\n            if (solar_function_status1 !== undefined)\n                {\n                    msg1.payload = solar_function_status1;\n                }\n            if (solar_function_status1 === undefined)\n                {\n                    msg1.payload = \"ACTIVE (\" + msg.payload + \")\";\n                    flow.set('solar_function_status1',msg1.payload,\"file\");\n                }\n            msg1.topic = 'Solar function status';\n            msg1.color = \"gold\";\n            return [msg1];\n        }\n    if (SolarFunction_active == 2)\n        {\n            if (solar_function_status2 !== undefined)\n                {\n                    msg1.payload = solar_function_status2;\n                }\n            if (solar_function_status2 === undefined)\n                {\n                    msg1.payload = \"Completed (\" + msg.payload + \")\";\n                    flow.set('solar_function_status2',msg1.payload,\"file\");\n                }\n            msg1.topic = 'Solar function status';\n            msg1.color = \"green\";\n            return [msg1];\n        }        \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 3320,
        "wires": [
            [
                "85461bac19f80e72"
            ]
        ]
    },
    {
        "id": "85461bac19f80e72",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 730,
        "y": 3320,
        "wires": [
            [
                "9c0c527bd2fd1a7b"
            ]
        ]
    },
    {
        "id": "44ebd91968d94cfe",
        "type": "moment",
        "z": "966985d68ebb4990",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 400,
        "y": 3300,
        "wires": [
            [
                "cee35b0a1e2da0ea"
            ]
        ]
    },
    {
        "id": "052d06709637dc81",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "new_day",
        "payloadType": "str",
        "x": 430,
        "y": 3340,
        "wires": [
            [
                "cee35b0a1e2da0ea"
            ]
        ]
    },
    {
        "id": "460148df6a225d24",
        "type": "smooth",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "property": "payload",
        "action": "max",
        "count": "10",
        "round": "0",
        "mult": "single",
        "reduce": true,
        "x": 980,
        "y": 2800,
        "wires": [
            [
                "5c90f480e0f6e8ac"
            ]
        ]
    },
    {
        "id": "5c90f480e0f6e8ac",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "\nvar value = msg.payload;\nif (value < 0) {value = -1 * value;}        // get rid of a minus \nvalue = value + 600;                        // manipulate the rounding a bit\nvalue = Math.round(value/1000)*1000;        // the rounding itself\n\n\n\n\n\nvar current_gauge_limits = flow.get('solar_gauge_min_max_value');\nif (current_gauge_limits === undefined)\n    {\n        current_gauge_limits = flow.get('solar_gauge_min_max_value',\"file\");\n    }\n\nif (value > current_gauge_limits || current_gauge_limits === undefined)\n    {\n    flow.set('solar_gauge_min_max_value',value,\"file\");\n    flow.set('solar_gauge_min_max_value',value);\n    }\n\nlet msg1={};\nlet msg2={};\nlet msg3={};\nlet msg4={};\nlet msg5={};\n\n\nmsg1 = {ui_control:{max:current_gauge_limits}};\nmsg2 = {ui_control:{min:(-1 * current_gauge_limits)}};\nmsg3 = {ui_control:{seg1:0, seg2:0}};\nmsg4 = {ui_control:{ymin:(-1 * current_gauge_limits)}};\nmsg5 = {ui_control:{ymax:current_gauge_limits}};\n\n\n\nreturn [msg1,msg2,msg3,msg4,msg5];\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 2840,
        "wires": [
            [
                "d6bf90086794b1ac"
            ],
            [
                "d6bf90086794b1ac"
            ],
            [
                "d6bf90086794b1ac"
            ],
            [
                "77e1377aea412936"
            ],
            [
                "77e1377aea412936"
            ]
        ],
        "outputLabels": [
            "max",
            "min",
            "seg",
            "",
            ""
        ]
    },
    {
        "id": "d4b0a313434a3fd9",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "start",
        "payload": "50",
        "payloadType": "num",
        "x": 980,
        "y": 2840,
        "wires": [
            [
                "5c90f480e0f6e8ac"
            ]
        ]
    },
    {
        "id": "803505e9e8372578",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Chart - Live Gauge",
        "links": [
            "d6bf90086794b1ac"
        ],
        "x": 385,
        "y": 2880,
        "wires": [
            [
                "9765c40bf881d992"
            ]
        ]
    },
    {
        "id": "d6bf90086794b1ac",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "mode": "link",
        "links": [
            "803505e9e8372578"
        ],
        "x": 1255,
        "y": 2820,
        "wires": []
    },
    {
        "id": "c0ee68059878b294",
        "type": "smooth",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "property": "payload",
        "action": "min",
        "count": "10",
        "round": "0",
        "mult": "single",
        "reduce": true,
        "x": 980,
        "y": 2880,
        "wires": [
            [
                "5c90f480e0f6e8ac"
            ]
        ]
    },
    {
        "id": "45de8d4b61f74361",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Chart Power history (W)",
        "links": [
            "77e1377aea412936",
            "c921d9cfc05712ec"
        ],
        "x": 385,
        "y": 2720,
        "wires": [
            [
                "bdd8cc1b7fb80f3f"
            ]
        ]
    },
    {
        "id": "77e1377aea412936",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "mode": "link",
        "links": [
            "45de8d4b61f74361"
        ],
        "x": 1255,
        "y": 2860,
        "wires": []
    },
    {
        "id": "5f2ca6fd7cf3d5c5",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload < 0)\n{\n    msg.topic = 'Production'\n}\n\nif (msg.payload > 0)\n{\n    msg.topic = 'Consumption'\n}\nif (msg.payload === NaN)\n    {\n        return null;\n    }\nelse\n{\n    return msg;        \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2840,
        "wires": [
            [
                "9765c40bf881d992",
                "460148df6a225d24",
                "c0ee68059878b294"
            ]
        ]
    },
    {
        "id": "cb712c05b08bf433",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1250,
        "y": 3620,
        "wires": [
            [
                "b463820910564b36"
            ]
        ]
    },
    {
        "id": "39f52a7b4d2f12c9",
        "type": "inject",
        "z": "966985d68ebb4990",
        "d": true,
        "g": "2efa0af27c69d4d0",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "time",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "aad8f63921d33903"
            ]
        ]
    },
    {
        "id": "441d5424780d9523",
        "type": "inject",
        "z": "966985d68ebb4990",
        "d": true,
        "g": "233708268636f815",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "time",
        "x": 430,
        "y": 1400,
        "wires": [
            [
                "4d12c082bff0d9a8"
            ]
        ]
    },
    {
        "id": "623dc28b8a4cccdd",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "group": "b7f22c282fde0f86",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "Spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 1760,
        "wires": []
    },
    {
        "id": "8f06615b7f974a19",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "group": "b7f22c282fde0f86",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "Spacer 6",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 940,
        "y": 1760,
        "wires": []
    },
    {
        "id": "88d0285e2915c5d9",
        "type": "link out",
        "z": "966985d68ebb4990",
        "name": "kWh Result",
        "mode": "link",
        "links": [
            "c193dd7c180a36de"
        ],
        "x": 595,
        "y": 1500,
        "wires": []
    },
    {
        "id": "941e2e6b17a45171",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "e5578a7ea3257441",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "kWh_prod",
                "fromt": "str",
                "to": "kWh",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "kWh_result",
                "fromt": "str",
                "to": "kWh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 2220,
        "wires": [
            [
                "87da7c125b68ad72"
            ]
        ]
    },
    {
        "id": "add57b730a3e769f",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "5256af8b7309c113"
            ]
        ]
    },
    {
        "id": "af24696818983d4c",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 420,
        "wires": [
            [
                "5256af8b7309c113"
            ]
        ]
    },
    {
        "id": "63bcc91caacdcf55",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "9",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "3ddc8ec4b5d75af2"
            ]
        ]
    },
    {
        "id": "0b2d388baee905a4",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 1140,
        "wires": [
            [
                "3ddc8ec4b5d75af2"
            ]
        ]
    },
    {
        "id": "37178acf2fda2d9d",
        "type": "delay",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 3080,
        "wires": [
            [
                "b50ab0a4981f9d17"
            ]
        ]
    },
    {
        "id": "78507acac200e031",
        "type": "delay",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 3020,
        "wires": [
            [
                "e62a354ce682ea6f"
            ]
        ]
    },
    {
        "id": "4f0d0fe30d09e055",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 1310,
        "y": 3660,
        "wires": [
            [
                "b463820910564b36"
            ]
        ]
    },
    {
        "id": "437ef6d2304bdd10",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1210,
        "y": 3580,
        "wires": [
            [
                "b463820910564b36"
            ]
        ]
    },
    {
        "id": "bd079d704c31d5a7",
        "type": "ui_button",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "group": "2bd11d2d909e2ba3",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset scale",
        "tooltip": "Press and wait 5 minutes for the chart to update. This RESET impactes Power Live and Power History chart only.",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 2640,
        "wires": [
            [
                "a8beed6bcea8ec08"
            ]
        ]
    },
    {
        "id": "a8beed6bcea8ec08",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "func": "flow.set('solar_gauge_min_max_value',undefined,\"file\");\nflow.set('solar_gauge_min_max_value',undefined);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2640,
        "wires": []
    },
    {
        "id": "5fb3c7be3b428b42",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "group": "2bd11d2d909e2ba3",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "Spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1260,
        "y": 2700,
        "wires": []
    },
    {
        "id": "ac392c197fe09917",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "group": "2bd11d2d909e2ba3",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "Spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1240,
        "y": 2680,
        "wires": []
    },
    {
        "id": "37aa061ab91471ec",
        "type": "ui_dropdown",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "dropdown import",
        "label": "",
        "tooltip": "Import correction",
        "place": "Select option",
        "group": "338420d1319e8350",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "1000",
                "value": 1000,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 390,
        "y": 1020,
        "wires": [
            [
                "8aa8fe1b9cd61f3c"
            ]
        ]
    },
    {
        "id": "890a57ef3afcf284",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "group": "338420d1319e8350",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "result import",
        "label": "Latest corrected result",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 1060,
        "wires": []
    },
    {
        "id": "856711de93142cb9",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "group": "338420d1319e8350",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "raw value import",
        "label": "P1 raw consumption value",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 980,
        "wires": []
    },
    {
        "id": "8aa8fe1b9cd61f3c",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "correction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1020,
        "wires": [
            [
                "3ddc8ec4b5d75af2"
            ]
        ]
    },
    {
        "id": "7f9c4451a116b794",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "group": "338420d1319e8350",
        "order": 3,
        "width": 7,
        "height": 1,
        "name": "import correction txt",
        "label": "Correction factor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 190,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e5a024baed5f8a58",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "group": "338420d1319e8350",
        "name": "Line - Setup  import",
        "order": 1,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Consumption setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "26c4d827da98fd56",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "name": "Line - Setup export",
        "order": 6,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Production setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ce787867699a6a50",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "result export",
        "label": "Latest corrected result",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 470,
        "y": 280,
        "wires": []
    },
    {
        "id": "f58197b3d1d9d1d0",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "raw value export",
        "label": "P1 raw production value",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 480,
        "y": 200,
        "wires": []
    },
    {
        "id": "d31bb33a7ab5445e",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "correction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 240,
        "wires": [
            [
                "5256af8b7309c113"
            ]
        ]
    },
    {
        "id": "1c7292b507901827",
        "type": "ui_dropdown",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "dropdown export",
        "label": "",
        "tooltip": "Export correction",
        "place": "Select option",
        "group": "338420d1319e8350",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "1000",
                "value": 1000,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 490,
        "y": 240,
        "wires": [
            [
                "d31bb33a7ab5445e"
            ]
        ]
    },
    {
        "id": "a9efc23cf56dc231",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "export correction txt",
        "label": "Correction factor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 250,
        "y": 240,
        "wires": []
    },
    {
        "id": "f4563963b2c49d22",
        "type": "comment",
        "z": "966985d68ebb4990",
        "name": "2 - connect your p1 power meter (consumption) to the grey node. (this is optional)",
        "info": "",
        "x": 1780,
        "y": 160,
        "wires": []
    },
    {
        "id": "a9994ef2e592aee1",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.015",
        "payloadType": "num",
        "x": 550,
        "y": 820,
        "wires": [
            [
                "375bbd780529afe0"
            ]
        ]
    },
    {
        "id": "59e73e3a2c2985fa",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.015",
        "payloadType": "num",
        "x": 710,
        "y": 60,
        "wires": [
            [
                "88ea0371f9cecd37"
            ]
        ]
    },
    {
        "id": "375bbd780529afe0",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1230,
        "y": 860,
        "wires": [
            [
                "3ddc8ec4b5d75af2",
                "856711de93142cb9"
            ]
        ]
    },
    {
        "id": "88ea0371f9cecd37",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "f58197b3d1d9d1d0",
                "5256af8b7309c113"
            ]
        ]
    },
    {
        "id": "8ba23174457c635d",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "name": "Line - Setup export",
        "order": 11,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Note:</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "4aa1e7a1e212ad06",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "order": 12,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "Only live values are shown in \"P1 raw xx value\". You need to wait for consumption / production value to be received from P1 to know for sure what the result is.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 360,
        "wires": []
    },
    {
        "id": "092043375da1c8a9",
        "type": "trigger",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 980,
        "y": 2760,
        "wires": [
            [
                "153d971fff0a3ed3"
            ]
        ]
    },
    {
        "id": "153d971fff0a3ed3",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Store chart",
        "func": "var myArray = msg;\nflow.set(\"chart_solar_power_history\", myArray,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "cc71fabeef44a7fe",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1530,
        "y": 2760,
        "wires": [
            [
                "19e1b78cc7d0e897"
            ]
        ]
    },
    {
        "id": "19e1b78cc7d0e897",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Restore chart",
        "func": "let msg1={};\nmsg1 = flow.get(\"chart_solar_power_history\",\"file\");\n\nif (msg1 === undefined)\n    {\n        return null;\n    }\n    \nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 2760,
        "wires": [
            [
                "c921d9cfc05712ec"
            ]
        ]
    },
    {
        "id": "c921d9cfc05712ec",
        "type": "link out",
        "z": "966985d68ebb4990",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "45de8d4b61f74361"
        ],
        "x": 1835,
        "y": 2760,
        "wires": []
    },
    {
        "id": "663fdd592413d066",
        "type": "delay",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 180,
        "y": 2800,
        "wires": [
            [
                "329a022ba526c218",
                "5f2ca6fd7cf3d5c5"
            ]
        ]
    },
    {
        "id": "b9947e738c3857dd",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Restore chart",
        "func": "let msg1={};\nmsg1 = flow.get(\"chart_solar_todays_result\",\"file\");\nif (msg1 === undefined)\n    {return null;}\nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1620,
        "wires": [
            [
                "65b8f729748b5ecc"
            ]
        ]
    },
    {
        "id": "2590f42325cddaa0",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1620,
        "wires": [
            [
                "b9947e738c3857dd",
                "74c43f1541cb9220"
            ]
        ]
    },
    {
        "id": "70ae9b1f03816b95",
        "type": "trigger",
        "z": "966985d68ebb4990",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1240,
        "y": 1540,
        "wires": [
            [
                "241a32186671a626"
            ]
        ]
    },
    {
        "id": "241a32186671a626",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Store chart",
        "func": "var myArray = msg;\nflow.set(\"chart_solar_todays_result\", myArray,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "74c43f1541cb9220",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Restore chart",
        "func": "let msg1={};\nmsg1 = flow.get(\"chart_solar_import_export_result\",\"file\");\nif (msg1 === undefined)\n    {return null;}\nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1660,
        "wires": [
            [
                "80ef562075a4181e"
            ]
        ]
    },
    {
        "id": "6d7bd030e2ed99b8",
        "type": "trigger",
        "z": "966985d68ebb4990",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1240,
        "y": 1620,
        "wires": [
            [
                "67613761035e311d"
            ]
        ]
    },
    {
        "id": "67613761035e311d",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Store chart",
        "func": "var myArray = msg;\nflow.set(\"chart_solar_import_export_result\", myArray,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "58f4dcb609fc506a",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "kWh trigger",
        "func": "var MQTT = global.get('MQTT',\"file\");\nif (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_solar == 1)){\n\n    \n    \n    var solar_state                     = global.get('solar_state',\"file\");\n    if (solar_state === true)\n    {\n        var solar_detection_method          = global.get('solar_detection_method',\"file\");\n        var solar_threshold                 = global.get('solar_threshold',\"file\");\n        var DHW_Current_SP                  = global.get('DHW_Target_Temp',\"file\");\n        var solar_fallback                  = global.get('solar_fallback',\"file\");\n            if (solar_fallback===undefined)     {solar_fallback=0}\n        var DHW_SP_LOW                      = global.get('DHW_SP_LOW',\"file\");\n        var DHW_SP_HIGH                     = global.get('DHW_SP_HIGH',\"file\");\n        var Operating_Mode_State            = global.get('Operating_Mode_State',\"file\");\n        var new_Operating_Mode_State;       // just create a variable, empty.\n        var old_Operating_Mode_State;       // just create a variable, empty.\n        var solar_turn_on                   = global.get('solar_turn_on',\"file\");\n        var Heatpump_State                  = global.get('Heatpump_State',\"file\");\n        var SolarFunction_active            = global.get(\"SolarFunction_active\",\"file\");\n    \n        var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n    \n        let msg1={};                                                                // pin 1 - output to DHW setpoint\n        let msg2={};                                                                // pin 2 - output to Operation Mode\n        let msg3={};                                                                // pin 3 - output to turn on power to heatpump.\n        let msg99={};                                                               // pin 4 - output to log\n    \n    //  return [msg1,msg2,msg3,msg99]\n    \n        // Check if all required states are available.\n        if (solar_detection_method === undefined || solar_threshold === undefined || solar_fallback === undefined || DHW_SP_HIGH === undefined || Operating_Mode_State === undefined || solar_turn_on === undefined || Heatpump_State === undefined)\n            {\n                msg99.topic = \"Function Solar\";\n                msg99.payload = \"ERROR: Not all settings in 'Function Solar' are programmed in GUI yet.\";\n                return [null,null,null,msg99];                                       // log output\n            }\n        else\n            {\n    \n    //              msg.topic = \"W\";            < > nul\n    //              msg.topic = 'GRID power production kWh';\n    //              msg.topic = 'GRID power consumption kWh';\n    //              msg.topic = '(+) Import (-) Export';\n    \n    //Threshold\n    //  kW\n    //  kWh_prod\n    //  kWh_result\n    //\n            // getting rid of all messages which are not related to the selected detection method.\n            //\n            if (solar_detection_method == \"kW\"          && msg.topic != 'W' )       {return null;}\n            if (solar_detection_method == \"kWh_prod\"    && msg.topic != 'Export')   {return null;}\n            if (solar_detection_method == \"kWh_result\"  && msg.topic != 'Result')   {return null;}\n            if (msg.payload == 0)                                                   {return null;}\n            \n            //  convert the W signal to kW so that the value (threshold) are similar.\n            if (solar_detection_method == \"kW\")                                     {msg.payload = msg.payload / 1000;}\n    \n            \n            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n            //  Note: (solar_threshold > (msg.payload) >>> msg.payload is negative number if energy production is high.\n            //\n            if (solar_threshold > (msg.payload) && DHW_Current_SP != DHW_SP_HIGH && SolarFunction_active != 2)      \n                {\n                    // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                    \n                    if (Operating_Mode_State == 0){new_Operating_Mode_State = 4; old_Operating_Mode_State = Operating_Mode_State} // add DHW modus\n                    if (Operating_Mode_State == 1){new_Operating_Mode_State = 5; old_Operating_Mode_State = Operating_Mode_State} // add DHW modus\n                    if (Operating_Mode_State == 2){new_Operating_Mode_State = 6; old_Operating_Mode_State = Operating_Mode_State} // add DHW modus\n                    if (Operating_Mode_State == 7){new_Operating_Mode_State = 8; old_Operating_Mode_State = Operating_Mode_State} // add DHW modus\n                    \n                    if (Operating_Mode_State == 3){new_Operating_Mode_State = 3;} // prevent undefined new_Operating_Mode_State\n                    if (Operating_Mode_State == 4){new_Operating_Mode_State = 4;} // prevent undefined new_Operating_Mode_State\n                    if (Operating_Mode_State == 5){new_Operating_Mode_State = 5;} // prevent undefined new_Operating_Mode_State\n                    if (Operating_Mode_State == 6){new_Operating_Mode_State = 6;} // prevent undefined new_Operating_Mode_State\n                    if (Operating_Mode_State == 8){new_Operating_Mode_State = 8;} // prevent undefined new_Operating_Mode_State\n                    \n                    var tag;    // declare variable for tag in log line.\n                    if (solar_detection_method == \"kW\")         {tag = 'kW';}\n                    if (solar_detection_method == \"kWh_prod\")   {tag = \"Today's export (kWh)\";}         \n                    if (solar_detection_method == \"kWh_result\") {tag = \"kWh todays result\";}  \n                    \n                    if (F_stored_next_operating_mode === undefined && old_Operating_Mode_State !== undefined)\n                        {\n                            global.set('F_stored_next_operating_mode',old_Operating_Mode_State,\"file\");\n                        }\n                    \n                    msg1.payload = DHW_SP_HIGH;\n                    msg2.payload = new_Operating_Mode_State;\n                    \n                    global.set(\"SolarFunction_active\",1,\"file\");\n                    \n                    if (Heatpump_State == 0 && solar_turn_on === true)\n                        {   \n                            msg99.payload = \"triggered threshold (\" + tag + \"). DHW SP to \" + DHW_SP_HIGH + \", change operationmode and turn on Heatpump\";\n                            msg99.topic = \"Function Solar\";\n                            msg3.payload = 1; msg3.source = \"flow\";                                           // send 1 to turn on the heatpump\n                            return [msg1, msg2, msg3, msg99];\n                        }\n                    else    \n                        {   \n                            msg99.payload = \"triggered threshold (\" + tag + \"). DHW SP to \" + DHW_SP_HIGH + \" and change operation mode\";\n                            msg99.topic = \"Function Solar\";\n                            return [msg1, msg2, null, msg99];\n                        }    \n                }\n                else if (msg.payload > 0 && solar_detection_method == \"kW\" && DHW_Current_SP == DHW_SP_HIGH && solar_fallback === true && SolarFunction_active == 1)\n                {\n                    msg1.payload = DHW_SP_LOW;\n                    global.set(\"SolarFunction_active\",0,\"file\");\n                    \n                    msg99.payload = \"triggered threshold (\" + tag + \"). Above 0kWh threshold. DHW SP to \" + DHW_SP_LOW;\n                    msg99.topic = \"Function Solar\";\n                    return [msg1,null,null,msg99];\n                }\n                else {return [null,null,null,null];}\n                \n                //DHW_Target_Temp\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n            \n            }\n    }\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 3080,
        "wires": [
            [
                "78507acac200e031"
            ],
            [
                "37178acf2fda2d9d"
            ],
            [
                "ee7e3fc1d241d09e"
            ],
            [
                "1b0aafd65d5593dd"
            ]
        ],
        "outputLabels": [
            "DHW_SP_HIGH",
            "new_Operating_Mode_State",
            "solar_turn_on_heatpump",
            "log"
        ]
    },
    {
        "id": "9b92843d2d8873a3",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "link in 10",
        "links": [
            "6c24c2f990c17968",
            "071320367f2b7a40",
            "1a198a8a916f8d78"
        ],
        "x": 145,
        "y": 3080,
        "wires": [
            [
                "58f4dcb609fc506a"
            ]
        ]
    },
    {
        "id": "1a198a8a916f8d78",
        "type": "link out",
        "z": "966985d68ebb4990",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "9b92843d2d8873a3"
        ],
        "x": 595,
        "y": 1580,
        "wires": []
    },
    {
        "id": "587950a7c0607d2b",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Export",
        "payload": "-4",
        "payloadType": "num",
        "x": 100,
        "y": 2960,
        "wires": [
            [
                "58f4dcb609fc506a"
            ]
        ]
    },
    {
        "id": "74d748cdb9ede767",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "set back default",
        "func": "if (msg.payload == 0) {\n    var F_stored_next_operating_mode = global.get('F_stored_next_operating_mode',\"file\");\n    var F_RTC_on_off_active = global.get('F_RTC.on_off_active',\"file\");\n    \n    \n    if (F_stored_next_operating_mode === undefined) {\n        return null;\n    }\n    let msg1={};    // pin 1 - the restored operating mode\n    let msg99={};   // pin 2 - info to the log\n    // return [msg1,msg99]\n\n    if (F_RTC_on_off_active == 0) {\n        msg1.payload = F_stored_next_operating_mode;\n        msg1.topic = 'Restoring new operating mode';\n        \n        msg99.topic = 'Function Solar';\n        msg99.payload = 'Solar function turned off manually. Restoring operating mode';\n        \n        global.set('F_stored_next_operating_mode',undefined,\"file\");\n        \n        return [msg1,msg99];\n    }\n\n}\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1880,
        "wires": [
            [
                "b50ab0a4981f9d17"
            ],
            [
                "8e16d1ef3e972c95"
            ]
        ]
    },
    {
        "id": "dd80b368fadb1f13",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1500,
        "wires": [
            [
                "cd437e0a80c22bc0"
            ]
        ]
    },
    {
        "id": "72f2748729e53ad1",
        "type": "tab",
        "label": "WP Help",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fca08ea5bf5103fd",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "Solar HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "abdc4499891c6871",
            "739eb34ff6d8c742",
            "7bccbeb28d094a57",
            "6eb23418ea8d86a1",
            "740159707b77305c",
            "3e9a174ab4a78882",
            "e487a445e58768f0",
            "01a4ac4ad26a6b09",
            "468d1cde1e2b4ff3",
            "3b5ab802c150fd86",
            "dc156fecfc1bc1e8",
            "c4295ed66d438dd7",
            "0bc6f2130b8acb9d",
            "9f75b032f8c2eeb5",
            "bcda44f3140d86e9"
        ],
        "x": 124,
        "y": 139,
        "w": 642,
        "h": 342
    },
    {
        "id": "5505432507101e93",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "WAR HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "be48f3104249b8a0",
            "b33b45b8a4e1398b",
            "1058327295d17e05",
            "184850f4f96ed36c",
            "da5eda62cc98aecc",
            "43be81558a98b102",
            "c2935eeb2b0919cf"
        ],
        "x": 204,
        "y": 499,
        "w": 632,
        "h": 202
    },
    {
        "id": "b5e32619ad0c206e",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "RTC HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "ad4e277358b19235",
            "56f59b7df09abbf3",
            "3474eb4f4083febc",
            "d00691f660be457b",
            "5f6574f97f240326",
            "8982c1e161d9d215",
            "3c3c8472da1fb85a"
        ],
        "x": 1084,
        "y": 139,
        "w": 592,
        "h": 202
    },
    {
        "id": "c77aed9e30c539d5",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "Scheduler HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "f9144fc6ad3350af",
            "ecf4984d100b1353",
            "ded746ab97b49c20",
            "4770fc4ef0f643b3",
            "973d8234e83e6744",
            "c38f069ac9641f6a",
            "00752e5f6b14036b",
            "4435d59eb3f03631",
            "d0bc87893510d46f",
            "347b614526bf4814",
            "8090bc95e8512738",
            "7ca958b4b94243f8"
        ],
        "x": 1104,
        "y": 379,
        "w": 592,
        "h": 262
    },
    {
        "id": "fde5dafe04d72e23",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "SoftStart HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "75571074f2ac434c",
            "c652e74baa241047",
            "3a4234d15cccd2f2",
            "088968fcdf03a215",
            "284c3282438b7e4c",
            "c54eb9703d5f9272",
            "e16790ec4eb50d6c",
            "0c3e58e3b5cd3fd7",
            "4d40537faabfd240",
            "e043e3c485777375",
            "1dc467ae4cf20867",
            "8d47d305edaedefa",
            "8b7c9a76f8ddca81",
            "c96821120dd58acc"
        ],
        "x": 1104,
        "y": 679,
        "w": 592,
        "h": 302
    },
    {
        "id": "be48f3104249b8a0",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "name": "",
        "group": "052caff3b2365345",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"WAR_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 310,
        "y": 580,
        "wires": [
            [
                "da5eda62cc98aecc"
            ]
        ]
    },
    {
        "id": "32e18af8aea0be90",
        "type": "link in",
        "z": "72f2748729e53ad1",
        "name": "UI Control",
        "links": [
            "12bf7fcc7f4c6696",
            "e6aa4e32e33f71c3",
            "3f57a73354e16fc8",
            "cfdf5af6d5f2d693",
            "da5eda62cc98aecc",
            "3b5ab802c150fd86",
            "5f6574f97f240326",
            "973d8234e83e6744",
            "284c3282438b7e4c"
        ],
        "x": 205,
        "y": 60,
        "wires": [
            [
                "f5eb45ad3e78471c"
            ]
        ]
    },
    {
        "id": "b33b45b8a4e1398b",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "name": "",
        "group": "79eed3b289871944",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"WAR_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 450,
        "y": 620,
        "wires": [
            [
                "da5eda62cc98aecc"
            ]
        ]
    },
    {
        "id": "f5eb45ad3e78471c",
        "type": "ui_ui_control",
        "z": "72f2748729e53ad1",
        "name": "",
        "events": "all",
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1058327295d17e05",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "group": "79eed3b289871944",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 580,
        "y": 620,
        "wires": []
    },
    {
        "id": "184850f4f96ed36c",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "group": "79eed3b289871944",
        "order": 1,
        "width": 9,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 320,
        "y": 620,
        "wires": []
    },
    {
        "id": "da5eda62cc98aecc",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 795,
        "y": 540,
        "wires": []
    },
    {
        "id": "abdc4499891c6871",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "group": "b7f22c282fde0f86",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Solar_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "739eb34ff6d8c742",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Solar_Help\"]}}",
        "payloadType": "json",
        "x": 230,
        "y": 180,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "7bccbeb28d094a57",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 300,
        "wires": []
    },
    {
        "id": "6eb23418ea8d86a1",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "name": "Line - Instructions text",
        "order": 5,
        "width": 14,
        "height": 22,
        "format": "<h3>Solar</h3></br>\n<h3>What can this function do for you?</h3>\nThe aim of this function is to increase efficiency (and save cost) by utilize your own produced solar energy as much as\npossible. When there is solar energy in abundance, you can use that energy to heat up your DHW. To determine if there is\nenough solar energy, you need any form of power measurement. This can be a P1 power meter in your electric room, or you\ncan use the output from your inverter.\n</br></br><h3>How to setup?</h3>\nFirst go to the Solar page and click P1 SETUP, there you have to set the Correction factor. This can either be 1 or\n1000, depending if your source feeds watts or Kilowatts. Set this for Consumption and Production. You will the corrected\nresult straight away, but of course, it does need to be sunny for the production to show up, as these are realtime\nvalues.</br>\n</br>\nSecondly, you need to set the DHW setpoints.</br>\n</br><u>DHW temperature setpoint - high</u>\nThis is the target temperature for the water in DHW tank. By default, DHW (SP) on the settings page is used at the beginning of each day.\nDHW temperature setpoint - high will be used when solar power reached the threshold.\n</br></br><u>Power detection method</u>\nThere are three options available.</br></br>\n<i>Option 1: Power Live (kW)</br></i>\nLive energy production in watt. See image 1.</br></br>\n<i>Option 2: Today's production (kWh)</i>\nTodays energy production, expressed in kWh. Energy consumption will NOT be subtracted from this value, it will only\nincrease. See image 2.</br></br>\n<i>Option 3: Today's result (kWh)</i>\nTodays result, which is the sum of production and consumption. Energy consumption will be subtracted from this value, so\nit can in- or decrease.</br>\n</br><u>Threshold</u>\nThis is the threshold above which the DHW temperature setpoint - high would be set as the new target value.</br>\n</br><u>Fallback to default DHW (SP) below 0 W?</u>\nBy default, once DHW temperature setpoint - high is used, it will not switch back to DHW (SP) for the rest of the\nday. If you do want to fall back to DHW (SP) when power production drops below zero watt, enable Fallback to DHW (SP) below 0 W?</br> This will only apply for the power detection method Option 1: Power\nLive (kW).</br>\n</br><u>Solar function active when heat pump is off</u>\nWhen enabled the heat pump will be switched on when the Treshold is reached.\n</br></br><h3>Notes:</h3></br>\n- Power option 1 can cause power cycling",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "740159707b77305c",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "name": "",
        "order": 6,
        "width": 7,
        "height": 6,
        "format": "<div height=\"300\" style=\"height: 300px;\">\n<img src=\"https://github.com/edterbak/NodeRed_Heishamon_control/blob/main/images/chart%20powerproduction_1.png?raw=true\" width=325px><br/>\n</div>\nImage 1: kW Production now",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3e9a174ab4a78882",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "name": "",
        "order": 7,
        "width": 7,
        "height": 6,
        "format": "<div height=\"300\" style=\"height: 300px;\">\n<img src=\"https://github.com/edterbak/NodeRed_Heishamon_control/blob/main/images/chart%20powerproduction_2.png?raw=true\" width=325px><br/>\n</div>\nimage 2: kwh Production today\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 520,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e487a445e58768f0",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "group": "55fef8703465841e",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Solar_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 530,
        "y": 300,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "01a4ac4ad26a6b09",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "order": 8,
        "width": 14,
        "height": 1,
        "name": "spacer 14",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 440,
        "wires": []
    },
    {
        "id": "468d1cde1e2b4ff3",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "order": 1,
        "width": 10,
        "height": 1,
        "name": "spacer 11",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "3b5ab802c150fd86",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 545,
        "y": 200,
        "wires": []
    },
    {
        "id": "43be81558a98b102",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "group": "79eed3b289871944",
        "name": "Line - Instructions text",
        "order": 4,
        "width": 12,
        "height": 18,
        "format": "<h3>WAR - Weather Adaptable Regulation</h3>\n<br/>\n<h3>What can this function do for you?</h3>\nThe aim of this function is to dynamically change the water temperature used for heating, compensating for the outside\nweather. If it is very cold outside, you require more heat compared to when it is warmer outside to end up with a\ncomfortable house. This function will thuss compensate the increasing heat loss the colder it get outside.\n<br/>\nThis will allow the heat pump to run at a lower, more efficient rate saving you energy. This will reduce cycling of the\ncompressor to increase its lifetime.\n<br/><br/>\n<h3>How to setup?</h3>\n<br/><u>Temperature profile</u>\nHere you can program three points, where you give the outside temperature and the corresponding target water\ntemperatures.\n<br/>\nThe first (top) point is the highest outside temperature, by default this one is set to 15 °C. This corresponds to the\nmaximum outside temperature the Panasonic accepts.\nThe last (bottom) point should be the lowest outside temperature you will realistically experience in you situation.\n<br/>\nWith the center point you can adjust the curve more to your liking. This will give you the ability to give you a bit\nmore heat when freezing for example.\nThis will give you the WAR temperature profile graph.\nDefault values: xxx\n<br/><br/><u>Result</u>\nThe actual outside temperature is used to find the corresponding water temperature according to your given settings. The\nresult will be rounded to whole degrees celcius and shown at Calculated temp..\n<br/><br/><u>Advanced</u>\nIf you want to use the WAR functionality of the Panasonic itself instead of this flow, you can export the Temperature\nprofile to your HeishaMon / Panasonic.\n<br/><br/>\n<h3>Notes:</h3>\n- The Panasonic has its own outside thermometer, this is typically located in the little black rubber tube on the back\nof the device. It’s quite inaccurate, especially if the sun is allowed to reach it, it is strongly recommended to use a\nproper outside sensor<br/>\n- Outside temperature range: -20°C - 15°C<br/>\n- Water temperature range: 20°C - 60°C<br/>\n- The Panasonic internally works with 2 points, instead of the 3 in this flow<br/>\n- If you do not require three points, use 2 identical Water temperatures but unique Outside temperatures<br/>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 360,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c2935eeb2b0919cf",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"WAR_Help\"]}}",
        "payloadType": "json",
        "x": 310,
        "y": 540,
        "wires": [
            [
                "da5eda62cc98aecc"
            ]
        ]
    },
    {
        "id": "ad4e277358b19235",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "name": "",
        "group": "e27cfec311892d88",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"RTC_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1190,
        "y": 220,
        "wires": [
            [
                "5f6574f97f240326"
            ]
        ]
    },
    {
        "id": "56f59b7df09abbf3",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "name": "",
        "group": "ae6c2168304beda0",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"RTC_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "5f6574f97f240326"
            ]
        ]
    },
    {
        "id": "3474eb4f4083febc",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "group": "ae6c2168304beda0",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1460,
        "y": 260,
        "wires": []
    },
    {
        "id": "d00691f660be457b",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "group": "ae6c2168304beda0",
        "order": 1,
        "width": 9,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 260,
        "wires": []
    },
    {
        "id": "5f6574f97f240326",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 1635,
        "y": 180,
        "wires": []
    },
    {
        "id": "8982c1e161d9d215",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "group": "ae6c2168304beda0",
        "name": "Line - Instructions text",
        "order": 4,
        "width": 12,
        "height": 25,
        "format": "<h3>RTC - Room Temperature Correction</h3>\n<br/>\n<h3>What can this function do for you?</h3>\nThis function corrects the water temperature based on the actual room temperature. It is desgined to do small\ncorrections to prevent an under- or overshoot in room temperature. It is also useful in situations where direct sunlight warms up the room.\n<br/><br/>\nThe basis for the setup is the temperature difference between actual (Room actual) and target (Room setpoint).\n<br/>\nWhen the room is too warm, the default water temperature for Heat is decreased by 1, 2 or 3 degrees celcius, and vice versa.\n<br/>\nWhen properly configured this will result in a more stable (comfortable) room temperature. On the other hand, when not correctly\nconfigured it can result in increased cycling of the heat pump. This can causing extra wear and increased energy costs. So please take your\ntime to set it up right for your situation.\n<br/><br/>\n\n<h3>setup</h3>\nFirst enter a desired temperature at Room setpoint.\n<br/>\nSecondly you need to enter at which point the water temperature will be changed by 1, 2 or 3 degrees celcius. This will\ntake a bit of experimenting. For example if you use floor heating smaller deltas (0.1) work better because by its nature it is\nslow to respond. When using radiators you can increase the deltas (0.5). Try to make small changes at a time and observe the result for\nat least 1 or 2 days.\n<br/><br/>\nThe 'custom' option offers you the ability to increase the water temperature by your choice. This can be useful if you require a heating boost e.g. in the morning. This is not adviced for floor heating, but only for radiator type heating.\n<br/><br/>\n\nDefault values:<br/>\n0,5 Degree too warm/cold gives you 1 degree warmer water. 1,0 too warm/cold gives 2, 1,5 too warm/cold gives 3.<br/><br/>\n<h3>Important note:</h3>\nThe Panasonic has its own inside thermometer located in the wall mounted Remote Controller. It is inaccurate and really not\nsuitable to use for this RTC function. Please use a custom indoor sensor with an accuracy of 0,1°C.\nFor example a BMP280 or BME280. Be sure to place it somewhere out of direct sunlight or a cold draft.<br/>\n<br/>\n-----------------------------------\n<br/>\n<u>Incremental setpoints</u>\nWhen enabled, the setpoints (water temperatures) will be incrementally calculated in steps of 1°C. This applies only between the +3 and +custom temperatures.<br/><br/>\n<u>Automations:</u>\nTo make use of this automation, you need to set two temperatures. <br/>\nActivate above dT: When the room temperature is above this line, the action will be triggered.<br/>\nDeactivate below dT: When the room temperature travels below this line, the reverse action will be triggered.<br/>\nBoth the above/below dT temperatures are relative to the setpoint.<br/>\n<br/>\nAction: Change operating mode<br/>\nIf the room temperature is above dT, the current operating mode will have HEAT mode removed from it.<br/>\nIf the room temperature is below dT, the current operating mode will have HEAT mode added to it.<br/>\n<br/>\nAction: Turn off/on power<br/>\nIf the room temperature is above dT, the heatpump will be turned off. (condition: Operating Mode must be Heat-only or Auto(Heat))<br/>\nIf the room temperature is below dT, the heatpump will be turned on again.<br/>\n<br/>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1240,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "3c3c8472da1fb85a",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"RTC_Help\"]}}",
        "payloadType": "json",
        "x": 1190,
        "y": 180,
        "wires": [
            [
                "5f6574f97f240326"
            ]
        ]
    },
    {
        "id": "f9144fc6ad3350af",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "name": "",
        "group": "2b0c8e162d47abbb",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Scheduler_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1350,
        "y": 460,
        "wires": [
            [
                "973d8234e83e6744"
            ]
        ]
    },
    {
        "id": "ecf4984d100b1353",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "name": "",
        "group": "a606e01fab1bbd66",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Scheduler_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1350,
        "y": 560,
        "wires": [
            [
                "973d8234e83e6744"
            ]
        ]
    },
    {
        "id": "ded746ab97b49c20",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "a606e01fab1bbd66",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1480,
        "y": 560,
        "wires": []
    },
    {
        "id": "4770fc4ef0f643b3",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "a606e01fab1bbd66",
        "order": 1,
        "width": 12,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 560,
        "wires": []
    },
    {
        "id": "973d8234e83e6744",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 1655,
        "y": 420,
        "wires": []
    },
    {
        "id": "c38f069ac9641f6a",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "a606e01fab1bbd66",
        "name": "Line - Instructions text",
        "order": 4,
        "width": 15,
        "height": 32,
        "format": "<h3>Scheduler instructions</h3>\n<br/>\n<h3>What can the scheduler do for you?</h3>\nYou can program certain tasks to be started at the specified time and day.<br/>\n<br/>\n<h3>What is the main difference between this scheduler and the native Panasonic one?</h3>\nThe Panasonic scheduler always swtiches on the heat pump when a task is due. This scheduler offers you control over this\nbehavior.\n\nThe native Panasonic scheduler can be operational simultaneously with this scheduler. This can be convenient for some\nvery specific tasks, but it is strongly recommended to only use one scheduler to avoid conflicting tasks and unexpected\nbehavior. Both schedulers do not communicate.\n\n<br/><br/>\n<u>Enable</u>\nThis simply enables or disables the task.\n\n<br/><br/>\n<u>Name</u>\nGive your personal short name or description to the task.\n<br/><br/>\n<u>Action</u>\nSelect the action you want to perform.\n\n<br/>\n<i>Force DHW</i><br/>\nThis action will do several things:<br/>\n1 - Add DHW to the current operating mode if missing<br/>\n2 - Turn on [Force DHW mode]<br/>\n3 - Execute the DHW run to the target temperature<br/>\n4 - Turn off [Force DHW mode]<br/>\n5 - Remove DHW from Operating mode again if it was missing at step 1<br/>\n<br/>\nAttention: The Force DHW run will not start if the current DHW temperature is above the set temperature in [Force DHW -\nAllow only below] in the 'related settings' section. If you do not want this, set this temperature very high (eg. 100\ndegree C). The Panasonic internal rules (minimum dT) will always be followed.\n<br/><br/>\nThe scheduled Force DHW action is fundamentally different compared to the switch Force DHW under settings or on the controller. They requires certain conditions.\n<br/><br/>\n<i>Force Sterilization</i><br/>\nThis action will do several things:<br/>\n1 - Add DHW to the current operating mode if missing<br/>\n2 - Turn on [Force DHW mode] + Turn on [Force Sterilization]<br/>\n3 - Execute the Sterilization run to the target temperature<br/>\n4 - Turn off [Force Sterilization mode] + Turn off [Force DHW mode]<br/>\n5 - Remove DHW from Operating mode again<br/>\n<br/>\n<i>Quiet Mode</i><br/>\nThis will set the quiet mode to the specified level.\n<br/><br/>\n<i>Operation Mode</i><br/>\nThis will set the operation mode as specified.\n<br/>\n<i>Nightreduction water temperature on/off</i><br/>\nThis wil add a negative correction to the water temperature, which will result in a lower Final water temperature (but\nnever lower then 20 °C).\n<br/><br/>\n<i>Nightreduction room temperature on/off</i><br/>\nWhen on this will reduce the RTC room setpoint to the setpoint-low value set on the right.<br/>\nWhen off this will restore the RTC room setpoint to the setpoint-Normal value set on the right.<br/>\nDefaults: ON = 18 °C , OFF = 21 °C , RANGE 0 °C - 30 °C<br/>\n<br/><br/>\n<u>Power on</u><br/>\nBy default a task will not run if the heat pump is powered off. If you want the heat pump to be powered on and execute the task, enable the power on toggle.\n<br/><br/>\n<u>Heat water temperature limits</u><br/>\nHere you can program the absolut upper and lower limits you never want HEAT to go over/under. This can be used to\nprevent oscillating behaviour, make compressor runs longer and the HP more efficient.</br>\n<u>Nightreduction Room setpoint</u><br/>\nHere you can set the room setpoint LOW and NORMAL when using task Nightreduction room setpoint.<br/>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1260,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "00752e5f6b14036b",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Scheduler_Help\"]}}",
        "payloadType": "json",
        "x": 1210,
        "y": 420,
        "wires": [
            [
                "973d8234e83e6744"
            ]
        ]
    },
    {
        "id": "347b614526bf4814",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "2b0c8e162d47abbb",
        "order": 1,
        "width": 21,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 460,
        "wires": []
    },
    {
        "id": "d0bc87893510d46f",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "2b0c8e162d47abbb",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1540,
        "y": 460,
        "wires": []
    },
    {
        "id": "4435d59eb3f03631",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "9aec7afe54746c39",
        "name": "Line - Setup ",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Force DHW</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1230,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "8090bc95e8512738",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "9aec7afe54746c39",
        "name": "Line - Setup ",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Nightreduction water temperature</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1390,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "7ca958b4b94243f8",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "9aec7afe54746c39",
        "name": "Line - Setup ",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Nightreduction room temperature</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1550,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "75571074f2ac434c",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "name": "",
        "group": "c2a0123d2e2c91f0",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"SoftStart_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1350,
        "y": 760,
        "wires": [
            [
                "284c3282438b7e4c"
            ]
        ]
    },
    {
        "id": "c652e74baa241047",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "name": "",
        "group": "3226b17db86f4510",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"SoftStart_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1350,
        "y": 860,
        "wires": [
            [
                "284c3282438b7e4c"
            ]
        ]
    },
    {
        "id": "3a4234d15cccd2f2",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "55fef8703465841e",
        "order": 2,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1480,
        "y": 860,
        "wires": []
    },
    {
        "id": "088968fcdf03a215",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "3226b17db86f4510",
        "order": 1,
        "width": 11,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 860,
        "wires": []
    },
    {
        "id": "284c3282438b7e4c",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 1655,
        "y": 720,
        "wires": []
    },
    {
        "id": "c54eb9703d5f9272",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "3226b17db86f4510",
        "name": "Line - Instructions text pt1",
        "order": 4,
        "width": 14,
        "height": 8,
        "format": "<h3>SoftStart</h3>\n<br/>\n<h3>What can the SoftStart function do for you?</h3>\nDefault behaviour of the heatpump when the compressor starts for a HEAT run, is that the frequency (Hz) will go to medium / high level. The frequency stays high until the returning water temperature (See Temp. inlet (PV) at the Home screen) approaches the setpoint. Only then the compressor ramps down.\n</br></br>\nThe primary goal of this function is to quickly lower the compressor frequency after starting a HEAT run. The heatpump will more quickly be in a stable / low power operating windows. As a result of that the length of the run might increase, it consumes less energy and generating less noise. A downside of this could be that heating is slower.\n<br/><br/>\nA secondairy goal of this function is to increase compressor runtime by slowly increasing the water setpoint. The setpoint will contineously be moved just outside the window where it will stop a heating run. By allowing the setpont to slide up along with the returning water (Tinlet), the run length will not be terminated. A possible downside of this could be the room temperature getting too high. \n<br/>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1270,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "e16790ec4eb50d6c",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"SoftStart_Help\"]}}",
        "payloadType": "json",
        "x": 1210,
        "y": 720,
        "wires": [
            [
                "284c3282438b7e4c"
            ]
        ]
    },
    {
        "id": "0c3e58e3b5cd3fd7",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "4551542d51501ce1",
        "name": "Line - Setup ",
        "order": 1,
        "width": 23,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1230,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "4d40537faabfd240",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "c2a0123d2e2c91f0",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1540,
        "y": 760,
        "wires": []
    },
    {
        "id": "e043e3c485777375",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "c2a0123d2e2c91f0",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 760,
        "wires": []
    },
    {
        "id": "1dc467ae4cf20867",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "3226b17db86f4510",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1480,
        "y": 900,
        "wires": []
    },
    {
        "id": "8d47d305edaedefa",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "4551542d51501ce1",
        "name": "Line - Setup ",
        "order": 3,
        "width": 23,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1430,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "dc156fecfc1bc1e8",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "group": "b7f22c282fde0f86",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "P1 setup",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Solar_P1_setup\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 240,
        "y": 260,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "c4295ed66d438dd7",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "group": "338420d1319e8350",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Solar_P1_setup\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "0bc6f2130b8acb9d",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "338420d1319e8350",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "spacer 11",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 260,
        "wires": []
    },
    {
        "id": "9f75b032f8c2eeb5",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "338420d1319e8350",
        "order": 15,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 260,
        "wires": []
    },
    {
        "id": "bcda44f3140d86e9",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Solar_P1_setup\"]}}",
        "payloadType": "json",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "8b7c9a76f8ddca81",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "3226b17db86f4510",
        "name": "",
        "order": 5,
        "width": 14,
        "height": 9,
        "format": "<div height=\"300\" style=\"height: 300px;\">\n\n<img src=\"https://raw.githubusercontent.com/edterbak/NodeRed_Heishamon_control/main/images/SoftStart_graph2.png\" width=700px><br/>\n\n</div>\nImage 1: kW Production now",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1220,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "c96821120dd58acc",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "3226b17db86f4510",
        "name": "Line - Instructions text pt2",
        "order": 6,
        "width": 14,
        "height": 20,
        "format": "<h3>How it works</h3>\nIn the graph above, shown is the compressor frequency (Hz) vs time (minutes).<br/>\n<br/>\n<h3>Primary goal - Reduce frequency ASAP</h3>\n<u>(1) Runtime</u>\nSet the duration this function to be active from the start. After this time, the correction on the water setpoint will be set to 0 (zero ) again. <i>Default: 15 minutes</i>\n<br/>\n<u>(2) Max. setpoint increase</u>\nThis will set the maximum setpoint increase for the water temperature. This is relative to the normally calculated water temperature. The higher\nincrease allowed, the longer the compressor will run. But of course, the higher the overshoot in room temperature could be. <i>Default: 1 °C</i><br/>\n<h4>Additional settings.</h4>\n<u>(3) Quietmode (Optional)</u>\nQuietmode 1, 2 and 3 have an effect on the maximum allowed compressor frequency and fan speed. quietmode 3 will limit compressor and fan speed the most.</br> \nEnable / disable the use of quietmode by the softstart function. </br>\n<i>Default: Disabled</i></bt></br>\nSet the duration for it to be active from the start of a HEAT run.<br/>\n<br/>\n<u>Reset after defrost</u>\nWhen enabled, the softstart function will be reset during a defrost. This will result in 'catching' the high compressor frequencies each time.\nWhen disabled, the counter will continue after a defrost. As a result of this, the softstart function can reach the 'end'-pont sooner. \n<br/><i>Default: Disabled</i>\n</br><br/>\n\n<h3>Secondary goal - Prevent short HEAT runs</h3>\n<u>(1) Runtime</u>\nUp to the user. Typically in the range of 1 - 24 hour(s).\n<br/><br/>\n<u>(2) Max. setpoint increase</u>\nUp to the user. Typically in the range of 2°C - 3°C degrees.\n<br/><br/>\n<br/>\nNote: When softstart function is enabled, it does not guarantee the compressor won't turn off within this time period. Normal internal logic of the Panasonic still applies, so when the water is warm enough the compressor stops.\n</br></br>\nNote 2: There are multiple types of heatpumps. Split units, monoblock, T-CAP. Not all types respond in the same way during a heat run. Example, the T-CAP can be slow to reduce the compressor frequency after start. ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1430,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "35d210f042827344",
        "type": "tab",
        "label": "WP Scheduler",
        "disabled": false,
        "info": ""
    },
    {
        "id": "defb20d7906a32a5",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "40f0401e20235a07",
            "243fa1e4e8cef5d0",
            "ae1eb94c798ce73b",
            "d1266a8821d5f723",
            "24c5c19b07f97e99",
            "98499b42fe5f6688",
            "e3d4b9d611e649e0",
            "8fbe0ef4995f8e6a",
            "e7b504fa96e19b50",
            "d6b1a6d8ba28fbb0",
            "57dddda65db516a2",
            "73c1eabffdfe4783",
            "79c82c463c263553",
            "2bde70f7ec8740ee",
            "86fe7a6080854779",
            "1372ccca982b4f0a"
        ],
        "x": 714,
        "y": 99,
        "w": 2152,
        "h": 159.5
    },
    {
        "id": "b63004182c33d3b9",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "dce5daf12297877f",
            "56d4bfa341d3eded",
            "4f62466c41bb3667",
            "52fea7493d509740",
            "259ee5343901c67c",
            "1d6c4552e74e9211",
            "3bde88be2b01b22b",
            "c959ee1f94c31c45",
            "207821d9fd0df31e",
            "cd34d205525225ef",
            "27ad7f4523c5ac06",
            "07c12775c5faacae",
            "284a4b5256066615",
            "1d18cc8f09cfbdbc",
            "8c00f7e622b82f63",
            "ef28d0205d50cb26",
            "d0fda364deccc7f0",
            "47fe4c3f4736bcc8",
            "4ca97fe11f8196e4",
            "7a27b2c8c4721ed9",
            "55ed50ca78ad2e8e",
            "9b6adfc4b5fe33d9",
            "3e6fc746e7597b72",
            "572ff3b3b8a1d185",
            "68f4601da2aa107a"
        ],
        "x": 2314,
        "y": 1979,
        "w": 1452,
        "h": 482
    },
    {
        "id": "52cd9ca2a87cc237",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d8e5ca53b22c577d",
            "e411cdb2b3617a7e",
            "0fcdf0e74a334edb",
            "ce3b0c94ff7a8500",
            "bbc0fc2f4315d9a0",
            "bc2393868b4f66ed",
            "9cf59f59ab99f77f",
            "8e1f89a719096934",
            "479965c26a5f5d15"
        ],
        "x": 714,
        "y": 261.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "77ef78074c745b33",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7a42e5778bf41519",
            "d73541639351e613",
            "871d8f6de9ad1a98",
            "1a27db997a27a1dd",
            "8a47deae609a4257",
            "d15b2d0e98e01f65",
            "cf847f1078676d93",
            "750f2ca3ae772d5f",
            "57520972cf8f3282"
        ],
        "x": 714,
        "y": 421.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "0f18bd088c4ce661",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5f74425ca9610401",
            "612ac224e061cc79",
            "0710a190d551707c",
            "b01c2ff9f7469f79",
            "9f04561329aa26f4",
            "2a7fb72a1781fe14",
            "a484cb58a507c3f2",
            "598c7fd8d6681c1a",
            "73e5b776ee37e929"
        ],
        "x": 714,
        "y": 581.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "49e35dcf3adf972f",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a5c85f0332e4746d",
            "53c6208ebe18f176",
            "c649a3a840183e86",
            "5bd339d22882aa07",
            "cdd91f4f0777b0fc",
            "9de114ee921577b7",
            "c2dfc46bffb56c5f",
            "ad4ce3a792ad76a6",
            "fd75ca33fe4a9589"
        ],
        "x": 714,
        "y": 741.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "131bb514acb6c38f",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3103abf9a680a9ea",
            "a1866018a9f27226",
            "51e9aad82e544c85",
            "67c2c134c50ed462",
            "1e30fa210ee856be",
            "e72e318e1a456090",
            "ab40d0b571d81193",
            "82508e256cc50ce7",
            "4470d0d9384e5146"
        ],
        "x": 714,
        "y": 901.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "13c1334900bc3740",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f95cadbe3c3cd2f4",
            "fcf03506100353c9",
            "9fc9947dc30386f3",
            "87241aa5e6a2ccf7",
            "0a54cb095adcb787",
            "436b41690b969348",
            "a4e2c87bf04e065d",
            "d73b8b0113a830fe",
            "0a155882d5693fda"
        ],
        "x": 714,
        "y": 1061.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "a4db9b20ef5bc75c",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f93699165fe750ce",
            "b1956b6593a4a597",
            "0b60ef37733490bf",
            "62e00829c19bec7c",
            "32e23a19047b877e",
            "f511b9d4cedb0977",
            "e2a02a4bdcbb0432",
            "357e2ed012a9bb42",
            "fe24caf7cb4e92d3"
        ],
        "x": 714,
        "y": 1221.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "4b0ab44dfd6f65c3",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5b138a18f47114e3",
            "37d57c847d1b5ff8",
            "663c8cf477dc16cb",
            "5a75949723c259df",
            "d77c206846bfe16d",
            "11958cca6fba73cb",
            "848ddfb953511b13",
            "df58bbc82c06fc25",
            "611bf69e3ab85546"
        ],
        "x": 714,
        "y": 1381.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "4f450eb680618622",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e20f0e179a77b100",
            "88872f26b2ce5e9b",
            "1759cf2fcc472812",
            "bc8c769ccc26fa5d",
            "99bf0b7454b3b5c0",
            "219fcc0259998439",
            "a43e0949567dc0ef",
            "fe86b16e9cc37804",
            "a477e5b86fe9c792"
        ],
        "x": 714,
        "y": 1541.5,
        "w": 2172,
        "h": 157
    },
    {
        "id": "92293ba8ccc5db0f",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "af36a209861f34c9",
            "977bf5eb11dcbcae",
            "4be14d43ed11df9e",
            "66751dfee126dd36",
            "ac07aae6820d664d",
            "20267081e902cf8f",
            "0e56417c81c6b1be",
            "50a7d35eec5ebb92",
            "620d3faff0a26d37",
            "b98e3d3337c01053",
            "827d25a8ccb91857",
            "3a71aada556a2950",
            "0a2fca7dbded32e0",
            "ddf3715aaea9672b",
            "3a5460c7aced9598",
            "6e79eaf44bdd252f",
            "05344a8f5a84a598",
            "ce6d6e5627ec1fa2",
            "1911fbfbf89866a8",
            "55a0fb67fbe206cf"
        ],
        "x": 64,
        "y": 2519,
        "w": 1402,
        "h": 322
    },
    {
        "id": "3a5460c7aced9598",
        "type": "change",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "40f0401e20235a07",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Hour1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 16,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 180,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "243fa1e4e8cef5d0",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Day1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 180,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "ae1eb94c798ce73b",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Day",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1670,
        "y": 140,
        "wires": []
    },
    {
        "id": "d1266a8821d5f723",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Hour",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1950,
        "y": 140,
        "wires": []
    },
    {
        "id": "24c5c19b07f97e99",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Minutes",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2240,
        "y": 140,
        "wires": []
    },
    {
        "id": "98499b42fe5f6688",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Minutes1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 180,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "e3d4b9d611e649e0",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "switch1",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_1_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "8fbe0ef4995f8e6a",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "text input1",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 14,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_1_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 180,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "e7b504fa96e19b50",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 6,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1350,
        "y": 140,
        "wires": []
    },
    {
        "id": "d6b1a6d8ba28fbb0",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 10,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Action",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2510,
        "y": 140,
        "wires": []
    },
    {
        "id": "57dddda65db516a2",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Action1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 18,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 180,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "d3cb14cbe16aae48",
        "type": "inject",
        "z": "35d210f042827344",
        "name": "1 Trigger / 60 seconds",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "59",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 2180,
        "wires": [
            [
                "d7661361dc45a227",
                "5bada2ca15c02a60",
                "1b3cfb0717b453f9"
            ]
        ]
    },
    {
        "id": "d7661361dc45a227",
        "type": "moment",
        "z": "35d210f042827344",
        "name": "",
        "topic": "DayOfTheWeek",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "dddd",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 440,
        "y": 2140,
        "wires": [
            [
                "aee82d7ed5267326"
            ]
        ]
    },
    {
        "id": "5bada2ca15c02a60",
        "type": "moment",
        "z": "35d210f042827344",
        "name": "",
        "topic": "Hour",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 410,
        "y": 2180,
        "wires": [
            [
                "aee82d7ed5267326"
            ]
        ]
    },
    {
        "id": "1b3cfb0717b453f9",
        "type": "moment",
        "z": "35d210f042827344",
        "name": "",
        "topic": "Minute",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "mm",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 410,
        "y": 2220,
        "wires": [
            [
                "aee82d7ed5267326"
            ]
        ]
    },
    {
        "id": "aee82d7ed5267326",
        "type": "join",
        "z": "35d210f042827344",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 590,
        "y": 2180,
        "wires": [
            [
                "4d90f21594adec55"
            ]
        ]
    },
    {
        "id": "826c4b608a4e5bf1",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "61",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2140,
        "wires": [
            [
                "cf93ce26e02dc3ae"
            ]
        ]
    },
    {
        "id": "6eb8540eef912bec",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "61",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2180,
        "wires": [
            [
                "71db58050c22ba9e"
            ]
        ]
    },
    {
        "id": "317942154b6d1cb3",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "",
        "mode": "link",
        "links": [
            "ef28d0205d50cb26"
        ],
        "x": 2025,
        "y": 2140,
        "wires": []
    },
    {
        "id": "92b636a9597d91b2",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "",
        "mode": "link",
        "links": [
            "d0fda364deccc7f0"
        ],
        "x": 2025,
        "y": 2180,
        "wires": []
    },
    {
        "id": "52b8feb14590a2b0",
        "type": "inject",
        "z": "35d210f042827344",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "f5602874161743c8"
            ]
        ]
    },
    {
        "id": "14327004637e05c7",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "Quiet Mode Planning",
        "mode": "link",
        "links": [
            "765b4d77a9fd44cc",
            "b1b3e80155e49c5c"
        ],
        "x": 2025,
        "y": 2220,
        "wires": []
    },
    {
        "id": "c6801a6c865543b3",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "OperationMode Planning",
        "links": [
            "6d5e44060139d9d1"
        ],
        "x": 2025,
        "y": 2260,
        "wires": []
    },
    {
        "id": "fdc9275bff11d4f6",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "61",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2220,
        "wires": [
            [
                "14327004637e05c7",
                "f0045be5a90c957f"
            ]
        ]
    },
    {
        "id": "fac4923b3fac0597",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "61",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2260,
        "wires": [
            [
                "c6801a6c865543b3",
                "14e1ae3f580db2a7"
            ]
        ]
    },
    {
        "id": "be684538aa9a988e",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to Quiet Mode (Direct)",
        "info": "",
        "x": 2170,
        "y": 2220,
        "wires": []
    },
    {
        "id": "3155317a644ba5c6",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to Operation Mode (Direct)",
        "info": "",
        "x": 2190,
        "y": 2260,
        "wires": []
    },
    {
        "id": "dce5daf12297877f",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Schedule execution",
        "func": "// >> trigger 1\n// DHW / Sterilisation? This is defined in the topic\n// Topic: DHW or topic: Sterilization\n// payload 1 > initiate sequence. \n\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\n// Declaration of the variables. \nlet msg1={}, msg2={}, msg3={}, msg4={};\n// msg1     Output towards Operation mode\n// msg2     Output towards Force DHW mode on/off\n// msg3     output towards Force Sterilization on/off\n// msg4     empty\n\n\nvar ThreeWay_Valve_State=global.get('ThreeWay_Valve_State');                    // valvue position\n\nvar DHW_Temp=global.get('DHW_Temp');                                            // Current temperature of DHW vessel. \nvar DHW_Target_Temp=global.get('DHW_Target_Temp',\"file\");                       // Programmed DHW target temperature\nvar Force_DHW_State=global.get('Force_DHW_State');                              // Current DHW state (on / off). \n\nvar Operating_Mode_State=global.get('Operating_Mode_State',\"file\");             // get Current OperationMode\nvar new_OM;                                                                     // create empty variable.\n\nvar Sterilization_State=global.get('Sterilization_State');                      // Current sterilization state (on / off)\nvar Sterilization_Temp=global.get('Sterilization_Temp',\"file\");                 // Programmed sterilization target temperature\nvar DHW_treshold=global.get('DHW_treshold',\"file\");                             // Programmed treshold DHW tank temperature set from GUI\n////////////////////////////////////////////////////////////////////////////////\n//                           START OF THE CYCLE                               //\n////////////////////////////////////////////////////////////////////////////////\n\n// START Force DHW cycle\nif (msg.topic == 'DHW' && msg.payload == 1 && DHW_Temp < DHW_treshold)          // There is a temperature condition to start DHW heating or not. Change to your own desire.\n    {\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if (Operating_Mode_State==0){new_OM = 4;}\n                if (Operating_Mode_State==1){new_OM = 5;}\n                if (Operating_Mode_State==2){new_OM = 6;}\n                if (Operating_Mode_State==3){new_OM = 3;}\n                if (Operating_Mode_State==4){new_OM = 4;}\n                if (Operating_Mode_State==5){new_OM = 5;}\n                if (Operating_Mode_State==6){new_OM = 6;}\n                if (Operating_Mode_State==7){new_OM = 8;}\n                if (Operating_Mode_State==8){new_OM = 8;}\n                \n                \n                msg1.payload = new_OM;                                          // set operationmode to add DHW mode\n                msg2.payload = 1;                                               // Turn on Force DHW mode\n                global.set('Force_DHW_active',1,\"file\");\n                if (Operating_Mode_State!=new_OM)\n                    {return [msg1, msg2];}\n                else {return [null, msg2];}\n    }\n\n// START Force Sterilization cycle\nif (msg.topic == 'Sterilization' && msg.payload == 1)\n    {\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if (Operating_Mode_State==0){new_OM = 4;}\n                if (Operating_Mode_State==1){new_OM = 5;}\n                if (Operating_Mode_State==2){new_OM = 6;}\n                if (Operating_Mode_State==3){new_OM = 3;}\n                if (Operating_Mode_State==4){new_OM = 4;}\n                if (Operating_Mode_State==5){new_OM = 5;}\n                if (Operating_Mode_State==6){new_OM = 6;}\n                if (Operating_Mode_State==7){new_OM = 8;}\n                if (Operating_Mode_State==8){new_OM = 8;}\n                \n                \n                msg1.payload = new_OM;                                          // set operationmode to add DHW mode\n                msg2.payload = 1;                                               // Turn on Force DHW mode\n                msg3.payload = 1;                                               // Turn on Force Sterilization mode\n                global.set('Sterilization_active',1,\"file\");\n                if (Operating_Mode_State!=new_OM)\n                    {return [msg1, msg2, msg3];}\n                else\n                    {return [null, msg2, msg3];}\n                \n                \n    }\n\n////////////////////////////////////////////////////////////////////////////////\n//                      END OF THE CYCLE                                      //\n////////////////////////////////////////////////////////////////////////////////\n\n\n// END DHW cycle (Automatic)\nif (Force_DHW_State == 1 && Sterilization_State == 0 && DHW_Temp >= DHW_Target_Temp)\n    {\n\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if (Operating_Mode_State==0){new_OM = 0;}\n                if (Operating_Mode_State==1){new_OM = 1;}\n                if (Operating_Mode_State==2){new_OM = 2;}\n                if (Operating_Mode_State==3){new_OM = 0;}\n                if (Operating_Mode_State==4){new_OM = 0;}\n                if (Operating_Mode_State==5){new_OM = 1;}\n                if (Operating_Mode_State==6){new_OM = 2;}\n                if (Operating_Mode_State==7){new_OM = 7;}\n                if (Operating_Mode_State==8){new_OM = 7;}\n\n                if (Operating_Mode_State!=new_OM)\n                global.set('Force_DHW_active',0,\"file\");\n                {setTimeout(function(){\n                    node.status({fill:\"red\", shape:\"ring\", text:\"\"});\n                    msg1.payload = new_OM;                                      // set operationmode to remove DHW\n                    node.send([msg1,null,null,null]);                           // send msg1 only, other outputs are null\n                }, 5000);}\n                msg2.payload = 0;                                               // Turn off Force DHW mode\n                return [null, msg2];\n    }\n\n\n// END Sterilization cycle (Automatic)\nif (Sterilization_State == 1 && DHW_Temp >= Sterilization_Temp)\n    {\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if (Operating_Mode_State==0){new_OM = 0;}\n                if (Operating_Mode_State==1){new_OM = 1;}\n                if (Operating_Mode_State==2){new_OM = 2;}\n                if (Operating_Mode_State==3){new_OM = 0;}\n                if (Operating_Mode_State==4){new_OM = 0;}\n                if (Operating_Mode_State==5){new_OM = 1;}\n                if (Operating_Mode_State==6){new_OM = 2;}\n                if (Operating_Mode_State==7){new_OM = 7;}\n                if (Operating_Mode_State==8){new_OM = 7;} \n    \n                if (Operating_Mode_State!=new_OM)\n                global.set('Sterilization_active',0,\"file\");\n                {\n                    setTimeout(function(){\n                    node.status({fill:\"red\", shape:\"ring\", text:\"\"});\n                    msg1.payload = new_OM;                                      // set operationmode to remove DHW\n                    node.send([msg1,null,null,null]);                           // send msg1 only, other outputs are null\n                    }, 5000);\n                }\n                setTimeout(function(){\n                    node.status({fill:\"red\", shape:\"ring\", text:\"\"});\n                    msg2.payload = 0;                                           // Turn off Force DHW mode \n                    node.send([null,msg2,null,null]);                           // send msg2 only, other outputs are null\n                    }, 2000);\n\n                msg3.payload = 0;                                               // Turn off Force Sterilization mode\n                return [null, null, msg3];\n    }\n\n\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3050,
        "y": 2160,
        "wires": [
            [
                "c959ee1f94c31c45",
                "d9b9cfbe76f8a7aa"
            ],
            [
                "3bde88be2b01b22b"
            ],
            [
                "1d6c4552e74e9211"
            ],
            []
        ],
        "outputLabels": [
            "Operation mode",
            "Force DHW",
            "Force Sterilization",
            "empty"
        ]
    },
    {
        "id": "56d4bfa341d3eded",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "ForceDHW_Scheduler",
        "links": [
            "14d2ae6b4af7e45e"
        ],
        "x": 3415,
        "y": 2140,
        "wires": []
    },
    {
        "id": "4f62466c41bb3667",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "FoceSterilization_Scheduler",
        "links": [
            "20e2544a8277d8c2",
            "4982424c661376ea"
        ],
        "x": 3415,
        "y": 2180,
        "wires": []
    },
    {
        "id": "52fea7493d509740",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to Force DHW mode",
        "info": "",
        "x": 3590,
        "y": 2140,
        "wires": []
    },
    {
        "id": "259ee5343901c67c",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to Sterilization Mode",
        "info": "",
        "x": 3590,
        "y": 2180,
        "wires": []
    },
    {
        "id": "1d6c4552e74e9211",
        "type": "delay",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3280,
        "y": 2180,
        "wires": [
            [
                "4f62466c41bb3667",
                "c39da0815cb8bf48"
            ]
        ]
    },
    {
        "id": "3bde88be2b01b22b",
        "type": "delay",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3280,
        "y": 2140,
        "wires": [
            [
                "56d4bfa341d3eded",
                "84e59fd6bd8697ab"
            ]
        ]
    },
    {
        "id": "c959ee1f94c31c45",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "OperationMode_Scheduler",
        "links": [
            "6d5e44060139d9d1"
        ],
        "x": 3415,
        "y": 2100,
        "wires": []
    },
    {
        "id": "207821d9fd0df31e",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to Operation Mode",
        "info": "",
        "x": 3580,
        "y": 2100,
        "wires": []
    },
    {
        "id": "cd34d205525225ef",
        "type": "inject",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Check each minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "trigger",
        "payload": "1",
        "payloadType": "num",
        "x": 2820,
        "y": 2100,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "27ad7f4523c5ac06",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning for forced DHW runs",
        "info": "",
        "x": 2560,
        "y": 2140,
        "wires": []
    },
    {
        "id": "07c12775c5faacae",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Function for execution of plan",
        "info": "",
        "x": 3080,
        "y": 2100,
        "wires": []
    },
    {
        "id": "284a4b5256066615",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning for Forced Sterilization runs",
        "info": "",
        "x": 2580,
        "y": 2180,
        "wires": []
    },
    {
        "id": "1d18cc8f09cfbdbc",
        "type": "change",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Topic Sterilization",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Sterilization",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2830,
        "y": 2180,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "8c00f7e622b82f63",
        "type": "change",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Topic DHW",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2810,
        "y": 2140,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "ef28d0205d50cb26",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning_ForceDHW_topic",
        "links": [
            "317942154b6d1cb3"
        ],
        "x": 2375,
        "y": 2140,
        "wires": [
            [
                "8c00f7e622b82f63"
            ]
        ]
    },
    {
        "id": "d0fda364deccc7f0",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning_ForceSterilization_topic",
        "links": [
            "92b636a9597d91b2"
        ],
        "x": 2375,
        "y": 2180,
        "wires": [
            [
                "1d18cc8f09cfbdbc"
            ]
        ]
    },
    {
        "id": "f50b182247afbf12",
        "type": "ui_numeric",
        "z": "35d210f042827344",
        "name": "Allow DHW-run below",
        "label": "Do not force if DHW is above",
        "tooltip": "",
        "group": "9aec7afe54746c39",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 780,
        "y": 2440,
        "wires": [
            [
                "fdc7a953bf5abbc3"
            ]
        ]
    },
    {
        "id": "513f1edff2205368",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.DHW_treshold",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"DHW_treshold\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 2440,
        "wires": [
            [
                "0d915486f4ef0946"
            ]
        ]
    },
    {
        "id": "82de6121db22b74a",
        "type": "inject",
        "z": "35d210f042827344",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2440,
        "wires": [
            [
                "1cf36419e733671a"
            ]
        ]
    },
    {
        "id": "1cf36419e733671a",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot",
        "func": "var var1 = global.get('DHW_treshold',\"file\");\nif (var1===undefined)\n    {\n        var1=100;\n        global.set('DHW_treshold',100,\"file\");\n    }\nvar var2 = global.get('NightReductionWaterTemp.correction',\"file\");\nif (var2===undefined)\n    {\n    var2=0;\n    global.set('NightReductionWaterTemp.correction',0,\"file\");\n    }\n\nlet msg1={}, msg2={};\n\nmsg1.payload = var1;\nmsg2.payload = var2;\n\n\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2440,
        "wires": [
            [
                "f50b182247afbf12"
            ],
            []
        ],
        "outputLabels": [
            "DHW_treshold",
            ""
        ]
    },
    {
        "id": "0d915486f4ef0946",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "DHW_Treshold",
        "mode": "link",
        "links": [],
        "x": 1665,
        "y": 2440,
        "wires": []
    },
    {
        "id": "b9e80ad80744b62d",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "DHW_threshold ",
        "info": "",
        "x": 1360,
        "y": 2400,
        "wires": []
    },
    {
        "id": "47fe4c3f4736bcc8",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "There is more logic required to execute Force DHW / sterilization runs. Multiple items switches",
        "info": "",
        "x": 2680,
        "y": 2020,
        "wires": []
    },
    {
        "id": "845e5ae092891549",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "This Block retreives the GUI input and pushes it to variables",
        "info": "",
        "x": 280,
        "y": 80,
        "wires": []
    },
    {
        "id": "016f1f556139c597",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Evaluate each timestamp",
        "info": "",
        "x": 1190,
        "y": 2100,
        "wires": []
    },
    {
        "id": "67b90bdf1dc732d0",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "If timestamp matches >> output ",
        "info": "",
        "x": 1690,
        "y": 2060,
        "wires": []
    },
    {
        "id": "1bae52195dc32c77",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "create a timestamp every 30 seconds",
        "info": "",
        "x": 250,
        "y": 2000,
        "wires": []
    },
    {
        "id": "73c1eabffdfe4783",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Enable",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1080,
        "y": 140,
        "wires": []
    },
    {
        "id": "f5602874161743c8",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Schedule_xx topics",
        "func": "// variables to load on boot and periodically for dasboard\n\nvar var1 = \"Schedule_1\"\nvar var2 = \"Schedule_2\"\nvar var3 = \"Schedule_3\"\nvar var4 = \"Schedule_4\"\nvar var5 = \"Schedule_5\"\nvar var6 = \"Schedule_6\"\nvar var7 = \"Schedule_7\"\nvar var8 = \"Schedule_8\"\nvar var9 = \"Schedule_9\"\nvar var10= \"Schedule_10\"\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={};\n\n\nmsg1.payload = var1; msg2.payload = var2; msg3.payload = var3; msg4.payload = var4; msg5.payload = var5; msg6.payload = var6;\nmsg7.payload = var7; msg8.payload = var8; msg9.payload = var9; msg10.payload = var10;\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 200,
        "wires": [
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ]
        ],
        "outputLabels": [
            "Schedule_1_Description",
            "Schedule_1_day",
            "Schedule_1_hour",
            "Schedule_1_minutes",
            "Schedule_1_state",
            "Schedule_1_topic",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "698336312f37f38e",
        "type": "function",
        "z": "35d210f042827344",
        "name": "GET global / topics",
        "func": "// variables to load on boot for dasboard\n\nvar schedule_topic = msg.payload;\n\n\nvar var1 = global.get(schedule_topic+'_Description',\"file\");\nvar var2 = global.get(schedule_topic+'_day',\"file\");\nvar var3 = global.get(schedule_topic+'_hour',\"file\");\nvar var4 = global.get(schedule_topic+'_minutes',\"file\");\nvar var5 = global.get(schedule_topic+'_state',\"file\");\nvar var6 = global.get(schedule_topic+'_action',\"file\");\nvar var7 = global.get(schedule_topic+'_override',\"file\");\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={};\n\n\n\nmsg1.payload = var1;\nmsg2.payload = var2;\nmsg3.payload = var3;\nmsg4.payload = var4;\nmsg5.payload = var5;\nmsg6.payload = var6;\nmsg7.payload = var7;\n//msg8.payload = var8;\n//msg9.payload = var9;\n//msg10.payload = var10;\n\n\nmsg1.topic = schedule_topic+'_Description';\nmsg2.topic = schedule_topic+'_day';\nmsg3.topic = schedule_topic+'_hour';\nmsg4.topic = schedule_topic+'_minutes';\nmsg5.topic = schedule_topic+'_state';\nmsg6.topic = schedule_topic+'_action';\nmsg7.topic = schedule_topic+'_override';\n//msg8.topic = schedule_topic+'';\n//msg9.topic = schedule_topic;\n//msg10.topic = schedule_topic;\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 180,
        "wires": [
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ]
        ],
        "outputLabels": [
            "Schedule_1_Description",
            "Schedule_1_day",
            "Schedule_1_hour",
            "Schedule_1_minutes",
            "Schedule_1_state",
            "Schedule_1_topic",
            "Schedule_x_override"
        ]
    },
    {
        "id": "79c82c463c263553",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Schedule_1_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_1_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 180,
        "wires": [
            [
                "e3d4b9d611e649e0"
            ],
            [
                "8fbe0ef4995f8e6a"
            ],
            [
                "243fa1e4e8cef5d0"
            ],
            [
                "40f0401e20235a07"
            ],
            [
                "98499b42fe5f6688"
            ],
            [
                "57dddda65db516a2"
            ],
            [
                "1372ccca982b4f0a"
            ]
        ]
    },
    {
        "id": "58449f97376b98d9",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "Scheduler_Load on boot",
        "mode": "link",
        "links": [
            "2bde70f7ec8740ee",
            "abafb2efcd2f804a",
            "8e1f89a719096934",
            "750f2ca3ae772d5f",
            "598c7fd8d6681c1a",
            "ad4ce3a792ad76a6",
            "82508e256cc50ce7",
            "d73b8b0113a830fe",
            "357e2ed012a9bb42",
            "df58bbc82c06fc25",
            "fe86b16e9cc37804"
        ],
        "x": 615,
        "y": 180,
        "wires": []
    },
    {
        "id": "2bde70f7ec8740ee",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 180,
        "wires": [
            [
                "79c82c463c263553"
            ]
        ]
    },
    {
        "id": "1372ccca982b4f0a",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Override1",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 19,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_1_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 180,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "86fe7a6080854779",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Power on",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 2780,
        "y": 140,
        "wires": []
    },
    {
        "id": "d8e5ca53b22c577d",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "52cd9ca2a87cc237",
        "name": "Hour2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 24,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 340,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "e411cdb2b3617a7e",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "52cd9ca2a87cc237",
        "name": "Day2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 23,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 340,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "0fcdf0e74a334edb",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "52cd9ca2a87cc237",
        "name": "Minutes2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 25,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 340,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "ce3b0c94ff7a8500",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "52cd9ca2a87cc237",
        "name": "switch2",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 21,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_2_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 340,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "bbc0fc2f4315d9a0",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "52cd9ca2a87cc237",
        "name": "text input2",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 22,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_2_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 340,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "bc2393868b4f66ed",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "52cd9ca2a87cc237",
        "name": "Action2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 26,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_action",
        "topicType": "str",
        "className": "",
        "x": 2500,
        "y": 340,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "9cf59f59ab99f77f",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "52cd9ca2a87cc237",
        "name": "Schedule_2_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_2_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 340,
        "wires": [
            [
                "ce3b0c94ff7a8500"
            ],
            [
                "bbc0fc2f4315d9a0"
            ],
            [
                "e411cdb2b3617a7e"
            ],
            [
                "d8e5ca53b22c577d"
            ],
            [
                "0fcdf0e74a334edb"
            ],
            [
                "bc2393868b4f66ed"
            ],
            [
                "479965c26a5f5d15"
            ]
        ]
    },
    {
        "id": "8e1f89a719096934",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "52cd9ca2a87cc237",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 340,
        "wires": [
            [
                "9cf59f59ab99f77f"
            ]
        ]
    },
    {
        "id": "479965c26a5f5d15",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "52cd9ca2a87cc237",
        "name": "Override2",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 27,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_2_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 340,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "1f3a2d4f54594807",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "b4ab0c39c255e049",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_Description",
        "func": "global.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "a2cff14086311a49",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_day",
        "func": "\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "c7cfdf9552b03480",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "6e09f0a29207d5c9",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "f5c4b9e33c243507",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_action",
        "func": "global.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "4fc691a1b1204c01",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_override",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3010,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "7a42e5778bf41519",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "77ef78074c745b33",
        "name": "Hour3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 32,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 500,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "d73541639351e613",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "77ef78074c745b33",
        "name": "Day3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 31,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 500,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "871d8f6de9ad1a98",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "77ef78074c745b33",
        "name": "Minutes3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 33,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 500,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "1a27db997a27a1dd",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "77ef78074c745b33",
        "name": "switch3",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 29,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_3_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 500,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "8a47deae609a4257",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "77ef78074c745b33",
        "name": "text input3",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 30,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_3_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 500,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "d15b2d0e98e01f65",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "77ef78074c745b33",
        "name": "Action3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 34,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 500,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "cf847f1078676d93",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "77ef78074c745b33",
        "name": "Schedule_3_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_3_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 500,
        "wires": [
            [
                "1a27db997a27a1dd"
            ],
            [
                "8a47deae609a4257"
            ],
            [
                "d73541639351e613"
            ],
            [
                "7a42e5778bf41519"
            ],
            [
                "871d8f6de9ad1a98"
            ],
            [
                "d15b2d0e98e01f65"
            ],
            [
                "57520972cf8f3282"
            ]
        ]
    },
    {
        "id": "750f2ca3ae772d5f",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "77ef78074c745b33",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 500,
        "wires": [
            [
                "cf847f1078676d93"
            ]
        ]
    },
    {
        "id": "57520972cf8f3282",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "77ef78074c745b33",
        "name": "Override3",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 35,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_3_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 500,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "5f74425ca9610401",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "0f18bd088c4ce661",
        "name": "Hour4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 40,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 660,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "612ac224e061cc79",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "0f18bd088c4ce661",
        "name": "Day4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 39,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 660,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "0710a190d551707c",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "0f18bd088c4ce661",
        "name": "Minutes4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 41,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 660,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "b01c2ff9f7469f79",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "0f18bd088c4ce661",
        "name": "switch4",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 37,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_4_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 660,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "9f04561329aa26f4",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "0f18bd088c4ce661",
        "name": "text input4",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 38,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_4_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 660,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "2a7fb72a1781fe14",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "0f18bd088c4ce661",
        "name": "Action4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 42,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 660,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "a484cb58a507c3f2",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "0f18bd088c4ce661",
        "name": "Schedule_4_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_4_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 660,
        "wires": [
            [
                "b01c2ff9f7469f79"
            ],
            [
                "9f04561329aa26f4"
            ],
            [
                "612ac224e061cc79"
            ],
            [
                "5f74425ca9610401"
            ],
            [
                "0710a190d551707c"
            ],
            [
                "2a7fb72a1781fe14"
            ],
            [
                "73e5b776ee37e929"
            ]
        ]
    },
    {
        "id": "598c7fd8d6681c1a",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "0f18bd088c4ce661",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 660,
        "wires": [
            [
                "a484cb58a507c3f2"
            ]
        ]
    },
    {
        "id": "73e5b776ee37e929",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "0f18bd088c4ce661",
        "name": "Override4",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 43,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_4_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 660,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "a5c85f0332e4746d",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "49e35dcf3adf972f",
        "name": "Hour5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 48,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 820,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "53c6208ebe18f176",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "49e35dcf3adf972f",
        "name": "Day5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 47,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 820,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "c649a3a840183e86",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "49e35dcf3adf972f",
        "name": "Minutes5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 49,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 820,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "5bd339d22882aa07",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "49e35dcf3adf972f",
        "name": "switch5",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 45,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_5_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 820,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "cdd91f4f0777b0fc",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "49e35dcf3adf972f",
        "name": "text input5",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 46,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_5_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 820,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "9de114ee921577b7",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "49e35dcf3adf972f",
        "name": "Action5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 50,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 820,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "c2dfc46bffb56c5f",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "49e35dcf3adf972f",
        "name": "Schedule_5_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_5_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 820,
        "wires": [
            [
                "5bd339d22882aa07"
            ],
            [
                "cdd91f4f0777b0fc"
            ],
            [
                "53c6208ebe18f176"
            ],
            [
                "a5c85f0332e4746d"
            ],
            [
                "c649a3a840183e86"
            ],
            [
                "9de114ee921577b7"
            ],
            [
                "fd75ca33fe4a9589"
            ]
        ]
    },
    {
        "id": "ad4ce3a792ad76a6",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "49e35dcf3adf972f",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 820,
        "wires": [
            [
                "c2dfc46bffb56c5f"
            ]
        ]
    },
    {
        "id": "fd75ca33fe4a9589",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "49e35dcf3adf972f",
        "name": "Override5",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 51,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_5_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 820,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "3103abf9a680a9ea",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "131bb514acb6c38f",
        "name": "Hour6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 56,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 980,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "a1866018a9f27226",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "131bb514acb6c38f",
        "name": "Day6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 55,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 980,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "51e9aad82e544c85",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "131bb514acb6c38f",
        "name": "Minutes6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 57,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 980,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "67c2c134c50ed462",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "131bb514acb6c38f",
        "name": "switch6",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 53,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_6_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 980,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "1e30fa210ee856be",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "131bb514acb6c38f",
        "name": "text input6",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 54,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_6_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 980,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "e72e318e1a456090",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "131bb514acb6c38f",
        "name": "Action6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 58,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 980,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "ab40d0b571d81193",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "131bb514acb6c38f",
        "name": "Schedule_6_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_6_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 980,
        "wires": [
            [
                "67c2c134c50ed462"
            ],
            [
                "1e30fa210ee856be"
            ],
            [
                "a1866018a9f27226"
            ],
            [
                "3103abf9a680a9ea"
            ],
            [
                "51e9aad82e544c85"
            ],
            [
                "e72e318e1a456090"
            ],
            [
                "4470d0d9384e5146"
            ]
        ]
    },
    {
        "id": "82508e256cc50ce7",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "131bb514acb6c38f",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 980,
        "wires": [
            [
                "ab40d0b571d81193"
            ]
        ]
    },
    {
        "id": "4470d0d9384e5146",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "131bb514acb6c38f",
        "name": "Override6",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 59,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_6_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 980,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "f95cadbe3c3cd2f4",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "13c1334900bc3740",
        "name": "Hour7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 64,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 1140,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "fcf03506100353c9",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "13c1334900bc3740",
        "name": "Day7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 63,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1140,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "9fc9947dc30386f3",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "13c1334900bc3740",
        "name": "Minutes7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 65,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 1140,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "87241aa5e6a2ccf7",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "13c1334900bc3740",
        "name": "switch7",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 61,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_7_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1140,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "0a54cb095adcb787",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "13c1334900bc3740",
        "name": "text input7",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 62,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_7_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1140,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "436b41690b969348",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "13c1334900bc3740",
        "name": "Action7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 66,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 1140,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "a4e2c87bf04e065d",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "13c1334900bc3740",
        "name": "Schedule_7_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_7_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 1140,
        "wires": [
            [
                "87241aa5e6a2ccf7"
            ],
            [
                "0a54cb095adcb787"
            ],
            [
                "fcf03506100353c9"
            ],
            [
                "f95cadbe3c3cd2f4"
            ],
            [
                "9fc9947dc30386f3"
            ],
            [
                "436b41690b969348"
            ],
            [
                "0a155882d5693fda"
            ]
        ]
    },
    {
        "id": "d73b8b0113a830fe",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "13c1334900bc3740",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 1140,
        "wires": [
            [
                "a4e2c87bf04e065d"
            ]
        ]
    },
    {
        "id": "0a155882d5693fda",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "13c1334900bc3740",
        "name": "Override7",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 67,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_7_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 1140,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "f93699165fe750ce",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "a4db9b20ef5bc75c",
        "name": "Hour8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 72,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 1300,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "b1956b6593a4a597",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "a4db9b20ef5bc75c",
        "name": "Day8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 71,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1300,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "0b60ef37733490bf",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "a4db9b20ef5bc75c",
        "name": "Minutes8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 73,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 1300,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "62e00829c19bec7c",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "a4db9b20ef5bc75c",
        "name": "switch8",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 69,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_8_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1300,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "32e23a19047b877e",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "a4db9b20ef5bc75c",
        "name": "text input8",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 70,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_8_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1300,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "f511b9d4cedb0977",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "a4db9b20ef5bc75c",
        "name": "Action8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 74,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 1300,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "e2a02a4bdcbb0432",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "a4db9b20ef5bc75c",
        "name": "Schedule_8_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_8_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "62e00829c19bec7c"
            ],
            [
                "32e23a19047b877e"
            ],
            [
                "b1956b6593a4a597"
            ],
            [
                "f93699165fe750ce"
            ],
            [
                "0b60ef37733490bf"
            ],
            [
                "f511b9d4cedb0977"
            ],
            [
                "fe24caf7cb4e92d3"
            ]
        ]
    },
    {
        "id": "357e2ed012a9bb42",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "a4db9b20ef5bc75c",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 1300,
        "wires": [
            [
                "e2a02a4bdcbb0432"
            ]
        ]
    },
    {
        "id": "fe24caf7cb4e92d3",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "a4db9b20ef5bc75c",
        "name": "Override8",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 75,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_8_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 1300,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "5b138a18f47114e3",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4b0ab44dfd6f65c3",
        "name": "Hour9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 80,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 1460,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "37d57c847d1b5ff8",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4b0ab44dfd6f65c3",
        "name": "Day9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 79,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1460,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "663c8cf477dc16cb",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4b0ab44dfd6f65c3",
        "name": "Minutes9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 81,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 1460,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "5a75949723c259df",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "4b0ab44dfd6f65c3",
        "name": "switch9",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 77,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_9_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1460,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "d77c206846bfe16d",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "4b0ab44dfd6f65c3",
        "name": "text input9",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 78,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_9_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1460,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "11958cca6fba73cb",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4b0ab44dfd6f65c3",
        "name": "Action9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 82,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 1460,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "848ddfb953511b13",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "4b0ab44dfd6f65c3",
        "name": "Schedule_9_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_9_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 1460,
        "wires": [
            [
                "5a75949723c259df"
            ],
            [
                "d77c206846bfe16d"
            ],
            [
                "37d57c847d1b5ff8"
            ],
            [
                "5b138a18f47114e3"
            ],
            [
                "663c8cf477dc16cb"
            ],
            [
                "11958cca6fba73cb"
            ],
            [
                "611bf69e3ab85546"
            ]
        ]
    },
    {
        "id": "df58bbc82c06fc25",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "4b0ab44dfd6f65c3",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 1460,
        "wires": [
            [
                "848ddfb953511b13"
            ]
        ]
    },
    {
        "id": "611bf69e3ab85546",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "4b0ab44dfd6f65c3",
        "name": "Override9",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 83,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_9_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 1460,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "e20f0e179a77b100",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4f450eb680618622",
        "name": "Hour10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 88,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_hour",
        "topicType": "str",
        "className": "",
        "x": 1960,
        "y": 1620,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "88872f26b2ce5e9b",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4f450eb680618622",
        "name": "Day10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 87,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1620,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "1759cf2fcc472812",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4f450eb680618622",
        "name": "Minutes10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 89,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_minutes",
        "topicType": "str",
        "className": "",
        "x": 2250,
        "y": 1620,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "bc8c769ccc26fa5d",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "4f450eb680618622",
        "name": "switch10",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 85,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_10_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1620,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "99bf0b7454b3b5c0",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "4f450eb680618622",
        "name": "text input10",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 86,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_10_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1620,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "219fcc0259998439",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4f450eb680618622",
        "name": "Action10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 90,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 1620,
        "wires": [
            [
                "f5c4b9e33c243507"
            ]
        ]
    },
    {
        "id": "a43e0949567dc0ef",
        "type": "switch",
        "z": "35d210f042827344",
        "g": "4f450eb680618622",
        "name": "Schedule_10_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_10_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 880,
        "y": 1620,
        "wires": [
            [
                "bc8c769ccc26fa5d"
            ],
            [
                "99bf0b7454b3b5c0"
            ],
            [
                "88872f26b2ce5e9b"
            ],
            [
                "e20f0e179a77b100"
            ],
            [
                "1759cf2fcc472812"
            ],
            [
                "219fcc0259998439"
            ],
            [
                "a477e5b86fe9c792"
            ]
        ]
    },
    {
        "id": "fe86b16e9cc37804",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "4f450eb680618622",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 1620,
        "wires": [
            [
                "a43e0949567dc0ef"
            ]
        ]
    },
    {
        "id": "a477e5b86fe9c792",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "4f450eb680618622",
        "name": "Override10",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 91,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_10_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2790,
        "y": 1620,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "cf93ce26e02dc3ae",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1920,
        "y": 2140,
        "wires": [
            [
                "317942154b6d1cb3"
            ]
        ]
    },
    {
        "id": "71db58050c22ba9e",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1920,
        "y": 2180,
        "wires": [
            [
                "92b636a9597d91b2"
            ]
        ]
    },
    {
        "id": "4d90f21594adec55",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Schedule_xx topics",
        "func": "// variables to load on boot and periodically for dasboard\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={};\n\nmsg1.topic = \"Schedule_1\"\nmsg2.topic = \"Schedule_2\"\nmsg3.topic = \"Schedule_3\"\nmsg4.topic = \"Schedule_4\"\nmsg5.topic = \"Schedule_5\"\nmsg6.topic = \"Schedule_6\"\nmsg7.topic = \"Schedule_7\"\nmsg8.topic = \"Schedule_8\"\nmsg9.topic = \"Schedule_9\"\nmsg10.topic= \"Schedule_10\"\n\nmsg1.payload = msg.payload;\nmsg2.payload = msg.payload;\nmsg3.payload = msg.payload;\nmsg4.payload = msg.payload;\nmsg5.payload = msg.payload;\nmsg6.payload = msg.payload;\nmsg7.payload = msg.payload;\nmsg8.payload = msg.payload;\nmsg9.payload = msg.payload;\nmsg10.payload = msg.payload;\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];\n",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2180,
        "wires": [
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ]
        ],
        "outputLabels": [
            "Schedule_1_Description",
            "Schedule_1_day",
            "Schedule_1_hour",
            "Schedule_1_minutes",
            "Schedule_1_state",
            "Schedule_1_topic",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "d69f1fa0c38f85ab",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Scheduler in Dashboard",
        "info": "",
        "x": 820,
        "y": 60,
        "wires": []
    },
    {
        "id": "372a2d9c5310236a",
        "type": "no-op",
        "z": "35d210f042827344",
        "name": "",
        "x": 995,
        "y": 2180,
        "wires": [
            [
                "e168945122de5aa2"
            ]
        ],
        "l": false
    },
    {
        "id": "f217f942f56cbfa9",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "Power on Planning",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb"
        ],
        "x": 2025,
        "y": 2100,
        "wires": []
    },
    {
        "id": "ed8f8d1c63425cba",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2140,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ]
        ],
        "l": false
    },
    {
        "id": "bfc937a460e14f74",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2180,
        "wires": [
            [
                "6eb8540eef912bec"
            ]
        ],
        "l": false
    },
    {
        "id": "7f94859e2e5aef2a",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2220,
        "wires": [
            [
                "fdc9275bff11d4f6"
            ]
        ],
        "l": false
    },
    {
        "id": "b54dcdd059911a6b",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2260,
        "wires": [
            [
                "fac4923b3fac0597"
            ]
        ],
        "l": false
    },
    {
        "id": "e168945122de5aa2",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule",
        "func": "var topic   =   msg.topic;\n\nvar state   =   global.get(topic+'_state',\"file\")||0;                              // Get state of the agenda item. \n\n\nif      (state == 0)                                                            // Is it disabled? \n        {return [null, null, null, null, null, null, null];}                          // output null to all pins and exit. else to continue.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var day_check       =global.get(topic+'_day',\"file\");                   // get schedule variables.\n        var hour_check      =global.get(topic+'_hour',\"file\");                  // get schedule variables.\n        var minutes_check   =global.get(topic+'_minutes',\"file\");               // get schedule variables.\n\n        var solar_block_scheduler           =global.get('solar_block_scheduler',\"file\");\n        var SolarFunction_active            =global.get('SolarFunction_active',\"file\");\n        var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n        \n        var F_RTC_on_off_active = global.get('F_RTC.on_off_active',\"file\"); \n        \n        var block_it = false;\n        if (solar_block_scheduler == true && SolarFunction_active == 1)\n            {\n                block_it = true;\n                \n            }\n        \n\n                                                                                // Check the programmed day compared current day.\n        if (day_check.includes(msg.payload[0]))         {day_check = { payload: 1, topic: \"DayOfTheWeek\"};}\n        else                                            {day_check = { payload: 0, topic: \"DayOfTheWeek\"};}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == hour_check)               {hour_check = { payload: 1, topic: \"Hour\"};}\n        else                                            {hour_check = { payload: 0, topic: \"Hour\"};}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == minutes_check)            {minutes_check = { payload: 1, topic: \"Minutes\"};}\n        else                                            {minutes_check = { payload: 0, topic: \"Minutes\"};}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (day_check.payload == 1 && hour_check.payload == 1 && minutes_check.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                let msg1 = {}, msg2 = {}, msg3 = {}, msg4 = {}, msg5 = {}, msg6 = {}, msg7 = {};\n                msg1.payload = 99; msg2.payload = 99; msg3.payload = 99; msg4.payload = 99; msg5.payload = 99; msg6.payload = 99; msg7.payload = 99; \n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                //  Override the current powerstate of heat pump? //////////////\n                //\n                var override    = global.get(topic+'_override',\"file\");         // get the current override state.\n                var HP_state    = global.get('Heatpump_State',\"file\");          // get the current state of the heatpump. Is it on or off.\n                var NightReductionRoomSetpoint_state   = global.get('NightReductionRoomSetpoint.state',\"file\");\n                ////////////////////////////////////////////////////////////////\n                if  (override == 1 && HP_state == 0)                            // check if the override state is enabled, AND currently heatpump state is off\n                    {\n                        msg1 = { payload: 1, topic: \"override\" };\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                //\n                var action  =   global.get(topic+'_action',\"file\");             // get the action\n                ////////////////////////////////////////////////////////////////\n                \n                if  (action == \"HP_turn_on\" && HP_state == 0)                   // check the action\n                    {\n                        msg1 = { source:  \"flow\", payload: 1, topic: \"Turn ON HeatPump\" };       // Operation Mode action? >> to Operation MOde output pin 1\n                    }\n                if  (action == \"HP_turn_off\" && HP_state == 1 && block_it === false)                                   // check the action\n                    {\n                        msg1 = { source: \"flow\", payload: 0, topic: \"Turn OFF HeatPump\" };      // Operation Mode action? >> to Operation MOde output pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                if  (action == \"DHW\")                                           // check the action if DHW (=Force DHW)\n                    {\n                        msg2 = { payload: 1, topic: \"DHW\" };                     // DHW action? >> to DHW output pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                if  (action == \"Sterilization\" && block_it === false)                                 // check the action\n                    {\n                        msg3 = { payload: 1, topic:  \"Sterilization\" };         // Sterilization action? >> to Sterilization output pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////                \n                if  (action == \"QM_0\")                                          // check the action\n                    {\n                        msg4 = { payload: 0, topic: \"Set QuietMode to\" };           // QuietMode action? >> to Quiet MOde output pin 4\n                        msg4.source = \"scheduler\"\n                    }\n                if  (action == \"QM_1\")                                          // check the action\n                    {\n                        msg4 = { payload: 1, topic: \"Set QuietMode to\" };           // QuietMode action? >> to Quiet MOde output pin 4\n                        msg4.source = \"scheduler\"\n                    }\n                if  (action == \"QM_2\")                                          // check the action\n                    {\n                        msg4 = { payload: 2, topic: \"Set QuietMode to\" };           // QuietMode action? >> to Quiet MOde output pin 4\n                        msg4.source = \"scheduler\"\n                    }\n                if  (action == \"QM_3\")                                          // check the action\n                    {\n                        msg4 = { payload: 3, topic: \"Set QuietMode to\" };           // QuietMode action? >> to Quiet MOde output pin 4\n                        msg4.source = \"scheduler\"\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                // Operating mode (0=Heat only, 2=Auto(Heat), 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if  (action == \"OperationMode0\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 0, topic: \"Operation Mode 0\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        else if (SolarFunction_active == 1) {global.set('F_stored_next_operating_mode',0,\"file\");} \n                        else if (F_RTC_on_off_active == 1) {\n                            global.set('F_stored_next_operating_mode',undefined,\"file\"); \n                            msg5 = { payload: 0, topic: \"Operation Mode 0\" }; \n                            global.set('F_RTC.on_off_active',0,\"file\"); \n                        } \n                    }                \n                if  (action == \"OperationMode1\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 1, topic: \"Operation Mode 1\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        else if (SolarFunction_active == 1) {global.set('F_stored_next_operating_mode',1,\"file\");} \n                        else if (F_RTC_on_off_active == 1) {\n                            global.set('F_stored_next_operating_mode',undefined,\"file\"); \n                            msg5 = { payload: 1, topic: \"Operation Mode 1\" }; \n                            global.set('F_RTC.on_off_active',0,\"file\"); }\n                    }                \n                if  (action == \"OperationMode2\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 2, topic: \"Operation Mode 2\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        else if (SolarFunction_active == 1) {global.set('F_stored_next_operating_mode',2,\"file\");} \n                        else if (F_RTC_on_off_active == 1) {\n                            global.set('F_stored_next_operating_mode',undefined,\"file\"); \n                            msg5 = { payload: 2, topic: \"Operation Mode 2\" }; \n                            global.set('F_RTC.on_off_active',0,\"file\"); }\n                    }                \n                if  (action == \"OperationMode3\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 3, topic: \"Operation Mode 3\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        else if (SolarFunction_active == 1) {global.set('F_stored_next_operating_mode',3,\"file\");} \n                        else if (F_RTC_on_off_active == 1) {\n                            global.set('F_stored_next_operating_mode',undefined,\"file\"); \n                            msg5 = { payload: 3, topic: \"Operation Mode 3\" }; \n                            global.set('F_RTC.on_off_active',0,\"file\"); }\n                    }                \n                if  (action == \"OperationMode4\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 4, topic: \"Operation Mode 4\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        else if (SolarFunction_active == 1) {global.set('F_stored_next_operating_mode',4,\"file\");} \n                        else if (F_RTC_on_off_active == 1) {\n                            global.set('F_stored_next_operating_mode',undefined,\"file\"); \n                            msg5 = { payload: 4, topic: \"Operation Mode 4\" }; \n                            global.set('F_RTC.on_off_active',0,\"file\"); }\n                    }   \n                if  (action == \"OperationMode5\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 5, topic: \"Operation Mode 5\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        else if (SolarFunction_active == 1) {global.set('F_stored_next_operating_mode',5,\"file\");} \n                        else if (F_RTC_on_off_active == 1) {\n                            global.set('F_stored_next_operating_mode',undefined,\"file\"); \n                            msg5 = { payload: 5, topic: \"Operation Mode 5\" }; \n                            global.set('F_RTC.on_off_active',0,\"file\"); }\n                    }                   \n                if  (action == \"OperationMode6\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 6, topic: \"Operation Mode 6\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        else if (SolarFunction_active == 1) {global.set('F_stored_next_operating_mode',6,\"file\");} \n                        else if (F_RTC_on_off_active == 1) {\n                            global.set('F_stored_next_operating_mode',undefined,\"file\"); \n                            msg5 = { payload: 6, topic: \"Operation Mode 6\" }; \n                            global.set('F_RTC.on_off_active',0,\"file\"); }\n                    }   \n                if  (action == \"OperationMode7\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 7, topic: \"Operation Mode 7\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        else if (SolarFunction_active == 1) {global.set('F_stored_next_operating_mode',7,\"file\");} \n                        else if (F_RTC_on_off_active == 1) {\n                            global.set('F_stored_next_operating_mode',undefined,\"file\"); \n                            msg5 = { payload: 7, topic: \"Operation Mode 7\" }; \n                            global.set('F_RTC.on_off_active',0,\"file\"); }\n                    }   \n                if  (action == \"OperationMode8\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 8, topic: \"Operation Mode 8\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        else if (SolarFunction_active == 1) {global.set('F_stored_next_operating_mode',8,\"file\");} \n                        else if (F_RTC_on_off_active == 1) {\n                            global.set('F_stored_next_operating_mode',undefined,\"file\"); \n                            msg5 = { payload: 8, topic: \"Operation Mode 8\" }; \n                            global.set('F_RTC.on_off_active',0,\"file\"); }\n                    }   \n\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                if  (action == \"NightReductionWaterTempOn\")                              // check the action\n                    {\n                        var correction = global.get(\"NightReductionWaterTemp.correction\",\"file\");           // get the nightreduction correction.\n                        global.set(\"NightReductionWaterTemp.current_value\",correction,\"file\");\n                        global.set(\"NightReductionWaterTemp.state\",1,\"file\");\n                        msg6 = { payload: correction, topic: \"Nightreduction\" };\n                    }\n                if  (action == \"NightReductionWaterTempOff\")                             // check the action\n                    {\n                        global.set(\"NightReductionWaterTemp.current_value\",0,\"file\");\n                        global.set(\"NightReductionWaterTemp.state\",0,\"file\");\n                        msg6 = { payload: 0, topic: \"Nightreduction\" };\n                    }\n                ////////////////////////////////////////////////////////////////\n                if (action == \"NightReductionRoomSetpointOn\")                 // check the action\n                    {\n                        if (NightReductionRoomSetpoint_state === undefined || NightReductionRoomSetpoint_state == 0)          //only when not set\n                            { \n                                global.set(\"NightReductionRoomSetpoint.state\", 1, \"file\");\n                                msg7 = { payload: 1, topic: \"NightReductionRoomSetpoint.state\" };\n                            } \n                    }\n\n                if (action == \"NightReductionRoomSetpointOff\")                 // check the action\n                    {\n                        if (NightReductionRoomSetpoint_state === undefined) { NightReductionRoomSetpoint_state = 0; }\n                        if (NightReductionRoomSetpoint_state == 1) //only change when set\n                            {\n                                global.set(\"NightReductionRoomSetpoint.state\",0,\"file\");\n                                msg7 = { payload: 0, topic: \"NightReductionRoomSetpoint.state\" };\n                            } \n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n            return [msg1, msg2, msg3, msg4, msg5, msg6, msg7];\n\n            }   \n        else\n            {   \n                return [null, null, null, null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 7,
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2180,
        "wires": [
            [
                "dc5991432f2fa36b"
            ],
            [
                "880faf9e562e2cf3"
            ],
            [
                "b26465510d1a2c16"
            ],
            [
                "e2654cbcd4e962c6"
            ],
            [
                "2559d6cd0bf05751"
            ],
            [
                "6f97b5d7ea5da767"
            ],
            [
                "8a9735b101f0cf03"
            ]
        ],
        "outputLabels": [
            "override / power on/off",
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode",
            "NightReduction water",
            "NightReduction Room"
        ]
    },
    {
        "id": "3f41400aeb5d2af8",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Scheduler - Allow DHW below",
        "info": "",
        "x": 220,
        "y": 2400,
        "wires": []
    },
    {
        "id": "b91f0b27e28d647b",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "NightReduction Scheduler",
        "mode": "link",
        "links": [
            "73ee925b927ed0c6",
            "3ab7a10b46379da2",
            "44d83d4e58d63689"
        ],
        "x": 2025,
        "y": 2300,
        "wires": []
    },
    {
        "id": "397877a41dc1fc5d",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2300,
        "wires": [
            [
                "3a4353d8b7cc67b8"
            ]
        ],
        "l": false
    },
    {
        "id": "3a4353d8b7cc67b8",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "61",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2300,
        "wires": [
            [
                "b91f0b27e28d647b",
                "a040c5a397316aa6"
            ]
        ]
    },
    {
        "id": "4cbcfd45e4da8347",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to power on/off (override)",
        "info": "",
        "x": 2180,
        "y": 2100,
        "wires": []
    },
    {
        "id": "b9c4d8c5804b1549",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to Nightreduction (Direct)",
        "info": "",
        "x": 2180,
        "y": 2300,
        "wires": []
    },
    {
        "id": "b14565589916f129",
        "type": "comment",
        "z": "35d210f042827344",
        "name": ">>>>>>>>>>>>>>>>>>>>>>",
        "info": "",
        "x": 2180,
        "y": 2180,
        "wires": []
    },
    {
        "id": "9bc7c5fbeb1d1f6d",
        "type": "comment",
        "z": "35d210f042827344",
        "name": ">>>>>>>>>>>>>>>>>>>>>>",
        "info": "",
        "x": 2180,
        "y": 2140,
        "wires": []
    },
    {
        "id": "1bfb33b6618cd222",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Power",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2060,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "f0045be5a90c957f",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Set QuietMode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2220,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "14e1ae3f580db2a7",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Operation Mode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2260,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "a040c5a397316aa6",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - NightReduction water temp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2300,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "9815e18a26e4cd85",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 4065,
        "y": 2160,
        "wires": []
    },
    {
        "id": "84e59fd6bd8697ab",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Force DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2140,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "c39da0815cb8bf48",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Force Sterilization",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2180,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "d9b9cfbe76f8a7aa",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Operation Mode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2100,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "dc5991432f2fa36b",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    return msg;\n}\nelse {\nnode.warn('scheduler action blocked 1');\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 2100,
        "wires": [
            [
                "f217f942f56cbfa9",
                "1bfb33b6618cd222"
            ]
        ]
    },
    {
        "id": "880faf9e562e2cf3",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    return msg;\n}\nelse {\nnode.warn('scheduler action blocked 2');\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 2140,
        "wires": [
            [
                "ed8f8d1c63425cba"
            ]
        ]
    },
    {
        "id": "b26465510d1a2c16",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    return msg;\n}\nelse {\nnode.warn('scheduler action blocked 3');\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 2180,
        "wires": [
            [
                "bfc937a460e14f74"
            ]
        ]
    },
    {
        "id": "e2654cbcd4e962c6",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    msg.source = \"scheduler\";\n    return msg;\n}\nelse {\nnode.warn('scheduler action blocked 4');\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 2220,
        "wires": [
            [
                "7f94859e2e5aef2a"
            ]
        ]
    },
    {
        "id": "2559d6cd0bf05751",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif ( msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1) ) )   {\n    global.set('MQTT_Source', \"scheduler\");\n    return msg;\n}\nelse {\nnode.warn('scheduler action blocked 5');\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 2260,
        "wires": [
            [
                "b54dcdd059911a6b"
            ]
        ]
    },
    {
        "id": "6f97b5d7ea5da767",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    return msg;\n}\nelse {\nnode.warn('scheduler action blocked 6');\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 2300,
        "wires": [
            [
                "397877a41dc1fc5d"
            ]
        ]
    },
    {
        "id": "b9e99ae19c354ecc",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "To LOGS",
        "info": "",
        "x": 4080,
        "y": 2100,
        "wires": []
    },
    {
        "id": "fdc7a953bf5abbc3",
        "type": "rbe",
        "z": "35d210f042827344",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1090,
        "y": 2440,
        "wires": [
            [
                "513f1edff2205368"
            ]
        ]
    },
    {
        "id": "af36a209861f34c9",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Dashboard",
        "info": "",
        "x": 580,
        "y": 2600,
        "wires": []
    },
    {
        "id": "4ca97fe11f8196e4",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Check Nightreduction room status",
        "func": "let msg99={};   // pin 1 - ToLog\nlet msg2={};    // pin 2 - SP Room\n\nmsg99.topic = msg.topic;\n\n\nvar NightReductionRoomSetpoint_state = global.get(\"NightReductionRoomSetpoint.state\",\"file\");\nif (NightReductionRoomSetpoint_state === undefined) \n    {\n        global.set(\"NightReductionRoomSetpoint.state\",0,\"file\");\n        NightReductionRoomSetpoint_state = 0;\n        return null;\n    }\n\nvar RoomSP;\n\nif (NightReductionRoomSetpoint_state == 1) \n    {\n        //retrieve value from dashboard\n        RoomSP = global.get(\"NightReductionRoomSetpoint.LOW\",\"file\");\n        global.set(\"WoonkamerSP\", RoomSP, \"file\");\n        msg99.payload = \"ON, Room setpoint: \" + RoomSP + \" °C\";\n        msg2.payload = RoomSP;\n        msg2.currentstatus = 'Active';\n        return [msg99, msg2]; //Pin 1 to log. Pin2 to write Room SP\n    }\n\nif (NightReductionRoomSetpoint_state == 0) \n    {\n        //retrieve value from dashboard\n        RoomSP = global.get(\"NightReductionRoomSetpoint.NORMAL\",\"file\");\n        global.set(\"WoonkamerSP\", RoomSP, \"file\");\n        msg99.payload = \"OFF, Room setpoint: \" + RoomSP + \" °C\";\n        msg2.payload = RoomSP;\n        msg2.currentstatus = 'Inactive';\n        return [msg99, msg2]; //Pin 1 to log. Pin2 to write Room SP\n    }\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 2340,
        "wires": [
            [
                "a0090b3fd8c64e10",
                "68f4601da2aa107a"
            ],
            [
                "55ed50ca78ad2e8e",
                "7a27b2c8c4721ed9"
            ]
        ],
        "outputLabels": [
            "ToLog",
            "RoomSP"
        ]
    },
    {
        "id": "7a27b2c8c4721ed9",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "9a106cdefc873348",
            "ddf3715aaea9672b"
        ],
        "x": 3415,
        "y": 2380,
        "wires": []
    },
    {
        "id": "55ed50ca78ad2e8e",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "link out 16",
        "mode": "link",
        "links": [],
        "x": 3415,
        "y": 2420,
        "wires": []
    },
    {
        "id": "9b6adfc4b5fe33d9",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit SP to HA climate (optional)",
        "info": "",
        "x": 3610,
        "y": 2420,
        "wires": []
    },
    {
        "id": "3e6fc746e7597b72",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit SP to Dash",
        "info": "",
        "x": 3560,
        "y": 2380,
        "wires": []
    },
    {
        "id": "572ff3b3b8a1d185",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to write RoomSP",
        "info": "",
        "x": 3570,
        "y": 2340,
        "wires": []
    },
    {
        "id": "977bf5eb11dcbcae",
        "type": "ui_numeric",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Nightreduction room setpoint low",
        "label": "Setpoint low",
        "tooltip": "",
        "group": "9aec7afe54746c39",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 660,
        "y": 2680,
        "wires": [
            [
                "20267081e902cf8f"
            ]
        ]
    },
    {
        "id": "4be14d43ed11df9e",
        "type": "ui_numeric",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Nightreduction room setpoint normal",
        "label": "Setpoint normal",
        "tooltip": "",
        "group": "9aec7afe54746c39",
        "order": 8,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 670,
        "y": 2740,
        "wires": [
            [
                "50a7d35eec5ebb92"
            ]
        ]
    },
    {
        "id": "66751dfee126dd36",
        "type": "ui_template",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "group": "9aec7afe54746c39",
        "name": "Line - Setup ",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "ac07aae6820d664d",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "set NightReductionRoomSetpoint.LOW",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"NightReductionRoomSetpoint.LOW\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "20267081e902cf8f",
        "type": "rbe",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 2680,
        "wires": [
            [
                "ac07aae6820d664d"
            ]
        ]
    },
    {
        "id": "0e56417c81c6b1be",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "set NightReductionRoomSetpoint.NORMAL",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"NightReductionRoomSetpoint.NORMAL\",msg.payload,\"file\");\n\n//koppeling naar RTC room setpoint (WoonkamerSP) alleen indien handmatig aangepast:\n//check of Night reduction room setpoint is niet actief:\nif ( global.get(\"NightReductionRoomSetpoint.state\", \"file\") == 0 ) {\nlet msg1 ={}; //pin1 ---> link-out to WoonkamerSP on dashboard RTC\n    msg1.payload = msg.payload; //NightReductionRoomSetpoint.NORMAL \n    if (global.get('WoonkamerSP', \"file\") == msg.payload ) { return null;} //only send when different\n    global.set(\"WoonkamerSP\", msg.payload, \"file\");\n    return msg1;\n}\n\nreturn null; //default send nothing\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2740,
        "wires": [
            [
                "1911fbfbf89866a8"
            ]
        ]
    },
    {
        "id": "50a7d35eec5ebb92",
        "type": "rbe",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 2740,
        "wires": [
            [
                "0e56417c81c6b1be"
            ]
        ]
    },
    {
        "id": "620d3faff0a26d37",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Default values (first start)",
        "info": "",
        "x": 230,
        "y": 2660,
        "wires": []
    },
    {
        "id": "b98e3d3337c01053",
        "type": "inject",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Startup",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "x": 180,
        "y": 2700,
        "wires": [
            [
                "827d25a8ccb91857"
            ]
        ]
    },
    {
        "id": "827d25a8ccb91857",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Load on boot",
        "func": "var SetpointLOW = global.get('NightReductionRoomSetpoint.LOW',\"file\");\nif (SetpointLOW === undefined)  {\n    SetpointLOW = 18;\n    global.set('NightReductionRoomSetpoint.LOW',18,\"file\");\n}\n    \nvar SetpointNORMAL = global.get('NightReductionRoomSetpoint.NORMAL',\"file\");\nif (SetpointNORMAL === undefined) {\n    SetpointNORMAL = global.get('WoonkamerSP',\"file\");\n    if  (SetpointNORMAL !== undefined)   {\n        global.set('NightReductionRoomSetpoint.NORMAL',SetpointNORMAL,\"file\");\n    }\n    else {return null;}     // prevent setting a default room SP due to timing issue. This is done elsewhere. Just exit and wait for it to populate with next passes.\n}\n\nvar NightReductionRoomSetpoint_state = global.get('NightReductionRoomSetpoint.state',\"file\");\nif (NightReductionRoomSetpoint_state === undefined)   {\n    global.set('NightReductionRoomSetpoint.state',0,\"file\");\n    NightReductionRoomSetpoint_state = 0;\n}\n\n\nlet msg1 = {};    //  NightReductionRoomSetpoint.LOW\nlet msg2 = {};    //  NightReductionRoomSetpoint.NORMAL\nlet msg3 = {};  //  NightReductionRoomSetpoint_state.state\n\nmsg1.payload = SetpointLOW;\nmsg2.payload = SetpointNORMAL;\nmsg3.payload = NightReductionRoomSetpoint_state;\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2700,
        "wires": [
            [
                "977bf5eb11dcbcae"
            ],
            [
                "4be14d43ed11df9e"
            ],
            [
                "0a2fca7dbded32e0"
            ]
        ],
        "outputLabels": [
            "DHW_treshold",
            "",
            ""
        ]
    },
    {
        "id": "8a9735b101f0cf03",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / no block",
        "func": "if (msg.payload != 99)\n{\n    msg.topic = \"Scheduler - Nightreduction room setpoint\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 2340,
        "wires": [
            [
                "4ca97fe11f8196e4"
            ]
        ]
    },
    {
        "id": "5d320e94981761fc",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_10",
        "group": "2b0c8e162d47abbb",
        "order": 92,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_10",
        "topicType": "str",
        "x": 3040,
        "y": 1620,
        "wires": [
            [
                "bde3ed8785911ece",
                "01af4e578895cb64",
                "8b943ed66c6894fd"
            ]
        ]
    },
    {
        "id": "c4fb7de363d6e1c1",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_2",
        "group": "2b0c8e162d47abbb",
        "order": 28,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_2",
        "topicType": "msg",
        "x": 3030,
        "y": 340,
        "wires": [
            [
                "8b943ed66c6894fd",
                "b29a79a606f67a94",
                "48bedc6898a86520"
            ]
        ]
    },
    {
        "id": "b0ab37d0a28d90d4",
        "type": "function",
        "z": "35d210f042827344",
        "name": "DELETE",
        "func": "if (msg.payload === \"delete\")\n    {\n        \n        \n        global.set(msg.topic+'_Description',undefined,\"file\");\n        global.set(msg.topic+'_day',undefined,\"file\");\n        global.set(msg.topic+'_hour',undefined,\"file\");\n        global.set(msg.topic+'_minutes',undefined,\"file\");\n        global.set(msg.topic+'_action',undefined,\"file\");\n        global.set(msg.topic+'_override',undefined,\"file\");\n        \n        \n    }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3400,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "d6a7b4c88198805c",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_9",
        "group": "2b0c8e162d47abbb",
        "order": 84,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_9",
        "topicType": "str",
        "x": 3030,
        "y": 1460,
        "wires": [
            [
                "8b943ed66c6894fd",
                "e1900f0662ab8e89",
                "a2c614ccf1136bda"
            ]
        ]
    },
    {
        "id": "57e0c404bf54aba7",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_8",
        "group": "2b0c8e162d47abbb",
        "order": 76,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_8",
        "topicType": "str",
        "x": 3030,
        "y": 1300,
        "wires": [
            [
                "8b943ed66c6894fd",
                "82ec28563a45c0e1",
                "9493e487ba4b2168"
            ]
        ]
    },
    {
        "id": "c9e8507eeb72dae8",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_7",
        "group": "2b0c8e162d47abbb",
        "order": 68,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_7",
        "topicType": "str",
        "x": 3030,
        "y": 1140,
        "wires": [
            [
                "8b943ed66c6894fd",
                "54d2af3d1cbb0671",
                "7523f8903fb6cc1e"
            ]
        ]
    },
    {
        "id": "80971077c673d3a2",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_6",
        "group": "2b0c8e162d47abbb",
        "order": 60,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_6",
        "topicType": "str",
        "x": 3030,
        "y": 980,
        "wires": [
            [
                "8b943ed66c6894fd",
                "7ffe81943fa43415",
                "32e5d373c9dcf449"
            ]
        ]
    },
    {
        "id": "20053902cbf5c49a",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_5",
        "group": "2b0c8e162d47abbb",
        "order": 52,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_5",
        "topicType": "str",
        "x": 3030,
        "y": 820,
        "wires": [
            [
                "8b943ed66c6894fd",
                "c853ac3eb3f2d486",
                "0a51c4981f55f9f6"
            ]
        ]
    },
    {
        "id": "e87eaf09d103f9b1",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_4",
        "group": "2b0c8e162d47abbb",
        "order": 44,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_4",
        "topicType": "str",
        "x": 3030,
        "y": 660,
        "wires": [
            [
                "8b943ed66c6894fd",
                "48d83a6051b743c8",
                "7cb711e83a201701"
            ]
        ]
    },
    {
        "id": "7d9060288d6516b7",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_3",
        "group": "2b0c8e162d47abbb",
        "order": 36,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_3",
        "topicType": "str",
        "x": 3030,
        "y": 500,
        "wires": [
            [
                "8b943ed66c6894fd",
                "1f99be99de5ea946",
                "963350a5070e3897"
            ]
        ]
    },
    {
        "id": "684d1bcc0a898b4b",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_1",
        "group": "2b0c8e162d47abbb",
        "order": 20,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_1",
        "topicType": "str",
        "x": 3050,
        "y": 180,
        "wires": [
            [
                "8b943ed66c6894fd",
                "dad7d9da1cf67158",
                "5bec724ed77d6245"
            ]
        ]
    },
    {
        "id": "bde3ed8785911ece",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1620,
        "wires": [
            [
                "219fcc0259998439",
                "1759cf2fcc472812",
                "e20f0e179a77b100",
                "88872f26b2ce5e9b",
                "99bf0b7454b3b5c0"
            ]
        ]
    },
    {
        "id": "01af4e578895cb64",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1620,
        "wires": [
            [
                "bc8c769ccc26fa5d",
                "a477e5b86fe9c792"
            ]
        ]
    },
    {
        "id": "8b943ed66c6894fd",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3250,
        "y": 1740,
        "wires": [
            [
                "b0ab37d0a28d90d4"
            ]
        ]
    },
    {
        "id": "e1900f0662ab8e89",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1460,
        "wires": [
            [
                "611bf69e3ab85546",
                "5a75949723c259df"
            ]
        ]
    },
    {
        "id": "a2c614ccf1136bda",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1460,
        "wires": [
            [
                "11958cca6fba73cb",
                "663c8cf477dc16cb",
                "5b138a18f47114e3",
                "37d57c847d1b5ff8",
                "d77c206846bfe16d"
            ]
        ]
    },
    {
        "id": "82ec28563a45c0e1",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1300,
        "wires": [
            [
                "fe24caf7cb4e92d3",
                "62e00829c19bec7c"
            ]
        ]
    },
    {
        "id": "9493e487ba4b2168",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1300,
        "wires": [
            [
                "f511b9d4cedb0977",
                "0b60ef37733490bf",
                "f93699165fe750ce",
                "b1956b6593a4a597",
                "32e23a19047b877e"
            ]
        ]
    },
    {
        "id": "54d2af3d1cbb0671",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1140,
        "wires": [
            [
                "0a155882d5693fda",
                "87241aa5e6a2ccf7"
            ]
        ]
    },
    {
        "id": "7523f8903fb6cc1e",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1140,
        "wires": [
            [
                "436b41690b969348",
                "9fc9947dc30386f3",
                "f95cadbe3c3cd2f4",
                "fcf03506100353c9",
                "0a54cb095adcb787"
            ]
        ]
    },
    {
        "id": "7ffe81943fa43415",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 980,
        "wires": [
            [
                "4470d0d9384e5146",
                "67c2c134c50ed462"
            ]
        ]
    },
    {
        "id": "32e5d373c9dcf449",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 980,
        "wires": [
            [
                "e72e318e1a456090",
                "51e9aad82e544c85",
                "3103abf9a680a9ea",
                "a1866018a9f27226",
                "1e30fa210ee856be"
            ]
        ]
    },
    {
        "id": "c853ac3eb3f2d486",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 820,
        "wires": [
            [
                "fd75ca33fe4a9589",
                "5bd339d22882aa07"
            ]
        ]
    },
    {
        "id": "0a51c4981f55f9f6",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 820,
        "wires": [
            [
                "9de114ee921577b7",
                "cdd91f4f0777b0fc",
                "53c6208ebe18f176",
                "a5c85f0332e4746d",
                "c649a3a840183e86"
            ]
        ]
    },
    {
        "id": "48d83a6051b743c8",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 660,
        "wires": [
            [
                "73e5b776ee37e929",
                "b01c2ff9f7469f79"
            ]
        ]
    },
    {
        "id": "7cb711e83a201701",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 660,
        "wires": [
            [
                "9f04561329aa26f4",
                "612ac224e061cc79",
                "5f74425ca9610401",
                "0710a190d551707c",
                "2a7fb72a1781fe14"
            ]
        ]
    },
    {
        "id": "1f99be99de5ea946",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 500,
        "wires": [
            [
                "57520972cf8f3282",
                "1a27db997a27a1dd"
            ]
        ]
    },
    {
        "id": "963350a5070e3897",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 500,
        "wires": [
            [
                "8a47deae609a4257",
                "d73541639351e613",
                "7a42e5778bf41519",
                "871d8f6de9ad1a98",
                "d15b2d0e98e01f65"
            ]
        ]
    },
    {
        "id": "b29a79a606f67a94",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 340,
        "wires": [
            [
                "479965c26a5f5d15",
                "ce3b0c94ff7a8500"
            ]
        ]
    },
    {
        "id": "48bedc6898a86520",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 340,
        "wires": [
            [
                "bbc0fc2f4315d9a0",
                "e411cdb2b3617a7e",
                "d8e5ca53b22c577d",
                "0fcdf0e74a334edb",
                "bc2393868b4f66ed"
            ]
        ]
    },
    {
        "id": "dad7d9da1cf67158",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 180,
        "wires": [
            [
                "1372ccca982b4f0a",
                "e3d4b9d611e649e0"
            ]
        ]
    },
    {
        "id": "5bec724ed77d6245",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 180,
        "wires": [
            [
                "57dddda65db516a2",
                "40f0401e20235a07",
                "243fa1e4e8cef5d0",
                "8fbe0ef4995f8e6a",
                "98499b42fe5f6688"
            ]
        ]
    },
    {
        "id": "6261eb2d28619996",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 12,
        "width": 1,
        "height": 1,
        "name": "SPACER scheduler 1x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3070,
        "y": 140,
        "wires": []
    },
    {
        "id": "3a71aada556a2950",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Nightreduction Room setpoint_____________________________________ (some GUI changes are made on tab WP Help / Scheduler HELP)",
        "info": "",
        "x": 570,
        "y": 2560,
        "wires": []
    },
    {
        "id": "a0090b3fd8c64e10",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2340,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "257acc4dad15edc0",
        "type": "comment",
        "z": "35d210f042827344",
        "name": ">>>>>>>>>>>>>>>>>>>>>>",
        "info": "",
        "x": 2180,
        "y": 2340,
        "wires": []
    },
    {
        "id": "0a2fca7dbded32e0",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "label": "Current status",
        "tooltip": "",
        "group": "9aec7afe54746c39",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 600,
        "y": 2800,
        "wires": [
            [
                "05344a8f5a84a598"
            ]
        ]
    },
    {
        "id": "ddf3715aaea9672b",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "link in 18",
        "links": [
            "7a27b2c8c4721ed9"
        ],
        "x": 185,
        "y": 2800,
        "wires": [
            [
                "6e79eaf44bdd252f"
            ]
        ]
    },
    {
        "id": "68f4601da2aa107a",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "link out 30",
        "mode": "link",
        "links": [],
        "x": 3415,
        "y": 2340,
        "wires": []
    },
    {
        "id": "6e79eaf44bdd252f",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "currentstatus",
        "func": "let msg1 = {};\n//node.warn(msg.currentstatus);\nif (msg.currentstatus === \"Active\") {\n    msg1.payload = 1;\n    return msg1;\n}\n\nif (msg.currentstatus === \"Inactive\") {\n    msg1.payload = 0;\n    return msg1;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2800,
        "wires": [
            [
                "0a2fca7dbded32e0"
            ]
        ]
    },
    {
        "id": "05344a8f5a84a598",
        "type": "rbe",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 2800,
        "wires": [
            [
                "ce6d6e5627ec1fa2"
            ]
        ]
    },
    {
        "id": "ce6d6e5627ec1fa2",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "set NightReductionRoomSetpoint.state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\n//firts check if it's neccesary to set, to avoid log message:\nif (global.get(\"NightReductionRoomSetpoint.state\", \"file\") == msg.payload) { return null;} //disable message to log at start / 30 min\n\nglobal.set(\"NightReductionRoomSetpoint.state\", msg.payload, \"file\");\n\nmsg.topic = \"Function - Nightreduction room setpoint\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2800,
        "wires": [
            [
                "4ca97fe11f8196e4"
            ]
        ]
    },
    {
        "id": "1911fbfbf89866a8",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "9a106cdefc873348"
        ],
        "x": 1425,
        "y": 2740,
        "wires": []
    },
    {
        "id": "75afa51a7b5635da",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "link in 21",
        "links": [],
        "x": 345,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "55a0fb67fbe206cf",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "link-in Night reduction room setpoint NORMAL",
        "links": [
            "28ade256a9b75487"
        ],
        "x": 415,
        "y": 2760,
        "wires": [
            [
                "4be14d43ed11df9e"
            ]
        ]
    },
    {
        "id": "3aa03811830ef29e",
        "type": "tab",
        "label": "WP System",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8fe25c73d37fe670",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "51c0bb5ee4bb4f0f",
            "bffa098ab7b94669",
            "28fafb00eff46231",
            "eb0c82f6553d8182",
            "96d1b2a3bba37ab3",
            "9439217717d533c8",
            "e45c612a7cd81bca",
            "78ea8dcdc912cc07",
            "280ef51b4c314e1a",
            "fdd9c7ec95eff575",
            "142d3fc7ce50b860",
            "ab61cc041f990a5e",
            "b0db0c075b6cada4",
            "5c678c17c0272bd7",
            "f68241d2cf6a74e8",
            "110b1d924469e409",
            "338e6b81ea5e1e06",
            "59ac957754893b83",
            "6be67176d1f660cc",
            "05b0e21936f66dca",
            "498c5eb0c718380d",
            "776cbfd355ed920f",
            "e335ee2f6e1f9957",
            "f4fa02505ab621d5",
            "319c435620e4980f",
            "867fcdc764bf28f1",
            "a53f9fb190ca01ea",
            "ac8ee41d4f78120e",
            "43bf696dbf416cb0",
            "7257e77181b2e1a4",
            "cb7b5a6a14926482",
            "6c31c89912e87024",
            "5945f577b64bd499",
            "00b957e057fd4843",
            "f9048baa0aa4d07d",
            "a3eab03124fb697b",
            "56f84076f445f170",
            "376a174e36667b9d",
            "e8e1e41f1c85ca7a",
            "1f82dc785dc48abf",
            "ce0115cd2e7f2ac7"
        ],
        "x": 1944,
        "y": 219,
        "w": 942,
        "h": 1122
    },
    {
        "id": "d31e83867f2e0227",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3240ca538c2a5df3",
            "d43ee06ee34140d5",
            "a3a41ed73245a328",
            "50cd2358bc4fed85",
            "4120fc9975690028",
            "6a54feb677599729",
            "510f802795714d75"
        ],
        "x": 2114,
        "y": 539,
        "w": 692,
        "h": 222
    },
    {
        "id": "5c3df7b5fb0fa130",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e5ee81fbd045b5ef",
            "258316e7112c15b4",
            "6f8b37b8a4354baf",
            "cc96d0a80f6bdef4",
            "71bc363e9bca5fa6",
            "9e1b71b301e9e79d",
            "44cd6ca0f672e121",
            "d11ec0cafa6ed09f",
            "c38da5f9e3ce0d13",
            "ab0c73c86987caf3",
            "09edf2907086baf2",
            "5837cbf37ef47ea6"
        ],
        "x": 1964,
        "y": 1359,
        "w": 872,
        "h": 302
    },
    {
        "id": "404eed4ef9d90803",
        "type": "group",
        "z": "3aa03811830ef29e",
        "name": "Show / hide menu section",
        "style": {
            "label": true
        },
        "nodes": [
            "64806005b1c94f21",
            "a42f4f922e494524",
            "0b8747d2da0482a3",
            "bc563b90430840aa",
            "63c695317a49ea6b",
            "ec21e518e2ade1eb",
            "3ed3a7f6bfbf803a",
            "c5e1f08f07eb647b"
        ],
        "x": 2004,
        "y": 19,
        "w": 822,
        "h": 162
    },
    {
        "id": "c361a153997d2dfd",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d285cb89e06e89bb",
            "0f0ace5816c4fe0a",
            "77ca9cb2599e736f",
            "9c9a39333c2213e6"
        ],
        "x": 924,
        "y": 159,
        "w": 272,
        "h": 242
    },
    {
        "id": "9ad65d8ac40d3b19",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "SYSTEM HEALTH",
        "info": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "59f295a319957fc3",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "LOG",
        "info": "",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "d6c24d84dd4b55eb",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "HW INFORMATION",
        "info": "",
        "x": 740,
        "y": 60,
        "wires": []
    },
    {
        "id": "726819233aa921e5",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "HW CONFIGURATION",
        "info": "",
        "x": 1190,
        "y": 60,
        "wires": []
    },
    {
        "id": "d893e0e05a2f4786",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "ABOUT",
        "info": "",
        "x": 1380,
        "y": 60,
        "wires": []
    },
    {
        "id": "4ad1dd213be1bcfe",
        "type": "ui_ui_control",
        "z": "3aa03811830ef29e",
        "name": "",
        "events": "all",
        "x": 160,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "b6bd3a764d893318",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "SYSTEM HEALTH",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "favorite",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_SYSTEM_HEALTH\"],\"hide\":[\"SYSTEM_LOG\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_HW_CONFIGURATION\",\"SYSTEM_ABOUT\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "dbcf60ce513ff3ae",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "name": "to ui control",
        "links": [
            "ad0975065f9323c6",
            "bc563b90430840aa",
            "5837cbf37ef47ea6",
            "62a0909d9f5a43c0"
        ],
        "x": 55,
        "y": 20,
        "wires": [
            [
                "4ad1dd213be1bcfe"
            ]
        ]
    },
    {
        "id": "7d97d279c32a474a",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "ec94eaa0930738be",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SYSTEM HEALTH",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 130,
        "y": 320,
        "wires": []
    },
    {
        "id": "ad0975065f9323c6",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "dbcf60ce513ff3ae"
        ],
        "x": 245,
        "y": 240,
        "wires": []
    },
    {
        "id": "3a86dae674a0f12f",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 2,
        "width": "5",
        "height": 1,
        "passthru": false,
        "label": "LOG",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "history",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_LOG\"],\"hide\":[\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_HW_CONFIGURATION\",\"SYSTEM_ABOUT\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "d01467831b5376d8",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "HW INFORMATION",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_HW_INFORMATION\"],\"hide\":[\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_HW_CONFIGURATION\",\"SYSTEM_ABOUT\",\"SYSTEM_LOG\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 750,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "c23026d28e7fbe42",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "ABOUT",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "help",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_ABOUT\"],\"hide\":[\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_HW_CONFIGURATION\",\"SYSTEM_LOG\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1400,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "fa276db3a5fd6186",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "group": "70a5fe6af8ed1d29",
        "name": "Line - Setup ",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 110,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "205ffcc404e58973",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "group": "b7f740331bca1b3f",
        "name": "Line - Contributions text",
        "order": 3,
        "width": 4,
        "height": 14,
        "format": "<h3>Author(s):</h3></br>\nEd ter bak (alias)</br>\nMaarten69 (alias)</br></br>\n\n<h3>Thanks and gratitude goes to:</h3>\nEgyras</br>\nCurlyMo</br>\nAUijtdehaag</br>\nlampy25</br>\ntimovd</br>\nE1cid</br>\nJavaboon</br>\nAikon</br>\nMikeyMan</br>\nblb4</br>\nsjampeter</br>\nThe-Source</br>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1450,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "02fe07a3a3f9128b",
        "type": "inject",
        "z": "3aa03811830ef29e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "3a86dae674a0f12f"
            ]
        ]
    },
    {
        "id": "ec0e1c483b661c3b",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "84a756fa9e9244a8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "HW INFORMATION",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 320,
        "wires": []
    },
    {
        "id": "3240ca538c2a5df3",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "group": "82f1040c4d704f04",
        "order": 11,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Select allowed functions",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2490,
        "y": 600,
        "wires": []
    },
    {
        "id": "64806005b1c94f21",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "",
        "group": "fea7672db2f050c9",
        "order": 16,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "Setup",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"tabs\":{\"show\":[\"Power\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 2370,
        "y": 100,
        "wires": [
            [
                "a42f4f922e494524",
                "bc563b90430840aa",
                "41bf12ee0df96cc4"
            ]
        ]
    },
    {
        "id": "a42f4f922e494524",
        "type": "trigger",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "",
        "op1": "",
        "op2": "{\"tab\":\"Power\"}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2530,
        "y": 100,
        "wires": [
            [
                "0b8747d2da0482a3",
                "bc563b90430840aa"
            ]
        ]
    },
    {
        "id": "0b8747d2da0482a3",
        "type": "trigger",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "",
        "op1": "",
        "op2": "{\"tabs\":{\"hide\":[\"Power\"]}}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2730,
        "y": 100,
        "wires": [
            [
                "bc563b90430840aa"
            ]
        ]
    },
    {
        "id": "bc563b90430840aa",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "dbcf60ce513ff3ae"
        ],
        "x": 2375,
        "y": 60,
        "wires": []
    },
    {
        "id": "51c0bb5ee4bb4f0f",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "name": "Line - Setup ",
        "order": 2,
        "width": 12,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2290,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "bffa098ab7b94669",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "name": "Line - ATTENTION top text",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<H1>Manual OFF button press detected on the controller</H1>\nPlease select how the Node Red flow should continue to behave.</br></br>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2340,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "d43ee06ee34140d5",
        "type": "ui_switch",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "",
        "label": "RTC on/off",
        "tooltip": "",
        "group": "82f1040c4d704f04",
        "order": 12,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Allow_function_rtc_onoff",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2450,
        "y": 640,
        "wires": [
            [
                "4120fc9975690028"
            ]
        ]
    },
    {
        "id": "a3a41ed73245a328",
        "type": "ui_switch",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "",
        "label": "Solar",
        "tooltip": "",
        "group": "82f1040c4d704f04",
        "order": 13,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Allow_function_solar",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2430,
        "y": 680,
        "wires": [
            [
                "4120fc9975690028"
            ]
        ]
    },
    {
        "id": "50cd2358bc4fed85",
        "type": "ui_switch",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "",
        "label": "Scheduled tasks",
        "tooltip": "",
        "group": "82f1040c4d704f04",
        "order": 14,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Allow_scheduled_tasks",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2460,
        "y": 720,
        "wires": [
            [
                "4120fc9975690028"
            ]
        ]
    },
    {
        "id": "28fafb00eff46231",
        "type": "ui_dropdown",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "00f6a5c103e9ef2f",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "BLOCK ALL",
                "value": "MQTT_default_1",
                "type": "str"
            },
            {
                "label": "CUSTOM",
                "value": "MQTT_default_2",
                "type": "str"
            },
            {
                "label": "UNRESTRICTED",
                "value": "MQTT_default_3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2280,
        "y": 1100,
        "wires": [
            [
                "376a174e36667b9d"
            ]
        ]
    },
    {
        "id": "eb0c82f6553d8182",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "group": "82f1040c4d704f04",
        "order": 16,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Unrestricted",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MQTT_default_3",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2290,
        "y": 860,
        "wires": [
            [
                "28fafb00eff46231"
            ]
        ]
    },
    {
        "id": "96d1b2a3bba37ab3",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "group": "82f1040c4d704f04",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Custom",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MQTT_default_2",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2280,
        "y": 500,
        "wires": [
            [
                "28fafb00eff46231"
            ]
        ]
    },
    {
        "id": "9439217717d533c8",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "group": "82f1040c4d704f04",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Block all",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MQTT_default_1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2280,
        "y": 360,
        "wires": [
            [
                "28fafb00eff46231"
            ]
        ]
    },
    {
        "id": "e45c612a7cd81bca",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 17,
        "width": 9,
        "height": 2,
        "name": "Unrestricted text",
        "label": "All Node Red functions will stay active. If you have set the RTC on/off function, it will be able to turn on the heatpump automatically. If the solar function is enabled, it will be able to turn on the heatpump automatically.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2300,
        "y": 900,
        "wires": []
    },
    {
        "id": "78ea8dcdc912cc07",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 8,
        "width": 9,
        "height": 2,
        "name": "Custom text",
        "label": "In the \"Custom settings\" section you can specify which action will be allowed to keep functioning when you manually turned off the heatpump.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2450,
        "y": 500,
        "wires": []
    },
    {
        "id": "280ef51b4c314e1a",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 4,
        "width": 9,
        "height": 2,
        "name": "Block all text",
        "label": "This mode will not allow any command to be sent to the heatpump. This means the heatpump will never turn on automatically. This needs to be done manually.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2450,
        "y": 360,
        "wires": []
    },
    {
        "id": "fdd9c7ec95eff575",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "name": "Line - attentiontab1",
        "order": 6,
        "width": 12,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "142d3fc7ce50b860",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "name": "Line - attentiontab2",
        "order": 15,
        "width": 12,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "ab61cc041f990a5e",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "name": "Line - attentiontab3",
        "order": 1,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Default</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "b0db0c075b6cada4",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2280,
        "y": 400,
        "wires": []
    },
    {
        "id": "5c678c17c0272bd7",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 9,
        "width": 3,
        "height": 5,
        "name": "spacer 2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2280,
        "y": 540,
        "wires": []
    },
    {
        "id": "f68241d2cf6a74e8",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 18,
        "width": 3,
        "height": 1,
        "name": "spacer 3",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2280,
        "y": 940,
        "wires": []
    },
    {
        "id": "110b1d924469e409",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Attention setdefault",
        "label": "Current default",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 2310,
        "y": 1060,
        "wires": []
    },
    {
        "id": "338e6b81ea5e1e06",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "order": 5,
        "width": 8,
        "height": 2,
        "name": "attention setdefault text",
        "label": "When a default action is set, this will automatically be executed from that moment onward.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2330,
        "y": 1180,
        "wires": []
    },
    {
        "id": "59ac957754893b83",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "name": "Line - attentiontab4",
        "order": 4,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "63c695317a49ea6b",
        "type": "inject",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tabs\":{\"hide\":[\"Power\"]}}",
        "payloadType": "str",
        "x": 2110,
        "y": 60,
        "wires": [
            [
                "c5e1f08f07eb647b"
            ]
        ]
    },
    {
        "id": "4120fc9975690028",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "off_topic_to_variable",
        "func": "if (msg.topic == 'Allow_function_rtc_onoff'){\n    global.set('MQTT.allow_rtc_onoff',msg.payload,\"file\");\n}\n\nif (msg.topic == 'Allow_scheduled_tasks'){\n    global.set('MQTT.allow_scheduler',msg.payload,\"file\");\n    \n}\nif (msg.topic == 'Allow_function_solar'){\n    global.set('MQTT.allow_solar',msg.payload,\"file\");\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "6a54feb677599729",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "load on boot MQTT",
        "func": "var MQTT  = global.get('MQTT',\"file\"); \n\nlet msg1={};\nlet msg2={};\nlet msg3={};\nlet msg4={};\n\n\n\n\nif (MQTT===undefined){\n    MQTT = {};\n}\n\nif (MQTT.block_active===undefined){\n    MQTT = {};\n    global.set('MQTT.block_active',0,\"file\");\n}\n\nif (MQTT.allow_rtc_onoff===undefined){\n    global.set('MQTT.allow_rtc_onoff',0,\"file\");\n    MQTT.allow_rtc_onoff=0;\n}\n\nif (MQTT.allow_scheduler===undefined){\n    global.set('MQTT.allow_scheduler',0,\"file\"); \n    MQTT.allow_scheduler=0;\n}\n\nif (MQTT.allow_solar===undefined){\n    global.set('MQTT.allow_solar',0,\"file\"); \n    MQTT.allow_solar=0;\n}\nif (MQTT.block_mode===undefined){\n    global.set('MQTT.block_mode',1,\"file\");\n    MQTT.block_mode = 1;\n}\n\n\nmsg1.payload = MQTT.allow_rtc_onoff;\nmsg2.payload = MQTT.allow_scheduler;\nmsg3.payload = MQTT.allow_solar;\n\nif (MQTT.block_mode == 1){msg4.payload = 'MQTT_default_1';}\nif (MQTT.block_mode == 2){msg4.payload = 'MQTT_default_2';}\nif (MQTT.block_mode == 3){msg4.payload = 'MQTT_default_3';}\n\n\nreturn [msg1,msg2,msg3,msg4];\n\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 640,
        "wires": [
            [
                "d43ee06ee34140d5"
            ],
            [
                "50cd2358bc4fed85"
            ],
            [
                "a3a41ed73245a328"
            ],
            [
                "28fafb00eff46231"
            ]
        ]
    },
    {
        "id": "510f802795714d75",
        "type": "inject",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2230,
        "y": 580,
        "wires": [
            [
                "6a54feb677599729"
            ]
        ]
    },
    {
        "id": "ec21e518e2ade1eb",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "shutdown popup (up)",
        "links": [
            "6f8b37b8a4354baf"
        ],
        "x": 2285,
        "y": 140,
        "wires": [
            [
                "64806005b1c94f21"
            ]
        ]
    },
    {
        "id": "3ed3a7f6bfbf803a",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "group": "fea7672db2f050c9",
        "order": 15,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Shutdown response",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2140,
        "y": 100,
        "wires": []
    },
    {
        "id": "c5e1f08f07eb647b",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "function 9",
        "func": "Heatpump_State      = global.get('Heatpump_State',\"file\");\nif (Heatpump_State == 1)\n    {\n        return msg;\n    }\n    \n    \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2260,
        "y": 60,
        "wires": [
            [
                "bc563b90430840aa"
            ]
        ]
    },
    {
        "id": "6be67176d1f660cc",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "MQTT.block_mode",
        "func": "/*\nMQTT.\nblock_mode - 1 - BLOCK ALL\nblock_mode - 2 - CUSTOM\nblock_mode - 3 - UNRESTRICTED\n*/\nvar Block_mode = global.get('MQTT.block_mode',\"file\");\n\nif (msg.payload == \"MQTT_default_1\" && Block_mode != 1){\n    global.set('MQTT.block_mode',1,\"file\");    //off_default_1 - BLOCK ALL\n    global.set('MQTT.block_mode_previous', 1, \"file\");\n}\n\nif (msg.payload == \"MQTT_default_2\" && Block_mode != 2){\n    global.set('MQTT.block_mode',2,\"file\");        //off_default_2 - CUSTOM\n    global.set('MQTT.block_mode_previous', 2, \"file\");\n}\n\nif (msg.payload == \"MQTT_default_3\" && Block_mode != 3) {\n    global.set('MQTT.block_mode',3,\"file\");        //off_default_3 - UNRESTRICTED\n    global.set('MQTT.block_mode_previous', 3, \"file\");\n    global.set('MQTT.block_active', 0, \"file\"); //lift block after selecting action\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1120,
        "wires": [
            [
                "867fcdc764bf28f1",
                "f9048baa0aa4d07d"
            ]
        ]
    },
    {
        "id": "05b0e21936f66dca",
        "type": "change",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 1100,
        "wires": [
            [
                "28fafb00eff46231",
                "319c435620e4980f"
            ]
        ]
    },
    {
        "id": "498c5eb0c718380d",
        "type": "inject",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "clear selection",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2070,
        "y": 1060,
        "wires": [
            [
                "05b0e21936f66dca"
            ]
        ]
    },
    {
        "id": "e5ee81fbd045b5ef",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "Heatpump_State input",
        "links": [
            "a0d8b4706f8d61b1",
            "48998f8d0b0d052a"
        ],
        "x": 2005,
        "y": 1400,
        "wires": [
            [
                "258316e7112c15b4",
                "44cd6ca0f672e121"
            ]
        ]
    },
    {
        "id": "258316e7112c15b4",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "Shutdown detection",
        "func": "if (msg.payload == 1)       { return null; } //exit if power state is on\n\nvar Heatpump_State = global.get(\"Heatpump_State\", \"file\");\nvar VirtualState = global.get('VirtualState');\n\n\nif (VirtualState == 0) { return null; } // Heatpump_State will be 0 soon\n\nvar MQTT_Source = global.get('MQTT_Source'); //Memory Only\nif (MQTT_Source == \"GUI\") { return null }; //continue only if origin mqtt broker\n\n\n\nlet msg99={};   //  pin 2 - info to Log\nlet msg1={};    //  pin 3 - trigger for shutdown\n\nmsg1.source = \"shutdown_detection\";\n\n\n\n\n        msg99.topic = 'POWER';\n        if (msg.source == \"mqtt\"){msg99.payload = 'Manual OFF detected. (Remote Controller)';}\n        var option = global.get('MQTT.block_mode',\"file\");\n\n        if (option === undefined) {\n            msg99.payload = msg99.payload + ' - No default action set yet. No restrictions applied';\n            global.set('MQTT.block_active',0, \"file\");\n            global.set('MQTT.block_mode',3, \"file\");\n            msg1.payload = 0;                           // MQTT-switch payload and pop-up\n            return [msg99,msg1];\n        }        \n        \n        if (option == 1)  {\n            global.set('MQTT.block_active',1, \"file\");\n            msg99.payload = msg99.payload + ' - Default action used: Block all';\n            msg1.payload = 1;                           // MQTT-switch payload and pop-up\n            return [msg99,msg1];               // <<<<< Send MQTT out\n        }\n\n        if (option == 2)  {\n            global.set('MQTT.block_active',1, \"file\");\n            msg99.payload = msg99.payload + ' - Default action used: Block custom';\n            msg1.payload = 1;                           // MQTT-switch payload and pop-up\n            return [msg99,msg1];               // <<<<< Send MQTT out\n        }\n\n        if (option == 3)   {\n            global.set('MQTT.block_active',0, \"file\");\n            msg99.payload = msg99.payload + ' - Default action used: Unrestricted';            \n            msg1.payload = 0;                           // MQTT-switch payload and pop-up\n            return [msg99,msg1];\n        }\n\n\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 1400,
        "wires": [
            [
                "71bc363e9bca5fa6"
            ],
            [
                "6f8b37b8a4354baf"
            ]
        ],
        "outputLabels": [
            "info to Log",
            "trigger for shutdown popup (start)"
        ]
    },
    {
        "id": "6f8b37b8a4354baf",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "trigger for shutdown popup (start)",
        "mode": "link",
        "links": [
            "5a8c6de632f4dbc8",
            "ec21e518e2ade1eb",
            "172fe3f8a616d7b8"
        ],
        "x": 2795,
        "y": 1400,
        "wires": []
    },
    {
        "id": "cc96d0a80f6bdef4",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "trigger for shutdown popup (end)",
        "mode": "link",
        "links": [
            "5a8c6de632f4dbc8",
            "172fe3f8a616d7b8"
        ],
        "x": 2795,
        "y": 1500,
        "wires": []
    },
    {
        "id": "71bc363e9bca5fa6",
        "type": "rbe",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2470,
        "y": 1620,
        "wires": [
            [
                "9e1b71b301e9e79d"
            ]
        ]
    },
    {
        "id": "9e1b71b301e9e79d",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "link out to log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2795,
        "y": 1620,
        "wires": []
    },
    {
        "id": "44cd6ca0f672e121",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "Restart detection",
        "func": "// This function also show manual power on/off to log when switch \"Extend debugging\" is active.\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Heatpump_State';\n\nvar Heatpump_State      = global.get(\"Heatpump_State\",\"file\");\nvar Debugging           = global.get('Debugging', \"file\");\nif (Debugging === undefined) { Debugging = 0; } // used to show more detection to log\n\nvar popup_state         = flow.get('stop_popup');\nif (popup_state === undefined)  {\n    popup_state = 0;\n}\n\nlet msg99={};   //  pin 1 - info to Log\nlet msg1={};    //  pin 2 - trigger popup\nmsg1.source = \"shutdown_detection\";\nlet msg2={};    //  pin 3 - \n\nvar VirtualState = global.get('VirtualState');\n\nvar MQTT = global.get('MQTT',\"file\");\n\n\nif (msg.payload == 1) { \n        msg99.topic = 'POWER';\n        msg99.payload = 'ON detected';\n        if (VirtualState == 0) { msg99.payload = msg99.payload + ' [Remote Controller]'; }\n        if (VirtualState == 1) { msg99.payload = msg99.payload + ' [Flow]'; }\n        msg1.payload = 0;                           // MQTT block value\n\n\n        if (MQTT.block_active == 1  && popup_state == 0) {\n            //get block_mode\n            var value = MQTT.block_mode;\n            var Blockmode = \"undefined\";\n            if (value === 1) { Blockmode = \"BLOCK ALL\"; }\n            if (value === 2) { Blockmode = \"CUSTOM\"; }\n            if (value === 3) { Blockmode = \"UNRESTRICTED\"; }\n            msg2.topic = \"Power on heatpump detected\";\n            msg2.payload = \"</br>   MQTT commands are being blocked (\" + Blockmode + \") </br></br> Resume normal operation? </br> </br> _____________________________________________________ \"\n            return [msg99,null,msg2]\n        }\n\n        flow.set('stop_popup',0);\n        if (Debugging == 1 || VirtualState == 0) { return [msg99, msg1, null]; } else { return [null, msg1, null]; } //only show in log when \"Extend logging\"-switch is enabled or remote controller.\n    }\n    \n    else {\n            msg99.topic = 'POWER';\n            msg99.payload = 'OFF detected';\n    if (VirtualState == 0) { msg99.payload = msg99.payload + ' [Flow]'; }\n            if (VirtualState == 1) { msg99.payload = msg99.payload + ' [Remote Controller]'; }\n\n    if (Debugging == 1 || VirtualState == 1) { return [msg99, null, null]; } else { return [null, null, null]; } //only show in log when \"Extend logging\"-switch is enabled or remote controller.\n}\n\n\n\n\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 1500,
        "wires": [
            [
                "71bc363e9bca5fa6"
            ],
            [
                "cc96d0a80f6bdef4",
                "09edf2907086baf2"
            ],
            [
                "d11ec0cafa6ed09f"
            ]
        ],
        "outputLabels": [
            "info to Log",
            "",
            ""
        ]
    },
    {
        "id": "d11ec0cafa6ed09f",
        "type": "ui_toast",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes, lift block",
        "cancel": "No, continue block",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2500,
        "y": 1540,
        "wires": [
            [
                "ab0c73c86987caf3"
            ]
        ]
    },
    {
        "id": "c38da5f9e3ce0d13",
        "type": "inject",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Power on heatpump detected",
        "payload": "</br>   MQTT commands are being blocked. </br></br> Resume normal operation? </br> </br> _____________________________________________________ ",
        "payloadType": "str",
        "x": 2270,
        "y": 1560,
        "wires": [
            [
                "d11ec0cafa6ed09f"
            ]
        ]
    },
    {
        "id": "ab0c73c86987caf3",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "lift block",
        "func": "//******************************************************************************\nif (msg.payload == \"Yes, lift block\") {\n    global.set('MQTT.block_active',0, \"file\");\n    flow.set('stop_popup',0);\n    \n    let msg1={};\n    let msg2={};\n    \n    msg1.topic = 'SYSTEM';\n    msg1.payload = \"MQTT-Commands to HP will be sent normally.\";\n\n    msg2.payload = 0;\n    msg2.source = \"shutdown_detection\";\n    \n    return [msg1,msg2];\n\n}\n\n//******************************************************************************\nif (msg.payload == \"No, continue block\")    {\n    flow.set('stop_popup',1);\n    \n    return null;\n}\n\n//******************************************************************************\nelse {\n    return null;\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1540,
        "wires": [
            [
                "71bc363e9bca5fa6"
            ],
            [
                "cc96d0a80f6bdef4"
            ]
        ]
    },
    {
        "id": "09edf2907086baf2",
        "type": "change",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":{\"hide\":[\"hidden_tab1\"]}}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2670,
        "y": 1460,
        "wires": [
            [
                "5837cbf37ef47ea6"
            ]
        ]
    },
    {
        "id": "5837cbf37ef47ea6",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "dbcf60ce513ff3ae"
        ],
        "x": 2795,
        "y": 1460,
        "wires": []
    },
    {
        "id": "9a3e8e959a51d403",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "To be added on later",
        "info": "",
        "x": 450,
        "y": 460,
        "wires": []
    },
    {
        "id": "776cbfd355ed920f",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "->Notify!",
        "mode": "link",
        "links": [
            "c764c19340b7b720"
        ],
        "x": 2835,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e335ee2f6e1f9957",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "Notification and log",
        "info": "",
        "x": 2730,
        "y": 960,
        "wires": []
    },
    {
        "id": "f4fa02505ab621d5",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 10,
        "width": 2,
        "height": 4,
        "name": "spacer 5",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2380,
        "y": 580,
        "wires": []
    },
    {
        "id": "d285cb89e06e89bb",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "c361a153997d2dfd",
        "group": "4a119e18236415e9",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "HW CONFIGARATION",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 1060,
        "y": 320,
        "wires": []
    },
    {
        "id": "0f0ace5816c4fe0a",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "c361a153997d2dfd",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "HW CONFIGURATION",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "settings",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_HW_CONFIGURATION\"],\"hide\":[\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_ABOUT\",\"SYSTEM_LOG\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1060,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "77ca9cb2599e736f",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "c361a153997d2dfd",
        "group": "4a119e18236415e9",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "Temperature sensors",
        "label": "<font size=5>Temperature sensors",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 360,
        "wires": []
    },
    {
        "id": "9c9a39333c2213e6",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "g": "c361a153997d2dfd",
        "name": "Test only",
        "info": "",
        "x": 1030,
        "y": 260,
        "wires": []
    },
    {
        "id": "cdbfdf626a17263f",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "group": "b7f740331bca1b3f",
        "name": "Line - Changelog",
        "order": 2,
        "width": 17,
        "height": 14,
        "format": "-------------------------------------------------</br>\n[2023-01-17] v21.47 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Fix] Fix SoftStart logging showed F_SS_old_correction with trailing zeros xx.0000000000003</br>\n[Fix] Reduced SoftStart logging when SP_Final < HEAT_SP_lower_limit.</br>\n[Fix] Label \"Max MQTT-commands per day\" Wasn't updating correctly, now fixed.</br>\n[New] Improvements made for extra (more) debugging info. (trailing *** in log) and highlights.</br>\n[Other] Code optimalisation in System Check, SS corr rounding etc.</br>\n[Fix] Fixed a small difference between function Compare new SP and function SoftStart.</br>\n[Optimalisation] Cleaned up code, removed unnecessary inject nodes (1/min).</br>\n[New] When defrosting show status on Home (@Operation mode, actual).</br>\n[Change] Increasing the max mqqt-messages/day now in bigger steps (10/2000).</br>\n\n\n\n-------------------------------------------------</br>\n[2023-01-15] v21.46 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[New] Function RTC automation, give name to OM mode when changing Operation mode.</br>\n[Fix] RTC Turn power on/off & Change Operation mode was only executed after a room temp change.</br>\n[Fix] SoftStart Quietmode was setting wrong Quietmode even when switch was disabled.</br>\n[Fix] Status switch \"Extend logging\" was configured incorrectly.</br>\n[Change] Changed the way label of \"Block MQTT commands\" updating.</br>\n[Change] Better solution to update MQTT state and label by listening to command# topic.</br>\n-------------------------------------------------</br>\n[2023-01-13] v21.45 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Other] Removed some typos from changelog.</br>\n[New] Added source (origin) for most MQTT-commands in log</br>\n[New] Highlight mqqt-commands in log.</br>\n[Fix] Fixed Bock mode \"custom\" changing to \"block all\" after 1 min.</br>\n[New] Added actual block mode to label switch \"Block MQTT commands\".</br>\n[Fix] Fixed some typos.</br>\n[Other] Cleaned up code Function WAR2DIRECT (3rd pinout code obsolete).</br>\n\n-------------------------------------------------</br>\n[2023-01-12] v21.44 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Fix] Shutdown detection and response fixed.</br>\n[Fix] RTC turn power off/on working again (broken in v21.43)</br>\n[New] SoftStart timer: Not resetting at flow restart (when compressor was running).</br>\n[Add] Added SoftStart timers to System Check.</br>\n[Fix] Remember state of switch \"Extend debugging\".</br>\n[Fix] Remember state of switch \"Block MQTT commands\" at boot.</br>\n[Fix] Restore previous block_mode when disabling MQTT-Block.</br>\n[Fix] Fixed status button MQTT block on \"Manual OFF button press detected\" page.</br>\n[New] Added Home button to System navigation bar.</br>\n-------------------------------------------------</br>\n[2023-01-09] v21.43 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Changed] mqtt.block_mode defaulting to 1 after trigger mqtt.block_active.</br>\n[Changed] when mqtt.block_mode IS defaulting to 1, push this state to GUI.</br>\n-------------------------------------------------</br>\n[2023-01-09] v21.42 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Fix] Shutdown response now working (I think)</br>\n[NEW] added a button on the shutdown detection section</br>\n-------------------------------------------------</br>\n[2023-01-08] v21.41 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Fix] small fix for shutdown response improvement.</br>\n[Changed] Improved the System Check layout.</br>\n[Add] Label \"Max MQTT-commands per day\" now shows actual messages from current day.</br>\n-------------------------------------------------</br>\n[2023-01-08] v21.40 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Fix] Shutdown response improvement.</br>\n</br>\n-------------------------------------------------</br>\n[2023-01-07] v21.39 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Fix] Shutdown response and popups now working again.</br>\n</br>\n\n-------------------------------------------------</br>\n[2023-01-07] v21.38 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Fix] Crash/Freeze after turning on/off toggle  .</br>\n</br>\n\n-------------------------------------------------</br>\n[2023-01-06] v21.37 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[-] continued with var renaming.</br>\n[New] Linking RTC roomtemperature setpoint to nightreduction roomsetpoint</br>\n</br>\n-------------------------------------------------</br>\n[2023-01-05] v21.36 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Fix] fixed a small bug after renaming.</br>\n[Changed] moved check of mqtt stuff of of system check, into load on boot MQTT.</br>\n[Changed] Removed some of the automated node.warn() notifications</br>\n</br>\n\n-------------------------------------------------</br>\n[2023-01-04] v21.35 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[FIX] SoftStart was using Night reduction water temp correction when switch was'nt enabled.</br>\n[Other] started with new naming convention and code optimization.</br>\n(old variables will be removed, please check all function switches)</br>\n</br>\n\n-------------------------------------------------</br>\n[2023-01-04] v21.34 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Fix] Added to System Check: repair wrong settings MQTT caused by older versions.</br>\n[Add] Added all night recduction variables to the System Check (debugging purposes).</br>\n[Add] Added more SoftStart logging to main log when switch \"extend logging is enabled\".</br>\n</br>\n\n-------------------------------------------------</br>\n[2022-12-25] v21.32 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[FIX] Typo in FILTER functions (2x) (Thanks sjampeter)</br>\n</br>\n\n-------------------------------------------------</br>\n[2022-12-25] v21.32 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[FIX] mqtt signals being blocked too often. Power on/off, Operating Mode, Quiet Mode etc.</br>\n</br>\n\n-------------------------------------------------</br>\n[2022-12-24] v21.31 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[Changed] Rework of block functionality. Rules around custom selection should be obayed now.</br>\n[Changed] RTC function, help and layout. Select the action you want to allow, on/off or heatmode changing only.</br>\n[Changed] RTC function, Booster renamed to incremental setpoints\n[Changed] Scheduler function. Behaviour when other functions are activated.</br>\n[Changed] SoftStart. Now a toggle is present if you want the function to restart every time after a defrost.</br>\n[FIX] WAR function. TOP29 and TOP30 were flipped during import/export. </br>\n[FIX] Heatpump information updated propperly after firmware change. (Thank you xtr3me)</br>\n</br>\n\n-------------------------------------------------</br>\n[2022-12-15] v21.30 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[FIX] RTC on/off function. When no OperatingMode is stored, it would default back to Mode 0 (heat only)</br>\n</br>\n\n-------------------------------------------------</br>\n[2022-12-13] v21.29 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[NEW] Bypass Softstart Quietmode during defrost.</br>\n[Obsolete] RTC Booster fixed now. Use the switch on RTC dashboard to enable (default off).</br>\n[Obsolete] Removed layout from dashboard Hardware configuration (was for testing only)</br>\n[FIX] Nightreduction room temperature / Current status --> Manual on/off now working again.</br>\n[FIX] Removed log message (@startup) \"Function - SoftStart Quietmode: OFF (restored to level 0)\". (the restored part)</br>\n[FIX] Unneeded pumpspeed MQTT command (When enabled at a restart).</br>\n[Moved] Moved Function reduce pump speed to Settings page. Layout now improved.</br>\n[Changed] Replaced defrost toggle with button. Color status of button Red --> defrosting.</br>\n[FIX] RTC Room actual temperature didn't update frequently.</br>\n[Add] Added to System Check: RTC Booster, Function pump speed, MQTT-block settings and manual on/off settings.</br>\n</br>\n\n-------------------------------------------------</br>\n[2022-12-12] v21.28 beta (experimental). Changes:</br>\n-------------------------------------------------</br>\n[ENHANCEMENT] Added toggle for NightReduction RoomSP in Scheduler screen.</br>\n</br>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1440,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "319c435620e4980f",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "reset default_selection",
        "func": "if (msg.payload == \"\")   {\n    global.set('MQTT.block_mode',undefined,\"file\");\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "867fcdc764bf28f1",
        "type": "rbe",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2690,
        "y": 1060,
        "wires": [
            [
                "776cbfd355ed920f",
                "e8e1e41f1c85ca7a",
                "1f82dc785dc48abf"
            ]
        ]
    },
    {
        "id": "43bf696dbf416cb0",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "group": "00f6a5c103e9ef2f",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{msg.label}}",
        "tooltip": "",
        "color": "{{msg.color}}",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "999",
        "payloadType": "num",
        "topic": "button_press",
        "topicType": "str",
        "x": 2490,
        "y": 1260,
        "wires": [
            [
                "a3eab03124fb697b"
            ]
        ]
    },
    {
        "id": "7257e77181b2e1a4",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "name": "Line - attentiontab5",
        "order": 6,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>MQTT block status</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "a53f9fb190ca01ea",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "ATTENTION",
        "info": "",
        "x": 2070,
        "y": 260,
        "wires": []
    },
    {
        "id": "ac8ee41d4f78120e",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "Default --------------------------------------------------------------------------------------",
        "info": "",
        "x": 2250,
        "y": 980,
        "wires": []
    },
    {
        "id": "cb7b5a6a14926482",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "order": 9,
        "width": 5,
        "height": 1,
        "name": "MQTT commands are being",
        "label": "",
        "format": "{{msg.result}}",
        "layout": "row-left",
        "className": "",
        "x": 2280,
        "y": 1260,
        "wires": []
    },
    {
        "id": "6c31c89912e87024",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "name": "Line - attentiontab6",
        "order": 10,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "5945f577b64bd499",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "link in to block_button",
        "links": [
            "c3c58f9072c16f58"
        ],
        "x": 2525,
        "y": 1220,
        "wires": [
            [
                "f9048baa0aa4d07d"
            ]
        ]
    },
    {
        "id": "00b957e057fd4843",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "link out to block_toggle",
        "mode": "link",
        "links": [
            "172fe3f8a616d7b8"
        ],
        "x": 2845,
        "y": 1260,
        "wires": []
    },
    {
        "id": "f9048baa0aa4d07d",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "function 11",
        "func": "var block_active = global.get('MQTT.block_active',\"file\");\n\nif (block_active == 0) { msg.payload = 0; }\nif (block_active == 1) { msg.payload = 1; }\n\nif (msg.payload == 1){\n    msg.label = \"block\";\n    msg.color = \"white\";\n    msg.bgcolor = \"red\";\n    msg.result = \"MQTT commands are blocked\";\n}\nif (msg.payload == 0){\n    msg.label = \"allow\";\n    msg.color = \"white\";\n    msg.bgcolor = \"green\";\n    msg.result = \"MQTT commands are allowed\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 1220,
        "wires": [
            [
                "43bf696dbf416cb0",
                "cb7b5a6a14926482"
            ]
        ],
        "outputLabels": [
            "to button"
        ]
    },
    {
        "id": "a3eab03124fb697b",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "function 12",
        "func": "var block_active = global.get('MQTT.block_active',\"file\");\n\n\nif (msg.topic == \"button_press\"){\n    if (block_active == 1){msg.payload = 0;}\n    if (block_active == 0){msg.payload = 1;}\n}\n\n\nif (msg.payload == 1){\n    msg.label = \"block\";\n    msg.color = \"white\";\n    msg.bgcolor = \"red\";\n    msg.result = \"MQTT commands are blocked\";\n}\nif (msg.payload == 0){\n    msg.label = \"allow\";\n    msg.color = \"white\";\n    msg.bgcolor = \"green\";\n    msg.result = \"MQTT commands are allowed\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 1260,
        "wires": [
            [
                "43bf696dbf416cb0",
                "cb7b5a6a14926482",
                "00b957e057fd4843"
            ]
        ],
        "outputLabels": [
            "to button"
        ]
    },
    {
        "id": "56f84076f445f170",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "link in to block all button",
        "links": [
            "bb5e36b2c205a984"
        ],
        "x": 2125,
        "y": 360,
        "wires": [
            [
                "9439217717d533c8"
            ]
        ]
    },
    {
        "id": "41bf12ee0df96cc4",
        "type": "debug",
        "z": "3aa03811830ef29e",
        "name": "debug 101",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2970,
        "y": 60,
        "wires": []
    },
    {
        "id": "376a174e36667b9d",
        "type": "rbe",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2490,
        "y": 1120,
        "wires": [
            [
                "6be67176d1f660cc"
            ]
        ]
    },
    {
        "id": "e8e1e41f1c85ca7a",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "to update block_mode MQTT_block button",
        "mode": "link",
        "links": [
            "d2415b149ef2f275"
        ],
        "x": 2835,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1f82dc785dc48abf",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "log",
        "func": "/*\nMQTT.\nblock_mode - 1 - BLOCK ALL\nblock_mode - 2 - CUSTOM\nblock_mode - 3 - UNRESTRICTED\n*/\n\nvar Block_mode = global.get('MQTT.block_mode', \"file\") || \"not set\";\nif (Block_mode == 1) Block_mode = \"BLOCK ALL\";\nif (Block_mode == 2) Block_mode = \"CUSTOM\";\nif (Block_mode == 3) Block_mode = \"UNRESTRICTED\";\n\nvar Block_active = global.get('MQTT.block_active', \"file\");\nif (Block_active == 0) Block_active = \"MQTT block inactive\";\nif (Block_active == 1) Block_active = \"<b>MQTT block active</b>\";\n\nmsg.topic = \"SYSTEM\";\nmsg.payload = Block_active + \", default block mode: \" + Block_mode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2690,
        "y": 1000,
        "wires": [
            [
                "ce0115cd2e7f2ac7"
            ]
        ]
    },
    {
        "id": "ce0115cd2e7f2ac7",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "to input LOGS",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2835,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d5fea67661261002",
        "type": "tab",
        "label": "WP Debug",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ce1342324a97c52",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "HP data logging when compr. is ON (Tinlet, Toutlet, Ttarget, Freq)",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "57c9f02c576ad71f",
            "c8b48ccb978f3380",
            "b903f8bbf513d6a1",
            "a1954fc33dd6ddf9",
            "ff02e751b096770f",
            "9080f9e84fd9e2a5",
            "082586cfc8693748",
            "1a8bf49ae0badf5a",
            "2a1004c42a0b7dc1",
            "109e99262b1d9b31",
            "3078dedaa0fa9fa6",
            "df9dc017de54372f",
            "98332e44d65ec671",
            "32c013973096ab65"
        ],
        "x": 74,
        "y": 219,
        "w": 1112,
        "h": 202
    },
    {
        "id": "1f4cf47dbe4285dc",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "MQTT Counter + Overflow protection",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "112b797f401c4afc",
            "459dcc6cc8cff9da",
            "c94e5636d62a2bd9",
            "de77807ce3dc66fc",
            "58c919290387cba4",
            "fdd35059e43f16d0",
            "c4dd85e3e2a5dff4"
        ],
        "x": 574,
        "y": 439,
        "w": 612,
        "h": 162
    },
    {
        "id": "aed05096f97f9ba6",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Function System Check",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8e9e69d85c6ec035",
            "365e9747b6e58903",
            "ae21a03ad6f43d1c",
            "614b9c64adf19f94",
            "d0ac8299461b7c1f"
        ],
        "x": 74,
        "y": 439,
        "w": 492,
        "h": 162
    },
    {
        "id": "5166b23daf2b561d",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Defrost counter",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f9d6e659dbe05a19",
            "991502670f43d03e",
            "116f4e573c2d55e8",
            "a9fa37eb6a1a4fc2",
            "842e7cc6853ea3c8",
            "afa5bf9f7c3531bc"
        ],
        "x": 74,
        "y": 619,
        "w": 552,
        "h": 162
    },
    {
        "id": "9a941ae145859932",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Averige runtime",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ef07058c04267dd5",
            "2db0d9b3a1bc868c",
            "4df2960daa64b31d",
            "6fe317de99320aa3",
            "0af4b3b3445b3ce2",
            "6c6d719592dac8d5"
        ],
        "x": 74,
        "y": 799,
        "w": 1112,
        "h": 142
    },
    {
        "id": "ebe2890eadc33dcd",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Error Counter",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5f9d089ca2c8df2f",
            "0e9c0e551061fdbf",
            "b8280b17e99b11d1"
        ],
        "x": 634,
        "y": 619,
        "w": 552,
        "h": 162
    },
    {
        "id": "1a3f956a12898279",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Check for custom sensors connected to Heishamon:  kWh meter(s) & 1-wire sensors",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "88b24c510e42cb4d",
            "62b5261340dce177",
            "e13d89b6bf39c3a3",
            "320f3cb11444550f",
            "10a931a475e12a39",
            "f91a8e87996f7a36",
            "014bed028830052a",
            "eb94834e04b534d3",
            "b111c18057bcbd78",
            "c34196f747bbf89e",
            "f22f1960e6c20b9e",
            "50965b08724bdd8c",
            "f2d7ea937abca010"
        ],
        "x": 74,
        "y": 1299,
        "w": 1112,
        "h": 262
    },
    {
        "id": "cd5937af83198f9a",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Test Dynamic subsribe to Heishamon 1-wire topics",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "05e22a7bbcfb1aa1",
            "825f53ebdfb5fd43",
            "8cab4c14513ce5fa",
            "16808d5b28081690",
            "798b2017d73b9795",
            "fd1a14b5c123f7aa",
            "9624117d96bd6dbb",
            "f8666050ee0e6830"
        ],
        "x": 74,
        "y": 1579,
        "w": 1112,
        "h": 262
    },
    {
        "id": "bab76cb8c9631c59",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Defrost button",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "399e883e6deac7a3",
            "d6ef6434856148df",
            "037c668f34165450",
            "1b91aa81aad7c7b5",
            "0b00b03e3c4e9930",
            "d3a2ef1813673fb5",
            "1ebb1a2803291fd7",
            "fd2777fee0c73d23"
        ],
        "x": 74,
        "y": 1859,
        "w": 1112,
        "h": 82
    },
    {
        "id": "0531f7d830ad5e1b",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Dashboard System check",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a8acdcc0dc537830",
            "fa1495af192e1c1e",
            "8a882609f0e2d88a",
            "41018676b51ac24a",
            "62d33aea9b2babaa",
            "751fec2ce6f8faac",
            "c25c9914b837785c",
            "dadcc09786666d40",
            "a13a59feb119d9ce",
            "5ce82b31e85cfe3a",
            "559f3875ebe7df72",
            "172fe3f8a616d7b8",
            "6e97d05d1a6275c7",
            "be1b927461546a7f",
            "bd61942b914a15ce",
            "43783f0ff1a97ef1",
            "35b2bc2a89cc2d84",
            "c3c58f9072c16f58",
            "4606d685d39ac772",
            "bb5e36b2c205a984",
            "d2415b149ef2f275",
            "2cc4d65eb692223b",
            "70355972167285f4",
            "4c70cc2db4654795",
            "bb8548eb6893bd56",
            "678c2fa5db148f1e",
            "c40e5d6c866f68df"
        ],
        "x": 74,
        "y": 959,
        "w": 1112,
        "h": 302
    },
    {
        "id": "aca3036a5a8e2f25",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "WP Debug. A tab showing extra information. Show temperatures, system variables used by flow, Check for conflicts",
        "info": "",
        "x": 480,
        "y": 60,
        "wires": []
    },
    {
        "id": "57c9f02c576ad71f",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Log all WP info",
        "func": "var Freq = msg.payload;\n//Freq = parseFloat(Freq);\n\n//save hightest freq ever:\nif (Freq > 0) { \n    var HighestFreq = global.get('HighestFreq', \"file\"); // get last highscore ;)\n    if (HighestFreq === undefined) { HighestFreq = 0; }\n    if (Freq > HighestFreq) { global.set('HighestFreq', Freq, \"file\"); } //save\n}\n\nif (global.get('Debugging', \"file\") == 0) {return null; } //exit if debugging switch is off\n\nlet msg1 = {};\nmsg.topic = \"\";\nif (Freq > 0) \n    { \n    //var Freq = msg.payload;\n    var Ta = global.get('Main_Outlet_Temp');                   //  PV (Ta/outlet) Temperature of water.\n    var Tr = global.get('Main_Inlet_Temp');                    //  PV (Tr/inlet) Temperature of water\n    var SP = global.get('Main_Target_Temp'); \n    var QM = global.get('Quiet_Mode_Level', \"file\");            // current Quietmode level\n    var PM = global.get('PowerfulMode', \"file\");                // current PowerfulMode\n    var Watt = global.get('Heat_Energy_Consumption');           // power in Watt\n    var Fan1_Speed = global.get('Fan1_Speed');                  // Fan 1 rpm\n    var Fan2_Speed = global.get('Fan2_Speed');                  // Fan 2 rpm\n    var COP_HEAT = global.get('COP_HEAT');                      // COP Heat\n    var COP_DHW = global.get('COP_DHW');                        // COP DHW\n    var OperatingModes = [\"Heat only\", \"Cool only\", \"Auto(Heat)\", \"DHW only\", \"Heat+DHW\", \"Cool+DHW\", \"Auto(Heat)+DHW\", \"Auto(Cool)\", \"Auto(Cool)+DHW\"];\n    var OM = global.get('Operating_Mode_State', \"file\");\n    OM = OperatingModes[OM];\n\n    \n    msg.payload = \"Target=\" + SP + \"°C\" + \", Inlet=\" + Tr + \"°C\" + \",  Outlet=\" + Ta + \"°C\" + \", Freq=\" + Freq + \" Hz\" + \", \" + Watt + \" W, OM=\" + OM;\n    if (PM == 1) msg.payload += \", Powerful mode=\" + PM;\n    msg.payload += \", fan1: \" + Fan1_Speed + \" rpm\";\n    if (Fan2_Speed > 0) \n        {\n            msg.payload += \", fan2: \" + Fan2_Speed + \" rpm\";\n        }\n    if (QM > 0) \n        {\n            msg.payload += \", QM=\" + QM;\n        }\n    if (COP_HEAT > 0) {\n        msg.payload += \", COP=\" + COP_HEAT;\n    }\n    if (COP_DHW > 0) {\n        msg.payload += \", COP=\" + COP_DHW;\n    }\n    } \n\nelse \n    {\n    return null;\n    } \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 320,
        "wires": [
            [
                "c8b48ccb978f3380"
            ]
        ]
    },
    {
        "id": "c8b48ccb978f3380",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "b903f8bbf513d6a1"
            ]
        ]
    },
    {
        "id": "b903f8bbf513d6a1",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Send to log",
        "mode": "link",
        "links": [
            "fa1495af192e1c1e"
        ],
        "x": 1145,
        "y": 320,
        "wires": []
    },
    {
        "id": "a1954fc33dd6ddf9",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "at boot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "source",
                "v": "boot",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "#:(file)::Debugging",
        "payloadType": "global",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "ff02e751b096770f"
            ]
        ]
    },
    {
        "id": "ff02e751b096770f",
        "type": "ui_switch",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Extend logging",
        "label": "Extend logging",
        "tooltip": "Show more data in logs",
        "group": "ec94eaa0930738be",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 380,
        "y": 260,
        "wires": [
            [
                "9080f9e84fd9e2a5"
            ]
        ]
    },
    {
        "id": "9080f9e84fd9e2a5",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Debuginfo",
        "func": "\nif (msg.payload == 1) //Extend logging on\n    {\n    global.set('Debugging', 1, \"file\");\n    if (msg.source == \"boot\") { return null; }\n    } \n    \nif (msg.payload == 0 || msg.payload === undefined) //Extend logging on or undefined\n        { \n            global.set('Debugging', 0, \"file\");\n            return null; \n        }\n        \nreturn null; //send nothing",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 260,
        "wires": [
            [
                "57c9f02c576ad71f"
            ]
        ]
    },
    {
        "id": "8e9e69d85c6ec035",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "System check",
        "func": "flow.set('debuglog', []); // clear log\n\nmsg.topic = \"\";\nmsg.payload = \"<b>============================================================</b>\";\nnode.send(msg);\n\n\n// Warn user is mqtt-messages are blocked:\nvar MQTT = global.get('MQTT', \"file\");\nif (MQTT.block_active == 1) {\n    msg.payload = \"*SYSTEM: MQTT-Commands are blocked, this flow will not function correctly.\";\n    node.send(msg);\n    }\n\n\n// check WP status first\nvar Heatpump_State = global.get('Heatpump_State', \"file\");\nif (Heatpump_State == 0 || Heatpump_State === undefined) { Heatpump_State = \"off\"; } else { Heatpump_State = \"on\"; }\nvar ThreeWay_Valve_State = global.get('ThreeWay_Valve_State'); // 3-way valve mode (0=Room, 1=DHW)\nif (ThreeWay_Valve_State === undefined) { ThreeWay_Valve_State = \"NA\"; }\nif (ThreeWay_Valve_State == 0) { ThreeWay_Valve_State = \"Room\"; }\nif (ThreeWay_Valve_State == 1) { ThreeWay_Valve_State = \"DHW\"; }\nvar ss_Hz = global.get('compressor_frequency');         // Get the global variable for current compressor frequency\n\nvar OperatingModes = [\"Heat only\", \"Cool only\", \"Auto(Heat)\", \"DHW only\", \"Heat+DHW\", \"Cool+DHW\", \"Auto(Heat)+DHW\", \"Auto(Cool)\", \"Auto(Cool)+DHW\"];\nvar OM = global.get('Operating_Mode_State', \"file\");\nvar message = \"HP power is \" + Heatpump_State + \", operation mode \" + OperatingModes[OM] + \", threeway valve in position \" + ThreeWay_Valve_State;\nmsg.payload = message;\nnode.send(msg);\n\n\n\n\n// temperatures etc:\nvar Freq = ss_Hz;\nvar Ta = global.get('Main_Outlet_Temp');                   //  PV (Ta/outlet) Temperature of water.\nvar Tr = global.get('Main_Inlet_Temp');                    //  PV (Tr/inlet) Temperature of water\nvar SP = global.get('Main_Target_Temp');\nvar QM = global.get('Quiet_Mode_Level', \"file\");            // current Quietmode level\nvar PM = global.get('PowerfulMode', \"file\");                // current PowerfulMode\nvar Watt = global.get('Heat_Energy_Consumption');           // power in Watt (Todo, use custom meter)\nmsg.payload = \"Target=\" + SP + \"°C\" + \", Inlet=\" + Tr + \"°C\" + \",  Outlet=\" + Ta + \"°C\" + \", Freq=\" + Freq + \" Hz\" + \", Quiet mode=\" + QM + \", \" + Watt + \" Watt\";\nif (PM == 1) msg.payload = msg.payload + \", Powerful mode=\" + PM;\nnode.send(msg);\n\n// check Persistent storage\nflow.set(\"persistency_test\", \"test\", \"file\");\nvar stored_value = flow.get(\"persistency_test\", \"file\")\nif (stored_value !== undefined) { \n    msg.payload = \"Persistent storage is configured correctly\"; msg.topic = \"SYSTEM:\";} else {\n    msg.payload = \"Persistent storage is not configured correctly. This flow will not function correctly until you do!\"; msg.topic = \"SYSTEM WARNING\"; }\n    node.send(msg);\n\n//check heating mode\nvar Heating_Mode = global.get(\"Heating_Mode\", \"file\");\nif (Heating_Mode == 0) {\n    msg.payload = \"Heatpump is WAR mode (compensation curve)\";\n    msg.topic = \"SYSTEM\";\n}\nelse if (Heating_Mode == 1) {\n    msg.payload = \"Heatpump is in DIRECT mode\";\n    msg.topic = \"SYSTEM\";\n}\nnode.send(msg);\n\n// check how long this flow is running without restart\nvar CurrentTime = new Date().getTime();\nvar StartTime = global.get(\"OnlineTimer\");\nvar TimeElapsed = ((CurrentTime - StartTime) / 60000); // minutes\nTimeElapsed = parseFloat(TimeElapsed.toFixed(0));\nmsg.topic = \"\";\nmsg.payload = \"This flow is running for \" + TimeElapsed + \" minutes since restart\";\nif (TimeElapsed > 60) { TimeElapsed = TimeElapsed / 60; TimeElapsed = parseFloat(TimeElapsed.toFixed(0)); msg.payload = \"This flow is running for \" + TimeElapsed + \" hours without a restart.\"; }\nif (TimeElapsed > 24) { TimeElapsed = TimeElapsed / 24; TimeElapsed = parseFloat(TimeElapsed.toFixed(0)); msg.payload = \"This flow is running for \" + TimeElapsed + \" days without a restart.\"; }\nnode.send(msg);\n\n//check MQTT blocked\nif (MQTT.block_active == 1) {\n    msg.topic = \"MQTT-Commands:\";\n    msg.payload = \"Are blocked (disable switch to unblock)\"\n    node.send(msg);\n}\n\n// Count TOP44 Error messages \nvar Last_Error = global.get('Last_Error', \"file\");      // Last error\nvar Error_Counter = global.get('Error_Counter', \"file\");// Total errors\nmsg.topic = \"\";\nmsg.payload = \"Total errors: \" + Error_Counter + \", last error: \" + Last_Error;\nnode.send(msg);\n\n// check if using own kWh-meter(s) \nvar Meters = 0;\nif (global.get('kWh_meter1') == \"true\") { Meters += 1; }\nif (global.get('kWh_meter2') == \"true\") { Meters += 1; }\nif (Meters > 0) {\n    msg.payload = \"Found \" + Meters + \" custom kWh-device(s) connected to Heishamon\";\n    node.send(msg);\n} else { msg.payload = \"No custom kWh-devices detected\"; node.send(msg); }\n\n// check if using 1-wire and how many:\nvar oneWire_sensors = flow.get('oneWire_sensors').length; // No. of sensors found\nmsg.payload = \"Found \" + oneWire_sensors + \" 1-wire sensors connected to Heishamon\";\nif (oneWire_sensors == 0) { msg.payload = \"No 1-wire sensors connected to Heishamon\"; }\nnode.send(msg);\n\n// finished checken HP state \nmsg.topic = \"\";\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// checking some scheduler vars \nmsg.topic = \"solar_block_scheduler:\";\nif (global.get('solar_block_scheduler', \"file\") === undefined) msg.payload = \"undefined (ok)\"; else msg.payload = global.get('F_stored_next_operating_mode', \"file\");\nnode.send(msg);\nmsg.topic = \"SolarFunction_active:\";\nif (global.get('SolarFunction_active', \"file\") === undefined) msg.payload = \"undefined (ok)\"; else msg.payload = global.get('F_stored_next_operating_mode', \"file\");\nnode.send(msg);\nmsg.topic = \"F_stored_next_operating_mode:\";\nif (global.get('F_stored_next_operating_mode', \"file\") === undefined) msg.payload = \"undefined (ok)\"; else msg.payload = global.get('F_stored_next_operating_mode', \"file\");\nnode.send(msg);\n\n// checking  scheduler tasks \nvar count = 0;\nfor (let i = 1; i < 11; i++) {\n    var state = global.get('Schedule_' + i + '_state', \"file\") || 0;\n    if (state == 1) { count += 1; }\n}\nmsg.topic = \"Scheduler:\"\nmsg.payload = count + \" tasks are currently active\";\nnode.send(msg);\n\n// show which tasks are active:\nfor (let i = 10; i > 0; i--) {\n    var schedule_topic = \"Schedule_\" + i;\n\n    //var var0 = global.get(schedule_topic + '_state', \"file\") + \", \";\n    var var1 = global.get(schedule_topic + '_Description', \"file\") + \", \";\n    var var2 = global.get(schedule_topic + '_day', \"file\") + \", \";\n    var var3 = global.get(schedule_topic + '_hour', \"file\");\n    var3 = Number(var3).toFixed(0);\n    if (var3 < 10) { var3 = \"0\" + var3 + \":\"; } else { var3 = var3 + \":\"; } //voorloopnul indien nodig\n    var var4 = global.get(schedule_topic + '_minutes', \"file\");\n    var4 = Number(var4).toFixed(0);\n    if (var4 < 10) { var4 = \"0\" + var4 + \", \" } // voorloopnul indien nodig\n    var var5 = global.get(schedule_topic + '_state', \"file\");\n    var var6 = global.get(schedule_topic + '_action', \"file\") + \" \";\n    if (global.get(schedule_topic + '_override', \"file\") == 1) { var var7 = \"(override)\" } else { var var7 = \"\"; }\n\n    msg.topic = schedule_topic;\n    msg.payload = var1 + var2 + var3 + var4 + var6 + var7;\n    if (var5 == 1) { node.send(msg); } // only show when active\n}\n//\n\nmsg.topic = \"\";\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// checking  RTC settings \nvar F_RTC = global.get('F_RTC', \"file\");\nmsg.topic = \"F_RTC.on_off_active: \"; msg.payload = F_RTC.on_off_active; node.send(msg);\nmsg.topic = \"F_RTC.on_off_status: \"; msg.payload = F_RTC.on_off_status; node.send(msg);\n\nmsg.topic = \"\";\n\nvar rtc_PV = global.get('T_room'); // Actual room temp\n\nif (F_RTC.state == 1) { msg.payload = \"F_RTC.state: 1 (Function RTC is enabled)\"; } else msg.payload = \"F_RTC.state: 0 (Function RTC is disabled)\";\nnode.send(msg);\nif (F_RTC.F1_power_state == 1) { msg.payload = \"F_RTC.F1_power_state: 1 (Function RTC turn heat on/off is enabled)\"; } else { msg.payload = \"F_RTC.F1_power_state: 0 (RTC turn heat on/off is disabled)\"; }\nnode.send(msg);\n\nif (F_RTC.F2_OM_state == 1) { msg.payload = \"F_RTC.F2_OM_state: 1 (Function RTC allow change OM is enabled)\"; } else { msg.payload = \"F_RTC.F2_OM_state: 0 (RTC allow change OM is disabled)\"; }\nnode.send(msg);\n\n// show incremental setpoint status:\nmsg.topic = \"F_RTC.incremental_setpoints_state: \";\nmsg.payload = F_RTC.incremental_setpoints_state;\nnode.send(msg);\n\nif (Heatpump_State == \"on\") Heatpump_State = \"(power is on)\";\nif (Heatpump_State == \"off\") Heatpump_State = \"(power is off)\";\nvar RoomSP = global.get('WoonkamerSP', \"file\");\n\n// show current RTC room setpoint:\nmsg.topic = \"RTC Room setpoint\";\nmsg.payload = RoomSP + \"°C\";\nnode.send(msg);\n\nif (F_RTC.F1_power_state == 1 && Heatpump_State == \"(power is off)\") {\n    var rtc_on = RoomSP + global.get('rtc_on', \"file\");\n    rtc_on = Number(rtc_on).toFixed(1);\n    if (Heatpump_State == \"(power is off)\") {\n        msg.topic = \"\";\n        msg.payload = \"RTC will switch heatpump on at \" + rtc_on + \"°C (now \" + rtc_PV + \"°C) \" + Heatpump_State;\n        node.send(msg); //\n    }\n}\n\nif (F_RTC.F1_power_state == 1 && Heatpump_State == \"(power is on)\") {\n    var rtc_off = RoomSP + global.get('rtc_off', \"file\");\n    rtc_off = Number(rtc_off).toFixed(1);\n    msg.topic = \"\";\n    msg.payload = \"RTC will switch heatpump off at \" + rtc_off + \"°C (now \" + rtc_PV + \"°C) \" + Heatpump_State; node.send(msg);\n}\n\n/* check for possible error:\nif (F_RTC_on_off_active == 0 && Heatpump_State == \"(power is off)\" && F_RTC_F1_power_state == 1) {\n    msg.payload = \"<b>WARNING</b> RTC will not turn heatpump on, because you switched pump manualy off\"; node.send(msg); }\n// check for possible error:\nif (F_RTC_on_off_active == 1 && Heatpump_State == \"(power is on)\" && F_RTC_F1_power_state == 1) {\n    msg.payload = \"<b>WARNING</b> RTC will not turn heatpump off, because you switched pump manualy on above room setpoint\"; node.send(msg); }\n*/\n\nmsg.topic = \"\";\n// test possible block:\nif (global.get('Force_DHW_State') == 1) { msg.payload = \"Force_DHW_State = 1 --> RTC will not turn heatpump to on (blocked)\"; node.send(msg); }\n\nmsg.topic = \"\";\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// check total MQTT messages \nif (MQTT !== undefined) {\n    // format the message\n    msg.payload = \"Total MQTT-Commands send: \" + MQTT.counter + \", today \" + MQTT.messages_today + \", yesterday \" + MQTT.messages_yesterday;\n    node.send(msg);\n}\n\n\n// check total Defrosts \nvar Defrost = global.get('Defrost', \"file\");\nif (Defrost.Counter === undefined) Defrost.Counter = 0;\nif (Defrost.Counter_Today === undefined) Defrost.Counter_Today = 0;                 // Defrost_Counter_Today\nif (Defrost.Counter_Yesterday === undefined) Defrost.Counter_Yesterday = 0;         // Defrost_Counter_Yesterday\nmsg.payload = \"Total Defrosts: \" + Defrost.Counter + \", today \" + Defrost.Counter_Today + \", yesterday \" + Defrost.Counter_Yesterday; node.send(msg);\n\n// calc total hours/ Average  runtime\nvar OperationHours = global.get('OperationHours');\nvar OperationCounter = global.get('OperationCounter');\nvar AverageRuntime = (OperationHours / OperationCounter);\nAverageRuntime = parseFloat(AverageRuntime.toFixed(2));\nmsg.topic = \"\";\nmsg.payload = \"Total hours: \" + OperationHours + \", starts: \" + OperationCounter + \", average runtime: \" + AverageRuntime + \" hours\";\nnode.send(msg);\n\n// highest frequency ever recorded\nvar HighestFreq = global.get('HighestFreq', \"file\"); // get last highscore ;)\nif (HighestFreq === undefined) { HighestFreq = 0; }\nmsg.payload = \"Highest compressor frequency ever recorded: \" + HighestFreq + \" Hz\";\nnode.send(msg);\n\n//get Starts_Today:\nvar Starts_Today = global.get('Starts_Today', \"file\");\nif (Starts_Today == undefined) { global.set('Starts_Today', 0, \"file\"); } // not necessary\nmsg.payload = \"The compressor has started \" + Starts_Today + \" times in the last 24 hours\";\nnode.send(msg);\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// Check SoftStart \nvar F_SS_state = global.get('Correction_2_softstart_on_off', \"file\");    // Get the global variable. Used to see if the softstart function is enabled.\nif (F_SS_state === undefined || F_SS_state == 0) { F_SS_state = \"disabled\"; } else { F_SS_state = \"enabled\"; }\nmsg.payload = \"Function - SoftStart is \" + F_SS_state;\n\n//At which state is SS running now?\nvar Actual_stage = global.get('F_SS_actual_stage');\nif (Actual_stage !== undefined) { msg.payload = msg.payload + \" (Operation in \" + Actual_stage + \")\"; }\nnode.send(msg);\n\n// SoftStart timers:\nvar SS_Timer = global.get('StartTime', \"file\") || 0; \n\n//SS limit:\nvar F_SS_stage2 = global.get('F_SS_stage2', \"file\");\nvar F_SS_stage2_limit = global.get('F_SS_stage2_limit', \"file\");\nmsg.payload = \"F_SS_stage2: \" + F_SS_stage2 + \" minutes (Max. time the SoftStart will be active)\"; node.send(msg);\nmsg.payload = \"F_SS_stage2_limit: \" + F_SS_stage2_limit + \"°C (Max. setpoint increase)\"; node.send(msg);\n\nvar CurrentTime = new Date().getTime();\nvar TimeElapsed = ((CurrentTime - SS_Timer) / 60000); // minutes\nTimeElapsed = parseFloat(TimeElapsed.toFixed(0));\nvar Temp = TimeElapsed + \" minutes\";\nvar RemainingTime = F_SS_stage2 - TimeElapsed;\nif (TimeElapsed > F_SS_stage2) { Temp = Temp + \" (SoftStart is finished)\"; } else { Temp = Temp + \" (SoftStart is active, time remaining: \" + RemainingTime + \" minutes)\"; }\nif (SS_Timer != 0) { msg.payload = \"SoftStart TimeElapsed: \" + Temp; node.send(msg); } else { msg.payload = \"SoftStart TimeElapsed: 0 (waiting for next run)\"; node.send(msg); }\nvar compressor_runtime = global.get('compressor_runtime', \"file\") || 0; \nvar compressor_last_runtime = global.get(\"compressor_last_runtime\", \"file\") || 0;\nmsg.payload = \"Actual runtime: \" + compressor_runtime + \" minutes, last runtime: \" + compressor_last_runtime + \" minutes\"; node.send(msg);\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// Quietmode settings:\nvar Quietmode_time = global.get('Quietmode_time', \"file\");\n\n/*\nvar StartTimeQuietmode = global.get('StartTimeQuietmode'); //Memory Only\nCurrentTime = new Date().getTime();\nTimeElapsed = ((CurrentTime - StartTimeQuietmode) / 60000); // minutes\nTimeElapsed = parseFloat(TimeElapsed.toFixed(0));\nTemp = TimeElapsed + \" minutes\";\nif (TimeElapsed > Quietmode_time) { msg.payload = \"SoftStart Quietmode time: finished\"; node.send(msg); } else {\n    msg.payload = \"SoftStart Quietmode time: \" + Temp; node.send(msg); }\n*/\n\nif (Quietmode_time === undefined) { Quietmode_time = 5; }                           //default 5 minutes\nvar SS_Quietmode_on_off = global.get(\"SS_Quietmode_on_off\", \"file\");                // Status switch SS_Quietmode \nif (SS_Quietmode_on_off === 0 || SS_Quietmode_on_off === undefined) {\n    msg.payload = \"Function - SoftStart Quietmode is disabled\"; node.send(msg);\n} else { msg.payload = \"Function - SoftStart Quietmode is enabled\"; node.send(msg); }\n\nif (SS_Quietmode_on_off == 1) {\n    var Quiet_Mode_Level = global.get('Quiet_Mode_Level', \"file\");           //check current Quietmode level\n    var Previous_Quiet_Mode_Level = global.get('Previous_Quiet_Mode_Level', \"file\");  //check previous Quietmode level\n    if (Previous_Quiet_Mode_Level === undefined) { Previous_Quiet_Mode_Level = 0; }\n    msg.payload = \"Current Quietmode level: \" + Quiet_Mode_Level + \", restoring to level: \" + Previous_Quiet_Mode_Level + \" after \" + Quietmode_time + \" minutes runtime.\";\n    node.send(msg);\n}\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\nif (MQTT !== undefined) {\n    // Check MQTT-blocker and manual on/off settings\n    var value = MQTT.block_active;\n    msg.topic = \"MQTT.block_active: \"; msg.payload = value; node.send(msg); msg.topic = \"\";\n\n    value = MQTT.allow_rtc_onoff;\n    msg.topic = \"MQTT.allow_rtc_onoff: \"; msg.payload = value; node.send(msg); msg.topic = \"\";\n\n    value = MQTT.allow_solar;\n    msg.topic = \"MQTT.allow_solar: \"; msg.payload = value; node.send(msg);\n\n    value = MQTT.allow_scheduler;\n    msg.topic = \"MQTT.allow_scheduler: \"; msg.payload = value; node.send(msg);\n\n    value = MQTT.messages_today;\n    msg.topic = \"MQTT.messages_today: \"; msg.payload = value; node.send(msg);\n\n    value = MQTT.messages_yesterday;\n    msg.topic = \"MQTT.messages_yesterday: \"; msg.payload = value; node.send(msg);\n\n    value = MQTT.counter;;\n    msg.topic = \"MQTT.counter: \"; msg.payload = value + \" (total)\"; node.send(msg);\n\n    value = MQTT.message_limit;\n    msg.topic = \"MQTT.message_limit: \"; msg.payload = value; node.send(msg);\n\n    var block_mode = [\"undefined\", \"BLOCK ALL\", \"CUSTOM\", \"UNRESTRICTED\"];\n    var value = MQTT.block_mode;\n    msg.topic = \"MQTT.block_mode: \";\n    msg.payload = block_mode[value];\n    node.send(msg);\n\n    var value = MQTT.block_mode_previous;\n    msg.topic = \"MQTT.block_mode_previous: \";\n    msg.payload = block_mode[value];\n    node.send(msg);\n\n}\nelse {\n    msg.topic = \"MQTT: \"; msg.payload = \"undefined\";\n    node.send(msg);\n}\n\nmsg.topic = \"\";\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// Check Function reduce pump speed settings:\nvar F_ReducePumpSpeed = global.get('F_ReducePumpSpeed', \"file\");\nmsg.topic = \"F_ReducePumpSpeed.PumpMaxFlowSetting: \"; msg.payload = F_ReducePumpSpeed.PumpMaxFlowSetting; node.send(msg); msg.topic = \"\";\nmsg.topic = \"F_ReducePumpSpeed.SavedPumpspeed: \"; msg.payload = F_ReducePumpSpeed.SavedPumpspeed; node.send(msg); msg.topic = \"\";\nmsg.topic = \"F_ReducePumpSpeed.LowSpeed: \"; msg.payload = F_ReducePumpSpeed.LowSpeed; node.send(msg); msg.topic = \"\";\nmsg.topic = \"F_ReducePumpSpeed.state: \"; msg.payload = F_ReducePumpSpeed.state; node.send(msg); msg.topic = \"\";\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// Check Night Reduction variables:\nvar NightReductionWaterTemp = global.get('NightReductionWaterTemp', \"file\");\nmsg.topic = \"NightReductionWaterTemp.state:\"; msg.payload = NightReductionWaterTemp.nightreduction_state; node.send(msg); msg.topic = \"\";\nmsg.topic = \"NightReductionWaterTemp.correction:\"; msg.payload = NightReductionWaterTemp.correction; node.send(msg); msg.topic = \"\";\nmsg.topic = \"NightReductionWaterTemp.current_value:\"; msg.payload = NightReductionWaterTemp.current_value; node.send(msg); msg.topic = \"\";\nvar F_NR_correction = global.get('F_NR_correction'); //Memory only\nmsg.topic = \"F_NR_correction:\"; msg.payload = F_NR_correction; node.send(msg); msg.topic = \"\";\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\nvar NightReductionRoomSetpoint = global.get('NightReductionRoomSetpoint', \"file\");\nmsg.topic = \"NightReduction room_setpoint.state:\"; msg.payload = NightReductionRoomSetpoint.state; node.send(msg); msg.topic = \"\";\nmsg.topic = \"NightReductionRoomSetpoint.LOW:\"; msg.payload = NightReductionRoomSetpoint.LOW; node.send(msg); msg.topic = \"\";\nmsg.topic = \"NightReductionRoomSetpoint.NORMAL:\"; msg.payload = NightReductionRoomSetpoint.NORMAL; node.send(msg); msg.topic = \"\";\n\nmsg.payload = \"<b>---------------------------------------------------------------------------------------------------</b>\";\nmsg.payload = \"<b>============================================================</b>\";\nnode.send(msg);\n\nnode.done(); // finished\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 480,
        "wires": [
            [
                "365e9747b6e58903"
            ]
        ]
    },
    {
        "id": "365e9747b6e58903",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "fa1495af192e1c1e"
        ],
        "x": 525,
        "y": 480,
        "wires": []
    },
    {
        "id": "ae21a03ad6f43d1c",
        "type": "ui_button",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "System check",
        "group": "ec94eaa0930738be",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "System check",
        "tooltip": "Press to refresh and show system data",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "8e9e69d85c6ec035"
            ]
        ]
    },
    {
        "id": "614b9c64adf19f94",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "Online timer",
        "func": "var CurrentTime = new Date().getTime();\nglobal.set(\"OnlineTimer\", CurrentTime);\n\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 560,
        "wires": []
    },
    {
        "id": "d0ac8299461b7c1f",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "at boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "614b9c64adf19f94",
                "8e9e69d85c6ec035"
            ]
        ]
    },
    {
        "id": "112b797f401c4afc",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "MQTT commands",
        "topic": "panasonic_heat_pump/commands/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 690,
        "y": 520,
        "wires": [
            [
                "459dcc6cc8cff9da",
                "58c919290387cba4"
            ]
        ]
    },
    {
        "id": "459dcc6cc8cff9da",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "Count",
        "func": "var MQTT_counter = global.get('MQTT.counter', \"file\");\nif (MQTT_counter === undefined) MQTT_counter = 0;\nMQTT_counter = parseFloat(MQTT_counter.toFixed(0));\n\n// today\nvar MQTT_messages_today = global.get('MQTT.messages_today', \"file\"); \nif (MQTT_messages_today === undefined) MQTT_messages_today = 0;\nMQTT_messages_today = parseFloat(MQTT_messages_today.toFixed(0));\n\n// yesterday\nvar MQTT_messages_yesterday = global.get('MQTT.messages_yesterday', \"file\") || 0;\n\nMQTT_messages_yesterday = parseFloat(MQTT_messages_yesterday.toFixed(0));\n\n// reset_today\nif (msg.payload == \"reset_today\") { // daily midnight reset\n    var MQTT_messages_yesterday = MQTT_messages_today;\n    MQTT_messages_today = 0;\n    global.set('MQTT.messages_yesterday', MQTT_messages_yesterday, \"file\");\n    global.set('MQTT.messages_today', MQTT_messages_today, \"file\");\n    return null; // exit node\n} \n\nMQTT_counter += 1; // increase total\nMQTT_messages_today += 1; //increase today\n\n// reset, clear all vars from flow:\nif (msg.payload == \"reset\") { MQTT_counter = 0; MQTT_messages_today; MQTT_messages_yesterday; }\n\nglobal.set('MQTT.counter', MQTT_counter, \"file\"); // save\nglobal.set('MQTT.messages_yesterday', MQTT_messages_yesterday, \"file\");\nglobal.set('MQTT.messages_today', MQTT_messages_today, \"file\");\n\n//msg.payload = \"Total:\" + MQTT_counter + \", Today:\" + MQTT_messages_today; // for debug node only\n\n//return msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 560,
        "wires": []
    },
    {
        "id": "c94e5636d62a2bd9",
        "type": "inject",
        "z": "d5fea67661261002",
        "d": true,
        "g": "1f4cf47dbe4285dc",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 730,
        "y": 480,
        "wires": [
            [
                "459dcc6cc8cff9da"
            ]
        ]
    },
    {
        "id": "de77807ce3dc66fc",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "New day reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payload": "reset_today",
        "payloadType": "str",
        "x": 700,
        "y": 560,
        "wires": [
            [
                "459dcc6cc8cff9da"
            ]
        ]
    },
    {
        "id": "f9d6e659dbe05a19",
        "type": "inject",
        "z": "d5fea67661261002",
        "d": true,
        "g": "5166b23daf2b561d",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 230,
        "y": 660,
        "wires": [
            [
                "116f4e573c2d55e8"
            ]
        ]
    },
    {
        "id": "991502670f43d03e",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "New day reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payload": "reset_today",
        "payloadType": "str",
        "x": 260,
        "y": 740,
        "wires": [
            [
                "116f4e573c2d55e8"
            ]
        ]
    },
    {
        "id": "116f4e573c2d55e8",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "Count",
        "func": "var Defrost_Counter = global.get('Defrost.Counter', \"file\");\nif (Defrost_Counter === undefined) Defrost_Counter = 0;\nDefrost_Counter = parseFloat(Defrost_Counter.toFixed(0));\n\n// today\nvar Defrost_Counter_Today = global.get('Defrost.Counter_Today', \"file\");\nif (Defrost_Counter_Today === undefined) Defrost_Counter_Today = 0;\nDefrost_Counter_Today = parseFloat(Defrost_Counter_Today.toFixed(0));\n\n// yesterday\nvar Defrost_Counter_Yesterday = global.get('Defrost.Counter_Yesterday', \"file\");\nif (Defrost_Counter_Yesterday === undefined) Defrost_Counter_Yesterday = 0;\nDefrost_Counter_Yesterday = parseFloat(Defrost_Counter_Yesterday.toFixed(0));\n\n\n// reset_today\nif (msg.payload == \"reset_today\") { // daily reset\n    var Defrost_Counter_Yesterday = Defrost_Counter_Today;\n    Defrost_Counter_Today = 0; \n    global.set('Defrost.Counter_Yesterday', Defrost_Counter_Yesterday, \"file\"); // memory only\n    global.set('Defrost.Counter_Today', Defrost_Counter_Today, \"file\"); // memory only\n    return null; // exit node\n     } \n\n// when Defrost is finished:\nlet msg99 = {}; // log\n\nif (msg.payload == 0 ) {\n    msg99.topic = \"*DEFROSTING\";\n    msg99.payload = \"Finished\";\n    return msg99; // exit node\n    } \n\n\nDefrost_Counter += 1; // increase total\nDefrost_Counter_Today += 1; //increase today\n\n// reset, clear all vars from flow:\nif (msg.payload == \"reset\") { Defrost_Counter = 0; Defrost_Counter_Today; Defrost_Counter_Yesterday; }\n\nglobal.set('Defrost.Counter', Defrost_Counter, \"file\");\nglobal.set('Defrost.Counter_Today', Defrost_Counter_Today, \"file\");\nglobal.set('Defrost.Counter_Yesterday', Defrost_Counter_Yesterday, \"file\");\n\nif (msg.payload == 1) {\n    msg99.topic = \"*DEFROSTING\";\n    msg99.payload = \"Started\";\n    }\n\nmsg.payload = \"Total:\" + Defrost_Counter + \", today:\" + Defrost_Counter_Today; // for debug node only\nmsg.topic = \"\";\n\nreturn msg99; // to input LOGS\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 700,
        "wires": [
            [
                "842e7cc6853ea3c8"
            ]
        ]
    },
    {
        "id": "a9fa37eb6a1a4fc2",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 210,
        "y": 700,
        "wires": [
            [
                "116f4e573c2d55e8"
            ]
        ]
    },
    {
        "id": "ef07058c04267dd5",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "TOP11 - panasonic_heat_pump/main/Operations_Hours",
        "topic": "panasonic_heat_pump/main/Operations_Hours",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 840,
        "wires": [
            [
                "4df2960daa64b31d"
            ]
        ]
    },
    {
        "id": "2db0d9b3a1bc868c",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "TOP12 - panasonic_heat_pump/main/Operations_Counter",
        "topic": "panasonic_heat_pump/main/Operations_Counter",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 900,
        "wires": [
            [
                "6fe317de99320aa3"
            ]
        ]
    },
    {
        "id": "4df2960daa64b31d",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "set.Operation hours",
        "func": "global.set('OperationHours', msg.payload); // memory only\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 840,
        "wires": [
            [
                "0af4b3b3445b3ce2"
            ]
        ]
    },
    {
        "id": "6fe317de99320aa3",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "set.Operation counter",
        "func": "global.set('OperationCounter', msg.payload); // memory only\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 900,
        "wires": [
            [
                "6c6d719592dac8d5"
            ]
        ]
    },
    {
        "id": "0af4b3b3445b3ce2",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "Hours",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1090,
        "y": 840,
        "wires": []
    },
    {
        "id": "6c6d719592dac8d5",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "Starts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1090,
        "y": 900,
        "wires": []
    },
    {
        "id": "842e7cc6853ea3c8",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "input LOGS",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 585,
        "y": 700,
        "wires": []
    },
    {
        "id": "2fa6b31339e8638d",
        "type": "ui_toast",
        "z": "d5fea67661261002",
        "position": "top left",
        "displayTime": "2",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "GUI Notify",
        "x": 1390,
        "y": 240,
        "wires": []
    },
    {
        "id": "c764c19340b7b720",
        "type": "link in",
        "z": "d5fea67661261002",
        "name": "Notify!",
        "links": [
            "b28336107aaff12e",
            "85327198ddc6e251",
            "d65b99037cb3740d",
            "29f1c1eaf91ec977",
            "e0217508a82c4d43",
            "65e5ce7e8bb0e284",
            "302de5d951e650b6",
            "db78ad9b985b4aa5",
            "e1d9c3b48e3b4cba",
            "9b7f15d048bb1f60",
            "749ce60adde338d9",
            "c6e07a956cf2f293",
            "6886cb05525f8d0b",
            "16e91d824cef95e3",
            "6111292139d84986",
            "a863b940531858e1",
            "f2e85ff23b3dc136",
            "400c912774a24583",
            "f94a97e9d42084d7",
            "b8ed3bef56b272a1",
            "ae97f18776a1de28",
            "7ddd3f5d8f76897e",
            "b43820fd5a21f4e7",
            "776cbfd355ed920f",
            "037c668f34165450",
            "68685dfaa9b474b6",
            "4c70cc2db4654795"
        ],
        "x": 1285,
        "y": 240,
        "wires": [
            [
                "2fa6b31339e8638d"
            ]
        ]
    },
    {
        "id": "5f9d089ca2c8df2f",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "ebe2890eadc33dcd",
        "name": "TOP44-Error",
        "topic": "panasonic_heat_pump/main/Error",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 730,
        "y": 660,
        "wires": [
            [
                "0e9c0e551061fdbf"
            ]
        ]
    },
    {
        "id": "0e9c0e551061fdbf",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "ebe2890eadc33dcd",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 700,
        "wires": [
            [
                "b8280b17e99b11d1"
            ]
        ]
    },
    {
        "id": "b8280b17e99b11d1",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "ebe2890eadc33dcd",
        "name": "Count",
        "func": "var Error_Counter = global.get('Error_Counter', \"file\");\nif (Error_Counter === undefined)\n    {\n        Error_Counter = 0;\n        global.set('Error_Counter', Error_Counter, \"file\");\n    }\n\nvar Last_Error = msg.payload; // current error\nif (global.set('Last_Error', \"file\") === undefined)\n    {\n        global.set('Last_Error', Last_Error, \"file\");\n    }\nif (Last_Error == \"No error\")\n    {\n        return null;\n    }\n\nif (Last_Error != \"No error\")\n    { \n        Error_Counter += 1;\n        global.set('Error_Counter', Error_Counter, \"file\");\n        global.set('Last_Error', Last_Error, \"file\");\n    } \n\n//return msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 740,
        "wires": []
    },
    {
        "id": "88b24c510e42cb4d",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "panasonic_heat_pump/s0/Watt/1",
        "topic": "panasonic_heat_pump/s0/Watt/1",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 1340,
        "wires": [
            [
                "62b5261340dce177"
            ]
        ]
    },
    {
        "id": "62b5261340dce177",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 1340,
        "wires": [
            [
                "e13d89b6bf39c3a3"
            ]
        ]
    },
    {
        "id": "e13d89b6bf39c3a3",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "If detected 1st",
        "func": "if (msg.payload > 0) {\n    global.set('kWh_meter1', \"true\"); // memory only\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "320f3cb11444550f",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "panasonic_heat_pump/s0/Watt/2",
        "topic": "panasonic_heat_pump/s0/Watt/2",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 1400,
        "wires": [
            [
                "f91a8e87996f7a36"
            ]
        ]
    },
    {
        "id": "10a931a475e12a39",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "if detected 2nd",
        "func": "if (msg.payload > 0) {\n    global.set('kWh_meter2', \"true\"); // memory only\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "f91a8e87996f7a36",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 1400,
        "wires": [
            [
                "10a931a475e12a39"
            ]
        ]
    },
    {
        "id": "014bed028830052a",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "panasonic_heat_pump/1wire",
        "topic": "panasonic_heat_pump/1wire/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1460,
        "wires": [
            [
                "f22f1960e6c20b9e"
            ]
        ]
    },
    {
        "id": "eb94834e04b534d3",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "Found No. sensors",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1050,
        "y": 1460,
        "wires": []
    },
    {
        "id": "b111c18057bcbd78",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "Detect No. 1Wire",
        "func": "var Topic = msg.topic.split('1wire/');          // strip \"panasonic_heat_pump/1wire/\" from topic\n\nlet oneWire_sensors = [];\noneWire_sensors = flow.get('oneWire_sensors');\noneWire_sensors.push(Topic[1]);                 // add to Array \n\n// check for duplicates sensors:\nvar hash = {};\noneWire_sensors.forEach(function (item) { hash[item] = 1; });\noneWire_sensors = Object.keys(hash);\n\nflow.set(\"oneWire_sensors\", oneWire_sensors);\n    \n\nmsg.payload = oneWire_sensors.length;           // No. of sensors found\nif (msg.payload == undefined) { msg.payload = 0; }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1460,
        "wires": [
            [
                "eb94834e04b534d3"
            ]
        ]
    },
    {
        "id": "c34196f747bbf89e",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "debug 71",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 670,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f22f1960e6c20b9e",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 1460,
        "wires": [
            [
                "c34196f747bbf89e",
                "b111c18057bcbd78"
            ]
        ]
    },
    {
        "id": "50965b08724bdd8c",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "at boot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1520,
        "wires": [
            [
                "f2d7ea937abca010"
            ]
        ]
    },
    {
        "id": "f2d7ea937abca010",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "Clr sensors",
        "func": "flow.set('oneWire_sensors', []);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "082586cfc8693748",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Log HP data",
        "func": "// [NEW] Melding tijdens defrost\nvar Debugging = global.get('Debugging', \"file\");    \nvar Defrosting = global.get('ForceDefrost', \"file\");\n\nmsg.topic = \"Compressor\";\n\nif (msg.payload > 0) \n        {                                                       //started or already running\n        msg.payload = \"running\";\n        if (Defrosting == 1 && Debugging == 1) \n                {\n                msg.payload = \"running [defrosting]\";\n                } \n        if (Defrosting == 1 && Debugging == 0) \n                {\n                msg.payload = \"running skip\";\n                } \n        }\n        \n\nif (msg.payload == 0) \n        {\n        var runtime = global.get(\"compressor_runtime\", \"file\");         //stopped\n        if (runtime == 0) { msg.payload = \"stopped\"; } else { msg.payload = \"stopped (runtime: \" + runtime + \" min)\"; }\n        if (Defrosting == 1 && Debugging == 1) \n                {\n                msg.payload = \"stopped [defrosting]\";\n                } \n        if (Defrosting == 1 && Debugging == 0) \n                {\n                msg.payload = \"stopped skip\";\n                } \n        } \n\n\n\nreturn msg;\n\n//be carefull with changing msg.payload string, Start counter uses this.",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 380,
        "wires": [
            [
                "3078dedaa0fa9fa6"
            ]
        ]
    },
    {
        "id": "1a8bf49ae0badf5a",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "link out Log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "47e2a8d99d332229"
        ],
        "x": 1145,
        "y": 380,
        "wires": []
    },
    {
        "id": "2a1004c42a0b7dc1",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "24 hours reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payload": "reset_today",
        "payloadType": "str",
        "x": 200,
        "y": 380,
        "wires": [
            [
                "df9dc017de54372f"
            ]
        ]
    },
    {
        "id": "109e99262b1d9b31",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 570,
        "y": 380,
        "wires": [
            [
                "082586cfc8693748"
            ]
        ]
    },
    {
        "id": "3078dedaa0fa9fa6",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 850,
        "y": 380,
        "wires": [
            [
                "df9dc017de54372f",
                "98332e44d65ec671"
            ]
        ]
    },
    {
        "id": "df9dc017de54372f",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Starts counter",
        "func": "//get Starts_Today:\nvar Starts_Today = global.get('Starts_Today', \"file\");\nif (Starts_Today === undefined) { global.set('Starts_Today', 0, \"file\"); }\n\nif (msg.payload == \"reset_today\") {\n    global.set('Starts_Today', 0, \"file\");\n    return null;\n}\n\nif (msg.payload == \"running\" || msg.payload == \"running [defrosting]\" || msg.payload == \"running skip\") {                                      //started or already running\n    Starts_Today += 1;\n    global.set('Starts_Today', Starts_Today, \"file\");\n}\n\n\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": []
    },
    {
        "id": "58c919290387cba4",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "Overflow protection",
        "func": "//  msg1 to Pin1 Block MQTT switch\n// msg99 to input LOGS\n\n// get send commands today\nvar MQTT_messages_today = global.get('MQTT.messages_today', \"file\");\nif (MQTT_messages_today === undefined) MQTT_messages_today = 0;\n\n// get user set limit\nvar MQTT_message_limit = global.get('MQTT.message_limit', \"file\");\nif (MQTT_message_limit === undefined) {\n    MQTT_message_limit = 300; //default 300\n    global.set('MQTT.message_limit', 300, \"file\");\n}\n\n// check MQTT.message_limit reached\nif (MQTT_messages_today >= MQTT_message_limit) {\n    // first check if not already blocked:\n    if (global.get('MQTT.block_active', \"file\") == 1) { return null; } // exit node when already active\n\n    // block MQTT commands:\n    let msg1 = {};\n    msg1.topic = \"\";\n    msg1.payload = 1;\n    \n    //warning send to log\n    let msg99 = {};\n    msg99.topic = \"[WARNING]\";\n    msg99.payload = MQTT_messages_today + \" MQTT-commands send today! MQTT sending blocked (limit \" + MQTT_message_limit + \" msg/day)\";\n    return [msg1, msg99];\n}\n\nreturn [null, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 500,
        "wires": [
            [
                "fdd35059e43f16d0"
            ],
            [
                "c4dd85e3e2a5dff4"
            ]
        ]
    },
    {
        "id": "fdd35059e43f16d0",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "Block MQTT switch",
        "mode": "link",
        "links": [
            "172fe3f8a616d7b8"
        ],
        "x": 1145,
        "y": 480,
        "wires": []
    },
    {
        "id": "c4dd85e3e2a5dff4",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "to input LOGS",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1145,
        "y": 520,
        "wires": []
    },
    {
        "id": "05e22a7bbcfb1aa1",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "Heishamon-1wire(1)",
        "topic": "",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 770,
        "y": 1660,
        "wires": [
            [
                "16808d5b28081690"
            ]
        ]
    },
    {
        "id": "825f53ebdfb5fd43",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1700,
        "wires": [
            [
                "8cab4c14513ce5fa"
            ]
        ]
    },
    {
        "id": "8cab4c14513ce5fa",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "Dynamic Subscribe to found 1-Wire",
        "func": "let msg1 = {}; // 1st 1-wire sensor topic\nlet msg2 = {}; // 2nd 1-wire sensor topic\nlet msg3 = {}; //Array of found sensors --> dropdown box\n\nmsg1.topic = \"panasonic_heat_pump/1wire/\";\nmsg2.topic = \"panasonic_heat_pump/1wire/\";\n\nlet oneWire_sensors = [];\n\noneWire_sensors =  flow.get('oneWire_sensors'); //array of found 1-wire sensors (for now max 2))\n\nvar i = oneWire_sensors.length;           // No. of sensors found\n//node.warn(\"No sensors=\" + i);\nif (i === undefined || i == 0 ) { return null };\n\n\nmsg1.topic = msg1.topic + oneWire_sensors[0];\nmsg2.topic = msg2.topic + oneWire_sensors[1];\nmsg1.action = \"subscribe\";\nmsg2.action = \"subscribe\";\n\n//setup dropdownbox message:\nmsg3.options = oneWire_sensors;\nreturn [msg1, msg2,msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1700,
        "wires": [
            [
                "05e22a7bbcfb1aa1"
            ],
            [
                "798b2017d73b9795"
            ],
            [
                "f8666050ee0e6830"
            ]
        ]
    },
    {
        "id": "16808d5b28081690",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1090,
        "y": 1660,
        "wires": []
    },
    {
        "id": "798b2017d73b9795",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "Heishamon-1wire(2)",
        "topic": "",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 770,
        "y": 1740,
        "wires": [
            [
                "fd1a14b5c123f7aa"
            ]
        ]
    },
    {
        "id": "fd1a14b5c123f7aa",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1090,
        "y": 1740,
        "wires": []
    },
    {
        "id": "9624117d96bd6dbb",
        "type": "comment",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "Test dynamic subcribe",
        "info": "",
        "x": 220,
        "y": 1620,
        "wires": []
    },
    {
        "id": "f8666050ee0e6830",
        "type": "ui_dropdown",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "Populate dropdown",
        "label": "Test 1-wire",
        "tooltip": "Select which temperature sensor the flow must use",
        "place": "",
        "group": "4a119e18236415e9",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 770,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "399e883e6deac7a3",
        "type": "ui_button",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "",
        "group": "548e51986bce11b0",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Defrost",
        "tooltip": "Send a force defrost to HP",
        "color": "",
        "bgcolor": "{{background}}",
        "className": "",
        "icon": "",
        "payload": "This will start a defrosting routine.",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 380,
        "y": 1900,
        "wires": [
            [
                "d3a2ef1813673fb5"
            ]
        ]
    },
    {
        "id": "d6ef6434856148df",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1) {                                            //  MQTT_default_1 = BLOCK ALL\n        return [null, null];  \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 2) {                                            //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is aloowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT.allow_rtc_onoff\n        //**********************************************************************\n        if (MQTT.allow_rtc_onoff == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_solar\n        //**********************************************************************\n        else if (MQTT.allow_solar == 1)          {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_scheduler\n        //**********************************************************************\n        else if (MQTT.allow_scheduler == 1)      {return [msg,null];}        //  Pass through msg.\n        else                                      {return [null,null];}       //  Block\n        \n        //return [null,null];\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                            //  MQTT_default_3 = UNRESTRICTED\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1900,
        "wires": [
            [
                "0b00b03e3c4e9930"
            ],
            [
                "037c668f34165450"
            ]
        ]
    },
    {
        "id": "037c668f34165450",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 895,
        "y": 1900,
        "wires": []
    },
    {
        "id": "1b91aa81aad7c7b5",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "Force",
        "func": "if (msg.payload == \"Yes\") \n    {\n        msg.payload = 1;\n        return msg;\n    } else \n    {\n        return null;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1900,
        "wires": [
            [
                "d6ef6434856148df"
            ]
        ]
    },
    {
        "id": "0b00b03e3c4e9930",
        "type": "mqtt out",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "SET12-SetForceDefrost",
        "topic": "panasonic_heat_pump/commands/SetForceDefrost",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 1050,
        "y": 1900,
        "wires": []
    },
    {
        "id": "d3a2ef1813673fb5",
        "type": "ui_toast",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "Send a defrost now to HP?",
        "name": "Defrost?",
        "x": 520,
        "y": 1900,
        "wires": [
            [
                "1b91aa81aad7c7b5"
            ]
        ]
    },
    {
        "id": "98332e44d65ec671",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "skip",
        "func": "if (msg.payload == \"running skip\" || msg.payload == \"stopped skip\") { return null; } // no log message\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 380,
        "wires": [
            [
                "1a8bf49ae0badf5a"
            ]
        ]
    },
    {
        "id": "afa5bf9f7c3531bc",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "link in 15",
        "links": [
            "6c685782864f1787"
        ],
        "x": 115,
        "y": 700,
        "wires": [
            [
                "a9fa37eb6a1a4fc2"
            ]
        ]
    },
    {
        "id": "32c013973096ab65",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "link in 16",
        "links": [
            "c57a81d1dee5b8a9"
        ],
        "x": 115,
        "y": 320,
        "wires": [
            [
                "109e99262b1d9b31",
                "57c9f02c576ad71f"
            ]
        ]
    },
    {
        "id": "1ebb1a2803291fd7",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "link in 19",
        "links": [
            "6c685782864f1787"
        ],
        "x": 115,
        "y": 1900,
        "wires": [
            [
                "fd2777fee0c73d23"
            ]
        ]
    },
    {
        "id": "fd2777fee0c73d23",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "Button look",
        "func": "if (msg.payload == 0)\n    {\n        msg.background = null;\n    }\n\n\n\nif (msg.payload == 1) \n    {\n    msg.background = \"Red\";\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1900,
        "wires": [
            [
                "399e883e6deac7a3"
            ]
        ]
    },
    {
        "id": "c40e5d6c866f68df",
        "type": "ui_template",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "ec94eaa0930738be",
        "name": "Line",
        "order": 10,
        "width": 25,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1090,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "678c2fa5db148f1e",
        "type": "ui_text",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "ec94eaa0930738be",
        "order": 3,
        "width": 6,
        "height": 2,
        "name": "spacer1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 1080,
        "wires": []
    },
    {
        "id": "bb8548eb6893bd56",
        "type": "ui_text",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "ec94eaa0930738be",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "spacer2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6c196a9703c10a79",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "naming convention",
        "info": "\nMQTT\t\n\t.active\t\t\t\t\t\t\t\t\tMQTT block enabled/disabled 1,0\n\t.allow_rtc_onoff\t\t\t\n\t.allow_scheduler\t\t\t\n\t.allow_solar\t\t\t\t\n\t.block_mode\t\t\t\t\t\t\t\tBLOCK ALL (1) , CUSTOM (2), UNRESTRICTED (3)\n\t.counter\t\t\t\t    \t\t\tTotal MQTT messages counter\n\t.messages_today\t\t\t    \t\t\tNo. MQTT messages today\n\t.messages_yesterday\t\t    \t\t\tNo. MQTT messages yesterday\n\t.message_limit\t\t\t    \t\t\tMaximum allowed messages in 24h allow before block will activate\n\n\nNightReductionWaterTempOn \t\t    \t\tscheduler task to activate night reduction water temp\nNightReductionWaterTempOff\t\t    \t\tscheduler task to deactivate night reduction water temp\n\nNightReductionWaterTemp\n\t.current_value\t\t\t\t\t\t\trenamed from NightReduction_current_value\n\t.correction\t\t\t\t\t\t\t\trenamed from NightReduction_correction\n\t.state\t\t\t\t\t\t\t\t\trenamed from nightreduction_on_off\n\nNightReductionRoomSetpoint\n\t.state \t\t\t\t\t\t\t\t\tNight reduction room setpoint status (1,0)\n\t.LOW\t\t\t\t\t\t\t\t\trenamed from RoomSetpointLOW\n\t.NORMAL\t\t\t\t\t\t\t\t\trenamed from RoomSetpointNORMAL\n\nF_ReducePumpSpeed\n\t.state\t\t\t\t\t\t\t\t\tReduce pump speed active 1,0\n\t.PumpMaxFlowSetting\t\t\t\t\t\t\n\t.SavedPumpspeed\t\t\t\t\t\t\tValue to restore to when disabled\n\t.LowSpeed\t\t\t\t\t\t\t\tValue used as low pump speed when active\n\nF_RTC\n\t.state\t\t\t\t\t\t\t\t\tRTC main function on/off (1,0) (old name: Correction_1_RTC_on_off)\n\t.incremental_setpoints_state\t\t\tincremental_setpoints status of switch. (Renamed from Booster), value 1,0\n\t.correction_value (Memory Only)\t\t\tRTC correction (renamed from F_RTC_correction)\n\t.F1_power_state\t\t\t\t\t\t\tfunction turn on/off heatpump (1,0)\n\t.F2_OM_state\t\t\t\t\t\t\tfunction change OM heatpump\n\t.on_off_active\t\t\t\t\t\t\t0= waiting to turn heat on. 1= waiting to turn heat off\n\t.on_off_status\t\t\t\t\t\t\tvalue: 0,1,2\n\nDefrost\n\t.Counter\t\t\t\t\t\t\t\tRenamed from Defrost_Counter\n\t.Counter_Today\t\t\t\t\t\t\tRenamed from Defrost_Counter_Today\n\t.Counter_Yesterday\t\t\t\t\t\tRenamed from Defrost_Counter_Yesterday\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "x": 1350,
        "y": 360,
        "wires": []
    },
    {
        "id": "5c3b694f82537189",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "Todo  (open me)",
        "info": "[ ] Remove unused outputs (pins) from function nodes (some need none).\n\nlater versions\n[ ] Add new 3rd or 4th stage to SoftStart to phase out diffence between original_SP and the SP with last SS_correction.\n[ ] Check RTC Automation why this message shows up in log while not relevant: \"Function RTC: Operation mode to Heat only\".\n[ ] Limit SS corrections by using a median Ta temp? Or limit max 1/min.\n[ ] Continue with MQTT_source placement for all functions generation a MQTT-Command.\n[ ] Continue with naming convention. (reduce capitals)\n[ ] Add possibility to change room setpoint through scheduler.\n[ ] Better way to detect and use custom room temperature sensor. Setting in SYSTEM / HW CONFIGURATION?\n\n\n\n",
        "x": 1340,
        "y": 400,
        "wires": []
    },
    {
        "id": "5566fb2a502d3f92",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "User info",
        "info": "Users currently using those devices:\n=====================================\nAikon (kWh + 1-wire (Toutside) + MQTT sensor (Troom))\nMikeyMan (kWh + MQTT sensors)\nMaarten69 (kWh + 1-wire)\nEdterbak (kWh)\nblb4 (2x kWh en 5x 1-wire)\nlampy25 (2x kWh + 1-wire)",
        "x": 1320,
        "y": 440,
        "wires": []
    },
    {
        "id": "a8acdcc0dc537830",
        "type": "ui_template",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "ec94eaa0930738be",
        "name": "",
        "order": 11,
        "width": 25,
        "height": 17,
        "format": "<div ng-repeat=\"line in msg.payload track by $index\">\n<div ng-bind-html=\"line\"></div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "fa1495af192e1c1e",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "inputDEBUGLOG",
        "links": [
            "16e91d824cef95e3",
            "29f1c1eaf91ec977",
            "302de5d951e650b6",
            "365e9747b6e58903",
            "400c912774a24583",
            "559f3875ebe7df72",
            "6111292139d84986",
            "65e5ce7e8bb0e284",
            "6886cb05525f8d0b",
            "749ce60adde338d9",
            "7ddd3f5d8f76897e",
            "85327198ddc6e251",
            "9b7f15d048bb1f60",
            "a863b940531858e1",
            "ae97f18776a1de28",
            "b43820fd5a21f4e7",
            "b8ed3bef56b272a1",
            "b903f8bbf513d6a1",
            "c6e07a956cf2f293",
            "d65b99037cb3740d",
            "db78ad9b985b4aa5",
            "e1d9c3b48e3b4cba",
            "f2e85ff23b3dc136",
            "f94a97e9d42084d7",
            "037c668f34165450",
            "68685dfaa9b474b6",
            "4c70cc2db4654795"
        ],
        "x": 725,
        "y": 1040,
        "wires": [
            [
                "8a882609f0e2d88a"
            ]
        ]
    },
    {
        "id": "8a882609f0e2d88a",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Add",
        "func": "let pay = msg.topic + \" \" + msg.payload;\n\n// Read scrolling table from context\nlet debuglog = flow.get('debuglog'); //MemoryOnly\n\nif (debuglog === undefined || pay === undefined)\n    {\n        return null;\n    }\nelse if (msg.topic==\"populate\")\n    {\n        msg.payload = [...debuglog];\n        \n        return msg;\n    }\n\nelse\n    {\n        // Modify scrolling table by adding msg.payload as first element\n        let size = debuglog.unshift(pay);\n         \n        // Remove last element from scrolling table\n        if (size >80) debuglog.pop();\n         \n        // Update context for scrolling text\n        flow.set('debuglog',debuglog);\n         \n        // Shalow copy updated scrolling table to msg.payload\n        msg.payload = [...debuglog];\n         \n        return msg;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1040,
        "wires": [
            [
                "a8acdcc0dc537830"
            ]
        ]
    },
    {
        "id": "41018676b51ac24a",
        "type": "inject",
        "z": "d5fea67661261002",
        "d": true,
        "g": "0531f7d830ad5e1b",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": ".",
        "payloadType": "str",
        "x": 690,
        "y": 1000,
        "wires": [
            [
                "8a882609f0e2d88a",
                "62d33aea9b2babaa"
            ]
        ]
    },
    {
        "id": "62d33aea9b2babaa",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Create",
        "func": "var stored_value = flow.get(\"debuglog\",\"file\");\n\nif (msg.payload == \"RESET\")\n    {\n    flow.set(\"debuglog\", undefined); \n        return null;\n    }\n\nelse if (stored_value !== undefined) \n    {\n        let debuglog = [];\n        debuglog = stored_value; \n        msg.payload = [...debuglog];\n        return msg;\n    }\n    \nelse\n    {\n        let debuglog = [];\n        flow.set(\"debuglog\", debuglog);        \n    }\n    \n    \n\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1000,
        "wires": [
            [
                "a8acdcc0dc537830"
            ]
        ]
    },
    {
        "id": "751fec2ce6f8faac",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Block MQTT",
        "func": "msg.topic = \"\";\nif (msg.source == \"boot\") { return null; } //exit when source is from inject node\nlet msg99 = {};\nmsg99.topic = \"SYSTEM\";\nmsg99.payload = \"\";\n\n// *****************************************************************************\n//  MQTT.block_mode 1 = BLOCK ALL\n//  MQTT.block_mode 2 = CUSTOM\n//  MQTT.block_mode 3 = UNRESTRICTED\n// *****************************************************************************\n\nif (msg.payload == 1) {\n    global.set('MQTT.block_active', 1, \"file\"); \n    msg99.payload = 1;\n    var MQTT_block_mode = global.get('MQTT.block_mode', \"file\"); // 11-01-2023\n    global.set('MQTT.block_mode_previous', MQTT_block_mode, \"file\"); // 11-01-20223 for restoring block_mode after disabling switch\n    \n    if (msg.source != \"shutdown_detection\"){\n        global.set('MQTT.block_mode', 1, \"file\"); //block all\n        let msg1={};\n        msg1.payload = 1;\n        node.send([null,msg1]);\n    }\n}\n\nif (msg.payload == 0) {\n    global.set('MQTT.block_active', 0, \"file\");\n    msg99.payload = 0;\n    var MQTT_block_mode_previous = global.get('MQTT.block_mode_previous', \"file\");  // 11-01-2023\n    if (MQTT_block_mode_previous !== undefined) { global.set('MQTT.block_mode', MQTT_block_mode_previous, \"file\"); } // 11-01-20223 for restoring block_mode after disabling switch\n        \n    // test if reached max MQTT command limit today:\n    var MQTT_messages_today = global.get('MQTT.messages_today', \"file\");\n    if (MQTT_messages_today === undefined) MQTT_messages_today = 0;\n\n    // get user set limit\n    var MQTT_message_limit = global.get('MQTT.message_limit', \"file\");\n    if (MQTT_message_limit === undefined) {\n        MQTT_message_limit = 300; //default 300\n        global.set('MQTT.message_limit', 300, \"file\");\n        }\n\n    // Request: Auto increase limit when disabling\n    if (MQTT_messages_today >= MQTT_message_limit) {\n        msg99.payload = \"MQTT limit of \" + MQTT_message_limit + \" reached, increasing limit to \" + (MQTT_message_limit + 100);\n        global.set('MQTT.message_limit', (MQTT_message_limit + 100), \"file\");\n    }\n\n    \n}\n\nreturn [msg99,msg];\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1060,
        "wires": [
            [
                "35b2bc2a89cc2d84",
                "43783f0ff1a97ef1"
            ],
            [
                "bb5e36b2c205a984"
            ]
        ],
        "outputLabels": [
            "msg",
            "to button block_mode 1"
        ]
    },
    {
        "id": "c25c9914b837785c",
        "type": "ui_switch",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Block MQTT commands",
        "label": "Block MQTT commands({{msg.topic}})",
        "tooltip": "Block MQTT commands",
        "group": "ec94eaa0930738be",
        "order": 4,
        "width": 8,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 250,
        "y": 1060,
        "wires": [
            [
                "751fec2ce6f8faac",
                "c3c58f9072c16f58"
            ]
        ]
    },
    {
        "id": "dadcc09786666d40",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "set at boot",
        "func": "var MQTT = global.get('MQTT', \"file\");\n\nif (MQTT.block_active === undefined){\n    global.set('MQTT.block_active',0,\"file\");\n    return null;\n}\n\nlet msg1 = {};\n\nmsg1.payload = MQTT.block_active;\nmsg1.source = \"boot\";\n\nvar value = MQTT.block_mode;\nvar Blockmode = \"undefined\";\nif (value === 1) Blockmode = \"BLOCK ALL\";\nif (value === 2) Blockmode = \"CUSTOM\";\nif (value === 3) Blockmode = \"UNRESTRICTED\";\n\nmsg1.topic = Blockmode; //text label toggle\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "c25c9914b837785c"
            ]
        ]
    },
    {
        "id": "a13a59feb119d9ce",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "at boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "#:(file)::block_active",
        "payloadType": "global",
        "x": 180,
        "y": 1160,
        "wires": [
            [
                "dadcc09786666d40",
                "43783f0ff1a97ef1"
            ]
        ]
    },
    {
        "id": "5ce82b31e85cfe3a",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Repair & delete old vars",
        "func": "    //first move old mqtt counters to new vars:\n    var MQTT_Counter = global.get('MQTT_Counter', \"file\");\n    if (MQTT_Counter != undefined) { global.set('MQTT.counter', MQTT_Counter, \"file\"); }\n\n    var MQTT_Counter_Today = global.get('MQTT_Counter_Today', \"file\");\n    if (MQTT_Counter_Today != undefined) { global.set('MQTT.messages_today', MQTT_Counter_Today, \"file\"); }\n\n    var MQTT_Counter_Yesterday = global.get('MQTT_Counter_Yesterday', \"file\");\n    if (MQTT_Counter_Yesterday != undefined) { global.set('MQTT.messages_yesterday', MQTT_Counter_Yesterday, \"file\"); }\n\n    var MQTT_Limit = global.get('MQTT_Limit', \"file\");\n    if (MQTT_Limit != undefined) { global.set('MQTT.message_limit', MQTT_Limit, \"file\"); }\n\n//copy reduce pumpspeed settings:\n    var ReducePumpSpeed = global.get('ReducePumpSpeed', \"file\");\n    if (ReducePumpSpeed != undefined) { global.set('F_ReducePumpSpeed.state', ReducePumpSpeed, \"file\"); }   \n\n    var PumpMaxFlowSetting = global.get('PumpMaxFlowSetting', \"file\");\n    if (PumpMaxFlowSetting != undefined) { global.set('F_ReducePumpSpeed.PumpMaxFlowSetting', PumpMaxFlowSetting, \"file\"); }   \n\n    var SavedPumpspeed = global.get('SavedPumpspeed', \"file\");\n    if (SavedPumpspeed != undefined) { global.set('F_ReducePumpSpeed.SavedPumpspeed', SavedPumpspeed, \"file\"); } \n\n    var LowSpeed = global.get('LowSpeed', \"file\");\n    if (LowSpeed != undefined) { global.set('F_ReducePumpSpeed.LowSpeed', LowSpeed, \"file\"); } \n\n//copy defrost to new var:\n    var Defrost_Counter = global.get('Defrost_Counter', \"file\");\n    if (Defrost_Counter != undefined) { \n        global.set('Defrost.Counter', Defrost_Counter, \"file\"); \n        global.set('Defrost.Counter_Today', 0, \"file\"); \n        global.set('Defrost.Counter_Yesterday', 0, \"file\"); \n        } \n//copy RTC vars to new vars:\n    var F_rtc_on_off_active = global.get('F_rtc_on_off_active', \"file\");\n    if (F_rtc_on_off_active != undefined) { global.set('F_RTC_on_off_active', F_rtc_on_off_active, \"file\"); }\n\n    var F_rtc_on_off_status = global.get('F_rtc_on_off_status', \"file\");\n    if (F_rtc_on_off_status != undefined) { global.set('F_RTC_on_off_status', F_rtc_on_off_status, \"file\"); }\n\n    var F_RTC_on_off_active = global.get('F_RTC_on_off_active', \"file\");\n    if (F_RTC_on_off_active != undefined) { global.set('F_RTC.on_off_active', F_RTC_on_off_active, \"file\"); }\n\n    var F_RTC_on_off2 = global.get('F_RTC_on_off2', \"file\");\n    if (F_RTC_on_off2 != undefined) { global.set('F_RTC.F1_power_state', F_RTC_on_off2, \"file\"); }\n\n    var F_RTC_on_off3_OM = global.get('F_RTC_on_off3_OM', \"file\");\n    if (F_RTC_on_off3_OM != undefined) { global.set('F_RTC.F2_OM_state', F_RTC_on_off3_OM, \"file\"); }\n\n    var F_RTC_on_off_active = global.get('F_RTC_on_off_active', \"file\");\n    if (F_RTC_on_off_active != undefined) { global.set('F_RTC.on_off_active', F_RTC_on_off_active, \"file\"); }\n    if (F_RTC_on_off_active === undefined) { global.set('F_RTC.on_off_active', 0, \"file\"); }\n\nvar Correction_1_RTC_on_off = global.get('Correction_1_RTC_on_off', \"file\");\nif (Correction_1_RTC_on_off != undefined) { global.set('F_RTC.state', Correction_1_RTC_on_off, \"file\"); }\n\n\n\n\n    //delete old vars:\n    global.set('Nightmode', undefined, \"file\");\n    var MQTT = global.get('MQTT', \"file\");\n    if (MQTT == 0 || MQTT == 1) {global.set('MQTT',undefined,\"file\");}\n    global.set('MQTT_Block', undefined, \"file\");\n    global.set('MQTT_select', undefined, \"file\");\n    global.set('MQTT_Block_select', undefined, \"file\");\n    global.set('MQTT_Counter', undefined, \"file\");\n    global.set('MQTT_Counter_Today', undefined, \"file\");\n    global.set('MQTT_Counter_Yesterday', undefined, \"file\");\n    global.set('MQTT_Limit', undefined, \"file\");\n    global.set('NightReductionRoomPV_CurrentStatus', undefined, \"file\");\n    global.set('NightReduction_current_value', undefined, \"file\");\n    global.set('NightReduction_correction', undefined, \"file\");\n    global.set('NightReductionWaterTemp_correction', undefined, \"file\");\n    global.set('nightreduction_on_off', undefined, \"file\");\n    global.set('RoomSetpointLOW', undefined, \"file\");\n    global.set('RoomSetpointNORMAL', undefined, \"file\");\n    global.set('ReducePumpSpeed', undefined, \"file\");\n    global.set('PumpMaxFlowSetting', undefined, \"file\");\n    global.set('SavedPumpspeed', undefined, \"file\");\n    global.set('LowSpeed', undefined, \"file\");\n    global.set('Booster', undefined, \"file\");\n    global.set('Defrost_Counter', undefined, \"file\");\n    global.set('Defrost_Counter_Today', undefined, \"file\");\n    global.set('Defrost_Counter_Yesterday', undefined, \"file\");\n    global.set('F_rtc_on_off_active', undefined, \"file\");\n    global.set('F_rtc_on_off_status', undefined, \"file\");\n    global.set('F_RTC_correction', undefined); //Memory Only\n    global.set('F_RTC_on_off2', undefined, \"file\");\n    global.set('F_RTC_on_off3_OM', undefined, \"file\");\n    global.set('F_RTC_on_off_active', undefined, \"file\");\n    global.set('Correction_1_RTC_on_off', undefined, \"file\");\n    \n    let msg99={};\n    msg99.topic = \"SYSTEM:\";\n    msg99.payload = \"removed old variables\";      \n    \n    return msg99;\n        \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1160,
        "wires": [
            [
                "559f3875ebe7df72"
            ]
        ]
    },
    {
        "id": "559f3875ebe7df72",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "to input DEBUGLOG",
        "mode": "link",
        "links": [
            "fa1495af192e1c1e"
        ],
        "x": 1005,
        "y": 1160,
        "wires": []
    },
    {
        "id": "172fe3f8a616d7b8",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "MQTT-switch link in",
        "links": [
            "6f8b37b8a4354baf",
            "cc96d0a80f6bdef4",
            "fdd35059e43f16d0",
            "00b957e057fd4843"
        ],
        "x": 165,
        "y": 1000,
        "wires": [
            [
                "c25c9914b837785c"
            ]
        ]
    },
    {
        "id": "6e97d05d1a6275c7",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "set MQTT-Limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"MQTT.message_limit\",msg.payload,\"file\");\n\n//return msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1220,
        "wires": []
    },
    {
        "id": "be1b927461546a7f",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 1220,
        "wires": [
            [
                "6e97d05d1a6275c7"
            ]
        ]
    },
    {
        "id": "bd61942b914a15ce",
        "type": "ui_numeric",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "MQTT-limit",
        "label": "Max MQTT-commands per day ({{msg.messages_today}}):",
        "tooltip": "",
        "group": "ec94eaa0930738be",
        "order": 8,
        "width": 8,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}/day",
        "min": "100",
        "max": "2000",
        "step": "10",
        "className": "",
        "x": 590,
        "y": 1220,
        "wires": [
            [
                "be1b927461546a7f"
            ]
        ]
    },
    {
        "id": "43783f0ff1a97ef1",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "set at boot",
        "func": "var MQTT = global.get('MQTT', \"file\");\n\nif (MQTT.message_limit === undefined) {\n    MQTT.message_limit = 300; // default 300\n    global.set('MQTT.message_limit', 300, \"file\");\n}\n\nlet msg1 = {};\nmsg1.messages_today = MQTT.messages_today;\nmsg1.value = MQTT.message_limit;\n\nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1220,
        "wires": [
            [
                "bd61942b914a15ce"
            ]
        ],
        "outputLabels": [
            "DHW_treshold"
        ]
    },
    {
        "id": "35b2bc2a89cc2d84",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 650,
        "y": 1060,
        "wires": [
            [
                "dadcc09786666d40",
                "70355972167285f4"
            ]
        ]
    },
    {
        "id": "c3c58f9072c16f58",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "MQTT_Status",
        "mode": "link",
        "links": [
            "5945f577b64bd499"
        ],
        "x": 325,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4606d685d39ac772",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "just once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 1160,
        "wires": [
            [
                "5ce82b31e85cfe3a"
            ]
        ]
    },
    {
        "id": "bb5e36b2c205a984",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "to link in to block all button",
        "mode": "link",
        "links": [
            "56f84076f445f170"
        ],
        "x": 415,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d2415b149ef2f275",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "link in update block_mode MQTT_block button",
        "links": [
            "e8e1e41f1c85ca7a"
        ],
        "x": 135,
        "y": 1120,
        "wires": [
            [
                "dadcc09786666d40"
            ]
        ]
    },
    {
        "id": "2cc4d65eb692223b",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "from COMMANDS#",
        "links": [
            "9202d8b025b48df6"
        ],
        "x": 125,
        "y": 1220,
        "wires": [
            [
                "43783f0ff1a97ef1"
            ]
        ]
    },
    {
        "id": "70355972167285f4",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "log",
        "func": "//if (msg.payload == 1) return null; // no logging when user turns on (will happen in node log on WP System)\n\nif (msg.payload != 0 && msg.payload != 1) return msg; // happens when received msg max mqqt message increase\n/*\nMQTT.\nblock_mode - 1 - BLOCK ALL\nblock_mode - 2 - CUSTOM\nblock_mode - 3 - UNRESTRICTED\n*/\n\nvar Block_mode = global.get('MQTT.block_mode', \"file\") || \"not set\";\nif (Block_mode == 1) Block_mode = \"BLOCK ALL\";\nif (Block_mode == 2) Block_mode = \"CUSTOM\";\nif (Block_mode == 3) Block_mode = \"UNRESTRICTED\";\n\nvar Block_active = global.get('MQTT.block_active', \"file\");\nif (Block_active == 0) Block_active = \"MQTT block inactive\";\nif (Block_active == 1) Block_active = \"<b>MQTT block active</b>\";\n\nmsg.topic = \"SYSTEM\";\nmsg.payload = Block_active + \", default block mode: \" + Block_mode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1100,
        "wires": [
            [
                "4c70cc2db4654795"
            ]
        ]
    },
    {
        "id": "4c70cc2db4654795",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "link out 36",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 1005,
        "y": 1100,
        "wires": []
    },
    {
        "id": "bf4af523ba16d457",
        "type": "ui_group",
        "name": "HEAT PUMP",
        "tab": "a5be8588.b8fbc8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e3cc96332cd59f07",
        "type": "ui_group",
        "name": "DHW",
        "tab": "a5be8588.b8fbc8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1179fa790d2d89ca",
        "type": "ui_group",
        "name": "HEAT",
        "tab": "a5be8588.b8fbc8",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "92e5b2c.00a8b5",
        "type": "mqtt-broker",
        "name": "MQTT (x.x.x.x)",
        "broker": "core-mosquitto",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "e27cfec311892d88",
        "type": "ui_group",
        "name": "Settings",
        "tab": "d6d4a43045260ac9",
        "order": 1,
        "disp": false,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2a223fd6c0b54acd",
        "type": "ui_group",
        "name": "Living room",
        "tab": "5b5fabb85470bd21",
        "order": 5,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e668c57c8cf470e7",
        "type": "ui_group",
        "name": "Heat | Water temperature",
        "tab": "5b5fabb85470bd21",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e374621a9f5ac0d6",
        "type": "ui_group",
        "name": "DHW | Water temperature",
        "tab": "5b5fabb85470bd21",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "052caff3b2365345",
        "type": "ui_group",
        "name": "Settings",
        "tab": "1d038e38da23c646",
        "order": 1,
        "disp": false,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9b8ec8b1b9f66309",
        "type": "ui_group",
        "name": "Graph",
        "tab": "1d038e38da23c646",
        "order": 2,
        "disp": false,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7267dafd7dc99038",
        "type": "ui_group",
        "name": "RTC Graphics",
        "tab": "d6d4a43045260ac9",
        "order": 3,
        "disp": false,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4551542d51501ce1",
        "type": "ui_group",
        "name": "SS Graphics",
        "tab": "992c3064baf54797",
        "order": 2,
        "disp": false,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c2a0123d2e2c91f0",
        "type": "ui_group",
        "name": "Settings",
        "tab": "992c3064baf54797",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fb77ab43998a2f18",
        "type": "ui_group",
        "name": "Power",
        "tab": "1a08b96c5aeb8d6e",
        "order": 1,
        "disp": false,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ef3dbc543ae92bec",
        "type": "ui_group",
        "name": "Automations",
        "tab": "d6d4a43045260ac9",
        "order": 2,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "16ec453c8cb345ac",
        "type": "ui_group",
        "name": "LOG",
        "tab": "593cfab8493b6bad",
        "order": 2,
        "disp": false,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1eb6d525c86c4977",
        "type": "ui_group",
        "name": "PANASONIC",
        "tab": "33ece0076bfd7cb7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "548e51986bce11b0",
        "type": "ui_group",
        "name": "OPERATION",
        "tab": "33ece0076bfd7cb7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b0c8e162d47abbb",
        "type": "ui_group",
        "name": "Scheduler",
        "tab": "ac594a9d775ca4fb",
        "order": 1,
        "disp": false,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7f740331bca1b3f",
        "type": "ui_group",
        "name": "ABOUT",
        "tab": "593cfab8493b6bad",
        "order": 6,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fea7672db2f050c9",
        "type": "ui_group",
        "name": "HEAT PUMP",
        "tab": "33ece0076bfd7cb7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "26d9e6cf24507b4f",
        "type": "ui_group",
        "name": "HEAT | DHW",
        "tab": "33ece0076bfd7cb7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9aec7afe54746c39",
        "type": "ui_group",
        "name": "Scheduler related settings",
        "tab": "ac594a9d775ca4fb",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "273f74f363a57507",
        "type": "ui_group",
        "name": "COOL",
        "tab": "a5be8588.b8fbc8",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "397a51ddac8419aa",
        "type": "ui_group",
        "name": "Chart",
        "tab": "575dc22256fd966c",
        "order": 1,
        "disp": false,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "830a81a1c54c6ef5",
        "type": "ui_group",
        "name": "Settings",
        "tab": "575dc22256fd966c",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "87be08e6a82ef6a0",
        "type": "ui_group",
        "name": "Degree days information",
        "tab": "a681244e6db9a6a7",
        "order": 1,
        "disp": false,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7f22c282fde0f86",
        "type": "ui_group",
        "name": "Setup",
        "tab": "4fb3ce05f81e8c95",
        "order": 1,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2bd11d2d909e2ba3",
        "type": "ui_group",
        "name": "Charts",
        "tab": "4fb3ce05f81e8c95",
        "order": 3,
        "disp": false,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "338420d1319e8350",
        "type": "ui_group",
        "name": "P1 setup",
        "tab": "4fb3ce05f81e8c95",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": true,
        "className": ""
    },
    {
        "id": "79eed3b289871944",
        "type": "ui_group",
        "name": "Help",
        "tab": "1d038e38da23c646",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "55fef8703465841e",
        "type": "ui_group",
        "name": "Help",
        "tab": "4fb3ce05f81e8c95",
        "order": 4,
        "disp": false,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ae6c2168304beda0",
        "type": "ui_group",
        "name": "Help",
        "tab": "d6d4a43045260ac9",
        "order": 4,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a606e01fab1bbd66",
        "type": "ui_group",
        "name": "Help",
        "tab": "ac594a9d775ca4fb",
        "order": 3,
        "disp": false,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3226b17db86f4510",
        "type": "ui_group",
        "name": "Help",
        "tab": "992c3064baf54797",
        "order": 3,
        "disp": false,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "70a5fe6af8ed1d29",
        "type": "ui_group",
        "name": "NAVIGATION",
        "tab": "593cfab8493b6bad",
        "order": 1,
        "disp": false,
        "width": 25,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ec94eaa0930738be",
        "type": "ui_group",
        "name": "SYSTEM HEALTH",
        "tab": "593cfab8493b6bad",
        "order": 3,
        "disp": false,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "84a756fa9e9244a8",
        "type": "ui_group",
        "name": "HW INFORMATION",
        "tab": "593cfab8493b6bad",
        "order": 4,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "82f1040c4d704f04",
        "type": "ui_group",
        "name": "ATTENTION",
        "tab": "43190c0921e1e1ed",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "00f6a5c103e9ef2f",
        "type": "ui_group",
        "name": "Default",
        "tab": "43190c0921e1e1ed",
        "order": 2,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4a119e18236415e9",
        "type": "ui_group",
        "name": "HW CONFIGURATION",
        "tab": "593cfab8493b6bad",
        "order": 5,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a5be8588.b8fbc8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d6d4a43045260ac9",
        "type": "ui_tab",
        "name": "RTC",
        "icon": "shuffle",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5b5fabb85470bd21",
        "type": "ui_tab",
        "name": "Temperature",
        "icon": "show_chart",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1d038e38da23c646",
        "type": "ui_tab",
        "name": "WAR",
        "icon": "cloud",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "992c3064baf54797",
        "type": "ui_tab",
        "name": "SoftStart",
        "icon": "power_input",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1a08b96c5aeb8d6e",
        "type": "ui_tab",
        "name": "Energy",
        "icon": "show_chart",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "593cfab8493b6bad",
        "type": "ui_tab",
        "name": "SYSTEM",
        "icon": "dashboard",
        "order": 14,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "33ece0076bfd7cb7",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "settings",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ac594a9d775ca4fb",
        "type": "ui_tab",
        "name": "Scheduler",
        "icon": "schedule",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "575dc22256fd966c",
        "type": "ui_tab",
        "name": "Cool",
        "icon": "ac_unit",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a681244e6db9a6a7",
        "type": "ui_tab",
        "name": "Degree days",
        "icon": "show_chart",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4fb3ce05f81e8c95",
        "type": "ui_tab",
        "name": "Solar",
        "icon": "wb_sunny",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "43190c0921e1e1ed",
        "type": "ui_tab",
        "name": "Power",
        "icon": "dashboard",
        "order": 14,
        "disabled": false,
        "hidden": true
    }
]