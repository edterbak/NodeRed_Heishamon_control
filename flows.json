[
    {
        "id": "ad980a450f532e53",
        "type": "tab",
        "label": "WP Input",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "82fd5c42e59889c9",
        "type": "group",
        "z": "ad980a450f532e53",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "6bd234b67b830924",
            "0fe684f74775324c",
            "93cacebad7e74573",
            "eaf23ae574103f75"
        ],
        "x": 234,
        "y": 19,
        "w": 872,
        "h": 162
    },
    {
        "id": "4267db13778ecba3",
        "type": "group",
        "z": "ad980a450f532e53",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "07ea01ca5f3dd948",
            "a73990662fc6dc84",
            "05bc11ef8fc2b3c6",
            "5d7cec9b89cfdcce"
        ],
        "x": 214,
        "y": 1059,
        "w": 612,
        "h": 202
    },
    {
        "id": "3046d52ef3c03092",
        "type": "group",
        "z": "ad980a450f532e53",
        "name": "",
        "style": {
            "fill": "#ff0000",
            "fill-opacity": "0.6",
            "label": true
        },
        "nodes": [
            "025597cef8c50d11",
            "73f39764feab525c",
            "f7f21cce882495d8",
            "03a4aa238afc1981",
            "ed74c1ebbc04bb2b",
            "aaad5e68b3b9bf5e",
            "f0150106811a865b",
            "8cd5ac016e4bbd49",
            "9abf6494d65a1390",
            "39b4cb7af13ab601"
        ],
        "x": 214,
        "y": 779,
        "w": 1272,
        "h": 162
    },
    {
        "id": "8636d9f25052ddde",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor1",
        "func": "if (typeof msg.payload === 'object') { return null ;}\n\nconst i = 1;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) {msg.topic = 'no_topic';}\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\nif (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(2);\nmsg2.payload = parseFloat(msg2.payload);\n\nmsg2.destination = 'WAR'; \nnode.send([null, msg2, msg2]);\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1620,
        "wires": [
            [
                "371e34dbb6b8846f"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "0ab54fe81efa0626"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output output",
            "value output reading"
        ]
    },
    {
        "id": "371e34dbb6b8846f",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "1Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 8,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 1620,
        "wires": [
            [
                "3e88f48f6f308168"
            ]
        ]
    },
    {
        "id": "0ab54fe81efa0626",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "Value1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1970,
        "y": 1620,
        "wires": []
    },
    {
        "id": "3d23b01db5990a1a",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Load",
        "func": "var HW_sensors = global.get('HW_sensors', \"file\");\nif (HW_sensors === undefined) {return null}\n\nlet msg1={};\n\nfor (let i = 1; i < 16; i++){\n\n    var sensor = global.get('HW_sensors.sensor'+i,\"file\")\n    if (sensor !== undefined) {\n        msg1.payload = sensor;\n        msg1.source = i;\n        var opt = flow.get('mqtt_sensor'+i,\"file\");\n        msg1.options = opt;\n        msg1.tooltip = '<font size= 4px >' + sensor + '</font>';\n        \n        node.send(msg1)\n    }\n}\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1380,
        "wires": [
            [
                "78de25a085d3a0cd"
            ]
        ]
    },
    {
        "id": "594763cfd3f3a68c",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "2Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 14,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 1720,
        "wires": [
            [
                "bcdbd8036c062075"
            ]
        ]
    },
    {
        "id": "9c6be0d9e6ecbbf2",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 16,
        "width": 2,
        "height": 1,
        "name": "Value2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1970,
        "y": 1720,
        "wires": []
    },
    {
        "id": "725f538b26776db4",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "link in 67",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 835,
        "y": 1380,
        "wires": [
            [
                "284e8f8f263c52b4"
            ]
        ]
    },
    {
        "id": "78de25a085d3a0cd",
        "type": "switch",
        "z": "ad980a450f532e53",
        "name": "",
        "property": "source",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "9",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "11",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "12",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "13",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "14",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "15",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 15,
        "x": 1210,
        "y": 1380,
        "wires": [
            [
                "371e34dbb6b8846f"
            ],
            [
                "594763cfd3f3a68c"
            ],
            [
                "a4d558d17067a238"
            ],
            [
                "802b990067d507a8"
            ],
            [
                "ecfd76da3da1072c"
            ],
            [
                "605ace8f1792af16"
            ],
            [
                "4074c70638b70122"
            ],
            [
                "782d5fae5e99e803"
            ],
            [
                "b538cfd6049620d0"
            ],
            [
                "4f33cb432b1cec46"
            ],
            [
                "d6a68b4efe67cdc8"
            ],
            [
                "0a6adcb22e4cf244"
            ],
            [
                "3c0ab7076bb1b08e"
            ],
            [
                "6589ddd914516e95"
            ],
            [
                "6c91fb90fee0aae4"
            ]
        ]
    },
    {
        "id": "dbff8d67a1ee86ab",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete1",
        "group": "24b2fad95360cd29",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 1620,
        "wires": [
            [
                "90a05912c04b8882"
            ]
        ]
    },
    {
        "id": "b3e01801963cc151",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 2,
        "width": 11,
        "height": 1,
        "name": "H_Sensor topic",
        "label": "MQTT sensor topic",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1400,
        "y": 1580,
        "wires": []
    },
    {
        "id": "0033376c5f1f6690",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "H_Description",
        "label": "Description",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 1580,
        "wires": []
    },
    {
        "id": "0583ede0e656f496",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "H_Value",
        "label": "Value",
        "format": "",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1980,
        "y": 1580,
        "wires": []
    },
    {
        "id": "86fb1b40ca0a082a",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description1",
        "label": "",
        "tooltip": "",
        "group": "24b2fad95360cd29",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "1",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 1620,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "2cd4742b27468e62",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 1,
        "width": 1,
        "height": 1,
        "name": "H_ID",
        "label": "ID",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 1540,
        "wires": []
    },
    {
        "id": "7aba309b4cd4d45e",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 7,
        "width": 1,
        "height": 1,
        "name": "1",
        "label": "1",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 1580,
        "wires": []
    },
    {
        "id": "5a1ffad4d9b340b3",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 13,
        "width": 1,
        "height": 1,
        "name": "2",
        "label": "2",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 1680,
        "wires": []
    },
    {
        "id": "07a9f4efe7d73c33",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description2",
        "label": "",
        "tooltip": "",
        "group": "24b2fad95360cd29",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 1720,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "925212b5cd4e0b66",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete2",
        "group": "24b2fad95360cd29",
        "order": 18,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 1720,
        "wires": [
            [
                "46b3b881fb73df0b"
            ]
        ]
    },
    {
        "id": "8119024c9280afb9",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "Purpose",
        "label": "Purpose",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2140,
        "y": 1580,
        "wires": []
    },
    {
        "id": "90a05912c04b8882",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 49",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 1;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined,\"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\");\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n/*\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}\n*/",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1620,
        "wires": [
            [
                "0ab54fe81efa0626",
                "86fb1b40ca0a082a",
                "a3d891d7a4fccb03"
            ]
        ],
        "outputLabels": [
            "delete"
        ]
    },
    {
        "id": "cf4b81e94bf08b6a",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor2",
        "func": "if (typeof msg.payload === 'object') { return null; }\n\nconst i = 2;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) { msg.topic = 'no_topic'; }\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\nif (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(2);\nmsg2.payload = parseFloat(msg2.payload);\n\nmsg2.destination = 'RTC';\nnode.send([null, msg2, msg2]);\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1720,
        "wires": [
            [
                "594763cfd3f3a68c"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "9c6be0d9e6ecbbf2"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "46b3b881fb73df0b",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 50",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 2;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\");\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1720,
        "wires": [
            [
                "9c6be0d9e6ecbbf2",
                "07a9f4efe7d73c33",
                "601ee222a3ec99a4"
            ]
        ]
    },
    {
        "id": "3e88f48f6f308168",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor1_purpose",
                "pt": "global",
                "to": "WAR",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 1660,
        "wires": [
            [
                "0ab54fe81efa0626"
            ]
        ]
    },
    {
        "id": "bcdbd8036c062075",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor2_purpose",
                "pt": "global",
                "to": "RTC",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 1760,
        "wires": [
            [
                "9c6be0d9e6ecbbf2"
            ]
        ]
    },
    {
        "id": "7559389970f919c5",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "MQTT/HomeAssistant/Domoticz_1_Outside_Temperature",
        "links": [
            "aef33455c0475736"
        ],
        "x": 550,
        "y": 1620,
        "wires": [
            [
                "8636d9f25052ddde",
                "9c6f177b9315e543"
            ]
        ],
        "l": true
    },
    {
        "id": "73bf30cdf65e98ac",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "MQTT/HomeAssistant/Domoticz_2_Room_Temperature",
        "links": [
            "18a84dfee519330f"
        ],
        "x": 560,
        "y": 1720,
        "wires": [
            [
                "cf4b81e94bf08b6a",
                "e78f0ebbd0a9f531"
            ]
        ],
        "l": true
    },
    {
        "id": "a4d558d17067a238",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "3Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 20,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 1820,
        "wires": [
            [
                "e98d4bf6a3d69054"
            ]
        ]
    },
    {
        "id": "23472cda5804dd69",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 22,
        "width": 2,
        "height": 1,
        "name": "Value3",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1970,
        "y": 1820,
        "wires": []
    },
    {
        "id": "f015954f83528124",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 19,
        "width": 1,
        "height": 1,
        "name": "3",
        "label": "3",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 1780,
        "wires": []
    },
    {
        "id": "4d5c5f6c333f57c1",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description3",
        "label": "",
        "tooltip": "",
        "group": "24b2fad95360cd29",
        "order": 21,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "3",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 1820,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "f331b8b7076fddbb",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete3",
        "group": "24b2fad95360cd29",
        "order": 24,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 1820,
        "wires": [
            [
                "29bcd5f13f03947a"
            ]
        ]
    },
    {
        "id": "3e9d2966af41db4b",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor3",
        "func": "if (typeof msg.payload === 'object') {return null;}\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 3;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i,\"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) { msg.topic = 'no_topic'; }\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor,\"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\nif (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(2);\nmsg2.payload = parseFloat(msg2.payload);\n\nmsg2.destination = 'COOL_T'; \nnode.send([null, msg2, msg2])\n\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1820,
        "wires": [
            [
                "a4d558d17067a238"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "23472cda5804dd69"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "29bcd5f13f03947a",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 51",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 3;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\");\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1820,
        "wires": [
            [
                "23472cda5804dd69",
                "4d5c5f6c333f57c1",
                "c23aebb28d50ecf6"
            ]
        ]
    },
    {
        "id": "e98d4bf6a3d69054",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor3_purpose",
                "pt": "global",
                "to": "COOL_T",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 1860,
        "wires": [
            [
                "23472cda5804dd69"
            ]
        ]
    },
    {
        "id": "258b2cfa45727e1d",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "MQTT/HomeAssistant/Domoticz_3_Room_Temperature",
        "links": [
            "18a84dfee519330f"
        ],
        "x": 560,
        "y": 1820,
        "wires": [
            [
                "3e9d2966af41db4b",
                "d5870ab3915322ee"
            ]
        ],
        "l": true
    },
    {
        "id": "802b990067d507a8",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "4Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 26,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 1920,
        "wires": [
            [
                "16909872c9e956b2"
            ]
        ]
    },
    {
        "id": "7d31149797ac875a",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 28,
        "width": 2,
        "height": 1,
        "name": "Value4",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1970,
        "y": 1920,
        "wires": []
    },
    {
        "id": "519a2240a2afaf4c",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 25,
        "width": 1,
        "height": 1,
        "name": "4",
        "label": "4",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 1880,
        "wires": []
    },
    {
        "id": "cbc0f89b4009e7bf",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description4",
        "label": "",
        "tooltip": "",
        "group": "24b2fad95360cd29",
        "order": 27,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "4",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 1920,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "e45f82ef6a10641b",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete4",
        "group": "24b2fad95360cd29",
        "order": 30,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 1920,
        "wires": [
            [
                "e77596c539535ada"
            ]
        ]
    },
    {
        "id": "688c93cec2693927",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor4",
        "func": "if (typeof msg.payload === 'object') { return null }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 4;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) { msg.topic = 'no_topic'; }\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\nif (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(2);\nmsg2.payload = parseFloat(msg2.payload);\n\nmsg2.destination = 'COOL_H'; \nnode.send([null, msg2, msg2])\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1920,
        "wires": [
            [
                "802b990067d507a8"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "7d31149797ac875a"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "e77596c539535ada",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 52",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 4;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\");\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1920,
        "wires": [
            [
                "7d31149797ac875a",
                "cbc0f89b4009e7bf",
                "7fb34139909f29f7"
            ]
        ]
    },
    {
        "id": "16909872c9e956b2",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor4",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor4_purpose",
                "pt": "global",
                "to": "COOL_H",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 1960,
        "wires": [
            [
                "7d31149797ac875a"
            ]
        ]
    },
    {
        "id": "865f73de46d93700",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "MQTT/HomeAssistant/Domoticz_4_Room_Humidity",
        "links": [
            "18a84dfee519330f"
        ],
        "x": 570,
        "y": 1920,
        "wires": [
            [
                "688c93cec2693927",
                "4e8c45428864189c"
            ]
        ],
        "l": true
    },
    {
        "id": "ecfd76da3da1072c",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "5Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 32,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "5",
        "topicType": "str",
        "className": "",
        "x": 1440,
        "y": 2020,
        "wires": [
            [
                "70b886c9c124e748"
            ]
        ]
    },
    {
        "id": "e68c2a7ca6b2ecec",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 34,
        "width": 2,
        "height": 1,
        "name": "Value5",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1970,
        "y": 2020,
        "wires": []
    },
    {
        "id": "0ac3875e82143928",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 31,
        "width": 1,
        "height": 1,
        "name": "5",
        "label": "5",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 1980,
        "wires": []
    },
    {
        "id": "bcfa60ad0e4f95ef",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description5",
        "label": "",
        "tooltip": "",
        "group": "24b2fad95360cd29",
        "order": 33,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "5",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 2020,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "a36d36712340604e",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete5",
        "group": "24b2fad95360cd29",
        "order": 36,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 2020,
        "wires": [
            [
                "387ae59cec92e900"
            ]
        ]
    },
    {
        "id": "9991c47e17c83b32",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor5",
        "func": "if (typeof msg.payload === 'object') { return null }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 5;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) { msg.topic = 'no_topic'; }\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\nif (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.payload = Math.abs(msg2.payload);\nif (msg2.payload == 0) { return null ;}\n\nmsg2.destination = 'P1_PRODUCTION';\nnode.send([null, msg2, msg2])",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2020,
        "wires": [
            [
                "ecfd76da3da1072c"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "e68c2a7ca6b2ecec"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "387ae59cec92e900",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 53",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 5;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\");\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2020,
        "wires": [
            [
                "e68c2a7ca6b2ecec",
                "bcfa60ad0e4f95ef",
                "6140d165fa484610"
            ]
        ]
    },
    {
        "id": "70b886c9c124e748",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor5",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor5_purpose",
                "pt": "global",
                "to": "P1_PRODUCTION",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 2060,
        "wires": [
            [
                "e68c2a7ca6b2ecec"
            ]
        ]
    },
    {
        "id": "25b5c6c2e35987ca",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "MQTT/HomeAssistant/Domoticz_5_Production",
        "links": [
            "29f20446ecb7ae5c",
            "c8359b76aff8f00e"
        ],
        "x": 590,
        "y": 2020,
        "wires": [
            [
                "9991c47e17c83b32",
                "51d18479d2a5ddec"
            ]
        ],
        "l": true
    },
    {
        "id": "97ed113ea97d2c38",
        "type": "switch",
        "z": "ad980a450f532e53",
        "name": "Value mapping",
        "property": "destination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "WAR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RTC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COOL_H",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COOL_T",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "P1_PRODUCTION",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "P1_CONSUMPTION",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1400,
        "y": 3400,
        "wires": [
            [
                "6d5a394e0a78ba93"
            ],
            [
                "d686633ddf895871"
            ],
            [
                "48951016bd81c603"
            ],
            [
                "21c05c592db60472"
            ],
            [
                "426ef80beb8421b0",
                "65a8ba8f22a5f95d"
            ],
            [
                "cbd9f65956ab693b",
                "a6ca84867405eb77"
            ]
        ]
    },
    {
        "id": "90c369a401f8419d",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "to WAR (T outside)",
        "mode": "link",
        "links": [
            "219066f9a22a1c23",
            "6c6c2315d73dcb16"
        ],
        "x": 1950,
        "y": 3380,
        "wires": [],
        "l": true
    },
    {
        "id": "af24bcd85c7c6485",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "to RTC",
        "mode": "link",
        "links": [
            "014b79ca42e19493",
            "9f6d1c245559171f"
        ],
        "x": 1920,
        "y": 3420,
        "wires": [],
        "l": true
    },
    {
        "id": "b640b7d51f9d0adf",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "to COOL_H",
        "mode": "link",
        "links": [
            "030fbd5026e5a295",
            "3072102c9a588df4"
        ],
        "x": 1930,
        "y": 3460,
        "wires": [],
        "l": true
    },
    {
        "id": "93092472a2d44b45",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "to COOL_T",
        "mode": "link",
        "links": [
            "7122d217051222ff",
            "e6d062c49d66078a"
        ],
        "x": 1930,
        "y": 3500,
        "wires": [],
        "l": true
    },
    {
        "id": "587b0d3cfd2547c8",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Store description",
        "func": "global.set('HW_sensors.sensor' + msg.topic + '_description', msg.payload, \"file\");\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "4434bbfc4fa3c88a",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Load",
        "func": "var HW_sensors = global.get('HW_sensors', \"file\");\nif (HW_sensors === undefined) { return null }\n\nlet msg1 = {};\n\nfor (let i = 1; i < 16; i++) {\n\n    var sensor = global.get('HW_sensors.sensor' + i + '_description', \"file\")\n    if (sensor !== undefined) {\n        msg1.payload = sensor;\n        msg1.topic = i;\n        node.send(msg1);\n    }\n}\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1380,
        "wires": [
            [
                "9872b4fa74a08183"
            ]
        ]
    },
    {
        "id": "9872b4fa74a08183",
        "type": "switch",
        "z": "ad980a450f532e53",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "9",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "11",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "12",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "13",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "14",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "15",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 15,
        "x": 1530,
        "y": 1380,
        "wires": [
            [
                "86fb1b40ca0a082a"
            ],
            [
                "07a9f4efe7d73c33"
            ],
            [
                "4d5c5f6c333f57c1"
            ],
            [
                "cbc0f89b4009e7bf"
            ],
            [
                "bcfa60ad0e4f95ef"
            ],
            [
                "5a5e94e2a3e655cf"
            ],
            [
                "0542c0b24d3d03bd"
            ],
            [
                "de59a5045ec08aa0"
            ],
            [
                "0f5e24d885272ec7"
            ],
            [
                "b9dd10f89ca69546"
            ],
            [
                "7457c39c2f7f9e8e"
            ],
            [
                "93dd34f905b36c39"
            ],
            [
                "d29a1ab6fee9842c"
            ],
            [
                "11e3014aeef8ecb6"
            ],
            [
                "cb89d1260993986e"
            ]
        ],
        "outputLabels": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "810605542482fc46",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Load",
        "func": "var HW_sensors = global.get('HW_sensors', \"file\");\nif (HW_sensors === undefined) { return null }\n\nlet msg1 = {};\n\nfor (let i = 1; i < 16; i++) {\n\n    var sensor = global.get('HW_sensors.sensor' + i + '_purpose', \"file\")\n    if (sensor !== undefined) {\n        msg1.payload = sensor;\n        msg1.topic = i;\n        node.send(msg1);\n    }\n}\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1380,
        "wires": [
            [
                "8525e4745b22470a"
            ]
        ]
    },
    {
        "id": "8525e4745b22470a",
        "type": "switch",
        "z": "ad980a450f532e53",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "9",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "11",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "12",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "13",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "14",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "15",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 15,
        "x": 1970,
        "y": 1380,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [
                "34868eeb56845ea0"
            ],
            [
                "7257386274bfc9ce"
            ],
            [
                "91e6067c70ab7883"
            ],
            [
                "463675f901a8e9bd"
            ],
            [
                "e5744c3c1ea2e735"
            ],
            [
                "f5513cf08d5f566d"
            ],
            [
                "9500347320e93faa"
            ],
            [
                "2a172983b7317926"
            ],
            [
                "48708d250b439703"
            ]
        ],
        "outputLabels": [
            "1",
            "2",
            "3",
            "4",
            "5",
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null
        ]
    },
    {
        "id": "284e8f8f263c52b4",
        "type": "delay",
        "z": "ad980a450f532e53",
        "name": "1/15min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 940,
        "y": 1380,
        "wires": [
            [
                "3d23b01db5990a1a",
                "4434bbfc4fa3c88a",
                "810605542482fc46"
            ]
        ]
    },
    {
        "id": "605ace8f1792af16",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "6Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 38,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1440,
        "y": 2120,
        "wires": [
            [
                "8c469537de611b6c"
            ]
        ]
    },
    {
        "id": "30e74f6c68acd341",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 40,
        "width": 2,
        "height": 1,
        "name": "Value6",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1970,
        "y": 2120,
        "wires": []
    },
    {
        "id": "8376eda776955c0a",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 37,
        "width": 1,
        "height": 1,
        "name": "6",
        "label": "6",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 2080,
        "wires": []
    },
    {
        "id": "5a5e94e2a3e655cf",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description6",
        "label": "",
        "tooltip": "",
        "group": "24b2fad95360cd29",
        "order": 39,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "6",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 2120,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "963d86eb39178610",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete6",
        "group": "24b2fad95360cd29",
        "order": 42,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 2120,
        "wires": [
            [
                "a98a8b8b4621fd0c"
            ]
        ]
    },
    {
        "id": "94bd798af922edc4",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor6",
        "func": "if (typeof msg.payload === 'object') { return null }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 6;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) {msg.topic = 'no_topic';}\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\nif (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.payload = Math.abs(msg2.payload);\nif (msg2.payload == 0) { return null ;}\n\nmsg2.destination = 'P1_CONSUMPTION';\nnode.send([null, msg2, msg2])\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2120,
        "wires": [
            [
                "605ace8f1792af16"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "30e74f6c68acd341"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "a98a8b8b4621fd0c",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 54",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 6;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\");\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2120,
        "wires": [
            [
                "30e74f6c68acd341",
                "5a5e94e2a3e655cf",
                "02d74fd3273f05bd"
            ]
        ]
    },
    {
        "id": "8c469537de611b6c",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor6",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor6_purpose",
                "pt": "global",
                "to": "P1_CONSUMPTION",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 2160,
        "wires": [
            [
                "30e74f6c68acd341"
            ]
        ]
    },
    {
        "id": "1c2b1f28c1ea0a2f",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 1,
        "width": 1,
        "height": 1,
        "name": "H_ID",
        "label": "ID",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 2600,
        "wires": []
    },
    {
        "id": "125452d0b815cf40",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 2,
        "width": 11,
        "height": 1,
        "name": "H_Sensor wire id",
        "label": "1 Wire sensor topic",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1410,
        "y": 2600,
        "wires": []
    },
    {
        "id": "cb7c9280af0eb340",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "H_Description",
        "label": "Description",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 2600,
        "wires": []
    },
    {
        "id": "fece1e8a94dd5cff",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "H_Value",
        "label": "Value",
        "format": "",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1980,
        "y": 2600,
        "wires": []
    },
    {
        "id": "cfe3898c0a708ecf",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "Purpose",
        "label": "Purpose",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2140,
        "y": 2600,
        "wires": []
    },
    {
        "id": "4074c70638b70122",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "7Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 44,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1440,
        "y": 2340,
        "wires": [
            [
                "3d89ab0cb1947593"
            ]
        ]
    },
    {
        "id": "b345397281d55c5a",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "d": true,
        "group": "24b2fad95360cd29",
        "order": 46,
        "width": 2,
        "height": 1,
        "name": "Value7",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1970,
        "y": 2340,
        "wires": []
    },
    {
        "id": "0542c0b24d3d03bd",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "Description7",
        "label": "",
        "tooltip": "",
        "group": "24b2fad95360cd29",
        "order": 45,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "7",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 2340,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "eaf9a043bee05412",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "Delete7",
        "group": "24b2fad95360cd29",
        "order": 48,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 2340,
        "wires": [
            [
                "35b8404d6480a5af"
            ]
        ]
    },
    {
        "id": "34868eeb56845ea0",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "7Purpose",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 47,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "None - Reading",
                "value": "none",
                "type": "str"
            },
            {
                "label": "WAR Function - Temperature",
                "value": "WAR",
                "type": "str"
            },
            {
                "label": "RTC Function - Temperature",
                "value": "RTC",
                "type": "str"
            },
            {
                "label": "COOL Function - Humidity",
                "value": "COOL_H",
                "type": "str"
            },
            {
                "label": "COOL Function - Temperature",
                "value": "COOL_T",
                "type": "str"
            },
            {
                "label": "Power production",
                "value": "P1_PRODUCTION",
                "type": "str"
            },
            {
                "label": "Power consumption",
                "value": "P1_CONSUMPTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "purpose",
        "topicType": "str",
        "className": "",
        "x": 2140,
        "y": 2340,
        "wires": [
            [
                "35b8404d6480a5af"
            ]
        ]
    },
    {
        "id": "31e110399cb3ebdf",
        "type": "function",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "Sensor7",
        "func": "if (typeof msg.payload === 'object') { return null }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 7;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\nif (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\n\nvar destinations = global.get('HW_sensors.sensor' + i + '_purpose', \"file\") || 'none';\nif (destinations == '' || destinations == 'none') { return [null, null, msg2] }\n\nif (destinations.includes('WAR') === true) { msg2.destination = 'WAR'; node.send([null, msg2, msg2]) }\nif (destinations.includes('RTC') === true) { msg2.destination = 'RTC'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_H') === true) { msg2.destination = 'COOL_H'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_T') === true) { msg2.destination = 'COOL_T'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_PRODUCTION') === true) { msg2.destination = 'P1_PRODUCTION'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_CONSUMPTION') === true) { msg2.destination = 'P1_CONSUMPTION'; node.send([null, msg2, msg2]) }",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2340,
        "wires": [
            [
                "4074c70638b70122"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "b345397281d55c5a"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "35b8404d6480a5af",
        "type": "function",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "function 55",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 7;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\")\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2340,
        "wires": [
            [
                "34868eeb56845ea0",
                "b345397281d55c5a",
                "0542c0b24d3d03bd",
                "e78c1af9bad21216"
            ]
        ]
    },
    {
        "id": "3d89ab0cb1947593",
        "type": "change",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor7",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 2380,
        "wires": [
            [
                "b345397281d55c5a"
            ]
        ]
    },
    {
        "id": "782d5fae5e99e803",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "8Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 50,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1440,
        "y": 2440,
        "wires": [
            [
                "a5882e865c218f68"
            ]
        ]
    },
    {
        "id": "7e30548c152239fd",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "d": true,
        "group": "24b2fad95360cd29",
        "order": 52,
        "width": 2,
        "height": 1,
        "name": "Value8",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1970,
        "y": 2440,
        "wires": []
    },
    {
        "id": "de59a5045ec08aa0",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "Description8",
        "label": "",
        "tooltip": "",
        "group": "24b2fad95360cd29",
        "order": 51,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "8",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 2440,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "8dbab2ebd047a5eb",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "Delete8",
        "group": "24b2fad95360cd29",
        "order": 54,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 2440,
        "wires": [
            [
                "a8b2416b6df60903"
            ]
        ]
    },
    {
        "id": "7257386274bfc9ce",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "8Purpose",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "24b2fad95360cd29",
        "order": 53,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "None - Reading",
                "value": "none",
                "type": "str"
            },
            {
                "label": "WAR Function - Temperature",
                "value": "WAR",
                "type": "str"
            },
            {
                "label": "RTC Function - Temperature",
                "value": "RTC",
                "type": "str"
            },
            {
                "label": "COOL Function - Humidity",
                "value": "COOL_H",
                "type": "str"
            },
            {
                "label": "COOL Function - Temperature",
                "value": "COOL_T",
                "type": "str"
            },
            {
                "label": "Power production",
                "value": "P1_PRODUCTION",
                "type": "str"
            },
            {
                "label": "Power consumption",
                "value": "P1_CONSUMPTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "purpose",
        "topicType": "str",
        "className": "",
        "x": 2140,
        "y": 2440,
        "wires": [
            [
                "a8b2416b6df60903"
            ]
        ]
    },
    {
        "id": "5c67d59911b90345",
        "type": "function",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "Sensor8",
        "func": "if (typeof msg.payload === 'object') { return null }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 8;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\nif (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\n\nvar destinations = global.get('HW_sensors.sensor' + i + '_purpose', \"file\") || 'none';\nif (destinations == '' || destinations == 'none') { return [null, null, msg2] }\n\nif (destinations.includes('WAR') === true) { msg2.destination = 'WAR'; node.send([null, msg2, msg2]) }\nif (destinations.includes('RTC') === true) { msg2.destination = 'RTC'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_H') === true) { msg2.destination = 'COOL_H'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_T') === true) { msg2.destination = 'COOL_T'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_PRODUCTION') === true) { msg2.destination = 'P1_PRODUCTION'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_CONSUMPTION') === true) { msg2.destination = 'P1_CONSUMPTION'; node.send([null, msg2, msg2]) }",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2440,
        "wires": [
            [
                "782d5fae5e99e803"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "7e30548c152239fd"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "a8b2416b6df60903",
        "type": "function",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "function 56",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 8;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined,\"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\")\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2440,
        "wires": [
            [
                "7257386274bfc9ce",
                "7e30548c152239fd",
                "de59a5045ec08aa0",
                "79c0597bbc534417"
            ]
        ]
    },
    {
        "id": "a5882e865c218f68",
        "type": "change",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor8",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 2480,
        "wires": [
            [
                "7e30548c152239fd"
            ]
        ]
    },
    {
        "id": "b538cfd6049620d0",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "9Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 8,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 2680,
        "wires": [
            [
                "a613dca44e716612"
            ]
        ]
    },
    {
        "id": "d17c08f7fc0f567f",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "Value9",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1970,
        "y": 2680,
        "wires": []
    },
    {
        "id": "0f5e24d885272ec7",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description9",
        "label": "",
        "tooltip": "",
        "group": "4a6d0f091176e20f",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "9",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 2680,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "41599f0eaa921a42",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete9",
        "group": "4a6d0f091176e20f",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 2680,
        "wires": [
            [
                "b1c57c9b5b6d3fd5"
            ]
        ]
    },
    {
        "id": "91e6067c70ab7883",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "9Purpose",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 11,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "None - Reading",
                "value": "none",
                "type": "str"
            },
            {
                "label": "WAR Function - Temperature",
                "value": "WAR",
                "type": "str"
            },
            {
                "label": "RTC Function - Temperature",
                "value": "RTC",
                "type": "str"
            },
            {
                "label": "COOL Function - Humidity",
                "value": "COOL_H",
                "type": "str"
            },
            {
                "label": "COOL Function - Temperature",
                "value": "COOL_T",
                "type": "str"
            },
            {
                "label": "Power production",
                "value": "P1_PRODUCTION",
                "type": "str"
            },
            {
                "label": "Power consumption",
                "value": "P1_CONSUMPTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "purpose",
        "topicType": "str",
        "className": "",
        "x": 2140,
        "y": 2680,
        "wires": [
            [
                "b1c57c9b5b6d3fd5"
            ]
        ]
    },
    {
        "id": "a2b0fc2580f1371a",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor9",
        "func": "if (typeof msg.payload === 'object') { return null ;}\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 9;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i,\"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) {msg.topic = 'no_topic';}\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor,\"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\n//if (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\n\nvar destinations = global.get('HW_sensors.sensor' + i + '_purpose', \"file\") || 'none';\nif (destinations == '' || destinations == 'none') { return [null, null, msg2] }\n\nif (destinations.includes('WAR') === true) { msg2.destination = 'WAR'; node.send([null, msg2, msg2]) }\nif (destinations.includes('RTC') === true) { msg2.destination = 'RTC'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_H') === true) { msg2.destination = 'COOL_H'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_T') === true) { msg2.destination = 'COOL_T'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_PRODUCTION') === true) { msg2.destination = 'P1_PRODUCTION'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_CONSUMPTION') === true) { msg2.destination = 'P1_CONSUMPTION'; node.send([null, msg2, msg2]) }\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2680,
        "wires": [
            [
                "b538cfd6049620d0"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "d17c08f7fc0f567f"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "b1c57c9b5b6d3fd5",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 57",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 9;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\")\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2680,
        "wires": [
            [
                "91e6067c70ab7883",
                "d17c08f7fc0f567f",
                "0f5e24d885272ec7",
                "2920c86e99161faf"
            ]
        ]
    },
    {
        "id": "a613dca44e716612",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor9",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 2720,
        "wires": [
            [
                "d17c08f7fc0f567f"
            ]
        ]
    },
    {
        "id": "4f33cb432b1cec46",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "10Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 14,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 2760,
        "wires": [
            [
                "d14e4618d7ce4270"
            ]
        ]
    },
    {
        "id": "503ac85e89d2adc2",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 16,
        "width": 2,
        "height": 1,
        "name": "Value10",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1980,
        "y": 2760,
        "wires": []
    },
    {
        "id": "b9dd10f89ca69546",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description10",
        "label": "",
        "tooltip": "",
        "group": "4a6d0f091176e20f",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "10",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1720,
        "y": 2760,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "26e639c3040a13da",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete10",
        "group": "4a6d0f091176e20f",
        "order": 18,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 2760,
        "wires": [
            [
                "e0029d267dd1efba"
            ]
        ]
    },
    {
        "id": "463675f901a8e9bd",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "10Purpose",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 17,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "None - Reading",
                "value": "none",
                "type": "str"
            },
            {
                "label": "WAR Function - Temperature",
                "value": "WAR",
                "type": "str"
            },
            {
                "label": "RTC Function - Temperature",
                "value": "RTC",
                "type": "str"
            },
            {
                "label": "COOL Function - Humidity",
                "value": "COOL_H",
                "type": "str"
            },
            {
                "label": "COOL Function - Temperature",
                "value": "COOL_T",
                "type": "str"
            },
            {
                "label": "Power production",
                "value": "P1_PRODUCTION",
                "type": "str"
            },
            {
                "label": "Power consumption",
                "value": "P1_CONSUMPTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "purpose",
        "topicType": "str",
        "className": "",
        "x": 2150,
        "y": 2760,
        "wires": [
            [
                "e0029d267dd1efba"
            ]
        ]
    },
    {
        "id": "b38d809975b77df6",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor10",
        "func": "if (typeof msg.payload === 'object') { return null ;}\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 10;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) {msg.topic = 'no_topic';}\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\n//if (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\n\nvar destinations = global.get('HW_sensors.sensor' + i + '_purpose', \"file\") || 'none';\nif (destinations == '' || destinations == 'none') { return [null, null, msg2] }\n\nif (destinations.includes('WAR') === true) { msg2.destination = 'WAR'; node.send([null, msg2, msg2]) }\nif (destinations.includes('RTC') === true) { msg2.destination = 'RTC'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_H') === true) { msg2.destination = 'COOL_H'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_T') === true) { msg2.destination = 'COOL_T'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_PRODUCTION') === true) { msg2.destination = 'P1_PRODUCTION'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_CONSUMPTION') === true) { msg2.destination = 'P1_CONSUMPTION'; node.send([null, msg2, msg2]) }\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2760,
        "wires": [
            [
                "4f33cb432b1cec46"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "503ac85e89d2adc2"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "e0029d267dd1efba",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 58",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 10;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\")\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2760,
        "wires": [
            [
                "463675f901a8e9bd",
                "503ac85e89d2adc2",
                "b9dd10f89ca69546",
                "88a0e50150d3ed13"
            ]
        ]
    },
    {
        "id": "d14e4618d7ce4270",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor10",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 2800,
        "wires": [
            [
                "503ac85e89d2adc2"
            ]
        ]
    },
    {
        "id": "d6a68b4efe67cdc8",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "11Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 20,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 2840,
        "wires": [
            [
                "1100fe314b863640"
            ]
        ]
    },
    {
        "id": "f5e144a7ce453f4a",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 22,
        "width": 2,
        "height": 1,
        "name": "Value11",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1980,
        "y": 2840,
        "wires": []
    },
    {
        "id": "7457c39c2f7f9e8e",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description11",
        "label": "",
        "tooltip": "",
        "group": "4a6d0f091176e20f",
        "order": 21,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "11",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1720,
        "y": 2840,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "5ef131876aa697b4",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete11",
        "group": "4a6d0f091176e20f",
        "order": 24,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 2840,
        "wires": [
            [
                "8ed0b640c5b7a972"
            ]
        ]
    },
    {
        "id": "e5744c3c1ea2e735",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "11Purpose",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 23,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "None - Reading",
                "value": "none",
                "type": "str"
            },
            {
                "label": "WAR Function - Temperature",
                "value": "WAR",
                "type": "str"
            },
            {
                "label": "RTC Function - Temperature",
                "value": "RTC",
                "type": "str"
            },
            {
                "label": "COOL Function - Humidity",
                "value": "COOL_H",
                "type": "str"
            },
            {
                "label": "COOL Function - Temperature",
                "value": "COOL_T",
                "type": "str"
            },
            {
                "label": "Power production",
                "value": "P1_PRODUCTION",
                "type": "str"
            },
            {
                "label": "Power consumption",
                "value": "P1_CONSUMPTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "purpose",
        "topicType": "str",
        "className": "",
        "x": 2150,
        "y": 2840,
        "wires": [
            [
                "8ed0b640c5b7a972"
            ]
        ]
    },
    {
        "id": "4446e1bc86e2194b",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor11",
        "func": "if (typeof msg.payload === 'object') { return null; }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 11;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) { msg.topic = 'no_topic'; }\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\n//if (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\n\nvar destinations = global.get('HW_sensors.sensor' + i + '_purpose', \"file\") || 'none';\nif (destinations == '' || destinations == 'none') { return [null, null, msg2] }\n\nif (destinations.includes('WAR') === true) { msg2.destination = 'WAR'; node.send([null, msg2, msg2]) }\nif (destinations.includes('RTC') === true) { msg2.destination = 'RTC'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_H') === true) { msg2.destination = 'COOL_H'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_T') === true) { msg2.destination = 'COOL_T'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_PRODUCTION') === true) { msg2.destination = 'P1_PRODUCTION'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_CONSUMPTION') === true) { msg2.destination = 'P1_CONSUMPTION'; node.send([null, msg2, msg2]) }\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2840,
        "wires": [
            [
                "d6a68b4efe67cdc8"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "f5e144a7ce453f4a"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "8ed0b640c5b7a972",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 59",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 11;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\")\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2840,
        "wires": [
            [
                "e5744c3c1ea2e735",
                "f5e144a7ce453f4a",
                "7457c39c2f7f9e8e",
                "718cb610aeb7ff01"
            ]
        ]
    },
    {
        "id": "1100fe314b863640",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor11",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 2880,
        "wires": [
            [
                "f5e144a7ce453f4a"
            ]
        ]
    },
    {
        "id": "0a6adcb22e4cf244",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "12Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 26,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 2920,
        "wires": [
            [
                "d3d684fadff317ce"
            ]
        ]
    },
    {
        "id": "848b4bf58750dc0b",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 28,
        "width": 2,
        "height": 1,
        "name": "Value12",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1980,
        "y": 2920,
        "wires": []
    },
    {
        "id": "93dd34f905b36c39",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description12",
        "label": "",
        "tooltip": "",
        "group": "4a6d0f091176e20f",
        "order": 27,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "12",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1720,
        "y": 2920,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "4543666c4c73fb47",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete12",
        "group": "4a6d0f091176e20f",
        "order": 30,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 2920,
        "wires": [
            [
                "53619a035d70a50a"
            ]
        ]
    },
    {
        "id": "f5513cf08d5f566d",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "12Purpose",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 29,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "None - Reading",
                "value": "none",
                "type": "str"
            },
            {
                "label": "WAR Function - Temperature",
                "value": "WAR",
                "type": "str"
            },
            {
                "label": "RTC Function - Temperature",
                "value": "RTC",
                "type": "str"
            },
            {
                "label": "COOL Function - Humidity",
                "value": "COOL_H",
                "type": "str"
            },
            {
                "label": "COOL Function - Temperature",
                "value": "COOL_T",
                "type": "str"
            },
            {
                "label": "Power production",
                "value": "P1_PRODUCTION",
                "type": "str"
            },
            {
                "label": "Power consumption",
                "value": "P1_CONSUMPTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "purpose",
        "topicType": "str",
        "className": "",
        "x": 2150,
        "y": 2920,
        "wires": [
            [
                "53619a035d70a50a"
            ]
        ]
    },
    {
        "id": "fa3d0c7433d6a768",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor12",
        "func": "if (typeof msg.payload === 'object') { return null; }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 12;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) { msg.topic = 'no_topic'; }\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\n//if (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\n\nvar destinations = global.get('HW_sensors.sensor' + i + '_purpose', \"file\") || 'none';\nif (destinations == '' || destinations == 'none') { return [null, null, msg2] }\n\nif (destinations.includes('WAR') === true) { msg2.destination = 'WAR'; node.send([null, msg2, msg2]) }\nif (destinations.includes('RTC') === true) { msg2.destination = 'RTC'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_H') === true) { msg2.destination = 'COOL_H'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_T') === true) { msg2.destination = 'COOL_T'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_PRODUCTION') === true) { msg2.destination = 'P1_PRODUCTION'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_CONSUMPTION') === true) { msg2.destination = 'P1_CONSUMPTION'; node.send([null, msg2, msg2]) }\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2920,
        "wires": [
            [
                "0a6adcb22e4cf244"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "848b4bf58750dc0b"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "53619a035d70a50a",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 60",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 12;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\")\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2920,
        "wires": [
            [
                "f5513cf08d5f566d",
                "848b4bf58750dc0b",
                "93dd34f905b36c39",
                "51a19b56f0f4870a"
            ]
        ]
    },
    {
        "id": "d3d684fadff317ce",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor12",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 2960,
        "wires": [
            [
                "848b4bf58750dc0b"
            ]
        ]
    },
    {
        "id": "134ad3f9e1d29211",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "d": true,
        "group": "24b2fad95360cd29",
        "order": 43,
        "width": 1,
        "height": 1,
        "name": "7",
        "label": "7",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 2300,
        "wires": []
    },
    {
        "id": "8e078e30d3dfc73f",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "d": true,
        "group": "24b2fad95360cd29",
        "order": 49,
        "width": 1,
        "height": 1,
        "name": "8",
        "label": "8",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 2400,
        "wires": []
    },
    {
        "id": "736047326edeb73c",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 7,
        "width": 1,
        "height": 1,
        "name": "9",
        "label": "9",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 2640,
        "wires": []
    },
    {
        "id": "35365cb9cbbcd868",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 13,
        "width": 1,
        "height": 1,
        "name": "10",
        "label": "10",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 2720,
        "wires": []
    },
    {
        "id": "adfedc5266594547",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 19,
        "width": 1,
        "height": 1,
        "name": "11",
        "label": "11",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 2800,
        "wires": []
    },
    {
        "id": "a633153ab281a2f3",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 25,
        "width": 1,
        "height": 1,
        "name": "12",
        "label": "12",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 2880,
        "wires": []
    },
    {
        "id": "3c0ab7076bb1b08e",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "13Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 32,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 3000,
        "wires": [
            [
                "f14e4ec0056b370b"
            ]
        ]
    },
    {
        "id": "303b0429f9fc5e84",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 34,
        "width": 2,
        "height": 1,
        "name": "Value13",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1980,
        "y": 3000,
        "wires": []
    },
    {
        "id": "d29a1ab6fee9842c",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description13",
        "label": "",
        "tooltip": "",
        "group": "4a6d0f091176e20f",
        "order": 33,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "13",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1720,
        "y": 3000,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "69853669067c3f45",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete13",
        "group": "4a6d0f091176e20f",
        "order": 36,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 3000,
        "wires": [
            [
                "0123b24eb08974d5"
            ]
        ]
    },
    {
        "id": "9500347320e93faa",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "13Purpose",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 35,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "None - Reading",
                "value": "none",
                "type": "str"
            },
            {
                "label": "WAR Function - Temperature",
                "value": "WAR",
                "type": "str"
            },
            {
                "label": "RTC Function - Temperature",
                "value": "RTC",
                "type": "str"
            },
            {
                "label": "COOL Function - Humidity",
                "value": "COOL_H",
                "type": "str"
            },
            {
                "label": "COOL Function - Temperature",
                "value": "COOL_T",
                "type": "str"
            },
            {
                "label": "Power production",
                "value": "P1_PRODUCTION",
                "type": "str"
            },
            {
                "label": "Power consumption",
                "value": "P1_CONSUMPTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "purpose",
        "topicType": "str",
        "className": "",
        "x": 2150,
        "y": 3000,
        "wires": [
            [
                "0123b24eb08974d5"
            ]
        ]
    },
    {
        "id": "01166a4667d3d458",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor13",
        "func": "if (typeof msg.payload === 'object') { return null; }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 13;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) { msg.topic = 'no_topic'; }\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\n//if (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\n\nvar destinations = global.get('HW_sensors.sensor' + i + '_purpose', \"file\") || 'none';\nif (destinations == '' || destinations == 'none') { return [null, null, msg2] }\n\nif (destinations.includes('WAR') === true) { msg2.destination = 'WAR'; node.send([null, msg2, msg2]) }\nif (destinations.includes('RTC') === true) { msg2.destination = 'RTC'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_H') === true) { msg2.destination = 'COOL_H'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_T') === true) { msg2.destination = 'COOL_T'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_PRODUCTION') === true) { msg2.destination = 'P1_PRODUCTION'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_CONSUMPTION') === true) { msg2.destination = 'P1_CONSUMPTION'; node.send([null, msg2, msg2]) }\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3000,
        "wires": [
            [
                "3c0ab7076bb1b08e"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "303b0429f9fc5e84"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "0123b24eb08974d5",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 61",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 13;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\")\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 3000,
        "wires": [
            [
                "9500347320e93faa",
                "303b0429f9fc5e84",
                "d29a1ab6fee9842c",
                "c74bd5ecdd3f768f"
            ]
        ]
    },
    {
        "id": "f14e4ec0056b370b",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor13",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 3040,
        "wires": [
            [
                "303b0429f9fc5e84"
            ]
        ]
    },
    {
        "id": "b25a8ebef4f6a55c",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 31,
        "width": 1,
        "height": 1,
        "name": "13",
        "label": "13",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 2960,
        "wires": []
    },
    {
        "id": "6589ddd914516e95",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "14Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 38,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 3080,
        "wires": [
            [
                "0d94653efcac1805"
            ]
        ]
    },
    {
        "id": "20cd5ff90a9fac8f",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 40,
        "width": 2,
        "height": 1,
        "name": "Value14",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1980,
        "y": 3080,
        "wires": []
    },
    {
        "id": "11e3014aeef8ecb6",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description14",
        "label": "",
        "tooltip": "",
        "group": "4a6d0f091176e20f",
        "order": 39,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "14",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1720,
        "y": 3080,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "3f7589dde9789232",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete14",
        "group": "4a6d0f091176e20f",
        "order": 42,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 3080,
        "wires": [
            [
                "53ab9d97751e314c"
            ]
        ]
    },
    {
        "id": "2a172983b7317926",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "14Purpose",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 41,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "None - Reading",
                "value": "none",
                "type": "str"
            },
            {
                "label": "WAR Function - Temperature",
                "value": "WAR",
                "type": "str"
            },
            {
                "label": "RTC Function - Temperature",
                "value": "RTC",
                "type": "str"
            },
            {
                "label": "COOL Function - Humidity",
                "value": "COOL_H",
                "type": "str"
            },
            {
                "label": "COOL Function - Temperature",
                "value": "COOL_T",
                "type": "str"
            },
            {
                "label": "Power production",
                "value": "P1_PRODUCTION",
                "type": "str"
            },
            {
                "label": "Power consumption",
                "value": "P1_CONSUMPTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "purpose",
        "topicType": "str",
        "className": "",
        "x": 2150,
        "y": 3080,
        "wires": [
            [
                "53ab9d97751e314c"
            ]
        ]
    },
    {
        "id": "8174fd99e6dae811",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor14",
        "func": "if (typeof msg.payload === 'object') { return null; }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 14;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) { msg.topic = 'no_topic'; }\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\n//if (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\n\nvar destinations = global.get('HW_sensors.sensor' + i + '_purpose', \"file\") || 'none';\nif (destinations == '' || destinations == 'none') { return [null, null, msg2] }\n\nif (destinations.includes('WAR') === true) { msg2.destination = 'WAR'; node.send([null, msg2, msg2]) }\nif (destinations.includes('RTC') === true) { msg2.destination = 'RTC'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_H') === true) { msg2.destination = 'COOL_H'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_T') === true) { msg2.destination = 'COOL_T'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_PRODUCTION') === true) { msg2.destination = 'P1_PRODUCTION'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_CONSUMPTION') === true) { msg2.destination = 'P1_CONSUMPTION'; node.send([null, msg2, msg2]) }\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3080,
        "wires": [
            [
                "6589ddd914516e95"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "20cd5ff90a9fac8f"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "53ab9d97751e314c",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 62",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 14;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\")\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 3080,
        "wires": [
            [
                "2a172983b7317926",
                "20cd5ff90a9fac8f",
                "11e3014aeef8ecb6",
                "0ae7e6e93053c91b"
            ]
        ]
    },
    {
        "id": "0d94653efcac1805",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor14",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 3120,
        "wires": [
            [
                "20cd5ff90a9fac8f"
            ]
        ]
    },
    {
        "id": "d1412cf531e79cdc",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 37,
        "width": 1,
        "height": 1,
        "name": "14",
        "label": "14",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 3040,
        "wires": []
    },
    {
        "id": "6c91fb90fee0aae4",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "15Populate dropdown",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 44,
        "width": 11,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1420,
        "y": 3160,
        "wires": [
            [
                "8f67f776bebc592a"
            ]
        ]
    },
    {
        "id": "1bc3b8588f59c195",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 46,
        "width": 2,
        "height": 1,
        "name": "Value15",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1980,
        "y": 3160,
        "wires": []
    },
    {
        "id": "cb89d1260993986e",
        "type": "ui_text_input",
        "z": "ad980a450f532e53",
        "name": "Description15",
        "label": "",
        "tooltip": "",
        "group": "4a6d0f091176e20f",
        "order": 45,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "15",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1720,
        "y": 3160,
        "wires": [
            [
                "587b0d3cfd2547c8"
            ]
        ]
    },
    {
        "id": "93cf94c71c6da1e6",
        "type": "ui_button",
        "z": "ad980a450f532e53",
        "name": "Delete15",
        "group": "4a6d0f091176e20f",
        "order": 48,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 2300,
        "y": 3160,
        "wires": [
            [
                "27f84a7160e0b789"
            ]
        ]
    },
    {
        "id": "48708d250b439703",
        "type": "ui_dropdown",
        "z": "ad980a450f532e53",
        "name": "15Purpose",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "",
        "group": "4a6d0f091176e20f",
        "order": 47,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "None - Reading",
                "value": "none",
                "type": "str"
            },
            {
                "label": "WAR Function - Temperature",
                "value": "WAR",
                "type": "str"
            },
            {
                "label": "RTC Function - Temperature",
                "value": "RTC",
                "type": "str"
            },
            {
                "label": "COOL Function - Humidity",
                "value": "COOL_H",
                "type": "str"
            },
            {
                "label": "COOL Function - Temperature",
                "value": "COOL_T",
                "type": "str"
            },
            {
                "label": "Power production",
                "value": "P1_PRODUCTION",
                "type": "str"
            },
            {
                "label": "Power consumption",
                "value": "P1_CONSUMPTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "purpose",
        "topicType": "str",
        "className": "",
        "x": 2150,
        "y": 3160,
        "wires": [
            [
                "27f84a7160e0b789"
            ]
        ]
    },
    {
        "id": "b616241a6fb1333a",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Sensor15",
        "func": "if (typeof msg.payload === 'object') { return null; }\nif (msg.topic == 'zero_value') { return [null, null, msg]; }\n\nconst i = 15;      // <<<<<<<<<<<<<<< change this one !!!\n\nvar mqtt_sensor = flow.get('mqtt_sensor' + i, \"file\");\nif (mqtt_sensor === undefined) { mqtt_sensor = [] }                         // Check if the array exists\n\n//if (msg.topic === undefined) { msg.topic = 'no_topic'; }\n\nif (mqtt_sensor.includes(msg.topic) !== true) {\n    mqtt_sensor.push(msg.topic);                                            // Add to Array \n    mqtt_sensor = [...new Set(mqtt_sensor)];                                // Make unique\n    flow.set('mqtt_sensor' + i, mqtt_sensor, \"file\");                               // Store\n\n    var msg1 = {};\n    msg1.options = mqtt_sensor;\n    node.send([msg1, null])\n}\n\nvar selectedSensor = global.get('HW_sensors.sensor' + i, \"file\");\n//if (selectedSensor === undefined) { return null }\nif (msg.topic != selectedSensor) { return null }\n\nlet msg2 = {};\nmsg2.payload = msg.payload;\nmsg2.payload = Number(msg2.payload).toFixed(3);\nmsg2.payload = parseFloat(msg2.payload);\n\nvar destinations = global.get('HW_sensors.sensor' + i + '_purpose', \"file\") || 'none';\nif (destinations == '' || destinations == 'none') { return [null, null, msg2] }\n\nif (destinations.includes('WAR') === true) { msg2.destination = 'WAR'; node.send([null, msg2, msg2]) }\nif (destinations.includes('RTC') === true) { msg2.destination = 'RTC'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_H') === true) { msg2.destination = 'COOL_H'; node.send([null, msg2, msg2]) }\nif (destinations.includes('COOL_T') === true) { msg2.destination = 'COOL_T'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_PRODUCTION') === true) { msg2.destination = 'P1_PRODUCTION'; node.send([null, msg2, msg2]) }\nif (destinations.includes('P1_CONSUMPTION') === true) { msg2.destination = 'P1_CONSUMPTION'; node.send([null, msg2, msg2]) }\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3160,
        "wires": [
            [
                "6c91fb90fee0aae4"
            ],
            [
                "97ed113ea97d2c38"
            ],
            [
                "1bc3b8588f59c195"
            ]
        ],
        "outputLabels": [
            "read data",
            "value output",
            ""
        ]
    },
    {
        "id": "27f84a7160e0b789",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "function 63",
        "func": "let msg1 = {};\n\n///////////////////////\nconst i = 15;\n///////////////////////\n\nif (msg.topic == 'delete') {\n    flow.set('mqtt_sensor' + i, undefined, \"file\");\n    global.set('HW_sensors.sensor' + i, undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\")\n    global.set('HW_sensors.sensor' + i + '_description', undefined, \"file\")\n\n    msg1.payload = '';\n    msg1.options = undefined;\n    msg1.tooltip = undefined;\n\n    return msg1;\n}\n\nif (msg.topic == 'purpose' && msg.payload != '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', msg.payload, \"file\");\n    return null;\n}\n\nif (msg.topic == 'purpose' && msg.payload == '') {\n    global.set('HW_sensors.sensor' + i + '_purpose', undefined, \"file\");\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 3160,
        "wires": [
            [
                "48708d250b439703",
                "1bc3b8588f59c195",
                "cb89d1260993986e",
                "bb13a496767d5bd7"
            ]
        ]
    },
    {
        "id": "8f67f776bebc592a",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::HW_sensors.sensor15",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 3200,
        "wires": [
            [
                "1bc3b8588f59c195"
            ]
        ]
    },
    {
        "id": "4cefae84214312b1",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 43,
        "width": 1,
        "height": 1,
        "name": "15",
        "label": "15",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 3120,
        "wires": []
    },
    {
        "id": "f53a7616ad4546de",
        "type": "mqtt in",
        "z": "ad980a450f532e53",
        "name": "",
        "topic": "panasonic_heat_pump/1wire/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 950,
        "y": 2600,
        "wires": [
            [
                "b38d809975b77df6",
                "4446e1bc86e2194b",
                "fa3d0c7433d6a768",
                "01166a4667d3d458",
                "8174fd99e6dae811",
                "b616241a6fb1333a",
                "a2b0fc2580f1371a"
            ]
        ]
    },
    {
        "id": "489c94fc685ea205",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 6,
        "width": 1,
        "height": 1,
        "name": "1x1",
        "label": "",
        "format": "",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2290,
        "y": 1580,
        "wires": []
    },
    {
        "id": "6ee226c94ec7b41a",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "4a6d0f091176e20f",
        "order": 6,
        "width": 1,
        "height": 1,
        "name": "1x1",
        "label": "",
        "format": "",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2270,
        "y": 2600,
        "wires": []
    },
    {
        "id": "16e1fd4b8eca9c45",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "INSTRUCTION 2",
        "info": "",
        "x": 140,
        "y": 1020,
        "wires": [],
        "icon": "node-red-contrib-miio-roborock/homekit-logo.png"
    },
    {
        "id": "270bcb8d12aabc2a",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Connect 1 sensor per each link-in node",
        "info": "",
        "x": 410,
        "y": 1400,
        "wires": []
    },
    {
        "id": "bb8114e65fb3d698",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "You can connect a node with the output of a generic topic, like: \" esp32_devkit_2/sensor/# \"",
        "info": "",
        "x": 570,
        "y": 1440,
        "wires": []
    },
    {
        "id": "54565eb5cafae91d",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "If the sensor value is not used for a function, you do not have to set a purpose, or select 'None - Reading'",
        "info": "",
        "x": 620,
        "y": 1560,
        "wires": []
    },
    {
        "id": "559b3cc14fec8e78",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Through the GUI you select the exact topic of interest, and what is is used for.",
        "info": "One value can be used for multiple purposes, 1 temperature reading can be used for \"COOL Temp\"-function and \"RTC\"-function ",
        "x": 530,
        "y": 1520,
        "wires": []
    },
    {
        "id": "51357d89242e9577",
        "type": "inject",
        "z": "ad980a450f532e53",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "14",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 910,
        "y": 1340,
        "wires": [
            [
                "3d23b01db5990a1a"
            ]
        ]
    },
    {
        "id": "6d5a394e0a78ba93",
        "type": "delay",
        "z": "ad980a450f532e53",
        "name": "rate limit",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1700,
        "y": 3380,
        "wires": [
            [
                "90c369a401f8419d"
            ]
        ]
    },
    {
        "id": "d686633ddf895871",
        "type": "delay",
        "z": "ad980a450f532e53",
        "name": "rate limit",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1700,
        "y": 3420,
        "wires": [
            [
                "af24bcd85c7c6485"
            ]
        ]
    },
    {
        "id": "48951016bd81c603",
        "type": "delay",
        "z": "ad980a450f532e53",
        "name": "rate limit",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1700,
        "y": 3460,
        "wires": [
            [
                "b640b7d51f9d0adf"
            ]
        ]
    },
    {
        "id": "21c05c592db60472",
        "type": "delay",
        "z": "ad980a450f532e53",
        "name": "rate limit",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1700,
        "y": 3500,
        "wires": [
            [
                "93092472a2d44b45"
            ]
        ]
    },
    {
        "id": "6140d165fa484610",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 2020,
        "wires": [
            [
                "ecfd76da3da1072c"
            ]
        ]
    },
    {
        "id": "7fb34139909f29f7",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 1920,
        "wires": [
            [
                "802b990067d507a8"
            ]
        ]
    },
    {
        "id": "a3d891d7a4fccb03",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 1620,
        "wires": [
            [
                "371e34dbb6b8846f"
            ]
        ]
    },
    {
        "id": "601ee222a3ec99a4",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 1720,
        "wires": [
            [
                "594763cfd3f3a68c"
            ]
        ]
    },
    {
        "id": "c23aebb28d50ecf6",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 1820,
        "wires": [
            [
                "a4d558d17067a238"
            ]
        ]
    },
    {
        "id": "02d74fd3273f05bd",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 2120,
        "wires": [
            [
                "605ace8f1792af16"
            ]
        ]
    },
    {
        "id": "e78c1af9bad21216",
        "type": "change",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 2340,
        "wires": [
            [
                "4074c70638b70122"
            ]
        ]
    },
    {
        "id": "79c0597bbc534417",
        "type": "change",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 2440,
        "wires": [
            [
                "782d5fae5e99e803"
            ]
        ]
    },
    {
        "id": "2920c86e99161faf",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 2680,
        "wires": [
            [
                "b538cfd6049620d0"
            ]
        ]
    },
    {
        "id": "88a0e50150d3ed13",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 2760,
        "wires": [
            [
                "4f33cb432b1cec46"
            ]
        ]
    },
    {
        "id": "718cb610aeb7ff01",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 2840,
        "wires": [
            [
                "d6a68b4efe67cdc8"
            ]
        ]
    },
    {
        "id": "51a19b56f0f4870a",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 2920,
        "wires": [
            [
                "0a6adcb22e4cf244"
            ]
        ]
    },
    {
        "id": "c74bd5ecdd3f768f",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 3000,
        "wires": [
            [
                "3c0ab7076bb1b08e"
            ]
        ]
    },
    {
        "id": "0ae7e6e93053c91b",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 3080,
        "wires": [
            [
                "6589ddd914516e95"
            ]
        ]
    },
    {
        "id": "bb13a496767d5bd7",
        "type": "change",
        "z": "ad980a450f532e53",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 3160,
        "wires": [
            [
                "6c91fb90fee0aae4"
            ]
        ]
    },
    {
        "id": "9d14f9dbabd85620",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "MQTT/HomeAssistant/Domoticz_6_Consumption",
        "links": [
            "6c183b3f2bf4e8a8",
            "bfa7a6b2f2f47865"
        ],
        "x": 580,
        "y": 2120,
        "wires": [
            [
                "94bd798af922edc4",
                "9efd1ffb79b1e0ee"
            ]
        ],
        "l": true
    },
    {
        "id": "c76b6e95176071a3",
        "type": "link in",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "MQTT/HomeAssistant/Domoticz_7_INPUT",
        "links": [
            "104765b8358b4a6f"
        ],
        "x": 600,
        "y": 2340,
        "wires": [
            [
                "31e110399cb3ebdf",
                "5bc4e626d1754115"
            ]
        ],
        "l": true
    },
    {
        "id": "8da654a0e3cdf0f5",
        "type": "link in",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "MQTT/HomeAssistant/Domoticz_8_INPUT",
        "links": [
            "1e2568122a500ee7"
        ],
        "x": 600,
        "y": 2440,
        "wires": [
            [
                "5c67d59911b90345",
                "7c5353231519ee53"
            ]
        ],
        "l": true
    },
    {
        "id": "cbd9f65956ab693b",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "to P1 power consumption",
        "mode": "link",
        "links": [
            "d557c110dc040f11"
        ],
        "x": 1970,
        "y": 3580,
        "wires": [],
        "l": true
    },
    {
        "id": "426ef80beb8421b0",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "to P1 power production",
        "mode": "link",
        "links": [
            "4005ad2197c7fdc7"
        ],
        "x": 1970,
        "y": 3540,
        "wires": [],
        "l": true
    },
    {
        "id": "3a4124d31bd3489a",
        "type": "split",
        "z": "ad980a450f532e53",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1050,
        "y": 2040,
        "wires": [
            [
                "9991c47e17c83b32"
            ]
        ]
    },
    {
        "id": "51d18479d2a5ddec",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "object detection",
        "func": "if (typeof msg.payload === 'object') { node.warn('object') ; return msg}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2040,
        "wires": [
            [
                "3a4124d31bd3489a"
            ]
        ]
    },
    {
        "id": "d67d62969ebd2aad",
        "type": "split",
        "z": "ad980a450f532e53",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1050,
        "y": 1640,
        "wires": [
            [
                "8636d9f25052ddde"
            ]
        ]
    },
    {
        "id": "9c6f177b9315e543",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "object detection",
        "func": "if (typeof msg.payload === 'object') { node.warn('object') ; return msg}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1640,
        "wires": [
            [
                "d67d62969ebd2aad"
            ]
        ]
    },
    {
        "id": "3bfd4df493544ceb",
        "type": "split",
        "z": "ad980a450f532e53",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1050,
        "y": 1740,
        "wires": [
            [
                "cf4b81e94bf08b6a"
            ]
        ]
    },
    {
        "id": "e78f0ebbd0a9f531",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "object detection",
        "func": "if (typeof msg.payload === 'object') { node.warn('object') ; return msg}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1740,
        "wires": [
            [
                "3bfd4df493544ceb"
            ]
        ]
    },
    {
        "id": "93311fb7d79e2be4",
        "type": "split",
        "z": "ad980a450f532e53",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1050,
        "y": 1840,
        "wires": [
            [
                "3e9d2966af41db4b"
            ]
        ]
    },
    {
        "id": "d5870ab3915322ee",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "object detection",
        "func": "if (typeof msg.payload === 'object') { node.warn('object') ; return msg}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1840,
        "wires": [
            [
                "93311fb7d79e2be4"
            ]
        ]
    },
    {
        "id": "d6d4ca9cc6ecb7b4",
        "type": "split",
        "z": "ad980a450f532e53",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1050,
        "y": 1940,
        "wires": [
            [
                "688c93cec2693927"
            ]
        ]
    },
    {
        "id": "4e8c45428864189c",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "object detection",
        "func": "if (typeof msg.payload === 'object') { node.warn('object') ; return msg}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1940,
        "wires": [
            [
                "d6d4ca9cc6ecb7b4"
            ]
        ]
    },
    {
        "id": "4681f4a6e8fd5419",
        "type": "split",
        "z": "ad980a450f532e53",
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1050,
        "y": 2140,
        "wires": [
            [
                "94bd798af922edc4"
            ]
        ]
    },
    {
        "id": "9efd1ffb79b1e0ee",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "object detection",
        "func": "if (typeof msg.payload === 'object') { node.warn('object') ; return msg}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2140,
        "wires": [
            [
                "4681f4a6e8fd5419"
            ]
        ]
    },
    {
        "id": "f3e7f70a1b14e8fa",
        "type": "split",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1050,
        "y": 2360,
        "wires": [
            [
                "31e110399cb3ebdf"
            ]
        ]
    },
    {
        "id": "5bc4e626d1754115",
        "type": "function",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "object detection",
        "func": "if (typeof msg.payload === 'object') { node.warn('object') ; return msg}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2360,
        "wires": [
            [
                "f3e7f70a1b14e8fa"
            ]
        ]
    },
    {
        "id": "d0b42f9a7172be6a",
        "type": "split",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "Split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1050,
        "y": 2460,
        "wires": [
            [
                "5c67d59911b90345"
            ]
        ]
    },
    {
        "id": "7c5353231519ee53",
        "type": "function",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "object detection",
        "func": "if (typeof msg.payload === 'object') { node.warn('object') ; return msg}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2460,
        "wires": [
            [
                "d0b42f9a7172be6a"
            ]
        ]
    },
    {
        "id": "65a8ba8f22a5f95d",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Production",
        "func": "let msg1 = {}; msg1.topic = 'zero_value'; msg1.payload = 0;\nnode.send(msg1);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 3620,
        "wires": [
            [
                "75250b08708acb27"
            ]
        ]
    },
    {
        "id": "a6ca84867405eb77",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "Consumption",
        "func": "let msg1 = {}; msg1.topic = 'zero_value'; msg1.payload = 0;\nnode.send(msg1);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 3660,
        "wires": [
            [
                "d08de3c4f644afbd"
            ]
        ]
    },
    {
        "id": "29f20446ecb7ae5c",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out 83",
        "mode": "link",
        "links": [
            "25b5c6c2e35987ca"
        ],
        "x": 1965,
        "y": 3660,
        "wires": []
    },
    {
        "id": "bfa7a6b2f2f47865",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out 84",
        "mode": "link",
        "links": [
            "9d14f9dbabd85620"
        ],
        "x": 1965,
        "y": 3620,
        "wires": []
    },
    {
        "id": "e5c7fc26bfec3457",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 11,
        "width": 5,
        "height": 1,
        "name": "WAR function",
        "label": "WAR function (Temperature)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2140,
        "y": 1620,
        "wires": []
    },
    {
        "id": "a38cecd106543753",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 17,
        "width": 5,
        "height": 1,
        "name": "RTC function",
        "label": "RTC function (Temperature)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2130,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b46a41fa21ca0939",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 23,
        "width": 5,
        "height": 1,
        "name": "COOL Temp",
        "label": "COOL Function (Temperature)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2130,
        "y": 1820,
        "wires": []
    },
    {
        "id": "cfaed235c0d02d72",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 29,
        "width": 5,
        "height": 1,
        "name": "COOL Hum",
        "label": "COOL Function (Humidity)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2130,
        "y": 1920,
        "wires": []
    },
    {
        "id": "0e29793f1a0f6920",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 35,
        "width": 5,
        "height": 1,
        "name": "P1 production",
        "label": "Power production (Export)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2140,
        "y": 2020,
        "wires": []
    },
    {
        "id": "9ceca3b0f2da3359",
        "type": "ui_text",
        "z": "ad980a450f532e53",
        "group": "24b2fad95360cd29",
        "order": 41,
        "width": 5,
        "height": 1,
        "name": "P1 consumption",
        "label": "Power consumption (Import)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2140,
        "y": 2120,
        "wires": []
    },
    {
        "id": "8e43e420000e0739",
        "type": "comment",
        "z": "ad980a450f532e53",
        "d": true,
        "name": "Free to use",
        "info": "",
        "x": 690,
        "y": 2300,
        "wires": []
    },
    {
        "id": "603fd4b23757bb4b",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Custom switches / setpoints
        "info": "",
        "x": 1230,
        "y": 200,
        "wires": []
    },
    {
        "id": "ce9a268a6846ec97",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "INSTRUCTION 1",
        "info": "",
        "x": 140,
        "y": 240,
        "wires": [],
        "icon": "node-red-contrib-miio-roborock/homekit-logo.png"
    },
    {
        "id": "77e8d48e22d6f8c5",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "EXTERNAL ROOM TEMPERATURE SETPOINT",
        "info": "",
        "x": 420,
        "y": 240,
        "wires": []
    },
    {
        "id": "66268d37129a3cb7",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Connect your signal for Room Setpoint here. The expected input is a single numeric value",
        "info": "",
        "x": 1210,
        "y": 280,
        "wires": []
    },
    {
        "id": "a47610438b54e602",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Connect any signal to the 'Force DHW Link-in\". No expected value / data type. ANY msg coming through this input, will be used",
        "info": "",
        "x": 1320,
        "y": 380,
        "wires": []
    },
    {
        "id": "5fdc034f44ac48f9",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "* to trigger",
        "func": "let msg1={};\nmsg1.payload = 1;\nmsg1.topic = \"DHW\";\nmsg1.force = 1;\n\nreturn msg1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 380,
        "wires": [
            [
                "5c677fecb54920ff"
            ]
        ]
    },
    {
        "id": "b2dcf5fbac5c6aa1",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "toNum",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 280,
        "wires": [
            [
                "709cfb96bfb224ce"
            ]
        ]
    },
    {
        "id": "709cfb96bfb224ce",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out 85",
        "mode": "link",
        "links": [
            "534ceb039d7f9812"
        ],
        "x": 795,
        "y": 280,
        "wires": []
    },
    {
        "id": "9a106cdefc873348",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "Room Setpoint Link-in",
        "links": [
            "ca6a3a25d3074b64",
            "1911fbfbf89866a8",
            "7a27b2c8c4721ed9",
            "8a24b55b79985c68"
        ],
        "x": 360,
        "y": 280,
        "wires": [
            [
                "b2dcf5fbac5c6aa1"
            ]
        ],
        "l": true
    },
    {
        "id": "5c677fecb54920ff",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out 86",
        "mode": "link",
        "links": [
            "efe3dd019498a583"
        ],
        "x": 795,
        "y": 380,
        "wires": []
    },
    {
        "id": "8c9808071334d371",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "Force DHW Link-in",
        "links": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "5fdc034f44ac48f9"
            ]
        ],
        "l": true
    },
    {
        "id": "795fca69732006fc",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "EXTERNAL TRIGGER FOR DHW RUN",
        "info": "",
        "x": 390,
        "y": 340,
        "wires": []
    },
    {
        "id": "21999808907fb8ca",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "External Sensors ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 1230,
        "y": 980,
        "wires": []
    },
    {
        "id": "7a38e025d311caac",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "The 1 Wire sensors should automatically populate the dropdown list",
        "info": "",
        "x": 500,
        "y": 1480,
        "wires": []
    },
    {
        "id": "d08de3c4f644afbd",
        "type": "rbe",
        "z": "ad980a450f532e53",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1870,
        "y": 3660,
        "wires": [
            [
                "29f20446ecb7ae5c"
            ]
        ]
    },
    {
        "id": "75250b08708acb27",
        "type": "rbe",
        "z": "ad980a450f532e53",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1870,
        "y": 3620,
        "wires": [
            [
                "bfa7a6b2f2f47865"
            ]
        ]
    },
    {
        "id": "3b0c5855d9f81d85",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out 90",
        "mode": "link",
        "links": [
            "ce5a606d14d7a2fe"
        ],
        "x": 795,
        "y": 480,
        "wires": []
    },
    {
        "id": "50510191e3d7f7fc",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "External trigger BOOST",
        "links": [],
        "x": 360,
        "y": 480,
        "wires": [
            [
                "b7948d0dfa748885"
            ]
        ],
        "l": true
    },
    {
        "id": "8ddf5bc907dd5bea",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Connect any external signal. The signal payload can be true/false or 1/0 or on/off",
        "info": "",
        "x": 1180,
        "y": 480,
        "wires": []
    },
    {
        "id": "b7948d0dfa748885",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "toNum",
        "func": "msg.topic = 'GUI_boost_state'; \n\nif (msg.payload === true || msg.payload == 'on' || msg.payload == 'On') {\n    msg.payload = 1;\n    return msg;\n}\nif (msg.payload === false || msg.payload == 'off' || msg.payload == 'Off') {\n    msg.payload = 0;\n    return msg;\n}\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload == 0 || msg.payload == 1) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            [
                "3b0c5855d9f81d85"
            ]
        ]
    },
    {
        "id": "f706c72d01f5f905",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "EXTERNAL TRIGGER FOR DHW BOOST",
        "info": "",
        "x": 400,
        "y": 440,
        "wires": []
    },
    {
        "id": "4fa10ace7df30e83",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "WAR Function - Sensor with Temperature Outside",
        "info": "",
        "x": 580,
        "y": 1640,
        "wires": []
    },
    {
        "id": "1bed5868aeaba949",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "RTC Function - Sensor with ROOM temperature",
        "info": "",
        "x": 580,
        "y": 1740,
        "wires": []
    },
    {
        "id": "ecc2c917451ccb26",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "COOL Function - Sensor with ROOM Humidity",
        "info": "",
        "x": 590,
        "y": 1940,
        "wires": []
    },
    {
        "id": "ea79797327a3ba43",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "P1 - Sensor with POWER PRODUCTION",
        "info": "",
        "x": 600,
        "y": 2040,
        "wires": []
    },
    {
        "id": "3722227ec53e566c",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "P1 - Sensor with POWER CONSUMPTION",
        "info": "",
        "x": 600,
        "y": 2140,
        "wires": []
    },
    {
        "id": "c94d34a2e1a091ad",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "COOL Function - Sensor with ROOM temperature",
        "info": "",
        "x": 580,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6bd234b67b830924",
        "type": "link in",
        "z": "ad980a450f532e53",
        "g": "82fd5c42e59889c9",
        "name": "Source flow variables",
        "links": [
            "a7d4c9f19c358e4f",
            "b44fceec58293e64",
            "e0c5ca5db0a7df5b",
            "6766b92901602397"
        ],
        "x": 360,
        "y": 100,
        "wires": [
            [
                "0fe684f74775324c"
            ]
        ],
        "l": true
    },
    {
        "id": "0fe684f74775324c",
        "type": "link out",
        "z": "ad980a450f532e53",
        "g": "82fd5c42e59889c9",
        "name": "Flow variables to InfluxDB (WP Personal)",
        "mode": "link",
        "links": [
            "61d8764c5309caec"
        ],
        "x": 720,
        "y": 100,
        "wires": [],
        "icon": "node-red/leveldb.svg",
        "l": true
    },
    {
        "id": "93cacebad7e74573",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "82fd5c42e59889c9",
        "name": "Connect this link-out node to your DB input node on your WP Personal tab.",
        "info": "",
        "x": 820,
        "y": 140,
        "wires": []
    },
    {
        "id": "0d82688afa5de780",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "External link WAR function on/off",
        "links": [],
        "x": 390,
        "y": 580,
        "wires": [
            [
                "b21f4682fc8d0b9c"
            ]
        ],
        "l": true
    },
    {
        "id": "3c482b65be488c84",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "External link RTC function on/off",
        "links": [],
        "x": 390,
        "y": 620,
        "wires": [
            [
                "2b39cca96f04ab29"
            ]
        ],
        "l": true
    },
    {
        "id": "5dab59668d1258c8",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "External link SoftStart function on/off",
        "links": [],
        "x": 400,
        "y": 660,
        "wires": [
            [
                "3973cf9c88c35871"
            ]
        ],
        "l": true
    },
    {
        "id": "b21f4682fc8d0b9c",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "toNum",
        "func": "msg.topic = 'Correction_0_WAR_on_off'; \n\nif (msg.payload === true || msg.payload == 'on' || msg.payload == 'On') {\n    msg.payload = 1;\n    return msg;\n}\nif (msg.payload === false || msg.payload == 'off' || msg.payload == 'Off') {\n    msg.payload = 0;\n    return msg;\n}\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload == 0 || msg.payload == 1) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 580,
        "wires": [
            [
                "3511e342c1fb7c3f"
            ]
        ]
    },
    {
        "id": "2b39cca96f04ab29",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "toNum",
        "func": "msg.topic = 'RTC toggle on/off'; \n\nif (msg.payload === true || msg.payload == 'on' || msg.payload == 'On') {\n    msg.payload = 1;\n    return msg;\n}\nif (msg.payload === false || msg.payload == 'off' || msg.payload == 'Off') {\n    msg.payload = 0;\n    return msg;\n}\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload == 0 || msg.payload == 1) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 620,
        "wires": [
            [
                "aa4dd3b07f9cb7ed"
            ]
        ]
    },
    {
        "id": "3973cf9c88c35871",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "toNum",
        "func": "msg.topic = 'Softstart togle on/off'; \n\nif (msg.payload === true || msg.payload == 'on' || msg.payload == 'On') {\n    msg.payload = 1;\n    return msg;\n}\nif (msg.payload === false || msg.payload == 'off' || msg.payload == 'Off') {\n    msg.payload = 0;\n    return msg;\n}\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload == 0 || msg.payload == 1) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 660,
        "wires": [
            [
                "8e8c5440b14adc8f"
            ]
        ]
    },
    {
        "id": "ad43b659ccd4aeae",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "EXTERNAL SIGNAL FOR ENABLE/DISABLE FUNCTIONS ",
        "info": "",
        "x": 450,
        "y": 540,
        "wires": []
    },
    {
        "id": "3511e342c1fb7c3f",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out Dash_WAR_OnOff",
        "mode": "link",
        "links": [
            "01d75eec1bfe68d4"
        ],
        "x": 795,
        "y": 580,
        "wires": []
    },
    {
        "id": "aa4dd3b07f9cb7ed",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out RTC toggle on/off",
        "mode": "link",
        "links": [
            "942f2ca34abfe8ac"
        ],
        "x": 795,
        "y": 620,
        "wires": []
    },
    {
        "id": "8e8c5440b14adc8f",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out Softstart togle on/off",
        "mode": "link",
        "links": [
            "6bb32dd02ad372d4"
        ],
        "x": 795,
        "y": 660,
        "wires": []
    },
    {
        "id": "f971bd6378b8c09d",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Connect an external signal. The signal payload can be true/false or 1/0 or on/off",
        "info": "",
        "x": 1180,
        "y": 580,
        "wires": []
    },
    {
        "id": "fb07535531026f0a",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Connect an external signal. The signal payload can be true/false or 1/0 or on/off",
        "info": "",
        "x": 1180,
        "y": 620,
        "wires": []
    },
    {
        "id": "3c84c5b3facc643d",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Connect an external signal. The signal payload can be true/false or 1/0 or on/off",
        "info": "",
        "x": 1180,
        "y": 660,
        "wires": []
    },
    {
        "id": "7a4290e8610e8c41",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "External link PumpSpeed function on/off",
        "links": [],
        "x": 410,
        "y": 700,
        "wires": [
            [
                "be09347ce3851979"
            ]
        ],
        "l": true
    },
    {
        "id": "be09347ce3851979",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "toNum",
        "func": "msg.topic = 'state'; \n\nif (msg.payload === true || msg.payload == 'on' || msg.payload == 'On') {\n    msg.payload = 1;\n    return msg;\n}\nif (msg.payload === false || msg.payload == 'off' || msg.payload == 'Off') {\n    msg.payload = 0;\n    return msg;\n}\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload == 0 || msg.payload == 1) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 700,
        "wires": [
            [
                "4d0ef717fa8fdb71"
            ]
        ]
    },
    {
        "id": "4d0ef717fa8fdb71",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out Pumpspeed function on/off",
        "mode": "link",
        "links": [
            "6689f388c8028972"
        ],
        "x": 795,
        "y": 700,
        "wires": []
    },
    {
        "id": "eb50dc8e437e15e5",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Connect an external signal. The signal payload can be true/false or 1/0 or on/off",
        "info": "",
        "x": 1180,
        "y": 700,
        "wires": []
    },
    {
        "id": "9e6b649a9373fdc7",
        "type": "link in",
        "z": "ad980a450f532e53",
        "name": "External link Solar²DHW function on/off",
        "links": [],
        "x": 410,
        "y": 740,
        "wires": [
            [
                "476f6e4aa5bc2c0a"
            ]
        ],
        "l": true
    },
    {
        "id": "476f6e4aa5bc2c0a",
        "type": "function",
        "z": "ad980a450f532e53",
        "name": "toNum",
        "func": "msg.topic = 'state'; \n\nif (msg.payload === true || msg.payload == 'on' || msg.payload == 'On') {\n    msg.payload = 1;\n    return msg;\n}\nif (msg.payload === false || msg.payload == 'off' || msg.payload == 'Off') {\n    msg.payload = 0;\n    return msg;\n}\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload == 0 || msg.payload == 1) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 740,
        "wires": [
            [
                "91c75ca9f3471bd5"
            ]
        ]
    },
    {
        "id": "91c75ca9f3471bd5",
        "type": "link out",
        "z": "ad980a450f532e53",
        "name": "link out Solar2DHW toggle on/off",
        "mode": "link",
        "links": [
            "4ed5f3924acf26ff"
        ],
        "x": 795,
        "y": 740,
        "wires": []
    },
    {
        "id": "445a8a46abb0d733",
        "type": "comment",
        "z": "ad980a450f532e53",
        "name": "Connect an external signal. The signal payload can be true/false or 1/0 or on/off",
        "info": "",
        "x": 1180,
        "y": 740,
        "wires": []
    },
    {
        "id": "025597cef8c50d11",
        "type": "link in",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "External link HEATPUMP on/off",
        "links": [],
        "x": 390,
        "y": 860,
        "wires": [
            [
                "73f39764feab525c"
            ]
        ],
        "l": true
    },
    {
        "id": "73f39764feab525c",
        "type": "function",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "toNum",
        "func": "msg.topic = 'External'; \nmsg.source = \"External\";\n\nif (msg.payload === true || msg.payload == 'on' || msg.payload == 'On') {\n    msg.payload = 1;\n    return msg;\n}\nif (msg.payload === false || msg.payload == 'off' || msg.payload == 'Off') {\n    msg.payload = 0;\n    return msg;\n}\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload == 0 || msg.payload == 1) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 860,
        "wires": [
            [
                "f7f21cce882495d8"
            ]
        ]
    },
    {
        "id": "f7f21cce882495d8",
        "type": "link out",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "link out HeatPump Power state",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb"
        ],
        "x": 795,
        "y": 860,
        "wires": []
    },
    {
        "id": "03a4aa238afc1981",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "Connect an external signal. The signal payload can be true/false or 1/0 or on/off",
        "info": "",
        "x": 1180,
        "y": 860,
        "wires": []
    },
    {
        "id": "ed74c1ebbc04bb2b",
        "type": "link in",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "External link CHANGE OPERATING MODE",
        "links": [],
        "x": 430,
        "y": 900,
        "wires": [
            [
                "aaad5e68b3b9bf5e"
            ]
        ],
        "l": true
    },
    {
        "id": "aaad5e68b3b9bf5e",
        "type": "function",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "toNum",
        "func": "msg.topic = 'External'; \n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload == 0 || msg.payload == 1 || msg.payload == 2 || msg.payload == 3 || msg.payload == 4 || msg.payload == 5 || msg.payload == 6) {\n    return msg;\n}\n\n\n//  READ: Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW) \n//  SET:  Operating mode (0=Heat only, 1=Cool only, 2=Auto, 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto+DHW",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 900,
        "wires": [
            [
                "f0150106811a865b"
            ]
        ]
    },
    {
        "id": "f0150106811a865b",
        "type": "link out",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "link out to SET9",
        "mode": "link",
        "links": [
            "43464dca9fd194fa",
            "476134da722ea175"
        ],
        "x": 795,
        "y": 900,
        "wires": []
    },
    {
        "id": "8cd5ac016e4bbd49",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "Connect an external signal. The signal payload must be numeric 0-6",
        "info": "",
        "x": 1140,
        "y": 900,
        "wires": []
    },
    {
        "id": "9abf6494d65a1390",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "EXTERNAL HEATPUMP SETTINGS",
        "info": "",
        "x": 380,
        "y": 820,
        "wires": []
    },
    {
        "id": "07ea01ca5f3dd948",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "4267db13778ecba3",
        "name": "STEP 1: Connect your sensor to the below LINK-IN nodes",
        "info": "",
        "x": 450,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a73990662fc6dc84",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "4267db13778ecba3",
        "name": "STEP 2: IN the dashboard, go to [SYSTEM] > [SENSOR] tab. ",
        "info": "",
        "x": 460,
        "y": 1140,
        "wires": []
    },
    {
        "id": "05bc11ef8fc2b3c6",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "4267db13778ecba3",
        "name": "Through drop-down selection, you can pick the correct key/value ",
        "info": "",
        "x": 530,
        "y": 1180,
        "wires": []
    },
    {
        "id": "5d7cec9b89cfdcce",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "4267db13778ecba3",
        "name": "NOTE: Only after value's are received, the drop-down list is populated",
        "info": "",
        "x": 550,
        "y": 1220,
        "wires": []
    },
    {
        "id": "39b4cb7af13ab601",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "3046d52ef3c03092",
        "name": "These external actions are outside of all Node Red flow logic ! use at your own risk",
        "info": "",
        "x": 1150,
        "y": 820,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "eaf23ae574103f75",
        "type": "comment",
        "z": "ad980a450f532e53",
        "g": "82fd5c42e59889c9",
        "name": "Output to Influx DB",
        "info": "",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "8c9d42231fd19d3c",
        "type": "tab",
        "label": "WP Dash",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e7187e0c9dc038f0",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Home (HEAT)",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "719e11414721599e",
            "b51f6522ce8b3103",
            "05f3b66c7b91e0c6",
            "5bada38f261d4a06",
            "1f4a153d2239272b",
            "00dd6c3fd833a5cf",
            "2f6dcfe431b67d95",
            "ef9758a537d81735",
            "cc398f298c681782",
            "702993e29cd93413",
            "46b7fe12f60ad08b",
            "9975ddd7c9465aea",
            "872ffae146541a5a",
            "5dfb70935ea409db",
            "354635fe353183fd",
            "cb7bd45634ebfb62",
            "ea31d112c91c0da9"
        ],
        "x": 114,
        "y": 1219,
        "w": 992,
        "h": 262
    },
    {
        "id": "7c41aa629fb3859e",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Home (DHW)",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "50b87b6e19d49fae",
            "158e0bb2b00cd4ba",
            "50bbeaa9a0ad9305",
            "14d2ae6b4af7e45e",
            "4982424c661376ea",
            "23197820b73be2c8",
            "21345852944158b2",
            "4cfdc172228a42bb",
            "4f19cd39ac4c4be0",
            "6bdcf84066368733",
            "8c2afa46f759d9cd",
            "7386864c75dbce5c",
            "3f63919ddd4f0ea7",
            "3d3b432c844ba87e",
            "0609b7d54d31dafb",
            "f38de05b84881512",
            "b690e6a46d9553ba",
            "6366ce3358b65976",
            "7157605d81a5de0d",
            "e4d3b74c7c050a7d",
            "e498876c6a66fb4c",
            "de12a1bd6b72fc0a",
            "7f44b9272e731114",
            "70f71351c6facb1b"
        ],
        "x": 114,
        "y": 19,
        "w": 932,
        "h": 442
    },
    {
        "id": "5ab5ca67951ca4de",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Home (PUMP)",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "5d54922367195a62",
            "0e09d25e4fd17042",
            "1d97c2a9ed08db30",
            "9dc0d35330d31725",
            "3478273eb4693d84",
            "1d51b425fba024d2",
            "024bef9dc12b8273",
            "521e419dae5882e7",
            "dcdf16916497a46e",
            "3ac59d9a6138e620",
            "e6ca18bfd7adb287",
            "42c8d2ef7cd7f120",
            "1ed98a1d47eb56f0",
            "79dc18dd1cca1e73",
            "49a94006dd1947ac",
            "17c5ba9bb0b58a11",
            "9faace07ea16ba4d",
            "b65cef840ae30edb",
            "91fcc102b422de3b",
            "8ae2f173954488ad",
            "b3cbb0e85ba0fb42",
            "1daf8c5944f23d71"
        ],
        "x": 114,
        "y": 639,
        "w": 972,
        "h": 562
    },
    {
        "id": "c3b7d9597903239c",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Charts Temperature",
        "style": {
            "label": true
        },
        "nodes": [
            "8cb1aceef81045bd",
            "9802bf01ebf45d28",
            "9789265573ab4c80",
            "c9c2bf06edb19d41",
            "76fd0cf35b775cdf",
            "9f3df8b1cba0bbda",
            "a734f98c5d02604e",
            "12b317db9b7ce136",
            "aeca371dc97489c4",
            "1afae37bbb9eee4f",
            "62bb9a3778a8e0c4",
            "8cea97ace96d4c67",
            "eea147e0b371b347",
            "f6a75e4b3dd9cf4c",
            "95590d576d789646",
            "7f2afa931336f755",
            "c76df998b7cb23d3"
        ],
        "x": 14,
        "y": 2159,
        "w": 972,
        "h": 302
    },
    {
        "id": "a8ac5b148d851a6b",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Function (RTC)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "1b8f5447c498c1d6",
            "e17b09af13812496",
            "11c68fc0d3095541",
            "e8990d184ea1eca6",
            "b4051f61cf6d4d65",
            "c9df0ea076346fde",
            "e6999514a091fd05",
            "501242b43a1016ea",
            "d3b8865dfdb6d46c",
            "e4c7ba5f1306c384",
            "a0998b9af634354f",
            "aa1f73bbe3eef9e1",
            "9b1f3ccedd4e853b",
            "017e7b4d1642ed42",
            "aae82d0c01404d51",
            "60e33931edeab23f",
            "3e3f19d365adf7ae",
            "38a2e1df7e0bdb2a",
            "25b8320badf7ef88",
            "45643e4e39e1d248",
            "8bd536b323fb865c",
            "dade0dbb40c3945a",
            "942f2ca34abfe8ac",
            "48ac4170551d07e2",
            "e5afa5e58fb2ecef",
            "1f5d513050d612a1",
            "4b2cff40b8a3ecc9",
            "9e7985132053da99",
            "7bf73fde5dbbe654",
            "af1e900e0be88b34",
            "be5c89aff3235cfd",
            "6a4e29a621172a7e",
            "47b72adc26e2025f",
            "3cf1a2dd31dacbca",
            "ca0d9f423e83d3e2",
            "449411f64f3ffe0b",
            "c3c748a1b5f04d42",
            "7d582005c7d66f28",
            "6efc9729afea79a2",
            "0d3da6a8d7fa38ee",
            "4faba89ea8ec838c",
            "7764079e5c12e488",
            "b57cce7cc9fa92ea",
            "ca0190e54c9749cb",
            "2ca9ec858ebd4887",
            "290133f7fd948e25",
            "ab1290025b96a1df",
            "bb54f8581c258040",
            "fb7f16aa29565d78",
            "ecbb543ba37d9962",
            "57d858f4dd89a4c8",
            "083547591b89bc09",
            "f8d7e53aed62cd14",
            "85d4c15e56ecc525",
            "a19cd490d0cc5d13",
            "2d7930a2b848335e",
            "22addf167b287f53",
            "b62de7b7b1c2c0b6",
            "ca6c0bce1bb90d64",
            "7f32080d7494b6ae",
            "cfa2eec0803fe7cd",
            "e77ae78af76db973",
            "30bdc6940be044bf",
            "a695685930d2097e",
            "d9b3ca8bfaa4c10a",
            "1728bf6be1141a5f",
            "023e106e50b945f6",
            "f8cd2e5c468286a5",
            "2d1a9fcd35c50c2a",
            "cc930ab5b67c257e",
            "a2afbd9244cceed5",
            "922a3b1879d1a5ec",
            "368bd104ea1ba4e6",
            "ae00df3cd05e6b06",
            "470ba61639a6ba2d",
            "1b0dd0c926383896",
            "ce9db55d9de18296",
            "af715d4c79137c30",
            "534ceb039d7f9812",
            "6b9a0352c4460ae5",
            "3f6602042d2dc015",
            "54724886189b074f",
            "4ffcf5c7dbf32067",
            "b15c419913e8770a",
            "b44fceec58293e64"
        ],
        "x": 2954,
        "y": 679,
        "w": 2098,
        "h": 962,
        "info": "# yeah"
    },
    {
        "id": "3476743a7b29da0d",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Function (WAR)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "01d75eec1bfe68d4",
            "8329aedf9204b75d",
            "9535722dad6d0995",
            "9a0e227ed7718d64",
            "e07cc2b915729d33",
            "f1d9c2e3346b1e43",
            "388bec4d296db98d",
            "81e0133d16c51789",
            "b991be16b9662a3e",
            "0380b395668eee8e",
            "0ad263e5f3bf4fe9",
            "5b0c451c1ec63b84",
            "080c11bcc5a2ac73",
            "d1e851a03542c949",
            "54284f6b97afb3c7",
            "7febe67492bf7cbe",
            "d9675d9d144e412b",
            "f3f5cc4e789d19f3",
            "0c8eb8257035ca5f",
            "36a9b7dad9d2611e",
            "fa81c798d517834f",
            "4dc131a257d753d0",
            "b92812725c4e8443",
            "5c6e3f50e1a2328b",
            "354fe89415b3f383",
            "ecf47b4f156ae616",
            "12842f4ef6ffc342",
            "5429970cdd04e922",
            "cc1c74d4b3b87c5e",
            "e5a709273b24888d",
            "d0cbd630befb3d01",
            "7a2a9be0735512b6",
            "320506c25427ee87",
            "74e2096239928bfc",
            "df2ff07ddeb07106",
            "65770940f38c7f51",
            "f2daac0935cc9d81",
            "4950af3d6534aa47",
            "07c9121f1be83415",
            "a00885bfd0ed77a7",
            "f76c271c4a48a3e7",
            "fa5d110ee0083845",
            "5b9847446fee98a9",
            "02bef4c27cae892f",
            "0366fd634f110ba4",
            "a7ed974cef55c457",
            "850fb0ccb76b25cf",
            "881c9c83727201e4",
            "946190a858bafe3d",
            "26028dafb645f0a9",
            "78b397adf806a09f",
            "b7b3c4dcda507ecb",
            "05065bbd47aa9dd3",
            "6c95ed35d3dcaea3",
            "96c650af80111193",
            "187c584c21359a3e",
            "97f8288d7402bc77",
            "136e0fb8144c7c14",
            "a1d3737a5a110aa9",
            "ae3b104ec8689934",
            "f700767045104b75",
            "b167f12e02c63359",
            "82a387f8895ef8f6",
            "e0c5ca5db0a7df5b",
            "0bf8dbceb8cf0c93",
            "9fda0aa836fde5a4"
        ],
        "x": 3004,
        "y": 19,
        "w": 1802,
        "h": 648
    },
    {
        "id": "f9448182b177e40e",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Chart Energy",
        "style": {
            "label": true
        },
        "nodes": [
            "ea3029991749f77b",
            "fa2eba3089ca0ef4",
            "3b552bccda090181",
            "8a140f3a3a1ff736",
            "1cbdb190d6f52cb6",
            "fe8e23b8971b868e",
            "b1933566192d3b78",
            "fae151e3fc249477",
            "21857afb8366acf2",
            "039ca8047ee5b833",
            "8e0dc8ab2999f4ec",
            "38b10c117605255d",
            "53393ad3ce2b9113",
            "3a6bb7844523ece7",
            "ca8fd698c67b1cfa",
            "b3e1e417d51330e7",
            "bbe6832628277539",
            "8627726ba882e493",
            "4b0bb57d44bd8bb1",
            "b4d652a4c0313e8a",
            "990e0858767f91fc",
            "9ed43df7ef7fa246",
            "6d77bc12fe8024ee",
            "9534d89253d426ca",
            "79ff4d14869086b3",
            "f9bad51c9301e2d7",
            "bda2df97c3dfd6ad",
            "ba8181d980146bf5",
            "9d4206dc389ad732",
            "2ec8265263c71358",
            "2347fd7ebf82b618",
            "ffa2e7745e5aed4c",
            "d77ae32f90417f20",
            "6fb3c122147f795e",
            "aa53a0c487c666f0",
            "e7d39d4073a87d3c",
            "bed822f215bd3ddf",
            "14789bda2966231c"
        ],
        "x": -26,
        "y": 1499,
        "w": 1152,
        "h": 622
    },
    {
        "id": "f1a34e3fea473398",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Combined bar-chart",
        "style": {
            "label": true
        },
        "nodes": [
            "b09d20349841eaed",
            "d4198e0e57720e55",
            "8859608d9186c4e4",
            "278b50b68f01198e",
            "93a7de2857166209",
            "d63cf14c266a32c5",
            "d5724fa53412c7c1",
            "3c6cbf1cc644de40",
            "ad2577846265e4ee",
            "c302223665944545",
            "9a77a77bdc585373",
            "721b7d606f558c73",
            "7e69bda9aa493902",
            "4dc4c11e169604ca",
            "c28ac0a0c107c5e3",
            "f5f7d3b912113a33",
            "2c380c0bbcfb5eb1",
            "2114aed06fe6d5aa",
            "e1f45532e4338e4a",
            "25a5987e8a1aaf9c"
        ],
        "x": 54,
        "y": 2819,
        "w": 1398,
        "h": 602
    },
    {
        "id": "4f352fdae09316c2",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Logs",
        "style": {
            "fill": "#ffffff",
            "label": true
        },
        "nodes": [
            "1fc3414887db6c0f",
            "e649dffb7b88341d",
            "87de9f606819ee7c",
            "031e62b0bf3df7d7",
            "22443324686e908d",
            "6966950676b3438b",
            "46d0a8b4fabd20c4",
            "29a9b4d9e823126c",
            "9ab36aee321695b7",
            "56bc942b17cf740c",
            "70d422652df2468e",
            "647564ca1e204b5f",
            "6215a77a119228d1",
            "a2c6183556ca72d1",
            "2dc5c2ac3212179c",
            "9a7dda15052b4034",
            "82deff483aabb062",
            "8c9a955c41e3e669",
            "ccf20ebdd2bc2ad5",
            "bee7b2de27a2ac09",
            "2e07cb8c215afb98",
            "c83f2c1b98fec551",
            "48b67765f5bf4521",
            "47cc58d8c2f4aae6",
            "8a78dd26f20bb676",
            "2cb940cabdae70e5",
            "a2d45addc303107f",
            "46c5b8fae5c96441",
            "7ec2785759270a3f",
            "97186cf285d61502",
            "1fa1afeeb1c84d32",
            "729f15cc004fcc21",
            "8b99fa1a632fa6aa",
            "8da7c93f059466f2",
            "8d9c639aa58c9a3e",
            "1e0df57eb3e96bf7",
            "a7d4b11b9c045f95",
            "997453c0771acfc3",
            "e969a884012a60e7",
            "e5c16c1442eeb1cc"
        ],
        "x": 1228,
        "y": 2059,
        "w": 1398,
        "h": 642
    },
    {
        "id": "69d31fcea48c5132",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "(RTC) Changed Room setpoint to log",
        "style": {
            "label": true,
            "color": "#000000",
            "stroke": "#000000"
        },
        "nodes": [
            "b53bc6358e871056",
            "e7e7a120cf9e9001",
            "087a748b7ca8e4f0",
            "28ade256a9b75487",
            "28d654bc8270de5e"
        ],
        "x": 4294,
        "y": 1019,
        "w": 402,
        "h": 122
    },
    {
        "id": "3151681b2157872c",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Settings",
        "style": {
            "fill": "#bfbfbf",
            "label": true
        },
        "nodes": [
            "fadad1e2505bf86d",
            "493be73ce31c8c96",
            "d286bfab06c854b3",
            "69e62408ae1d45fd",
            "c168a66c6bcdd403",
            "2c3aa272de5edf1f",
            "6715b2c07ffdaf0f",
            "98757de0a2842b4b",
            "43ad0d01b0c84de9",
            "a6faaf6380e6d040",
            "c318be9105a9e8e5",
            "b8e7b80b511e3054",
            "aa26d12b996f9c57",
            "97d91018b611d85e",
            "6c56f45eddcf6890",
            "d4c237094a0d52f9",
            "d66211d6bd2170ac",
            "71bc8ac0ba520e9e",
            "99beaa5dde77b94c",
            "ec2e17164979af03",
            "ad4e8ac090e4b449",
            "9b9c2c12ee2f9256",
            "365cb4a95d68eb3e",
            "c6559a95bb3c55fb",
            "17cf53c8acbfb4e1",
            "4dee981d88ea5cf3",
            "45a93847a1d11766",
            "ccb9e79ff06190fa",
            "20e2544a8277d8c2",
            "91fa7e389b484d7c",
            "69ea88923a102a5d",
            "7c7fd14d9f6ec530",
            "02af248fc547b96b",
            "b8abd042ad10fed8",
            "2d364a067e4a7b4a",
            "a89b41c6600cac07",
            "e31636baf16e3b69",
            "1f2cb9545d7e212d",
            "a6854436b6e1c7e8",
            "fce687f80b334b9e",
            "bdb7e8e0217cec66",
            "979c5ca99c054740",
            "092a9db0d9b923b3",
            "5e3a9447502864ad",
            "2ed9d626c929fb95",
            "9b2a45a90495e067",
            "7139256ff024b872",
            "c803b9ad018fe78e",
            "4021cdadbdc7768d",
            "78816343589b199a",
            "a2d7de4325e4bf91",
            "089ba42c8f7f7a61",
            "3de982eda6f5e1a3",
            "5b0e15b0804a4452",
            "564fcdd537853126",
            "381a37d17ef728cc",
            "cb354767e9f35bc0",
            "df60cdb125adaf72",
            "9b3cba642f3daa70",
            "9e998e80ed82590d",
            "88e644ce965a6890",
            "a26b41289a59dba3",
            "a45a6b8b1ac4b46d",
            "d9a7bffb1a15426e",
            "b203a1c024a72593",
            "34397163757fd58b",
            "7c74fd1faa32c81d",
            "de0e892a0157baca",
            "05d3e85b3963e4e2",
            "0897b055d53c8a84",
            "afa82ddd168a4ea4",
            "58ee259d850d95ac",
            "332fb342687e1121",
            "50f5134fb3ba9e38",
            "119d9c04e028ad98",
            "13b0a160e7f2d0a0",
            "8e9f91dd021c2ccd",
            "0a683587ca4fc25c",
            "05e2f23adde7a6fc",
            "ede3b3328704cab1",
            "22afde8747ce6ca0",
            "9170caebad3acdcf",
            "58d199ee200d7b16",
            "9fcae1bec983aa1f",
            "887a43d150c20eb2",
            "7f6107d49ab83c40",
            "6db2abfba9e25737",
            "071ac5a0f08a8fdb",
            "6ae86dc05a6a3c4a",
            "2f577f48a3804703",
            "b7a195156eedf201",
            "99fca21d30786e83",
            "7b3d20aa8c9abb1e",
            "56131f5116b20fba",
            "550d51c7fe788f9e",
            "e85a5bbd08082721",
            "c2baf1abae4e4441",
            "4694bfeaa76d43f1",
            "db41038f69a63144",
            "f66e9fca72401ab4",
            "9e59dd1bbe56fc88",
            "3ed1fd544412f391",
            "dcec18e192df8d64",
            "be17c89704b598d8",
            "ea184fe6e1240203",
            "2c13c33324bb6c6e",
            "684cdf95f8172514",
            "32c4b461266d4a6e",
            "b4efe8320bae812d",
            "115cf15b6254cb9c",
            "313780cf94ef9d1c",
            "d9cbcc885d31c1fd",
            "00660af047d90d84",
            "d60532c945c70ab1",
            "fb1ef412a32707e7",
            "7216a1bd8dc26f16",
            "849755bc336c0289",
            "ca8be52d82cfb2da",
            "85737143f803169a",
            "80dd0b992f3f7c9a",
            "7cfabb437dca890f",
            "7813313c8fae18d5",
            "0db2bdc455e4bffe",
            "2989d5851e2457ae",
            "a845813900ca9e55",
            "9717750d0d528f9c",
            "1f12871cda6c40b3",
            "85327198ddc6e251",
            "eeae40f40c5ecf87",
            "2810d417aa5c3457",
            "47b7f4736455a3cb",
            "5eebb66e29e252f6",
            "bcda53f9e43821c5",
            "1742dd060b79dfd1",
            "7c74eef7b504ee67",
            "bc84f4340c3e5b0a",
            "a20fe452e34c26f2",
            "7cfe771e9583a82d",
            "3c054d7f511af4eb",
            "3b2ded71a11dfb75",
            "c5f279c69179fd5b",
            "8ddf4987d6b31ae5",
            "5182a29718a4142e",
            "08d04747592e753f",
            "b6dd964e2537fb76",
            "87449349b95f6091",
            "d65b99037cb3740d",
            "29f1c1eaf91ec977",
            "e0217508a82c4d43",
            "65e5ce7e8bb0e284",
            "302de5d951e650b6",
            "db78ad9b985b4aa5",
            "e1d9c3b48e3b4cba",
            "9b7f15d048bb1f60",
            "749ce60adde338d9",
            "c6e07a956cf2f293",
            "6886cb05525f8d0b",
            "16e91d824cef95e3",
            "6111292139d84986",
            "a863b940531858e1",
            "f2e85ff23b3dc136",
            "400c912774a24583",
            "f94a97e9d42084d7",
            "b8ed3bef56b272a1",
            "4a2670b477ab7f75",
            "f6e0cc6687051bf1",
            "585e4d6a54d44021",
            "e21920a5a6155306",
            "367f1fc8966e2514",
            "aad17e70a817393e",
            "fca8ea8f1117c808",
            "4673d329949e0652",
            "d5948f3208081ac8",
            "9e1f07f9825bd79d",
            "c9428fcff7af5f3a",
            "c33b3e865b1bd8b8",
            "7d9dc928c0177c74",
            "a3d9dc45c641ff7d",
            "4125dbe2c258837c",
            "0a89bc3104c3ee9b",
            "b41f920bc63ae262",
            "32840bc8d04fbb31",
            "61def1f2090e360a",
            "43464dca9fd194fa",
            "27d4716d98709ec9",
            "ac2652f2dd9df44c",
            "476134da722ea175",
            "939b63cd71edad9b",
            "45f764b22fa2979e",
            "11d6554f952a6ae3",
            "8406701f07ab7886",
            "6864b73de510f046",
            "64d06b253783964a",
            "281a5e0dca0e33dc",
            "063fe3316395a6c4",
            "6591faa63b1b0351",
            "24b17d7139dc31a7",
            "3e5558127fc3402a",
            "9164f892e385d90c",
            "e9fc5e9327936cd3",
            "47022621a9be56df",
            "280f1a6cbf825ee2",
            "ab935ff6cc1d4377",
            "e137742b346ad008",
            "9907c88ef470d1c9",
            "05fd5911f3c06997",
            "c1086c48c4817504",
            "5223d146c38458b5",
            "635229c11e4fe43d",
            "e6f11948336b5214",
            "3abff96efac6ca31",
            "d233c56ec779154b",
            "cd39dd6db4d4cbf2",
            "7a357aa51ea65c2f",
            "e5f28058481d791a",
            "5a3e1810b8f2135a"
        ],
        "x": 1214,
        "y": 19,
        "w": 1632,
        "h": 2002
    },
    {
        "id": "ffa1f23278378e79",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "SS CHART",
        "style": {
            "label": true
        },
        "nodes": [
            "37ae6fb47a326b5e",
            "3578d6b18ceb5727",
            "7bad42f4cc70470e",
            "2b065128513763fa",
            "9548ee234cc5af7a",
            "69b1892c29513016",
            "4212c42fb72cce77",
            "2bc0c1510a6e89c4",
            "0c3e58e3b5cd3fd7",
            "e3b0d458cec07c21",
            "349683fa690f91a3",
            "0899698bb588f911"
        ],
        "x": 2894,
        "y": 2119,
        "w": 1372,
        "h": 162
    },
    {
        "id": "4d3178806b1f0577",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "SS SETTINGS",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "c66f65978915e688",
            "39c4c5d262a3065b",
            "84f7cbc2cc8c135d",
            "1b40f688e5fbc5dd",
            "4c49268a7054041c",
            "7790b731fd9a1374",
            "b5f581c27a02b8a0",
            "1eb00088db267256",
            "6acc923b4ebb49e4",
            "b1118094796c2de3",
            "6d347eebf409d174",
            "d1aaf53ae9beb422",
            "e33c35973b22ff0b",
            "2fdb58826d7b6432",
            "e4f68946c7b21da7",
            "6fc2967e18fedff3",
            "a8db39ee44e93a18",
            "cdf7664223f16687",
            "23b6190afc840bdc",
            "f3ab44f6bb3c013a",
            "47e76e01a5cfb304",
            "3a196a4275cfec68",
            "2f436c5ec33c9291",
            "b2003add7c0ba5a9",
            "8df6915186a6430a",
            "296d72c4856363ff",
            "d83ab1374f972ad1",
            "2cf43683279df520",
            "b09ae278b516c328",
            "838a27801d1da2db",
            "6bb32dd02ad372d4",
            "a7d4c9f19c358e4f",
            "adc15a17d080d791"
        ],
        "x": 3034,
        "y": 1679,
        "w": 1412,
        "h": 402
    },
    {
        "id": "47b08c1184b335ce",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "SoftStart Advanced menu",
        "style": {
            "label": true
        },
        "nodes": [
            "3b7535829c2cdf6b",
            "cc3e8e6c49910b24",
            "98a53971ecd61da7",
            "b643e9d5e036f4ee",
            "c3c9902496136a46",
            "e211a5736784a0fc",
            "bd802f87a97dcefd",
            "c1486ebe999c1402",
            "b54015c2f88f6bae",
            "c3c59a45d2e39fec",
            "ecb93ad39d98a1fd",
            "d0269b3429462492",
            "7bbad0897f1fcc7f",
            "d6df210fe010dd33",
            "f94254ca964c6921",
            "fc318adaf0d65e13",
            "72a545f547cbe5a3",
            "3547352170ac81f9",
            "029c5c12e6deaf2a",
            "6ec6a3d95c50a2f6",
            "6ca1c1b33b5cf449",
            "8c0d3e8e47e5848c",
            "0c5c291dfef49206",
            "50b756726996fb8b",
            "6b090a2bc61386b2",
            "bab176f0addd9f32",
            "c50ffc38e8d8bca7",
            "0244f3af4037bfe4",
            "cb4f0ebfd47b2b34",
            "a9eac72958d861ac",
            "5c8427c809a8f68f"
        ],
        "x": 3034,
        "y": 2299,
        "w": 1212,
        "h": 562
    },
    {
        "id": "a930214064f6df4c",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "SoftStart - QuietMode setup",
        "style": {
            "label": true
        },
        "nodes": [
            "3b06cb6fe4aba512",
            "d7cc3d6e4843a8ad",
            "c63eb9bc210b7b1d",
            "688af2d1eee80549",
            "2953bc932b436d2e",
            "f52fb1c1050e067f",
            "5444f8ed7b1fa765",
            "ab31019d5a2a15b3",
            "042a326783f2a657",
            "2c0778f496681b41",
            "9c7187657eb05439",
            "51e9ad6273cba0ec",
            "02ec5c80f142f377",
            "24fbbd2b93a9c9f4",
            "70aea97804b35103",
            "e9942046bea0d380",
            "a423271481d5d54d",
            "d080747c531f1376",
            "4d6957c0b336a3cb",
            "4270ba926708b00d",
            "ab242c5522877fe3",
            "b530eb1ecdcd7af8",
            "0834eda7cad080f5",
            "9c59622b3f2c6e55",
            "81be4bef9f6ab8be",
            "78f35dacfb4b5757",
            "20df75efdb84f2a8",
            "2746ca6bcc924e40",
            "639bc923555d743a",
            "52a0fd0bd128ca0a",
            "e3cf888e2774fce3"
        ],
        "x": 3034,
        "y": 2879,
        "w": 1252,
        "h": 402
    },
    {
        "id": "9c59622b3f2c6e55",
        "type": "junction",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "x": 3300,
        "y": 3040,
        "wires": [
            [
                "042a326783f2a657"
            ]
        ]
    },
    {
        "id": "81be4bef9f6ab8be",
        "type": "junction",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "x": 3300,
        "y": 3160,
        "wires": [
            [
                "a423271481d5d54d"
            ]
        ]
    },
    {
        "id": "78f35dacfb4b5757",
        "type": "junction",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "x": 3300,
        "y": 3080,
        "wires": [
            [
                "4270ba926708b00d"
            ]
        ]
    },
    {
        "id": "20df75efdb84f2a8",
        "type": "junction",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "x": 3300,
        "y": 3120,
        "wires": [
            [
                "0834eda7cad080f5"
            ]
        ]
    },
    {
        "id": "5c6e3f50e1a2328b",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "charts",
        "style": {
            "label": true
        },
        "nodes": [
            "4d5e9a9dacd2b429",
            "0d58a1e854263ec4",
            "c26a112b706b6d55",
            "aa33ae9640c6a434",
            "db206585adea91d8"
        ],
        "x": 4074,
        "y": 439,
        "w": 462,
        "h": 202
    },
    {
        "id": "2c380c0bbcfb5eb1",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "eee624aa045ae22a"
        ],
        "x": 1094,
        "y": 3279,
        "w": 312,
        "h": 82
    },
    {
        "id": "2114aed06fe6d5aa",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "style": {
            "fill": "#DE425B",
            "fill-opacity": "0.5",
            "label": true
        },
        "nodes": [
            "35c9b0fcbdf3c9e0"
        ],
        "x": 1074,
        "y": 3059,
        "w": 352,
        "h": 82
    },
    {
        "id": "e1f45532e4338e4a",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Bucket 1 - kWh calculation",
        "style": {
            "fill": "#F59B56",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "47a9e516229e0256"
        ],
        "x": 1074,
        "y": 2959,
        "w": 352,
        "h": 82
    },
    {
        "id": "bee7b2de27a2ac09",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "LOGS",
        "style": {
            "label": true
        },
        "nodes": [
            "9fb2ab0ff0488d63",
            "ae6175191a94d7ec",
            "5e4c3c30025c30ee",
            "49edcd3fcf15db5c",
            "9202d8b025b48df6"
        ],
        "x": 1254,
        "y": 2299,
        "w": 1192,
        "h": 82
    },
    {
        "id": "023e106e50b945f6",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b32f014cb3ec752e",
            "79daf2eea90f8432",
            "032ca56c8c21283e",
            "72bcb750dc791f05",
            "65ea8cc832ad6d50"
        ],
        "x": 4434,
        "y": 1299,
        "w": 592,
        "h": 202
    },
    {
        "id": "5d54922367195a62",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "3b23831ccc3641c6"
        ],
        "x": 515,
        "y": 860,
        "wires": [
            [
                "0e09d25e4fd17042"
            ]
        ]
    },
    {
        "id": "0e09d25e4fd17042",
        "type": "ui_gauge",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Water",
        "group": "bf4af523ba16d457",
        "order": 9,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Water flow",
        "label": "L/min",
        "format": "{{value}}",
        "min": 0,
        "max": "35",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 910,
        "y": 860,
        "wires": []
    },
    {
        "id": "1d97c2a9ed08db30",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "905527b22aae9dc8"
        ],
        "x": 515,
        "y": 800,
        "wires": [
            [
                "3478273eb4693d84"
            ]
        ]
    },
    {
        "id": "9dc0d35330d31725",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "35ca9241fc9fc7a1"
        ],
        "x": 515,
        "y": 740,
        "wires": [
            [
                "1d51b425fba024d2"
            ]
        ]
    },
    {
        "id": "3478273eb4693d84",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "Inlet actual",
        "label": "Inlet actual",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 800,
        "wires": []
    },
    {
        "id": "1d51b425fba024d2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "Outlet actual",
        "label": "Outlet actual",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 740,
        "wires": []
    },
    {
        "id": "024bef9dc12b8273",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "61dfad40f76daac7"
        ],
        "x": 515,
        "y": 680,
        "wires": [
            [
                "521e419dae5882e7"
            ]
        ]
    },
    {
        "id": "521e419dae5882e7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "Outlet setpoint",
        "label": "Outlet setpoint",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 940,
        "y": 680,
        "wires": []
    },
    {
        "id": "6bdcf84066368733",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "links": [
            "872ffae146541a5a"
        ],
        "x": 155,
        "y": 420,
        "wires": [
            [
                "4f19cd39ac4c4be0"
            ]
        ]
    },
    {
        "id": "4f19cd39ac4c4be0",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "DHW status",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 850,
        "y": 420,
        "wires": []
    },
    {
        "id": "50b87b6e19d49fae",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Force sterilization",
        "label": "Force sterilization",
        "tooltip": "Forces sterilization cycle (Cycle = Set DHW-Only, Set sterilization active, run. When done, revert Operating Mode, Set sterilization to inactive)",
        "group": "e3cc96332cd59f07",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Toggle",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "0609b7d54d31dafb"
            ]
        ]
    },
    {
        "id": "719e11414721599e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "1179fa790d2d89ca",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Heat status",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 970,
        "y": 1260,
        "wires": []
    },
    {
        "id": "dcdf16916497a46e",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "TOP65 - panasonic_heat_pump/main/Pump_Speed",
        "topic": "panasonic_heat_pump/main/Pump_Speed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 1100,
        "wires": [
            [
                "3ac59d9a6138e620"
            ]
        ]
    },
    {
        "id": "3ac59d9a6138e620",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "Pump speed",
        "label": "Pump speed",
        "format": "{{msg.payload}} rpm",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 1100,
        "wires": []
    },
    {
        "id": "158e0bb2b00cd4ba",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "DHW (SP)",
        "label": "DHW setpoint",
        "tooltip": "",
        "group": "e3cc96332cd59f07",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "dhw_sp",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "40",
        "max": "75",
        "step": 1,
        "className": "",
        "x": 510,
        "y": 120,
        "wires": [
            [
                "7157605d81a5de0d"
            ]
        ]
    },
    {
        "id": "23197820b73be2c8",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "Sterilization (SP)",
        "label": "Sterilization setpoint",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "21345852944158b2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "DHW (PV)",
        "label": "DHW actual",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 360,
        "wires": []
    },
    {
        "id": "50bbeaa9a0ad9305",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Force DHW",
        "label": "Forceful DHW",
        "tooltip": "Forces DHW cycle (Cycle = Set DHW-Only, Set ForceDHW active, run. When done, revert Operating Mode, Set ForceDHW to inactive)",
        "group": "e3cc96332cd59f07",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "GUI_F_DHW",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "3d3b432c844ba87e"
            ]
        ]
    },
    {
        "id": "1b8f5447c498c1d6",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Room setpoint",
        "label": "Room setpoint",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 16,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "WoonkamerSP",
        "topicType": "str",
        "format": "{{value}}",
        "min": "5",
        "max": "50",
        "step": "0.1",
        "className": "",
        "x": 3580,
        "y": 1000,
        "wires": [
            [
                "11c68fc0d3095541",
                "af715d4c79137c30"
            ]
        ]
    },
    {
        "id": "e17b09af13812496",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Woonkamer SP (custom)",
        "mode": "link",
        "links": [
            "c3a9e17b02222cee"
        ],
        "x": 4805,
        "y": 1000,
        "wires": []
    },
    {
        "id": "11c68fc0d3095541",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3770,
        "y": 1000,
        "wires": [
            [
                "e17b09af13812496",
                "7d582005c7d66f28",
                "087a748b7ca8e4f0",
                "b15c419913e8770a"
            ]
        ]
    },
    {
        "id": "4cfdc172228a42bb",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "links": [
            "d54ac3b979428b64"
        ],
        "x": 155,
        "y": 360,
        "wires": [
            [
                "21345852944158b2",
                "e498876c6a66fb4c"
            ]
        ]
    },
    {
        "id": "14d2ae6b4af7e45e",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "links": [
            "092a9db0d9b923b3",
            "b131edf180140fb6"
        ],
        "x": 155,
        "y": 240,
        "wires": [
            [
                "50bbeaa9a0ad9305"
            ]
        ]
    },
    {
        "id": "4982424c661376ea",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Force sterilization",
        "links": [
            "6591faa63b1b0351",
            "24b17d7139dc31a7"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "50b87b6e19d49fae"
            ]
        ]
    },
    {
        "id": "b51f6522ce8b3103",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "",
        "links": [
            "4ff74e2b48b1d597",
            "aec0cb2b18e02d8b"
        ],
        "x": 155,
        "y": 1280,
        "wires": [
            [
                "5bada38f261d4a06"
            ]
        ]
    },
    {
        "id": "8cb1aceef81045bd",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Room Temperature",
        "group": "2a223fd6c0b54acd",
        "order": 1,
        "width": 10,
        "height": 12,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "15",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "2000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 2200,
        "wires": [
            [
                "1afae37bbb9eee4f"
            ]
        ]
    },
    {
        "id": "9802bf01ebf45d28",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Water HEAT",
        "group": "e668c57c8cf470e7",
        "order": 1,
        "width": 9,
        "height": 12,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 2340,
        "wires": [
            [
                "62bb9a3778a8e0c4"
            ]
        ]
    },
    {
        "id": "9789265573ab4c80",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Water DHW",
        "group": "e374621a9f5ac0d6",
        "order": 1,
        "width": 9,
        "height": 12,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 2380,
        "wires": [
            [
                "8cea97ace96d4c67"
            ]
        ]
    },
    {
        "id": "c66f65978915e688",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "Softstart on/off (Home)",
        "label": "Softstart (experimental)",
        "tooltip": "",
        "group": "1179fa790d2d89ca",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3780,
        "y": 1760,
        "wires": [
            [
                "d83ab1374f972ad1"
            ]
        ]
    },
    {
        "id": "39c4c5d262a3065b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "set.F_SS.state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.source = \"Function - SoftStart\";\nmsg.topic = \"Function - SoftStart\"\nglobal.set(\"F_SS.state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4180,
        "y": 1740,
        "wires": [
            [
                "84f7cbc2cc8c135d",
                "adc15a17d080d791"
            ]
        ]
    },
    {
        "id": "84f7cbc2cc8c135d",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "F_SS.state",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "4c81e32b9d30b212",
            "6165734a2db82af9"
        ],
        "x": 4405,
        "y": 1740,
        "wires": []
    },
    {
        "id": "e8990d184ea1eca6",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off Home_HEAT",
        "label": "",
        "tooltip": "",
        "group": "1179fa790d2d89ca",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3610,
        "y": 760,
        "wires": [
            [
                "22addf167b287f53"
            ]
        ]
    },
    {
        "id": "b4051f61cf6d4d65",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set F_RTC.z1.state on/off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Function - RTC\";\nglobal.set(\"F_RTC.z1.state\",msg.payload,\"file\");\n\n\n//******************************************************************************\nif (msg.payload == 0) {\n    /*\n    var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n    var F_SOLAR                         = global.get('F_SOLAR',\"file\");\n    \n    \n    if (F_stored_next_operating_mode === undefined) {\n        return null;\n    }\n    //  msg         // pin 1 - oringinal msg object. The correction.\n    let msg1={};    // pin 2 - the restored operating mode.\n    let msg99={};   // pin 3 - info to the log.\n    // return [msg,msg1,msg99]\n\n    \n    if (F_SOLAR.function_active_state === undefined) {\n        msg1.payload = F_stored_next_operating_mode;\n        msg1.topic = 'Restoring new operating mode';\n        \n        msg99.topic = 'Function RTC on/off';\n        msg99.payload = 'RTC on/off function turned off manually. Restoring operating mode';\n        \n        global.set('F_stored_next_operating_mode',undefined,\"file\");\n        \n        return [msg,msg1,msg99];\n    }\n    */\n    return msg\n}\n\n\nelse {\n    return msg;    \n}\n\n\n\n\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4430,
        "y": 780,
        "wires": [
            [
                "c9df0ea076346fde"
            ],
            [
                "b57cce7cc9fa92ea"
            ],
            [
                "ca0190e54c9749cb"
            ]
        ],
        "outputLabels": [
            "msg",
            "operating mode",
            "to log"
        ]
    },
    {
        "id": "c9df0ea076346fde",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Correction_1_heatcurve_on_off",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "73ee925b927ed0c6",
            "3ab7a10b46379da2",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364",
            "942f2ca34abfe8ac"
        ],
        "x": 4805,
        "y": 740,
        "wires": []
    },
    {
        "id": "e6999514a091fd05",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "links": [
            "18fd7ac120089042",
            "c61ef1791ada4e77"
        ],
        "x": 3205,
        "y": 1600,
        "wires": [
            [
                "0d3da6a8d7fa38ee",
                "7764079e5c12e488"
            ]
        ]
    },
    {
        "id": "501242b43a1016ea",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 29,
        "width": 7,
        "height": 1,
        "name": "Function RTC - Current correction",
        "label": "Current correction",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3680,
        "y": 1280,
        "wires": []
    },
    {
        "id": "8329aedf9204b75d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "SP_DIRECT_virt",
        "label": "",
        "tooltip": "This is the default outlet water temperature when all functions are turned off. (Range: 20-65°C)",
        "group": "1179fa790d2d89ca",
        "order": 4,
        "width": 3,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "SP_DIRECT_virt",
        "topicType": "str",
        "format": "<font color= {{msg.color}} > {{value}} °C</font>",
        "min": "-5",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 3510,
        "y": 140,
        "wires": [
            [
                "ae3b104ec8689934",
                "f700767045104b75",
                "0bf8dbceb8cf0c93"
            ]
        ]
    },
    {
        "id": "9535722dad6d0995",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "set.SP_Ta_(base) SP_DIRECT_virt",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set('SP_DIRECT_virt',msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3920,
        "y": 160,
        "wires": [
            [
                "a7ed974cef55c457"
            ]
        ]
    },
    {
        "id": "9a0e227ed7718d64",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_ot1",
        "label": "",
        "tooltip": "Range -20 / 15",
        "group": "052caff3b2365345",
        "order": 11,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot1",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "-20",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 3440,
        "y": 360,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf",
                "0bf8dbceb8cf0c93"
            ]
        ]
    },
    {
        "id": "e07cc2b915729d33",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_wt2",
        "label": "",
        "tooltip": "Range 20 / 60",
        "group": "052caff3b2365345",
        "order": 15,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt2",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "20",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 3600,
        "y": 400,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf",
                "0bf8dbceb8cf0c93"
            ]
        ]
    },
    {
        "id": "f1d9c2e3346b1e43",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_ot2",
        "label": "",
        "tooltip": "Range -20 / 15",
        "group": "052caff3b2365345",
        "order": 14,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot2",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "-20",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 3440,
        "y": 400,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf",
                "0bf8dbceb8cf0c93"
            ]
        ]
    },
    {
        "id": "388bec4d296db98d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_wt1",
        "label": "",
        "tooltip": "Range 20 / 60",
        "group": "052caff3b2365345",
        "order": 12,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt1",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "20",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 3600,
        "y": 360,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf",
                "0bf8dbceb8cf0c93"
            ]
        ]
    },
    {
        "id": "81e0133d16c51789",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR on/off",
        "label": "",
        "tooltip": " ",
        "group": "1179fa790d2d89ca",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Correction_0_WAR_on_off",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3450,
        "y": 300,
        "wires": [
            [
                "65770940f38c7f51"
            ]
        ]
    },
    {
        "id": "b991be16b9662a3e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "set.Correction_0_WAR_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Function - WAR\";\nglobal.set(\"Correction_0_WAR_on_off\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3890,
        "y": 280,
        "wires": [
            [
                "0380b395668eee8e"
            ]
        ]
    },
    {
        "id": "0380b395668eee8e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Correction_0_WAR_on_off",
        "mode": "link",
        "links": [
            "01d75eec1bfe68d4",
            "031e62b0bf3df7d7",
            "3f0803a3a230aca2"
        ],
        "x": 4075,
        "y": 280,
        "wires": []
    },
    {
        "id": "0ad263e5f3bf4fe9",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "set.war_ot_wt",
        "func": "var varName = msg.topic\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(varName,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3300,
        "y": 500,
        "wires": [
            [
                "5b0c451c1ec63b84"
            ]
        ]
    },
    {
        "id": "5b0c451c1ec63b84",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Chart WAR",
        "func": "var war_Tb          = global.get('T_outside',\"file\");                           // Outdoor temperature.\nvar SP_war          = global.get('F_WAR_SP');                                   // Setpoint after the WAR calculation done in (other) function.\n\nvar war_ot1         = global.get('war_ot1',\"file\");\nvar war_ot2         = global.get('war_ot2',\"file\");\nvar war_ot3         = global.get('war_ot3',\"file\");\n\nvar war_wt1         = global.get('war_wt1',\"file\");\nvar war_wt2         = global.get('war_wt2',\"file\");\nvar war_wt3         = global.get('war_wt3',\"file\");\n\n// Design example\n//          OUTSIDE                 WATER\n//          Temperature     >>      Temperature\n//----------------------------------------------------------------------------\n// Range 1\n//          (OT1=)  20      >>  25  (=WT1)\n// Range 2\n//          (OT2=)  5       >>  31  (=WT2)\n// Range 3\n//          (OT3=)  -10     >>  37  (=WT3)\n// Range 4\n//----------------------------------------------------------------------------\n//\n//\n// math part \n// Y = aX + b\n// X axis = ot variable\n// Y axis = wt variable\nvar a;\nvar b;\n\nif (war_Tb <= war_ot3)                                                          // Range 1 in the graph\n    {   a = 0;\n        b = war_wt3;\n    }\n\nif (war_Tb > war_ot2)                                                           // Range 2 in the graph\n    {   a = ((war_wt2-war_wt1)/(war_ot2-war_ot1));\n        b = (war_wt1-(war_ot1*a));\n    }\n    \nif (war_Tb <= war_ot2)                                                          // Range 3 in the graph\n    {   a = ((war_wt3-war_wt2)/(war_ot3-war_ot2));\n        b = (war_wt2-(war_ot2*a));\n    }\n    \nif (war_Tb >= war_ot1)                                                          // Range 4 in the graph\n    {   a = 0;\n        b = war_wt1;\n    }\n\n// Chart part. \n// Here the chart is created with the variables.\n// Part 1 of the chart plots the WAR temperature profile set by the values on the page. \n// Part 2 of the chart plots the line which represents the actual temperature to water temperature. To read it easier.\n// Part 3 of the chart plots the ranges so the chart will be more stable on screen, not messing around with chart axis.\n\nvar chart =     [{\n    \"series\":   [\"Water\",\"Actual\",''],\n    \"data\": [\n                [\n                {\"x\":(war_ot1+15),\"y\":war_wt1},                                 // chart part 1: WAR program series\n                {\"x\":(war_ot1),\"y\":war_wt1},\n                {\"x\":(war_ot2),\"y\":war_wt2},\n                {\"x\":(war_ot3),\"y\":war_wt3},\n                {\"x\":(war_ot3-15),\"y\":war_wt3}\n                ],\n                \n                [\n                {\"x\":(war_ot3-15),  \"y\":((a*war_Tb)+b).toFixed(3)},                        // chart part 2: Actual lines which make use of the function above.\n                {\"x\":(war_Tb),      \"y\":((a*war_Tb)+b).toFixed(3)},\n                {\"x\":(war_Tb),      \"y\":(17).toFixed(3)},\n                ],\n                \n                [                                                               // chart part 3: X-Y as with fixed ranges to make it look more stable.\n                {\"x\":(war_ot3-15),\"y\":(war_wt3+5)},\n                {\"x\":(war_ot3-15),\"y\":(17)},\n                {\"x\":(war_ot1+15),\"y\":(17)}\n                ]\n\n            ],    \n    \"labels\":[ \"\",\"\" ]\n}];\n\n\n\nlet msg1={}, msg2={}, msg3={};\nmsg.payload = chart; \nmsg2.payload = war_Tb; \nmsg3.payload = SP_war;\n\nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='T outside';\n\nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='SP WAR';\n\nreturn [msg, msg2, msg3];\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 520,
        "wires": [
            [
                "4d5e9a9dacd2b429"
            ],
            [
                "7febe67492bf7cbe",
                "12842f4ef6ffc342"
            ],
            []
        ],
        "outputLabels": [
            "Real chart",
            "T_outside",
            ""
        ]
    },
    {
        "id": "4d5e9a9dacd2b429",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "",
        "group": "9b8ec8b1b9f66309",
        "order": 1,
        "width": 11,
        "height": 8,
        "label": "WAR temperature profile",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "18",
        "ymax": "war_wt3+",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#333333",
            "#000000",
            "#000000",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4210,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e5afa5e58fb2ecef",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3160,
        "y": 720,
        "wires": [
            [
                "48ac4170551d07e2"
            ]
        ]
    },
    {
        "id": "48ac4170551d07e2",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Load on boot RTC",
        "func": "var F_RTC       = global.get('F_RTC',\"file\");\nvar save        = false;\nvar WoonkamerSP = global.get('WoonkamerSP',\"file\");\n\n////////////////////////////////////\nif (F_RTC===undefined){\n    global.set('F_RTC',{},\"file\"); \n    F_RTC = {};\n}\n////////////////////////////////////\nif (F_RTC.z1.state === undefined)                   { F_RTC.z1.state = 0; save = true; }\nif (F_RTC.z1.t1_limit === undefined)                { F_RTC.z1.t1_limit = 1.5; save = true; }\nif (F_RTC.z1.t2_limit === undefined)                { F_RTC.z1.t2_limit = 1; save = true; }\nif (F_RTC.z1.t3_limit === undefined)                { F_RTC.z1.t3_limit = 0.5; save = true; }\nif (F_RTC.z1.t4_limit === undefined)                { F_RTC.z1.t4_limit = -0.5; save = true; }\nif (F_RTC.z1.t5_limit === undefined)                { F_RTC.z1.t5_limit = -1; save = true; }\nif (F_RTC.z1.t6_limit === undefined)                { F_RTC.z1.t6_limit = -1.5; save = true; }\nif (F_RTC.z1.t7_correction_value === undefined)     { F_RTC.z1.t7_correction_value = 4; save = true; }\nif (F_RTC.z1.t7_limit === undefined)                { F_RTC.z1.t7_limit = -2; save = true; }\nif (F_RTC.automation_on_limit === undefined)        { F_RTC.automation_on_limit = 3; save = true; }\nif (F_RTC.automation_off_limit === undefined)       { F_RTC.automation_off_limit = 1; save = true; }\nif (F_RTC.automation_power_state === undefined)     { F_RTC.automation_power_state = 0; save = true; }\nif (F_RTC.automation_OM_state === undefined)        { F_RTC.automation_OM_state = 0; save = true; }\nif (F_RTC.incremental_setpoints_state === undefined){ F_RTC.incremental_setpoints_state = 0; save = true; }\nif (F_RTC.z1.t1_correction === undefined)              { F_RTC.z1.t1_correction = -3; save = true; }\nif (F_RTC.z1.t2_correction === undefined)              { F_RTC.z1.t2_correction = -2; save = true; }\nif (F_RTC.z1.t3_correction === undefined)              { F_RTC.z1.t3_correction = -1; save = true; }\nif (F_RTC.z1.t4_correction === undefined)              { F_RTC.z1.t4_correction = 1; save = true; }\nif (F_RTC.z1.t5_correction === undefined)              { F_RTC.z1.t5_correction = 2; save = true; }\nif (F_RTC.z1.t6_correction === undefined)              { F_RTC.z1.t6_correction = 3; save = true; }\n\nif (save === true) {global.set('F_RTC',F_RTC,\"file\");}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nlet msg1 = {}, msg2 = {}, msg3 = {}, msg4 = {}, msg5 = {}, msg6 = {}, msg7 = {}, msg8 = {}, msg9 = {}, msg10 = {}, msg11 = {}, msg12 = {}, msg13 = {}, msg14 = {}, msg15 = {},      msg16={}, msg17={}, msg18={}, msg19={}, msg20={}, msg21={};\n\nmsg1.payload = F_RTC.z1.state;\nmsg2.payload = WoonkamerSP;\nmsg3.payload = F_RTC.z1.t1_limit; msg3.topic = 'z1.t1_limit';\nmsg4.payload = F_RTC.z1.t2_limit; msg4.topic = 'z1.t2_limit';\nmsg5.payload = F_RTC.z1.t3_limit; msg5.topic = 'z1.t3_limit';\nmsg6.payload = F_RTC.z1.t4_limit; msg6.topic = 'z1.t4_limit';\nmsg7.payload = F_RTC.z1.t5_limit; msg7.topic = 'z1.t5_limit';\nmsg8.payload = F_RTC.z1.t6_limit; msg8.topic = 'z1.t6_limit';\nmsg9.payload = F_RTC.z1.t7_limit; msg9.topic = 'z1.t7_limit'; // custom\nmsg10.payload = F_RTC.automation_off_limit; msg10.topic = 'automation_off_limit'\nmsg11.payload = F_RTC.automation_on_limit; msg11.topic = 'automation_on_limit';\nmsg12.payload = F_RTC.automation_power_state; msg12.topic = 'automation_power_state';\nmsg13.payload = F_RTC.z1.t7_correction_value; msg13.topic = 'z1.t7_correction_value';\nmsg14.payload = F_RTC.z1.incremental_setpoints_state; msg14.custom = F_RTC.z1.t7_correction_value;\nmsg15.payload = F_RTC.automation_OM_state; msg15.topic = 'automation_OM_state';\nmsg16.payload = F_RTC.z1.t1_correction; msg16.topic = 'z1.t1_correction';\nmsg17.payload = F_RTC.z1.t2_correction; msg17.topic = 'z1.t2_correction';\nmsg18.payload = F_RTC.z1.t3_correction; msg18.topic = 'z1.t3_correction';\nmsg19.payload = F_RTC.z1.t4_correction; msg19.topic = 'z1.t4_correction';\nmsg20.payload = F_RTC.z1.t5_correction; msg20.topic = 'z1.t5_correction';\nmsg21.payload = F_RTC.z1.t6_correction; msg21.topic = 'z1.t6_correction';\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg11, msg12, msg13, msg14, msg15, msg16, msg17, msg18, msg19, msg20, msg21];\n",
        "outputs": 21,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3170,
        "y": 920,
        "wires": [
            [
                "e8990d184ea1eca6",
                "25b8320badf7ef88",
                "54724886189b074f"
            ],
            [
                "1b8f5447c498c1d6",
                "b15c419913e8770a"
            ],
            [
                "d3b8865dfdb6d46c",
                "4ffcf5c7dbf32067"
            ],
            [
                "e4c7ba5f1306c384",
                "4ffcf5c7dbf32067"
            ],
            [
                "a0998b9af634354f",
                "4ffcf5c7dbf32067"
            ],
            [
                "aa1f73bbe3eef9e1",
                "4ffcf5c7dbf32067"
            ],
            [
                "9b1f3ccedd4e853b",
                "4ffcf5c7dbf32067"
            ],
            [
                "017e7b4d1642ed42",
                "4ffcf5c7dbf32067"
            ],
            [
                "2ca9ec858ebd4887",
                "4ffcf5c7dbf32067"
            ],
            [
                "6a4e29a621172a7e",
                "4ffcf5c7dbf32067"
            ],
            [
                "9e7985132053da99",
                "4ffcf5c7dbf32067"
            ],
            [
                "6efc9729afea79a2",
                "4ffcf5c7dbf32067"
            ],
            [
                "290133f7fd948e25",
                "4ffcf5c7dbf32067"
            ],
            [
                "57d858f4dd89a4c8"
            ],
            [
                "f8d7e53aed62cd14",
                "4ffcf5c7dbf32067"
            ],
            [
                "368bd104ea1ba4e6",
                "4ffcf5c7dbf32067"
            ],
            [
                "922a3b1879d1a5ec",
                "4ffcf5c7dbf32067"
            ],
            [
                "ae00df3cd05e6b06",
                "4ffcf5c7dbf32067"
            ],
            [
                "470ba61639a6ba2d",
                "4ffcf5c7dbf32067"
            ],
            [
                "1b0dd0c926383896",
                "4ffcf5c7dbf32067"
            ],
            [
                "ce9db55d9de18296",
                "4ffcf5c7dbf32067"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off",
            "WoonkamerSP",
            "rtc_t1",
            "rtc_t2",
            "rtc_t3",
            "rtc_t4",
            "rtc_t5",
            "rtc_t6",
            "rtc_t7",
            "rtc_off",
            "rtc_on",
            "F_RTC_on_off2",
            "rtc_t7_correction_value",
            "incremental_setpoints_state",
            "F_RTC_on_off3_OM",
            "F_RTC.t1_correction",
            "F_RTC.t2_correction",
            "F_RTC.t3_correction",
            "F_RTC.t4_correction",
            "F_RTC.t5_correction",
            "F_RTC.t6_correction"
        ]
    },
    {
        "id": "080c11bcc5a2ac73",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "links": [
            "d16f38ef74db786a"
        ],
        "x": 3365,
        "y": 600,
        "wires": [
            [
                "d9675d9d144e412b",
                "946190a858bafe3d"
            ]
        ]
    },
    {
        "id": "d1e851a03542c949",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "Outside temp.",
        "label": "Outside temp.",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3460,
        "y": 340,
        "wires": []
    },
    {
        "id": "54284f6b97afb3c7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "Water temp.",
        "label": "Water temp.",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3610,
        "y": 340,
        "wires": []
    },
    {
        "id": "7febe67492bf7cbe",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 25,
        "width": 3,
        "height": 1,
        "name": "T outside",
        "label": "",
        "format": "{{msg.payload}} °C",
        "layout": "row-center",
        "className": "",
        "x": 3840,
        "y": 460,
        "wires": []
    },
    {
        "id": "d9675d9d144e412b",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 26,
        "width": 3,
        "height": 1,
        "name": "SP (WAR) - Function (WAR) settings tab",
        "label": "",
        "format": "{{msg.payload}} °C",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3880,
        "y": 560,
        "wires": []
    },
    {
        "id": "f3f5cc4e789d19f3",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 23,
        "width": 3,
        "height": 1,
        "name": "Calculated water temp.",
        "label": "Calculated temp.",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3840,
        "y": 380,
        "wires": []
    },
    {
        "id": "0c8eb8257035ca5f",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR on/off",
        "label": "WAR",
        "tooltip": "",
        "group": "052caff3b2365345",
        "order": 4,
        "width": 8,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Correction_0_WAR_on_off",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3450,
        "y": 260,
        "wires": [
            [
                "65770940f38c7f51"
            ]
        ]
    },
    {
        "id": "d3b8865dfdb6d46c",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t1_limit",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 9,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t1_limit",
        "topicType": "str",
        "format": "+{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3780,
        "y": 880,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "e4c7ba5f1306c384",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t2_limit",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 11,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t2_limit",
        "topicType": "str",
        "format": "+{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3780,
        "y": 920,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "a0998b9af634354f",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t3_limit",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 13,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t3_limit",
        "topicType": "str",
        "format": "+{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3780,
        "y": 960,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "aa1f73bbe3eef9e1",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t4_limit",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 20,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t4_limit",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3780,
        "y": 1080,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "9b1f3ccedd4e853b",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t5_limit",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 22,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t5_limit",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3780,
        "y": 1120,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "017e7b4d1642ed42",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t6_limit",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 24,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t6_limit",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3780,
        "y": 1160,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "aae82d0c01404d51",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set.rtc_t_ranges",
        "func": "if (msg.topic == 'WoonkamerSP') { return null; }\n\nvar varName = \"F_RTC.\" + msg.topic;\nmsg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(varName,msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4280,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "60e33931edeab23f",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 6,
        "width": 3,
        "height": 4,
        "name": "Warm limits",
        "label": "Too warm",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 3410,
        "y": 880,
        "wires": []
    },
    {
        "id": "3e3f19d365adf7ae",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 19,
        "width": 3,
        "height": 4,
        "name": "Cold limits",
        "label": "Too cold",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 3410,
        "y": 1080,
        "wires": []
    },
    {
        "id": "38a2e1df7e0bdb2a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Chart RTC",
        "func": "var rtc_PV          = global.get('T_room');                             // Measurement of room temperature\nif (rtc_PV === undefined) { return null; }\n\nvar rtc_SP          = global.get('WoonkamerSP',\"file\");                         // SetPoint of room temperature.\nif (rtc_SP===undefined) {global.set('WoonkamerSP',20,\"file\"); rtc_SP=20;}\n\nvar F_RTC = global.get('F_RTC',\"file\");\n\nvar rtc_t1          = F_RTC.z1.t1_limit;\nvar rtc_t2          = F_RTC.z1.t2_limit;\nvar rtc_t3          = F_RTC.z1.t3_limit;\n\nvar rtc_t4          = F_RTC.z1.t4_limit;\nvar rtc_t5          = F_RTC.z1.t5_limit;\nvar rtc_t6          = F_RTC.z1.t6_limit;\nvar rtc_t7          = F_RTC.z1.t7_limit; //custom\nvar rtc_on          = F_RTC.automation_on_limit;\nvar rtc_off         = F_RTC.automation_off_limit;\n\nvar rtc_vvw1        = global.get('T_woonkamer_BT3_vvw');                        // Measurement of room temperature \nvar rtc_vvw2        = global.get('T_woonkamer_BT4_vvw');                        // Measurement of room temperature \n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg8a={}, msg9={}, msg10={}, msg11={}, msg12={};\n\n\nmsg1.payload = rtc_SP;                                                          //\nmsg1.payload = Number(msg1.payload).toFixed(1);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='Room SP';                                                                // \n\nmsg2.payload = rtc_PV;                                                          // \nmsg2.payload = Number(msg2.payload).toFixed(2);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='Room PV';                                                                // \n\nmsg3.payload = (rtc_SP+rtc_t1);                                                 // \nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='-3';                                                          // \n\nmsg4.payload = (rtc_SP+rtc_t2);                                                 // \nmsg4.payload = Number(msg4.payload).toFixed(1);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='-2';                                                          // \n\nmsg5.payload = (rtc_SP+rtc_t3);                                                 // \nmsg5.payload = Number(msg5.payload).toFixed(1);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='-1';                                                          // \n\nmsg6.payload = (rtc_SP+rtc_t4);                                                 // \nmsg6.payload = Number(msg6.payload).toFixed(1);\nmsg6.payload = parseFloat(msg6.payload);\nmsg6.topic='+1';                                                          // \n\nmsg7.payload = (rtc_SP+rtc_t5);                                                 // \nmsg7.payload = Number(msg7.payload).toFixed(1);\nmsg7.payload = parseFloat(msg7.payload);\nmsg7.topic='+2';                                                          // \n\nmsg8.payload = (rtc_SP+rtc_t6);                                                 // \nmsg8.payload = Number(msg8.payload).toFixed(1);\nmsg8.payload = parseFloat(msg8.payload);\nmsg8.topic='+3';                                                          // \n\nmsg8a.payload = (rtc_SP+rtc_t7);                                                 // \nmsg8a.payload = Number(msg8a.payload).toFixed(1);\nmsg8a.payload = parseFloat(msg8a.payload);\nmsg8a.topic = '+custom';  //change to custom\n\nmsg9.payload = rtc_vvw1;                                                        // \nmsg9.payload = Number(msg9.payload).toFixed(2);\nmsg9.payload = parseFloat(msg9.payload);\nmsg9.topic='Floor T1';\n\n\nmsg10.payload = rtc_vvw2;                                                        // \nmsg10.payload = Number(msg10.payload).toFixed(2);\nmsg10.payload = parseFloat(msg10.payload);\nmsg10.topic='Floor T2';  \n\nmsg11.payload = (rtc_SP+rtc_on);                                                        // \nmsg11.payload = Number(msg11.payload).toFixed(1);\nmsg11.payload = parseFloat(msg11.payload);\nmsg11.topic='Trigger';  \n\nmsg12.payload = (rtc_SP+rtc_off);                                                        // \nmsg12.payload = Number(msg12.payload).toFixed(1);\nmsg12.payload = parseFloat(msg12.payload);\nmsg12.topic='Revert';  \n\n\nreturn [[msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg8a, msg9, msg10, msg11, msg12], msg2];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4290,
        "y": 1360,
        "wires": [
            [
                "b32f014cb3ec752e"
            ],
            [
                "1f5d513050d612a1"
            ]
        ],
        "outputLabels": [
            "chart",
            "rtc_PV"
        ]
    },
    {
        "id": "b32f014cb3ec752e",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "",
        "group": "7267dafd7dc99038",
        "order": 1,
        "width": 15,
        "height": 14,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "2000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#7bd152",
            "#0011ff",
            "#b22222",
            "#dc7f27",
            "#ffd700",
            "#ffd700",
            "#dc7f27",
            "#b22222",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4530,
        "y": 1380,
        "wires": [
            [
                "65ea8cc832ad6d50"
            ]
        ]
    },
    {
        "id": "79daf2eea90f8432",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 4530,
        "y": 1340,
        "wires": [
            [
                "b32f014cb3ec752e"
            ]
        ]
    },
    {
        "id": "25b8320badf7ef88",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off RTC_Settings",
        "label": "RTC",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 4,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3610,
        "y": 800,
        "wires": [
            [
                "22addf167b287f53"
            ]
        ]
    },
    {
        "id": "032ca56c8c21283e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "group": "7267dafd7dc99038",
        "order": 2,
        "width": 15,
        "height": 1,
        "name": "footnote",
        "label": "This chart shows 1 datapoint every 5 minutes",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 4520,
        "y": 1440,
        "wires": []
    },
    {
        "id": "36a9b7dad9d2611e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "9b8ec8b1b9f66309",
        "order": 2,
        "width": 11,
        "height": 1,
        "name": "Graph description",
        "label": "X-axis: outside °C | Y-axis: water °C",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3990,
        "y": 360,
        "wires": []
    },
    {
        "id": "45643e4e39e1d248",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "1179fa790d2d89ca",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "Home Heat - Current correction value RTC",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}} °C</font>",
        "layout": "row-right",
        "className": "",
        "x": 3670,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1b40f688e5fbc5dd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "group": "1179fa790d2d89ca",
        "order": 14,
        "width": 2,
        "height": 1,
        "name": "Home - Current correction (SS)",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}} °C</font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3810,
        "y": 2040,
        "wires": []
    },
    {
        "id": "4c49268a7054041c",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "",
        "links": [
            "16054e8334890ad8"
        ],
        "x": 3125,
        "y": 2000,
        "wires": [
            [
                "47e76e01a5cfb304",
                "3a196a4275cfec68"
            ]
        ]
    },
    {
        "id": "37ae6fb47a326b5e",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "SS chart",
        "group": "4551542d51501ce1",
        "order": 2,
        "width": 22,
        "height": 9,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "2000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3720,
        "y": 2200,
        "wires": [
            [
                "e3b0d458cec07c21"
            ]
        ]
    },
    {
        "id": "3578d6b18ceb5727",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "Chart SS",
        "func": "var ss_SP           = global.get('SP_Final',\"file\");                // Current compressor frequency.\nvar ss_Tr           = global.get('TOP5_Main_Inlet_Temp');                             // Measurement of room temperature \nvar ss_Ta           = global.get('TOP6_Main_Outlet_Temp');\nvar ss_hz           = global.get('compressor_frequency',\"file\");\nvar ss_corr         = global.get('F_SS.correction_value',\"file\");\nvar QM_level        = global.get('TOP18_Quiet_Mode_Level',\"file\");\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\n\nmsg1.payload = ss_SP;                                                           //\nmsg1.topic   = 'Setpoint';                                                          // \nvar OM = global.get('TOP4_Operating_Mode_State',\"file\")\nif (OM == 1) { \n    msg1.payload = global.get('Z1_Cool_Request_Temp'); \n}\nif (msg1.payload === undefined) { msg1.payload = null}\nmsg1.payload = Number(msg1.payload).toFixed(1);\nmsg1.payload = parseFloat(msg1.payload);\n\n\nmsg2.payload = ss_Tr;                                                           //\nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='Water inlet';                                                       // \n\nmsg3.payload = ss_Ta;                                                           // \nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='Water outlet';                                                      // \n\nmsg4.payload = ss_hz;                                                           // \nmsg4.payload = Number(msg4.payload).toFixed(0);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='Frequency';                                                         // \n\n\nmsg5.payload = ss_corr;                                                           // \nmsg5.payload = Number(msg5.payload).toFixed(0);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='Correction';                                                     // \n\nmsg6.payload = QM_level;\nmsg6.payload = Number(msg6.payload).toFixed(0);\nmsg6.payload = parseFloat(msg6.payload);\nmsg6.topic   = 'QuietMode level';\n\n\nreturn [[msg1, msg2, msg3, msg4, msg5, msg6]];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3440,
        "y": 2200,
        "wires": [
            [
                "37ae6fb47a326b5e"
            ]
        ]
    },
    {
        "id": "7bad42f4cc70470e",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3190,
        "y": 2240,
        "wires": [
            [
                "3578d6b18ceb5727"
            ]
        ]
    },
    {
        "id": "7790b731fd9a1374",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "Softstart on/off (SS)",
        "label": "Softstart",
        "tooltip": "",
        "group": "c2a0123d2e2c91f0",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3770,
        "y": 1720,
        "wires": [
            [
                "d83ab1374f972ad1"
            ]
        ]
    },
    {
        "id": "c9c2bf06edb19d41",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Chart Water (ROOM)",
        "func": "var SP_Ta                   = global.get('SP_Final',\"file\");                    // Current Setpoint Ta\nvar PV_Tr                   = global.get('TOP5_Main_Inlet_Temp');               // Current inlet temperature\nvar PV_Ta                   = global.get('TOP6_Main_Outlet_Temp');              // Current outlet temperature\nvar TOP10_DHW_Temp          = global.get('TOP10_DHW_Temp');                     // Current TANK temperature\nvar TOP20_ThreeWay_Valve_State    = global.get(\"TOP20_ThreeWay_Valve_State\");   // Current state of the 3-way valve\nvar TOP9_DHW_Target_Temp    = global.get('TOP9_DHW_Target_Temp',\"file\");        // Current Setpoint DHW\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\nmsg1.payload = SP_Ta;                                                           //\nmsg1.payload = Number(msg1.payload).toFixed(0);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='SP Ta';                                                             // \n\nmsg2.payload = PV_Tr;                                                           // \nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='PV Tr';                                                             // \n\nmsg3.payload = PV_Ta;                                                           // \nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='PV Ta';                                                             // \n\nmsg4.payload = TOP20_ThreeWay_Valve_State;                                            // \nmsg4.payload = Number(msg4.payload).toFixed(0);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='ThreeWay Valve State';                                              //  \n\nmsg5.payload = TOP10_DHW_Temp;                                                        // \nmsg5.payload = Number(msg5.payload).toFixed(0);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='Tank PV';                                                           //  \n\nmsg6.payload = TOP9_DHW_Target_Temp;                                                           //\nmsg6.payload = Number(msg6.payload).toFixed(0);\nmsg6.payload = parseFloat(msg6.payload);\nmsg6.topic='SP Ta';  \n\n\n// TOP20_ThreeWay_Valve_State = ROOM mode > output value to pin 1\nif (TOP20_ThreeWay_Valve_State == 0) {\n    return [ [msg1, msg2, msg3] , [msg6, null, null, msg5] ];\n    } \n\n// TOP20_ThreeWay_Valve_State = DHW mode > output value to pin 2, including the PV_Tank\nelse {\n    return [ null , [msg6, msg2, msg3, msg5] ];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2360,
        "wires": [
            [
                "9802bf01ebf45d28"
            ],
            [
                "9789265573ab4c80"
            ]
        ]
    },
    {
        "id": "76fd0cf35b775cdf",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 650,
        "y": 2240,
        "wires": [
            [
                "8cb1aceef81045bd"
            ]
        ]
    },
    {
        "id": "9f3df8b1cba0bbda",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Chart Roomtemperatures",
        "func": "var SP                          = global.get('SP_Final',\"file\");                // Current Setpoint of the water (Ta)\nvar T_room                      = global.get('T_room');                         // Current Livingroom sensor 1 (air)\n\nlet msg1={}, msg2={};\n\nif (SP !== undefined)\n{\n    msg1.payload = SP;\n    msg1.payload = Number(msg1.payload).toFixed(2);\n    msg1.payload = parseFloat(msg1.payload);\n    msg1.topic='SP Ta';\n}\n\nif (T_room !== undefined)\n{\n    msg2.payload = T_room;\n    msg2.payload = Number(msg2.payload).toFixed(2);\n    msg2.payload = parseFloat(msg2.payload);\n    msg2.topic='Livingroom PV';\n}\n\nreturn [[msg1, msg2, null, null, null, null, null]];\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2200,
        "wires": [
            [
                "8cb1aceef81045bd"
            ]
        ]
    },
    {
        "id": "a734f98c5d02604e",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2200,
        "wires": [
            [
                "9f3df8b1cba0bbda",
                "c9c2bf06edb19d41"
            ]
        ]
    },
    {
        "id": "fa81c798d517834f",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR part",
        "info": "",
        "x": 3140,
        "y": 140,
        "wires": []
    },
    {
        "id": "8bd536b323fb865c",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC part",
        "info": "",
        "x": 3140,
        "y": 780,
        "wires": []
    },
    {
        "id": "b5f581c27a02b8a0",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "SS part",
        "info": "",
        "x": 3110,
        "y": 1720,
        "wires": []
    },
    {
        "id": "4dc131a257d753d0",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "SP >>",
        "info": "",
        "x": 3130,
        "y": 180,
        "wires": []
    },
    {
        "id": "dade0dbb40c3945a",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 18,
        "width": 5,
        "height": 1,
        "name": "Room actual",
        "label": "Room actual",
        "format": "{{msg.payload}} °C ",
        "layout": "row-spread",
        "className": "",
        "x": 3570,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0d58a1e854263ec4",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "",
        "group": "9b8ec8b1b9f66309",
        "order": 4,
        "width": 11,
        "height": 7,
        "label": "WAR Time chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "40",
        "removeOlder": "24",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#de425b",
            "#00876c",
            "#f59b56",
            "#000000",
            "#000000",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4180,
        "y": 520,
        "wires": [
            [
                "c26a112b706b6d55"
            ]
        ]
    },
    {
        "id": "b92812725c4e8443",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Trigger interval 1m",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3440,
        "y": 540,
        "wires": [
            [
                "5b0c451c1ec63b84",
                "6c95ed35d3dcaea3"
            ]
        ]
    },
    {
        "id": "01d75eec1bfe68d4",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Dash_WAR_OnOff",
        "links": [
            "0380b395668eee8e",
            "7bd79e0421697e75",
            "34e923228bf51ddf",
            "3511e342c1fb7c3f"
        ],
        "x": 3365,
        "y": 200,
        "wires": [
            [
                "0c8eb8257035ca5f",
                "81e0133d16c51789"
            ]
        ]
    },
    {
        "id": "942f2ca34abfe8ac",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC toggle on/off",
        "links": [
            "657bf94dca5e4a3f",
            "c9df0ea076346fde",
            "eb88ab4567d68ff5",
            "aa4dd3b07f9cb7ed"
        ],
        "x": 3375,
        "y": 780,
        "wires": [
            [
                "25b8320badf7ef88",
                "e8990d184ea1eca6"
            ]
        ]
    },
    {
        "id": "354fe89415b3f383",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 4150,
        "y": 560,
        "wires": [
            [
                "0d58a1e854263ec4"
            ]
        ]
    },
    {
        "id": "ecf47b4f156ae616",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Load on boot WAR",
        "func": "\n    \nvar Correction_0_WAR_on_off = global.get('Correction_0_WAR_on_off',\"file\");\n    if (Correction_0_WAR_on_off === undefined)        {global.set('Correction_0_WAR_on_off',0,\"file\"); Correction_0_WAR_on_off=0;}\n\nvar war_ot1                 = global.get('war_ot1',\"file\");                             // Outside temperature high         (warm outside)\nvar war_ot2                 = global.get('war_ot2',\"file\");                             // Outside temperature intermediate (intermediate outside temperature)\nvar war_ot3                 = global.get('war_ot3',\"file\");                             // Outside temperature low          (cold outside)\nvar war_wt1                 = global.get('war_wt1',\"file\");                             // Water temperature low            (cold water)\nvar war_wt2                 = global.get('war_wt2',\"file\");                             // Water temperature intermediate   (intermediate water temperature)\nvar war_wt3                 = global.get('war_wt3',\"file\");                             // Water temperature high           (warm water)\n\nvar SP_DIRECT_virt          = global.get('SP_DIRECT_virt',\"file\");\n\nvar check = (war_ot1+war_ot2+war_ot3+war_wt1+war_wt2+war_wt3);\nif (isNaN(check) === true || check === undefined)     // if the variables are added to eachother and the result is Not a Number, produce an error message.\n    {   \n        return null;\n    }\n\nvar msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={};\n\n///////////////////\nvar TOP76_Heating_Mode = global.get(\"TOP76_Heating_Mode\",\"file\");\nif (TOP76_Heating_Mode === undefined) { return null; }\n\nmsg1.payload = SP_DIRECT_virt;\n\nif (TOP76_Heating_Mode == 0){                 // Compensation curve mode\n    if (SP_DIRECT_virt === undefined)        {global.set('SP_DIRECT_virt',0,\"file\"); SP_DIRECT_virt=0;}   \n    var msg1 = { ui_control: {min:-5, max:+5, step:1 } };\n    msg1.label = \"Shift water temp.\";\n}\n\nif (TOP76_Heating_Mode == 1){                 // Direct mode\n    if (SP_DIRECT_virt === undefined)        {global.set('SP_DIRECT_virt',20,\"file\"); SP_DIRECT_virt=20;}\n    var msg1 = {ui_control:{min:20, max:65, step:1}};\n    msg1.label = \"Default water temp.\";\n}\n//////////////////\n\n\n\nmsg1.payload = SP_DIRECT_virt;\nmsg1.topic = 'SP_DIRECT_virt';\nif (SP_DIRECT_virt !== undefined) { node.send(msg1); }\n\nmsg2.payload = Correction_0_WAR_on_off;\nmsg2.topic = \"Correction_0_WAR_on_off\";\nif (Correction_0_WAR_on_off !== undefined) { node.send(msg2); }\n\nmsg3.payload = war_ot1;\nmsg3.topic = \"war_ot1\";\nif (war_ot1 !== undefined) { node.send(msg3); }\n\nmsg4.payload = war_ot2;\nmsg4.topic = \"war_ot2\";\nif (war_ot2 !== undefined) { node.send(msg4); }\n\nmsg5.payload = war_ot3;\nmsg5.topic = \"war_ot3\";\nif (war_ot3 !== undefined) { node.send(msg5); }\n\nmsg6.payload = war_wt1;\nmsg6.topic = \"war_wt1\";\nif (war_wt1 !== undefined) { node.send(msg6); }\n\nmsg7.payload = war_wt2;\nmsg7.topic = \"war_wt2\";\nif (war_wt2 !== undefined) { node.send(msg7); }\n\nmsg8.payload = war_wt3;\nmsg8.topic = \"war_wt3\";\nif (war_wt3 !== undefined) { node.send(msg8); }\n\n\n//return [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8];\n\n",
        "outputs": 8,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3170,
        "y": 340,
        "wires": [
            [
                "9fda0aa836fde5a4"
            ],
            [
                "0c8eb8257035ca5f",
                "81e0133d16c51789",
                "9fda0aa836fde5a4"
            ],
            [
                "9a0e227ed7718d64",
                "9fda0aa836fde5a4"
            ],
            [
                "f1d9c2e3346b1e43",
                "9fda0aa836fde5a4"
            ],
            [
                "4950af3d6534aa47",
                "9fda0aa836fde5a4"
            ],
            [
                "388bec4d296db98d",
                "9fda0aa836fde5a4"
            ],
            [
                "e07cc2b915729d33",
                "9fda0aa836fde5a4"
            ],
            [
                "f2daac0935cc9d81",
                "9fda0aa836fde5a4"
            ]
        ],
        "outputLabels": [
            "SP_DIRECT_virt",
            "Correction_0_WAR_on_off",
            "war_ot1",
            "war_ot2",
            "war_ot3",
            "war_wt1",
            "war_wt2",
            "war_wt3"
        ]
    },
    {
        "id": "8c2afa46f759d9cd",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Load on boot 4",
        "func": "var TOP9_DHW_Target_Temp         = global.get('TOP9_DHW_Target_Temp',\"file\");\n//let msg1={};\nmsg.payload = TOP9_DHW_Target_Temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 120,
        "wires": [
            [
                "158e0bb2b00cd4ba",
                "7f44b9272e731114"
            ]
        ],
        "outputLabels": [
            "DHW_Target_Temp"
        ]
    },
    {
        "id": "12842f4ef6ffc342",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "1179fa790d2d89ca",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "T outside (advanced Functions tab)",
        "label": "WAR",
        "format": "({{msg.payload}} °C)",
        "layout": "row-left",
        "className": "",
        "x": 3880,
        "y": 420,
        "wires": []
    },
    {
        "id": "1f5d513050d612a1",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "1179fa790d2d89ca",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "RTC PV (Home_HEAT)",
        "label": "RTC",
        "format": "({{msg.payload}} °C)",
        "layout": "row-left",
        "className": "",
        "x": 4010,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1eb00088db267256",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "group": "1179fa790d2d89ca",
        "order": 13,
        "width": 3,
        "height": 1,
        "name": "SoftStart txt",
        "label": "SoftStart",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3510,
        "y": 1760,
        "wires": []
    },
    {
        "id": "cc1c74d4b3b87c5e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 21,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4230,
        "y": 160,
        "wires": []
    },
    {
        "id": "e5a709273b24888d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4250,
        "y": 180,
        "wires": []
    },
    {
        "id": "d0cbd630befb3d01",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 20,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4250,
        "y": 240,
        "wires": []
    },
    {
        "id": "7a2a9be0735512b6",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 24,
        "width": 2,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4270,
        "y": 260,
        "wires": []
    },
    {
        "id": "320506c25427ee87",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 34,
        "width": 2,
        "height": 3,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4270,
        "y": 320,
        "wires": []
    },
    {
        "id": "e6ca18bfd7adb287",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "TOP62 - panasonic_heat_pump/main/Fan1_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan1_Motor_Speed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 1040,
        "wires": [
            [
                "8ae2f173954488ad"
            ]
        ]
    },
    {
        "id": "42c8d2ef7cd7f120",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "TOP63 - panasonic_heat_pump/main/Fan2_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan2_Motor_Speed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 1160,
        "wires": [
            [
                "b3cbb0e85ba0fb42"
            ]
        ]
    },
    {
        "id": "1ed98a1d47eb56f0",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "Fan1",
        "label": "Fan 1",
        "format": "{{msg.payload}} rpm",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 1040,
        "wires": []
    },
    {
        "id": "79dc18dd1cca1e73",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "Compressor runtime",
        "label": "Compressor runtime",
        "format": "{{msg.payload}} min",
        "layout": "row-spread",
        "className": "",
        "x": 960,
        "y": 980,
        "wires": []
    },
    {
        "id": "2b065128513763fa",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "Store information",
        "func": "var ss_chart = msg;\nglobal.set(\"ss_chart\", ss_chart,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 2200,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "9548ee234cc5af7a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "Load information",
        "func": "let msg1={};\nmsg1 = global.get(\"ss_chart\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 2160,
        "wires": [
            [
                "37ae6fb47a326b5e"
            ]
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "69b1892c29513016",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 3220,
        "y": 2160,
        "wires": [
            [
                "9548ee234cc5af7a"
            ]
        ]
    },
    {
        "id": "72bcb750dc791f05",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "Store information",
        "func": "var rtc_chart = msg;\nglobal.set(\"rtc_chart\", rtc_chart,\"file\") || [];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4910,
        "y": 1460,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "7bf73fde5dbbe654",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Load information",
        "func": "let msg1={};\nmsg1 = global.get(\"rtc_chart\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4270,
        "y": 1400,
        "wires": [
            [
                "b32f014cb3ec752e"
            ]
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "af1e900e0be88b34",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 4100,
        "y": 1400,
        "wires": [
            [
                "7bf73fde5dbbe654"
            ]
        ]
    },
    {
        "id": "aa33ae9640c6a434",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "Store information",
        "func": "var war_chart = msg;\nglobal.set(\"war_chart\", war_chart,\"file\") || [];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4420,
        "y": 600,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "c26a112b706b6d55",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 4410,
        "y": 560,
        "wires": [
            [
                "aa33ae9640c6a434"
            ]
        ]
    },
    {
        "id": "74e2096239928bfc",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Load information",
        "func": "let msg1={};\nmsg1 = global.get(\"war_chart\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4190,
        "y": 420,
        "wires": [
            [
                "0d58a1e854263ec4"
            ]
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "df2ff07ddeb07106",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 4160,
        "y": 380,
        "wires": [
            [
                "74e2096239928bfc"
            ]
        ]
    },
    {
        "id": "ea3029991749f77b",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP15 - panasonic_heat_pump/main/Heat_Energy_Production",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Production",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1560,
        "wires": [
            [
                "e7d39d4073a87d3c"
            ]
        ]
    },
    {
        "id": "fa2eba3089ca0ef4",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "group": "fb77ab43998a2f18",
        "order": 2,
        "width": 26,
        "height": 8,
        "label": "Energy",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#056647",
            "#d1102b",
            "#0082cd",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1040,
        "y": 1640,
        "wires": [
            [
                "ba8181d980146bf5"
            ]
        ]
    },
    {
        "id": "3b552bccda090181",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP40 - panasonic_heat_pump/main/DHW_Energy_Production",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Production",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1680,
        "wires": [
            [
                "14789bda2966231c"
            ]
        ]
    },
    {
        "id": "8a140f3a3a1ff736",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP67 - panasonic_heat_pump/main/Compressor_Current",
        "topic": "panasonic_heat_pump/main/Compressor_Current",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1860,
        "wires": [
            [
                "9ed43df7ef7fa246"
            ]
        ]
    },
    {
        "id": "1cbdb190d6f52cb6",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "group": "fb77ab43998a2f18",
        "order": 4,
        "width": 26,
        "height": 7,
        "label": "Efficiency",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 1980,
        "wires": [
            [
                "2ec8265263c71358"
            ]
        ]
    },
    {
        "id": "fe8e23b8971b868e",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "COP calculated",
        "links": [
            "306b69356454f3ff",
            "5787c91b303f2538"
        ],
        "x": 820,
        "y": 2020,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ],
        "l": true
    },
    {
        "id": "b1933566192d3b78",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP53 - panasonic_heat_pump/main/Eva_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Eva_Outlet_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 2080,
        "wires": [
            [
                "9534d89253d426ca"
            ]
        ]
    },
    {
        "id": "fae151e3fc249477",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Current [A]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1860,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "21857afb8366acf2",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Defrost State [-]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1920,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "039ca8047ee5b833",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EVA outlet [°C]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 2080,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "8e0dc8ab2999f4ec",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 970,
        "y": 1800,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "38b10c117605255d",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Heat | Energy production",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1560,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "53393ad3ce2b9113",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Heat | Energy consumption",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1600,
        "wires": [
            [
                "fa2eba3089ca0ef4",
                "b3e1e417d51330e7"
            ]
        ]
    },
    {
        "id": "3a6bb7844523ece7",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW | Energy production",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1680,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "ca8fd698c67b1cfa",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW | Energy consumption",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1740,
        "wires": [
            [
                "fa2eba3089ca0ef4",
                "bbe6832628277539"
            ]
        ]
    },
    {
        "id": "b3e1e417d51330e7",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "Heat | Energy consumption",
        "mode": "link",
        "links": [],
        "x": 1085,
        "y": 1600,
        "wires": []
    },
    {
        "id": "bbe6832628277539",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "DHW | Energy consumption",
        "mode": "link",
        "links": [],
        "x": 1075,
        "y": 1740,
        "wires": []
    },
    {
        "id": "8627726ba882e493",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "links": [
            "9de1bde370b68508"
        ],
        "x": 235,
        "y": 1600,
        "wires": [
            [
                "79ff4d14869086b3"
            ]
        ]
    },
    {
        "id": "4b0bb57d44bd8bb1",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1560,
        "wires": [
            [
                "38b10c117605255d"
            ]
        ]
    },
    {
        "id": "b4d652a4c0313e8a",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1680,
        "wires": [
            [
                "3a6bb7844523ece7"
            ]
        ]
    },
    {
        "id": "990e0858767f91fc",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1740,
        "wires": [
            [
                "ca8fd698c67b1cfa"
            ]
        ]
    },
    {
        "id": "9ed43df7ef7fa246",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1860,
        "wires": [
            [
                "fae151e3fc249477"
            ]
        ]
    },
    {
        "id": "6d77bc12fe8024ee",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1920,
        "wires": [
            [
                "21857afb8366acf2"
            ]
        ]
    },
    {
        "id": "9534d89253d426ca",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 2080,
        "wires": [
            [
                "039ca8047ee5b833"
            ]
        ]
    },
    {
        "id": "79ff4d14869086b3",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1600,
        "wires": [
            [
                "53393ad3ce2b9113"
            ]
        ]
    },
    {
        "id": "9e7985132053da99",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_on (activate automation)",
        "label": "",
        "tooltip": "Above this delta T, the automation action will be executed",
        "group": "ef3dbc543ae92bec",
        "order": 5,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "automation_on_limit",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "0",
        "max": "+20",
        "step": "0.1",
        "className": "",
        "x": 3640,
        "y": 1400,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "47b72adc26e2025f",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "Trigger action above dT",
        "label": "Trigger action above dT",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3390,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6a4e29a621172a7e",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_off (deactivate automation)",
        "label": "",
        "tooltip": "Below this delta T, the automation action will be reverted",
        "group": "ef3dbc543ae92bec",
        "order": 7,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "automation_off_limit",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "-20",
        "max": "2",
        "step": "0.1",
        "className": "",
        "x": 3650,
        "y": 1440,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "449411f64f3ffe0b",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Revert action below dT",
        "label": "Revert action below dT",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3380,
        "y": 1440,
        "wires": []
    },
    {
        "id": "4b2cff40b8a3ecc9",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "spacer 1x2",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4470,
        "y": 940,
        "wires": []
    },
    {
        "id": "7386864c75dbce5c",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "DHW_Target_Temp",
        "mode": "link",
        "links": [
            "32840bc8d04fbb31"
        ],
        "x": 795,
        "y": 120,
        "wires": []
    },
    {
        "id": "3f63919ddd4f0ea7",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Dash - DHW (SP) link in",
        "links": [
            "550d51c7fe788f9e"
        ],
        "x": 365,
        "y": 100,
        "wires": [
            [
                "158e0bb2b00cd4ba"
            ]
        ]
    },
    {
        "id": "62bb9a3778a8e0c4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "",
        "func": "global.set(\"chart-water-heat\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "8cea97ace96d4c67",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "",
        "func": "global.set(\"chart-water-dhw\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "1afae37bbb9eee4f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "",
        "func": "global.set(\"chart-kamertemperatuur\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "aeca371dc97489c4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "load",
        "func": "let msg1={};\nmsg1 = global.get(\"chart-kamertemperatuur\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2240,
        "wires": [
            [
                "8cb1aceef81045bd"
            ]
        ]
    },
    {
        "id": "eea147e0b371b347",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "load",
        "func": "let msg1={};\nmsg1 = global.get(\"chart-water-heat\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2320,
        "wires": [
            [
                "9802bf01ebf45d28"
            ]
        ]
    },
    {
        "id": "f6a75e4b3dd9cf4c",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "load",
        "func": "let msg1={};\nmsg1 = global.get(\"chart-water-dhw\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2400,
        "wires": [
            [
                "9789265573ab4c80"
            ]
        ]
    },
    {
        "id": "12b317db9b7ce136",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 2300,
        "wires": [
            [
                "aeca371dc97489c4",
                "eea147e0b371b347",
                "f6a75e4b3dd9cf4c"
            ]
        ]
    },
    {
        "id": "65770940f38c7f51",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3650,
        "y": 280,
        "wires": [
            [
                "b991be16b9662a3e",
                "81e0133d16c51789",
                "0c8eb8257035ca5f",
                "850fb0ccb76b25cf",
                "82a387f8895ef8f6",
                "0bf8dbceb8cf0c93"
            ]
        ]
    },
    {
        "id": "3d3b432c844ba87e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "ForceDHW out",
        "mode": "link",
        "links": [
            "3e5558127fc3402a"
        ],
        "x": 795,
        "y": 240,
        "wires": []
    },
    {
        "id": "0609b7d54d31dafb",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "mode": "link",
        "links": [
            "cc201d2b1a4948f9",
            "20e2544a8277d8c2"
        ],
        "x": 795,
        "y": 180,
        "wires": []
    },
    {
        "id": "25a5987e8a1aaf9c",
        "type": "bar-chart-data",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "bar-chart DHW COP-12months",
        "x_interval": "months",
        "x_size": "12",
        "unit": "",
        "precision": 2,
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 890,
        "y": 3100,
        "wires": [
            [
                "35c9b0fcbdf3c9e0"
            ]
        ]
    },
    {
        "id": "b09d20349841eaed",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Once per 15minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 220,
        "y": 3320,
        "wires": [
            [
                "d4198e0e57720e55"
            ]
        ]
    },
    {
        "id": "d4198e0e57720e55",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Function - bucket 1 + 2 combined",
        "func": "var dhw     = global.get(\"COP_DHW_24m\",\"file\");\nvar heat    = global.get(\"COP_HEAT_24m\",\"file\"); \nlet msg1={}, msg2={};\n\nmsg1 = dhw;\nmsg2 = heat;\n\nvar varlabels;\nif (heat === undefined){varlabels = msg1.payload[0].labels;}else{varlabels = msg2.payload[0].labels;}\n\nvar varData1;// dhw\nif (dhw === undefined){varData1 = [0,0,0,0,0,0,0,0,0,0,0,0];}else{varData1 = msg1.payload[0].data[0];}\n\nvar varData2;// heat\nif (heat === undefined){varData2 = [0,0,0,0,0,0,0,0,0,0,0,0];}else{varData2 = msg2.payload[0].data[0];}\n\nvar varSeries1     = \"DHW\"; // dhw\nvar varSeries2     = \"HEAT\"; // heat\n\nvar m={};\n    m.labels    = varlabels;\n    m.series    = [varSeries1, varSeries2];\n    m.data      = [varData1, varData2];\n\n\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3320,
        "wires": [
            [
                "eee624aa045ae22a"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "8859608d9186c4e4",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Bucket 1 + 2  combined to chart",
        "info": "",
        "x": 230,
        "y": 3280,
        "wires": []
    },
    {
        "id": "278b50b68f01198e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Load bar-chart data",
        "func": "var heat = global.get(\"COP_HEAT_24m\",\"file\");\nvar dhw = global.get(\"COP_DHW_24m\",\"file\");\n\n// note: if you need to correct the COP monthly chart because it does not show values. Copy/paste the content of \"COP_DHW_24m\" or \"COP_HEAT_24m\" in the lines below. Line 8 or 9. \n// Uncomment the corresponding line 8 or 9. \n// adjust the incorrect value and press [Done] > [Deploy] > [Restore after boot]\n\n//dhw = {\"payload\":[{\"labels\":[\"2022-01\",\"2022-02\",\"2022-03\",\"2022-04\",\"2022-05\",\"2022-06\",\"2022-07\",\"2022-08\",\"2022-09\",\"2022-10\",\"2022-11\",\"2022-12\"],\"series\":[\"DHW\"],\"data\":[[0,0,0,0,3.84,3.05,1.13,3.65,3.68,3.89,3.29,2.79]]}],\"topic\":\"DHW\",\"_msgid\":\"46ca0b6da9dae345\",\"_event\":\"node:5787c91b303f2538\",\"bar_keys\":[\"202201\",\"202202\",\"202203\",\"202204\",\"202205\",\"202206\",\"202207\",\"202208\",\"202209\",\"202210\",\"202211\",\"202212\"],\"data_counter\":[{\"202212\":4814}],\"topics\":[\"DHW\"],\"DHW_last\":0,\"data_min\":0,\"data_max\":3.89,\"data_sum\":25.32,\"settings\":{\"unit\":\"\",\"x_size\":\"12\",\"precision\":2,\"is_meter_reading\":false,\"agg_by\":\"avg\"}};\n//heat = {\"payload\":[{\"labels\":[\"2022-01\",\"2022-02\",\"2022-03\",\"2022-04\",\"2022-05\",\"2022-06\",\"2022-07\",\"2022-08\",\"2022-09\",\"2022-10\",\"2022-11\",\"2022-12\"],\"series\":[\"HEAT\"],\"data\":[[0,0,0,0,4.86,6.01,0.64,0,6.57,7.43,6.32,4.96]]}],\"topic\":\"HEAT\",\"_msgid\":\"a3d2b37df2f169e3\",\"_event\":\"node:306b69356454f3ff\",\"bar_keys\":[\"202201\",\"202202\",\"202203\",\"202204\",\"202205\",\"202206\",\"202207\",\"202208\",\"202209\",\"202210\",\"202211\",\"202212\"],\"data_counter\":[{\"202212\":85520}],\"topics\":[\"HEAT\"],\"HEAT_last\":0,\"data_min\":0,\"data_max\":7.43,\"data_sum\":36.79,\"settings\":{\"unit\":\"\",\"x_size\":\"12\",\"precision\":\"2\",\"is_meter_reading\":false,\"agg_by\":\"avg\"}}\n\nmsg1 = heat;\nmsg2 = dhw;\n\n\n\nif (heat === undefined)     {\n    if (dhw === undefined)  {\n        return [null,null];\n    }\n    \n    return [null,msg2];\n}\n\nelse    {\n    if (dhw === undefined)  {\n        return [msg1,null];\n    }\n    \n    return [msg1,msg2];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2900,
        "wires": [
            [
                "f5f7d3b912113a33"
            ],
            [
                "25a5987e8a1aaf9c"
            ]
        ],
        "outputLabels": [
            "COP_HEAT_24m",
            "COP_DHW_24m"
        ]
    },
    {
        "id": "93a7de2857166209",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "Restore after boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "trigger",
        "x": 190,
        "y": 2900,
        "wires": [
            [
                "278b50b68f01198e"
            ]
        ]
    },
    {
        "id": "d63cf14c266a32c5",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 170,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "d5724fa53412c7c1",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "31 Days information",
        "info": "",
        "x": 170,
        "y": 2860,
        "wires": []
    },
    {
        "id": "eee624aa045ae22a",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "2c380c0bbcfb5eb1",
        "name": "COP DHW + COP HEAT (12m)",
        "group": "fb77ab43998a2f18",
        "order": 6,
        "width": 26,
        "height": 7,
        "label": "Monthly COP",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#007585",
            "#de425b",
            "#f59b56",
            "#fff18f",
            "#89bf77",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "3c6cbf1cc644de40",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 350,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "ad2577846265e4ee",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "links": [
            "306b69356454f3ff"
        ],
        "x": 105,
        "y": 3000,
        "wires": [
            [
                "c28ac0a0c107c5e3"
            ]
        ]
    },
    {
        "id": "c302223665944545",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "links": [
            "5787c91b303f2538"
        ],
        "x": 105,
        "y": 3100,
        "wires": [
            [
                "4dc4c11e169604ca"
            ]
        ]
    },
    {
        "id": "9a77a77bdc585373",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 3000,
        "wires": [
            [
                "f5f7d3b912113a33"
            ]
        ]
    },
    {
        "id": "721b7d606f558c73",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 3100,
        "wires": [
            [
                "25a5987e8a1aaf9c"
            ]
        ]
    },
    {
        "id": "35c9b0fcbdf3c9e0",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "2114aed06fe6d5aa",
        "name": "Store information to COP_DHW_24m",
        "func": "var myArray210 = msg;\nglobal.set(\"COP_DHW_24m\", myArray210,\"file\");\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 3100,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "47a9e516229e0256",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "e1f45532e4338e4a",
        "name": "Store information to COP_HEAT_24m",
        "func": "var myArray4 = msg;\nglobal.set(\"COP_HEAT_24m\", myArray4,\"file\");\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 3000,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "7e69bda9aa493902",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 670,
        "y": 3200,
        "wires": []
    },
    {
        "id": "4dc4c11e169604ca",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 3100,
        "wires": [
            [
                "721b7d606f558c73"
            ]
        ]
    },
    {
        "id": "c28ac0a0c107c5e3",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HEAT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 3000,
        "wires": [
            [
                "9a77a77bdc585373"
            ]
        ]
    },
    {
        "id": "f5f7d3b912113a33",
        "type": "bar-chart-data",
        "z": "8c9d42231fd19d3c",
        "g": "f1a34e3fea473398",
        "name": "bar-chart HEAT COP-12months",
        "x_interval": "months",
        "x_size": "12",
        "unit": "",
        "precision": "2",
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 890,
        "y": 3000,
        "wires": [
            [
                "47a9e516229e0256"
            ]
        ]
    },
    {
        "id": "43403f14c1a863a4",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "bf4af523ba16d457",
        "name": "Line - Water",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Operating mode</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "592f552754e017f5",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "bf4af523ba16d457",
        "name": "Line - Water",
        "order": 12,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "05f3b66c7b91e0c6",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "1179fa790d2d89ca",
        "name": "Line",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 830,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "f38de05b84881512",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "name": "Line",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 850,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5429970cdd04e922",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "spacer 6x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4230,
        "y": 220,
        "wires": []
    },
    {
        "id": "5191d46e46766a6b",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "1179fa790d2d89ca",
        "name": "Line",
        "order": 18,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4330,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6cce5b6bd4157c5b",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "fb77ab43998a2f18",
        "name": "Line",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1070,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "dc1b09eb3278501e",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "fb77ab43998a2f18",
        "name": "Line",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1070,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "23aa1aeed6d15e49",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "fb77ab43998a2f18",
        "name": "Line",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1070,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "f9bad51c9301e2d7",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "trigger",
        "x": 140,
        "y": 1640,
        "wires": [
            [
                "bda2df97c3dfd6ad",
                "9d4206dc389ad732"
            ]
        ]
    },
    {
        "id": "bda2df97c3dfd6ad",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "func": "let msg1={}\nmsg1 = flow.get(\"chart_energy\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1640,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "ba8181d980146bf5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "func": "flow.set(\"chart_energy\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "2ec8265263c71358",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "func": "flow.set(\"chart_efficiency\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "9d4206dc389ad732",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "func": "let msg1={}\nmsg1 = flow.get(\"chart_efficiency\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1980,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "17c5ba9bb0b58a11",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Runtime",
        "func": "// compressor runnint time\nvar start = global.get(\"compressor_start\", \"file\");\nlet msg1 = {};\n\nif (msg.payload > 0) {\n    if (start !== undefined && start != null) {\n        var current_time = new Date().getTime();\n        var TimeElapsed = ((current_time - start) / 1000 / 60); // minutes\n        msg1.payload = TimeElapsed;\n        msg1.payload = Number(msg1.payload).toFixed(0);\n        msg1.payload = parseFloat(msg1.payload);\n        global.set(\"compressor_runtime\", msg1.payload, \"file\");\n        global.set(\"compressor_last_runtime\", msg1.payload, \"file\"); //remember last runtime\n        return msg1;                                    // Value of time elapsed\n\n    }\n    else {\n        start = new Date().getTime();\n        global.set(\"compressor_start\", start, \"file\");\n        return null;\n\n    }\n}\nelse {\n    global.set(\"compressor_start\", undefined, \"file\");\n    global.set(\"compressor_runtime\", 0, \"file\");\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 980,
        "wires": [
            [
                "49a94006dd1947ac"
            ]
        ]
    },
    {
        "id": "49a94006dd1947ac",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 980,
        "wires": [
            [
                "79dc18dd1cca1e73",
                "b65cef840ae30edb"
            ]
        ]
    },
    {
        "id": "f2daac0935cc9d81",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_wt3",
        "label": "",
        "tooltip": "Range 20 / 60",
        "group": "052caff3b2365345",
        "order": 18,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt3",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "20",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 3600,
        "y": 440,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf",
                "0bf8dbceb8cf0c93"
            ]
        ]
    },
    {
        "id": "4950af3d6534aa47",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_ot3",
        "label": "",
        "tooltip": "Range -20 / 15",
        "group": "052caff3b2365345",
        "order": 17,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot3",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "-20",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 3440,
        "y": 440,
        "wires": [
            [
                "0ad263e5f3bf4fe9",
                "850fb0ccb76b25cf",
                "0bf8dbceb8cf0c93"
            ]
        ]
    },
    {
        "id": "07c9121f1be83415",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "warm spacer 2x1",
        "label": "Warm",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4520,
        "y": 180,
        "wires": []
    },
    {
        "id": "a00885bfd0ed77a7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 13,
        "width": 2,
        "height": 1,
        "name": "Inter spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4510,
        "y": 220,
        "wires": []
    },
    {
        "id": "fa5d110ee0083845",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "name": "Line - Temperature profile",
        "order": 5,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Temperature profile</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4590,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f76c271c4a48a3e7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 16,
        "width": 2,
        "height": 1,
        "name": "Cold 2x1",
        "label": "Cold",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4490,
        "y": 260,
        "wires": []
    },
    {
        "id": "5b9847446fee98a9",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 6,
        "width": 2,
        "height": 1,
        "name": "Weather spacer 2x1",
        "label": "Weather",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4540,
        "y": 400,
        "wires": []
    },
    {
        "id": "02bef4c27cae892f",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "name": "Line - Setup ",
        "order": 19,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Result</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4530,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "0366fd634f110ba4",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 30,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 4370,
        "y": 400,
        "wires": []
    },
    {
        "id": "be5c89aff3235cfd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1x2",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4470,
        "y": 900,
        "wires": []
    },
    {
        "id": "3cf1a2dd31dacbca",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "name": "Line - Setup ",
        "order": 5,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3410,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "ca0d9f423e83d3e2",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "name": "Line - RTC results",
        "order": 28,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>RTC results</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3390,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "db206585adea91d8",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "group": "9b8ec8b1b9f66309",
        "name": "Line - Setup ",
        "order": 3,
        "width": 11,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4420,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "5bada38f261d4a06",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "Check operation mode",
        "func": "var TOP20_ThreeWay_Valve_State      = global.get('TOP20_ThreeWay_Valve_State');\nvar TOP0_Heatpump_State             = global.get('TOP0_Heatpump_State',\"file\");\n\nlet msg1={}; // to HEAT status\nlet msg2={}; // to DHW status\nlet msg3={}; // to COOL status\n\nif (TOP20_ThreeWay_Valve_State == 1) {          // dhw}\n    msg1.payload = 'OFF';\n    msg1.color = 'grey';\n    msg2.payload = 'ON';\n    msg2.color = '';\n    msg3.payload = 'OFF';\n    msg3.color = 'grey';\n    if (TOP0_Heatpump_State == 0) {msg2.color = 'grey'}\n    return ([msg1,msg2,msg3])\n}\n\nvar TOP4_Operating_Mode_State       = global.get('TOP4_Operating_Mode_State',\"file\");\n\n\n\nif (TOP20_ThreeWay_Valve_State == 0) {          // room}\n\n    // HEAT /////////////////\n    if (TOP4_Operating_Mode_State == 0 || TOP4_Operating_Mode_State == 2 || TOP4_Operating_Mode_State == 3 || TOP4_Operating_Mode_State == 4 || TOP4_Operating_Mode_State == 6)     {\n            \n        msg1.payload = 'ON';\n        msg1.color = '';\n        msg2.payload = 'OFF';\n        msg2.color = 'grey';\n        msg3.payload = 'OFF';\n        msg3.color = 'grey';\n        if (TOP0_Heatpump_State == 0) {msg1.color = 'grey'}\n        return ([msg1,msg2,msg3])\n    }\n    \n    // COOL /////////////////\n    if (TOP4_Operating_Mode_State == 1 || TOP4_Operating_Mode_State == 5 || TOP4_Operating_Mode_State == 7 || TOP4_Operating_Mode_State == 8)     {\n        msg1.payload = 'OFF';\n        msg1.color = 'grey';\n        msg2.payload = 'OFF';\n        msg2.color = 'grey';\n        msg3.payload = 'ON';\n        msg3.color = '';\n            \n        if (TOP0_Heatpump_State == 0) {msg3.color = 'grey'}\n        return ([msg1,msg2,msg3])\n    }    \n\n}\n\n\n\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n// <font color= {{msg.color}} > {{msg.payload}}  </font>",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1280,
        "wires": [
            [
                "719e11414721599e"
            ],
            [
                "872ffae146541a5a"
            ],
            [
                "5dfb70935ea409db"
            ]
        ],
        "outputLabels": [
            "HEAT status",
            "DHW status",
            "COOL status"
        ]
    },
    {
        "id": "2347fd7ebf82b618",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "link in 1",
        "links": [
            "a3180920b08e8108"
        ],
        "x": 235,
        "y": 1740,
        "wires": [
            [
                "990e0858767f91fc"
            ]
        ]
    },
    {
        "id": "9faace07ea16ba4d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 15,
        "width": 6,
        "height": 1,
        "name": "Fan2",
        "label": "Fan 2",
        "format": "{{msg.payload}} rpm",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c3c748a1b5f04d42",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC gui changes to function trigger",
        "mode": "link",
        "links": [
            "c3a9e17b02222cee"
        ],
        "x": 4805,
        "y": 860,
        "wires": []
    },
    {
        "id": "a7ed974cef55c457",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR gui changes to function trigger",
        "mode": "link",
        "links": [
            "ff40b3d6f1b996fe"
        ],
        "x": 4005,
        "y": 200,
        "wires": []
    },
    {
        "id": "7d582005c7d66f28",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 3960,
        "y": 1180,
        "wires": [
            [
                "c3c748a1b5f04d42",
                "aae82d0c01404d51",
                "38a2e1df7e0bdb2a",
                "4ffcf5c7dbf32067"
            ]
        ]
    },
    {
        "id": "850fb0ccb76b25cf",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "op1": "",
        "op2": "trigger",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3720,
        "y": 200,
        "wires": [
            [
                "a7ed974cef55c457"
            ]
        ]
    },
    {
        "id": "6acc923b4ebb49e4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "set.F_SS.total_duration",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"F_SS.total_duration\",msg.payload*60,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 1840,
        "wires": [
            [
                "b1118094796c2de3"
            ]
        ]
    },
    {
        "id": "b1118094796c2de3",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "F_SS GUI changes",
        "mode": "link",
        "links": [
            "4c81e32b9d30b212"
        ],
        "x": 4405,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6d347eebf409d174",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "runtime",
        "label": "",
        "tooltip": "Default 15 (range 5min/9hours)",
        "place": "Select option",
        "group": "c2a0123d2e2c91f0",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "5 mins",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 mins",
                "value": 10,
                "type": "num"
            },
            {
                "label": "15 mins",
                "value": 15,
                "type": "num"
            },
            {
                "label": "20 mins",
                "value": 20,
                "type": "num"
            },
            {
                "label": "25 mins",
                "value": 25,
                "type": "num"
            },
            {
                "label": "30 mins",
                "value": 30,
                "type": "num"
            },
            {
                "label": "45 mins",
                "value": 45,
                "type": "num"
            },
            {
                "label": "1 hour",
                "value": 60,
                "type": "num"
            },
            {
                "label": "1 h 15 mins",
                "value": 75,
                "type": "num"
            },
            {
                "label": "1 h 30 mins",
                "value": 90,
                "type": "num"
            },
            {
                "label": "1 h 45 mins",
                "value": 105,
                "type": "num"
            },
            {
                "label": "2 hours",
                "value": 120,
                "type": "num"
            },
            {
                "label": "3 hours",
                "value": 180,
                "type": "num"
            },
            {
                "label": "4 hours",
                "value": 240,
                "type": "num"
            },
            {
                "label": "5 hours",
                "value": 300,
                "type": "num"
            },
            {
                "label": "6 hours",
                "value": 360,
                "type": "num"
            },
            {
                "label": "7 hours",
                "value": 420,
                "type": "num"
            },
            {
                "label": "8 hours",
                "value": 480,
                "type": "num"
            },
            {
                "label": "9 hours",
                "value": 540,
                "type": "num"
            },
            {
                "label": "10 hours",
                "value": 600,
                "type": "num"
            },
            {
                "label": "12 hours",
                "value": 720,
                "type": "num"
            },
            {
                "label": "18 hours",
                "value": 1080,
                "type": "num"
            },
            {
                "label": "24 hours",
                "value": 1440,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3740,
        "y": 1840,
        "wires": [
            [
                "fc318adaf0d65e13",
                "6acc923b4ebb49e4"
            ]
        ]
    },
    {
        "id": "3b7535829c2cdf6b",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "upperlimit_correction",
        "label": "Upperlimit correction",
        "tooltip": "Default 0 (range 0/10) When this number increases, the setpoint is allowed to increase and extend runs",
        "group": "e18bf5825c47a08f",
        "order": 14,
        "width": 6,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "upperlimit_correction",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 3640,
        "y": 2700,
        "wires": [
            [
                "cc3e8e6c49910b24"
            ]
        ]
    },
    {
        "id": "cc3e8e6c49910b24",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 3840,
        "y": 2720,
        "wires": [
            [
                "98a53971ecd61da7"
            ]
        ]
    },
    {
        "id": "98a53971ecd61da7",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "set.F_SS.upperlimit_correction",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"F_SS.\" + msg.topic,msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2720,
        "wires": [
            [
                "b1118094796c2de3"
            ]
        ]
    },
    {
        "id": "6efc9729afea79a2",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off POWER",
        "label": "Action: Turn off/on power",
        "tooltip": "Enables or disables the heat function based on below set deltas",
        "group": "ef3dbc543ae92bec",
        "order": 10,
        "width": 7,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "automation_power_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3080,
        "y": 1500,
        "wires": [
            [
                "2d1a9fcd35c50c2a"
            ]
        ]
    },
    {
        "id": "d1aaf53ae9beb422",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "group": "c2a0123d2e2c91f0",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "Current runtime",
        "label": "Current/last runtime",
        "format": "{{msg.payload}} Min",
        "layout": "row-spread",
        "className": "",
        "x": 3760,
        "y": 1960,
        "wires": []
    },
    {
        "id": "b65cef840ae30edb",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Compressor runtime",
        "mode": "link",
        "links": [
            "e33c35973b22ff0b",
            "aeb5d6fed2dc8483"
        ],
        "x": 1035,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e33c35973b22ff0b",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "link in 5",
        "links": [
            "b65cef840ae30edb"
        ],
        "x": 3345,
        "y": 1960,
        "wires": [
            [
                "d1aaf53ae9beb422"
            ]
        ]
    },
    {
        "id": "2fdb58826d7b6432",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "group": "c2a0123d2e2c91f0",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Runtime",
        "label": "Runtime",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 3500,
        "y": 1840,
        "wires": []
    },
    {
        "id": "e4f68946c7b21da7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "group": "c2a0123d2e2c91f0",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "Compressor",
        "label": "Frequency",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "className": "",
        "x": 3750,
        "y": 1920,
        "wires": []
    },
    {
        "id": "6fc2967e18fedff3",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "group": "c2a0123d2e2c91f0",
        "name": "Line setup",
        "order": 5,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3510,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "a8db39ee44e93a18",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "group": "c2a0123d2e2c91f0",
        "name": "Line compressor",
        "order": 12,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Compressor</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3510,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "cdf7664223f16687",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "group": "c2a0123d2e2c91f0",
        "order": 16,
        "width": 6,
        "height": 1,
        "name": "SS - Current correction (SS)",
        "label": "Current correction",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3800,
        "y": 2000,
        "wires": []
    },
    {
        "id": "23b6190afc840bdc",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "group": "c2a0123d2e2c91f0",
        "name": "Line Result",
        "order": 15,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Result</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3510,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "f3ab44f6bb3c013a",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "link in 7",
        "links": [
            "c57a81d1dee5b8a9"
        ],
        "x": 3345,
        "y": 1920,
        "wires": [
            [
                "e4f68946c7b21da7"
            ]
        ]
    },
    {
        "id": "881c9c83727201e4",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "1179fa790d2d89ca",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "SP (WAR) - Home HEAT Functions tab",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}} °C</font>",
        "layout": "row-right",
        "className": "",
        "x": 3870,
        "y": 600,
        "wires": []
    },
    {
        "id": "946190a858bafe3d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Color",
        "func": "var war_state          = global.get('Correction_0_WAR_on_off',\"file\");\n    if (war_state === undefined)    {return null;}\n\nlet msg1={};\n\n\n    if (war_state == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (war_state == 1) \n        {\n            msg1.color = \"\";\n        }\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3630,
        "y": 600,
        "wires": [
            [
                "881c9c83727201e4"
            ]
        ]
    },
    {
        "id": "26028dafb645f0a9",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "name": "Line - Advanced setup",
        "order": 27,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Advanced</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4480,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "78b397adf806a09f",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 28,
        "width": 2,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4230,
        "y": 120,
        "wires": []
    },
    {
        "id": "2994451c952d77ae",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "052caff3b2365345",
        "order": 32,
        "width": 1,
        "height": 1,
        "name": "----- spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 4940,
        "y": 540,
        "wires": []
    },
    {
        "id": "47e76e01a5cfb304",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "Color",
        "func": "var F_SS_state          = global.get('F_SS.state',\"file\");\n    if (F_SS_state === undefined)    {return null;}\n\nlet msg1={};\n\n\n    if (F_SS_state == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (F_SS_state == 1) \n        {\n            msg1.color = \"\";\n        }\nif (msg.payload > 0){msg.payload = '+' + msg.payload;}\n\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3330,
        "y": 2040,
        "wires": [
            [
                "1b40f688e5fbc5dd"
            ]
        ]
    },
    {
        "id": "0d3da6a8d7fa38ee",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Color",
        "func": "var F_RTC_state = global.get('F_RTC.z1.state',\"file\");\n\nlet msg1={};\n\n\nif (F_RTC_state == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\nif (F_RTC_state == 1) \n        {\n            msg1.color = \"\";\n        }\nif (msg.payload > 0){msg.payload = '+' + msg.payload;}\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 1600,
        "wires": [
            [
                "45643e4e39e1d248"
            ]
        ]
    },
    {
        "id": "b7b3c4dcda507ecb",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 22,
        "width": 3,
        "height": 1,
        "name": "Outside temp.",
        "label": "Actual outside",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3840,
        "y": 340,
        "wires": []
    },
    {
        "id": "05065bbd47aa9dd3",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "trigger Loaded WAR profile from panasonic",
        "links": [
            "b46cfcf8ce6d8f91"
        ],
        "x": 3045,
        "y": 380,
        "wires": [
            [
                "ecf47b4f156ae616"
            ]
        ]
    },
    {
        "id": "4faba89ea8ec838c",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3160,
        "y": 760,
        "wires": [
            [
                "48ac4170551d07e2"
            ]
        ]
    },
    {
        "id": "6c95ed35d3dcaea3",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "function 6",
        "func": "let msg1={};\nlet msg2={};\nlet msg3={};\n\nvar Tb0 =   global.get(\"TOP14_Outside_Temp\",\"file\");\n    if (Tb0 === undefined)  {return null;}\nvar Tsp =   global.get('F_WAR_SP');\n    if (Tsp === undefined)  {return null;}  \nvar Tb1 =   global.get(\"T_outside_custom\",\"file\");\n\nmsg1.payload    = Tb0;\nmsg1.payload    = Number(msg1.payload).toFixed(1);\nmsg1.payload    = parseFloat(msg1.payload);\nmsg1.topic      = 'T outside';\n\nmsg2.payload    = Tsp;\nmsg2.payload    = Number(msg2.payload).toFixed(1);\nmsg2.payload    = parseFloat(msg2.payload);\nmsg2.topic      = 'SP WAR';\n\nmsg3.payload    = Tb1;\nmsg3.payload    = Number(msg3.payload).toFixed(1);\nmsg3.payload    = parseFloat(msg3.payload);\nmsg3.topic      = 'T outside custom';\n\n\nif (Tb1 === undefined)  \n    {\n        return [[msg1,msg2,null]];\n    }\nelse \n    {\n        return [[msg1,msg2,msg3]];\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3920,
        "y": 520,
        "wires": [
            [
                "0d58a1e854263ec4"
            ]
        ]
    },
    {
        "id": "1fc3414887db6c0f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Create table in context",
        "func": "var stored_value = flow.get(\"sctab\",\"file\");\n\nif (msg.payload == \"RESET\")\n    {\n        flow.set(\"sctab\",undefined,\"file\"); \n        return null;\n    }\n\nelse if (stored_value !== undefined) \n    {\n        let sctab = [];\n        sctab = stored_value; \n        msg.payload = [...sctab];\n        return msg;\n    }\n    \nelse\n    {\n        let sctab = [];\n        flow.set(\"sctab\", sctab,\"file\");        \n    }\n    \n    \n\n",
        "outputs": "1",
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2260,
        "y": 2180,
        "wires": [
            [
                "ccf20ebdd2bc2ad5"
            ]
        ]
    },
    {
        "id": "e649dffb7b88341d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "16ec453c8cb345ac",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "Flow version",
        "label": "Flow version",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1630,
        "y": 2140,
        "wires": []
    },
    {
        "id": "87de9f606819ee7c",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Clear",
        "group": "16ec453c8cb345ac",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "clear",
        "payload": "RESET",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2050,
        "y": 2140,
        "wires": [
            [
                "1fc3414887db6c0f",
                "1fa1afeeb1c84d32",
                "97186cf285d61502"
            ]
        ]
    },
    {
        "id": "031e62b0bf3df7d7",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Input LOGS",
        "links": [
            "0380b395668eee8e",
            "1a8bf49ae0badf5a",
            "1b0aafd65d5593dd",
            "246757b0d4390b0d",
            "2989d5851e2457ae",
            "2a72a0a50c226d0f",
            "34cc66e23b5eec55",
            "40abfbbe563b32ac",
            "4c70cc2db4654795",
            "5c671bda81284e37",
            "5f7b921ab9a4ce7c",
            "842e7cc6853ea3c8",
            "84f7cbc2cc8c135d",
            "8e16d1ef3e972c95",
            "9815e18a26e4cd85",
            "9a7dda15052b4034",
            "9e1b71b301e9e79d",
            "a2c6183556ca72d1",
            "c4dd85e3e2a5dff4",
            "c77c4767a9dd84f4",
            "c9df0ea076346fde",
            "ca0190e54c9749cb",
            "ce0115cd2e7f2ac7",
            "e0217508a82c4d43",
            "e7e7a120cf9e9001",
            "f0b20c8165a68430",
            "4a4a891dece731a1",
            "5d8b7981975b516e",
            "dc99be6d3a53311d",
            "c8b5382d8d981e31",
            "4e1fa036d5ada897",
            "acea208050889a80",
            "f41ec824afb63153",
            "a4c25442b9ae52a6",
            "b131edf180140fb6",
            "8ed91c4260d9b758",
            "d15519b2b7caae11",
            "c1c79e431d237e73"
        ],
        "x": 1430,
        "y": 2220,
        "wires": [
            [
                "46c5b8fae5c96441"
            ]
        ],
        "l": true
    },
    {
        "id": "22443324686e908d",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "System start",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "SYSTEM",
        "payload": "Start---------------------------------------------------------------",
        "payloadType": "str",
        "x": 1440,
        "y": 2180,
        "wires": [
            [
                "6966950676b3438b",
                "a2d45addc303107f"
            ]
        ]
    },
    {
        "id": "6966950676b3438b",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "ToLogs",
        "mode": "link",
        "links": [
            "dc6f884b1aa816ef"
        ],
        "x": 1565,
        "y": 2200,
        "wires": []
    },
    {
        "id": "46d0a8b4fabd20c4",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "New day log line",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "------------------------------------------------------------------------------------------------",
        "payloadType": "str",
        "x": 2010,
        "y": 2220,
        "wires": [
            [
                "9fb2ab0ff0488d63"
            ]
        ]
    },
    {
        "id": "29a9b4d9e823126c",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "topic": "panasonic_heat_pump/LWT",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1380,
        "y": 2560,
        "wires": [
            [
                "9ab36aee321695b7"
            ]
        ]
    },
    {
        "id": "9ab36aee321695b7",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1670,
        "y": 2560,
        "wires": [
            [
                "56bc942b17cf740c"
            ]
        ]
    },
    {
        "id": "56bc942b17cf740c",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "panasonic_heat_pump/LWT",
                "fromt": "str",
                "to": "SYSTEM - HEISHAMON Connection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 2560,
        "wires": [
            [
                "7ec2785759270a3f"
            ]
        ]
    },
    {
        "id": "70d422652df2468e",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Heishamon connection status",
        "info": "",
        "x": 1390,
        "y": 2520,
        "wires": []
    },
    {
        "id": "647564ca1e204b5f",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "TOP76 - panasonic_heat_pump/main/Heating_Mode",
        "topic": "panasonic_heat_pump/main/Heating_Mode",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1450,
        "y": 2620,
        "wires": [
            [
                "6215a77a119228d1",
                "f18205dcad572d9c"
            ]
        ]
    },
    {
        "id": "6215a77a119228d1",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "set.TOP76_Heating_Mode",
        "func": "//Only check Heating_Mode at startup and display in log (filter will block same messages)\nlet msg1={};\n\nvar TOP76_Heating_Mode = global.get(\"TOP76_Heating_Mode\",\"file\");\n\nif (msg.payload == 0)\n    {\n        msg1.payload = \"Heatpump is Compensation Curve mode\";\n        msg1.topic = \"SYSTEM\";\n        if (TOP76_Heating_Mode != 0)\n            {\n                global.set(\"TOP76_Heating_Mode\",0,\"file\");\n                let msg2={};\n                msg2.payload = 'check_heating_mode';\n                return [msg1,msg2]\n            }\n        return msg1;\n    }\n\nelse if (msg.payload == 1) \n    {\n        msg1.payload = \"Heatpump is in DIRECT mode\";\n        msg1.topic = \"SYSTEM\";\n        if (TOP76_Heating_Mode != 1)\n                {\n                    global.set(\"TOP76_Heating_Mode\",1,\"file\");\n                    let msg2={};\n                    msg2.payload = 'check_heating_mode';\n                    return [msg1,msg2]\n                }\n        return [msg1,null];\n    }\nelse\n    {\n        return null\n    }",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 2620,
        "wires": [
            [
                "2cb940cabdae70e5"
            ],
            [
                "a7d4b11b9c045f95"
            ]
        ],
        "outputLabels": [
            "log",
            "check"
        ]
    },
    {
        "id": "a2c6183556ca72d1",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "toLog",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2165,
        "y": 2620,
        "wires": []
    },
    {
        "id": "2dc5c2ac3212179c",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Setup test",
        "func": "let msg1={};\nmsg1.payload = \"Testing...\"\n\nflow.set(\"persistency_test\", msg1.payload, \"file\");\n\nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 2480,
        "wires": [
            [
                "997453c0771acfc3"
            ]
        ]
    },
    {
        "id": "9a7dda15052b4034",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1925,
        "y": 2480,
        "wires": []
    },
    {
        "id": "82deff483aabb062",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "SYSTEM",
        "payload": "Persistence",
        "payloadType": "str",
        "x": 1390,
        "y": 2480,
        "wires": [
            [
                "2dc5c2ac3212179c"
            ]
        ]
    },
    {
        "id": "8c9a955c41e3e669",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Persistent storage check",
        "info": "",
        "x": 1370,
        "y": 2440,
        "wires": []
    },
    {
        "id": "ccf20ebdd2bc2ad5",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "16ec453c8cb345ac",
        "name": "Log to dashboard",
        "order": 5,
        "width": 24,
        "height": 16,
        "format": "<div ng-repeat=\"line in msg.payload track by $index\">\n    <div ng-bind-html=\"line\"></div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2510,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "9fb2ab0ff0488d63",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "Add word to scrolling table",
        "func": "let pay = msg.payload;\n\n// Read scrolling table from context\nlet sctab = flow.get('sctab',\"file\");\n\nif (sctab === undefined || pay === undefined)\n    {\n        return null;\n    }\nelse if (msg.topic==\"populate\")\n    {\n        msg.payload = [...sctab];\n        \n        return msg;\n    }\n\nelse\n    {\n        // Modify scrolling table by adding msg.payload as first element\n        let size = sctab.unshift(pay);\n         \n        // Remove last element from scrolling table\n        if (size >900) sctab.pop();\n         \n        // Update context for scrolling text\n        flow.set('sctab',sctab,\"file\");\n         \n        // Shalow copy updated scrolling table to msg.payload\n        msg.payload = [...sctab];\n         \n        return msg;\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2300,
        "y": 2340,
        "wires": [
            [
                "ccf20ebdd2bc2ad5"
            ]
        ]
    },
    {
        "id": "ae6175191a94d7ec",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "commands/#",
        "topic": "panasonic_heat_pump/commands/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1350,
        "y": 2340,
        "wires": [
            [
                "49edcd3fcf15db5c"
            ]
        ]
    },
    {
        "id": "5e4c3c30025c30ee",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "",
        "func": "var DateTime = msg.time;\nvar Source = msg.topic;\nvar Value = msg.payload;\nlet msg1 = {};\nmsg1.payload = (DateTime + \" - \" + Source + \": \" + Value);\n\nreturn msg1;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 2340,
        "wires": [
            [
                "9fb2ab0ff0488d63"
            ]
        ]
    },
    {
        "id": "49edcd3fcf15db5c",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "panasonic_heat_pump/commands/",
                "fromt": "str",
                "to": "<b>MQTT Command: </b>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 2340,
        "wires": [
            [
                "1e0df57eb3e96bf7"
            ]
        ]
    },
    {
        "id": "2e07cb8c215afb98",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "Start",
        "payloadType": "str",
        "x": 2050,
        "y": 2180,
        "wires": [
            [
                "1fc3414887db6c0f"
            ]
        ]
    },
    {
        "id": "c83f2c1b98fec551",
        "type": "ui_ui_control",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "events": "all",
        "x": 2040,
        "y": 2100,
        "wires": [
            [
                "1fc3414887db6c0f"
            ]
        ]
    },
    {
        "id": "48b67765f5bf4521",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "16ec453c8cb345ac",
        "order": 4,
        "width": 24,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 1890,
        "y": 2100,
        "wires": []
    },
    {
        "id": "47cc58d8c2f4aae6",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1940,
        "y": 2260,
        "wires": [
            [
                "5e4c3c30025c30ee"
            ]
        ]
    },
    {
        "id": "8a78dd26f20bb676",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "populate",
        "x": 2220,
        "y": 2220,
        "wires": [
            [
                "9fb2ab0ff0488d63"
            ]
        ]
    },
    {
        "id": "af715d4c79137c30",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Link out to HA - Room Setpoint",
        "mode": "link",
        "links": [
            "476043129c88de94"
        ],
        "x": 3125,
        "y": 1140,
        "wires": []
    },
    {
        "id": "2cb940cabdae70e5",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2050,
        "y": 2620,
        "wires": [
            [
                "a2c6183556ca72d1"
            ]
        ]
    },
    {
        "id": "a2d45addc303107f",
        "type": "moment",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "ETC/UTC",
        "adjAmount": "0",
        "adjType": "hours",
        "adjDir": "add",
        "format": "DD/MM HH:mm:ss",
        "locale": "en-US",
        "output": "time",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 1740,
        "y": 2180,
        "wires": [
            [
                "5e4c3c30025c30ee"
            ]
        ]
    },
    {
        "id": "46c5b8fae5c96441",
        "type": "moment",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "ETC/UTC",
        "adjAmount": "0",
        "adjType": "hours",
        "adjDir": "add",
        "format": "DD/MM HH:mm:ss",
        "locale": "en-US",
        "output": "time",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 1740,
        "y": 2220,
        "wires": [
            [
                "47cc58d8c2f4aae6"
            ]
        ]
    },
    {
        "id": "7ec2785759270a3f",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 2560,
        "wires": [
            [
                "a2d45addc303107f"
            ]
        ]
    },
    {
        "id": "7764079e5c12e488",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "+",
        "func": "if (msg.payload > 0){msg.payload = '+' + msg.payload;}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3430,
        "y": 1280,
        "wires": [
            [
                "501242b43a1016ea",
                "3f6602042d2dc015"
            ]
        ]
    },
    {
        "id": "3a196a4275cfec68",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "+",
        "func": "if (msg.payload > 0){msg.payload = '+' + msg.payload;}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3330,
        "y": 2000,
        "wires": [
            [
                "cdf7664223f16687"
            ]
        ]
    },
    {
        "id": "ed38db2e845981c3",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP99 - panasonic_heat_pump/main/Buffer_Installed",
        "topic": "panasonic_heat_pump/main/Buffer_Installed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1880,
        "y": 2920,
        "wires": [
            [
                "c89d0e068db5d0a3"
            ]
        ]
    },
    {
        "id": "e413e4528a583aca",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP100 - panasonic_heat_pump/main/DHW_Installed",
        "topic": "panasonic_heat_pump/main/DHW_Installed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1880,
        "y": 2960,
        "wires": [
            [
                "c90242e0d0920cb4"
            ]
        ]
    },
    {
        "id": "27765fa485cf9edc",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP101 - panasonic_heat_pump/main/Solar_Mode",
        "topic": "panasonic_heat_pump/main/Solar_Mode",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1870,
        "y": 3000,
        "wires": [
            [
                "8a2587bfa102f546"
            ]
        ]
    },
    {
        "id": "25a7c297f9a7769d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 14,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Buffer installed",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 2920,
        "wires": []
    },
    {
        "id": "a1ad83346ebe69f7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 15,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "DHW installed",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 2960,
        "wires": []
    },
    {
        "id": "8d8cf818740ba383",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 16,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Solar mode",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2390,
        "y": 3000,
        "wires": []
    },
    {
        "id": "c89d0e068db5d0a3",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2920,
        "wires": [
            [
                "25a7c297f9a7769d"
            ]
        ]
    },
    {
        "id": "c90242e0d0920cb4",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2960,
        "wires": [
            [
                "a1ad83346ebe69f7"
            ]
        ]
    },
    {
        "id": "8a2587bfa102f546",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 3000,
        "wires": [
            [
                "8d8cf818740ba383"
            ]
        ]
    },
    {
        "id": "3eae91d9cd1bdee8",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 19,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Heating mode",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2400,
        "y": 2840,
        "wires": []
    },
    {
        "id": "f18205dcad572d9c",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Compensation curve",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Direct",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2840,
        "wires": [
            [
                "3eae91d9cd1bdee8"
            ]
        ]
    },
    {
        "id": "8af692675b83ae82",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP81 - panasonic_heat_pump/main/Cooling_Mode",
        "topic": "panasonic_heat_pump/main/Cooling_Mode",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1870,
        "y": 2880,
        "wires": [
            [
                "420db86c7b6e5af4"
            ]
        ]
    },
    {
        "id": "84116d62e4ebcbed",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 20,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Cooling mode",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 2880,
        "wires": []
    },
    {
        "id": "420db86c7b6e5af4",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Compensation curve",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Direct",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 2880,
        "wires": [
            [
                "84116d62e4ebcbed"
            ]
        ]
    },
    {
        "id": "5dc231f82f838360",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "name": "Line - Hardware information",
        "order": 1,
        "width": 12,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Hardware information</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2360,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "1bb2e188964a1341",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP59 - panasonic_heat_pump/main/Room_Heater_State",
        "topic": "panasonic_heat_pump/main/Room_Heater_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1890,
        "y": 3080,
        "wires": [
            [
                "3b1207cb272b0f70"
            ]
        ]
    },
    {
        "id": "d4e0faf63ac63064",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP58 - panasonic_heat_pump/main/DHW_Heater_State",
        "topic": "panasonic_heat_pump/main/DHW_Heater_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1890,
        "y": 3040,
        "wires": [
            [
                "a398b005199a43cf"
            ]
        ]
    },
    {
        "id": "a398b005199a43cf",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 3040,
        "wires": [
            [
                "7e7348fb4ac5bc99"
            ]
        ]
    },
    {
        "id": "3b1207cb272b0f70",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Disabled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 3080,
        "wires": [
            [
                "d576dddb4d172860"
            ]
        ]
    },
    {
        "id": "7e7348fb4ac5bc99",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 17,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "DHW heater state",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2410,
        "y": 3040,
        "wires": []
    },
    {
        "id": "d576dddb4d172860",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 18,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Room heater state",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2410,
        "y": 3080,
        "wires": []
    },
    {
        "id": "4ac3620489b6a382",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "548e51986bce11b0",
        "name": "Line - panasonic",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2140,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "a0baaad72b5322f9",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP11 - panasonic_heat_pump/main/Operations_Hours",
        "topic": "panasonic_heat_pump/main/Operations_Hours",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1880,
        "y": 3120,
        "wires": [
            [
                "f4c673f35d3ad0dd"
            ]
        ]
    },
    {
        "id": "a8de78895c96410f",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP12 - panasonic_heat_pump/main/Operations_Counter",
        "topic": "panasonic_heat_pump/main/Operations_Counter",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1890,
        "y": 3160,
        "wires": [
            [
                "ccdeb93d0df404fd"
            ]
        ]
    },
    {
        "id": "f4c673f35d3ad0dd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 4,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Operation hours",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2400,
        "y": 3120,
        "wires": []
    },
    {
        "id": "ccdeb93d0df404fd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 6,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Operation counter",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2410,
        "y": 3160,
        "wires": []
    },
    {
        "id": "01b95384bec879c2",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP91 - panasonic_heat_pump/main/DHW_Heater_Operations_Hours",
        "topic": "panasonic_heat_pump/main/DHW_Heater_Operations_Hours",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1930,
        "y": 3200,
        "wires": [
            [
                "d6822a7d071e95a2"
            ]
        ]
    },
    {
        "id": "c5fa76779fb49ffe",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP90 - panasonic_heat_pump/main/Room_Heater_Operations_Hours",
        "topic": "panasonic_heat_pump/main/Room_Heater_Operations_Hours",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1930,
        "y": 3240,
        "wires": [
            [
                "5b3ff627c4ccac4d"
            ]
        ]
    },
    {
        "id": "d6822a7d071e95a2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 8,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Backup heater hours (DHW)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2440,
        "y": 3200,
        "wires": []
    },
    {
        "id": "5b3ff627c4ccac4d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 10,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Backup heater hours (HEAT)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2440,
        "y": 3240,
        "wires": []
    },
    {
        "id": "4d2f479ee6166e7b",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "name": "Line - Operation information",
        "order": 2,
        "width": 12,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Operation information</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2640,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "b53bc6358e871056",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4570,
        "y": 1060,
        "wires": [
            [
                "e7e7a120cf9e9001"
            ]
        ]
    },
    {
        "id": "e7e7a120cf9e9001",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "Send to log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 4655,
        "y": 1060,
        "wires": []
    },
    {
        "id": "087a748b7ca8e4f0",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "Get Room setpoint",
        "func": "global.set(\"WoonkamerSP\", msg.payload, \"file\");\nvar WoonkamerSP = msg.payload;\n    \nmsg.topic = \"RTC\"\nmsg.payload = \"Room setpoint changed to: \" + WoonkamerSP + \" °C\";\n\n//check of Night reduction room setpoint is niet actief:\nif (global.get(\"NightReductionRoomSetpoint.state\", \"file\") == 0) {\n    let msg2 = {};                  //pin2 ---> link-out to Room setpoint NORMAL on dashboard Scheduler\n    msg2.payload = WoonkamerSP; \n    if (global.get('NightReductionRoomSetpoint.NORMAL', \"file\") == WoonkamerSP) { return null; } //only send when different\n    global.set(\"NightReductionRoomSetpoint.NORMAL\", WoonkamerSP, \"file\");\n    return [msg,msg2];\n    }\n\n\nreturn [msg,null];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4410,
        "y": 1080,
        "wires": [
            [
                "b53bc6358e871056"
            ],
            [
                "28d654bc8270de5e"
            ]
        ]
    },
    {
        "id": "cc398f298c681782",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "Check operation mode",
        "func": "if (global.get('TOP26_Defrosting_State', \"file\") == 1) { // During defrost show status on Home dashboard\n    msg.payload = \"*Defrosting*\";\n    return msg;\n}\n\n//var OM = msg.payload;\nvar OM = global.get('TOP4_Operating_Mode_State', \"file\");\nmsg.topic = \"Current state\";\nif (OM == 0) {\n    msg.payload = \"Heat only\";\n} else if (OM == 1) {\n    msg.payload = \"Cool only\";\n} else if (OM == 2) {\n    msg.payload = \"Auto(Heat)\";\n} else if (OM == 3) {\n    msg.payload = \"DHW only\";\n} else if (OM == 4) {\n    msg.payload = \"Heat+DHW\";\n} else if (OM == 5) {\n    msg.payload = \"Cool+DHW\";\n} else if (OM == 6) {\n    msg.payload = \"Auto(Heat)+DHW\";\n} else if (OM == 7) {\n    msg.payload = \"Auto(Cool)\";\n} else if (OM == 8) {\n    msg.payload = \"Auto(Cool)+DHW)\";\n} else {\n    return null;\n}\n\nreturn msg;\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1400,
        "wires": [
            [
                "ef9758a537d81735"
            ]
        ]
    },
    {
        "id": "ef9758a537d81735",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "bf4af523ba16d457",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Current state",
        "label": "Actual",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 970,
        "y": 1400,
        "wires": []
    },
    {
        "id": "702993e29cd93413",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "link in Operation Mode status (HOME)",
        "links": [
            "4ff74e2b48b1d597",
            "6c685782864f1787"
        ],
        "x": 155,
        "y": 1400,
        "wires": [
            [
                "cc398f298c681782"
            ]
        ]
    },
    {
        "id": "46b7fe12f60ad08b",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "bf4af523ba16d457",
        "name": "Line - Water",
        "order": 4,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Water temperature</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 610,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "11c006e989f63390",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "2b0c8e162d47abbb",
        "name": "Line - Scheduler",
        "order": 6,
        "width": 27,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Scheduler</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2640,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "b690e6a46d9553ba",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "name": "Line",
        "order": 9,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Custom functions</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 910,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "96c650af80111193",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "1179fa790d2d89ca",
        "name": "Line Custom functions",
        "order": 5,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Custom functions</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4680,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "97186cf285d61502",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2420,
        "y": 2140,
        "wires": [
            [
                "c83f2c1b98fec551"
            ]
        ]
    },
    {
        "id": "1fa1afeeb1c84d32",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2250,
        "y": 2100,
        "wires": [
            [
                "729f15cc004fcc21"
            ]
        ]
    },
    {
        "id": "729f15cc004fcc21",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": " - ... Clear",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SYSTEM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2420,
        "y": 2100,
        "wires": [
            [
                "46c5b8fae5c96441"
            ]
        ]
    },
    {
        "id": "8b99fa1a632fa6aa",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "24.02 Stable",
        "payloadType": "str",
        "x": 1400,
        "y": 2120,
        "wires": [
            [
                "e649dffb7b88341d",
                "8da7c93f059466f2"
            ]
        ]
    },
    {
        "id": "8da7c93f059466f2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "b7f740331bca1b3f",
        "order": 1,
        "width": 24,
        "height": 1,
        "name": "Flow version",
        "label": "Flow version ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1630,
        "y": 2100,
        "wires": []
    },
    {
        "id": "8d9c639aa58c9a3e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "group": "16ec453c8cb345ac",
        "order": 3,
        "width": 16,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 1890,
        "y": 2140,
        "wires": []
    },
    {
        "id": "b57cce7cc9fa92ea",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "f76db0ea91c39edd"
        ],
        "x": 4805,
        "y": 780,
        "wires": []
    },
    {
        "id": "ca0190e54c9749cb",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link out 28",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 4805,
        "y": 820,
        "wires": []
    },
    {
        "id": "91fcc102b422de3b",
        "type": "ui_gauge",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Frequency",
        "group": "bf4af523ba16d457",
        "order": 10,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Frequency",
        "label": "Hz",
        "format": "{{value}}",
        "min": 0,
        "max": "120",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "36",
        "seg2": "69",
        "className": "",
        "x": 930,
        "y": 920,
        "wires": []
    },
    {
        "id": "2ca9ec858ebd4887",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t7_limit",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 26,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t7_limit",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3780,
        "y": 1200,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "290133f7fd948e25",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "+custom",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 27,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t7_correction_value",
        "topicType": "str",
        "format": "+{{value}}",
        "min": "4",
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 3560,
        "y": 1200,
        "wires": [
            [
                "ab1290025b96a1df",
                "a19cd490d0cc5d13",
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "ab1290025b96a1df",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "save +custom",
        "func": "// save on change only\nvar rtc_t7_custom_cor = global.get('F_RTC.z1.t7_correction_value',\"file\");\nif (msg.payload == rtc_t7_custom_cor)   {\n    return null;\n}\nelse    {\n    global.set('F_RTC.z1.t7_correction_value', msg.payload, \"file\");\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3960,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "bb54f8581c258040",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 17,
        "width": 2,
        "height": 2,
        "name": "filler b",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3770,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fb7f16aa29565d78",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 4100,
        "y": 1360,
        "wires": [
            [
                "38a2e1df7e0bdb2a"
            ]
        ]
    },
    {
        "id": "8ae2f173954488ad",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Set TOP62_Fan1_Motor_Speed",
        "func": "global.set('TOP62_Fan1_Motor_Speed', msg.payload); // Memory Only\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1040,
        "wires": [
            [
                "1ed98a1d47eb56f0"
            ]
        ]
    },
    {
        "id": "b3cbb0e85ba0fb42",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Set TOP63_Fan2_Motor_Speed",
        "func": "global.set('TOP63_Fan2_Motor_Speed', msg.payload); // Memory Only\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1160,
        "wires": [
            [
                "9faace07ea16ba4d"
            ]
        ]
    },
    {
        "id": "1daf8c5944f23d71",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "link in 12",
        "links": [
            "c57a81d1dee5b8a9"
        ],
        "x": 515,
        "y": 920,
        "wires": [
            [
                "17c5ba9bb0b58a11",
                "91fcc102b422de3b"
            ]
        ]
    },
    {
        "id": "6366ce3358b65976",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "link in 13",
        "links": [
            "7ce3c0d525800846"
        ],
        "x": 155,
        "y": 300,
        "wires": [
            [
                "23197820b73be2c8",
                "de12a1bd6b72fc0a"
            ]
        ]
    },
    {
        "id": "ffa2e7745e5aed4c",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "link in 14",
        "links": [
            "6c685782864f1787"
        ],
        "x": 235,
        "y": 1920,
        "wires": [
            [
                "6d77bc12fe8024ee"
            ]
        ]
    },
    {
        "id": "ecbb543ba37d9962",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link in 20",
        "links": [
            "a22898dfdc4ff0ca"
        ],
        "x": 3355,
        "y": 1040,
        "wires": [
            [
                "dade0dbb40c3945a"
            ]
        ]
    },
    {
        "id": "57d858f4dd89a4c8",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "F_RTC.z1.incremental_setpoints_state on/off",
        "label": "Enable between +3 and +{{msg.custom}}",
        "tooltip": "Incremental setpoints: Enable/Disable the incremental steps between the two ranges.",
        "group": "ef3dbc543ae92bec",
        "order": 2,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3710,
        "y": 1320,
        "wires": [
            [
                "083547591b89bc09"
            ]
        ]
    },
    {
        "id": "083547591b89bc09",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set F_RTC.incremental_setpoints_state on/off",
        "func": "\nmsg.topic = \"Function - RTC incremental_setpoints\";\nglobal.set(\"F_RTC.z1.incremental_setpoints_state\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4180,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "2f436c5ec33c9291",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "Restart after defrost",
        "label": "Restart after defrost",
        "tooltip": "",
        "group": "c2a0123d2e2c91f0",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3780,
        "y": 1880,
        "wires": [
            [
                "b2003add7c0ba5a9"
            ]
        ]
    },
    {
        "id": "b2003add7c0ba5a9",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3990,
        "y": 1880,
        "wires": [
            [
                "8df6915186a6430a"
            ]
        ]
    },
    {
        "id": "8df6915186a6430a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "set.F_SS.reset_after_defrost",
        "func": "\nvar F_SS_reset_after_defrost                = global.get('F_SS.reset_after_defrost',\"file\");\n\nif (msg.payload != F_SS_reset_after_defrost) {\n    global.set('F_SS.reset_after_defrost',msg.payload,\"file\");\n}\nmsg.topic = 'NR - SS restart after defrost';\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "f8d7e53aed62cd14",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off_OM",
        "label": "Action: Change operating mode",
        "tooltip": "Enables or disables the heat function based on below set deltas",
        "group": "ef3dbc543ae92bec",
        "order": 9,
        "width": 7,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "automation_OM_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3100,
        "y": 1440,
        "wires": [
            [
                "f8cd2e5c468286a5"
            ]
        ]
    },
    {
        "id": "85d4c15e56ecc525",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "name": "Line 7x1 automations",
        "order": 3,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n\t<left>Automations</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3380,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "a19cd490d0cc5d13",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "custom",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3200,
        "y": 1320,
        "wires": [
            [
                "2d7930a2b848335e",
                "57d858f4dd89a4c8"
            ]
        ]
    },
    {
        "id": "2d7930a2b848335e",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "name": "Line 7x1 ",
        "order": 1,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 0px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 0px solid #a39d99;\n    box-shadow: 0 0 0px #a39d99\";\n\t>\n\t<left>Calculate linear correction</left>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3360,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "28ade256a9b75487",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "55a0fb67fbe206cf"
        ],
        "x": 4655,
        "y": 1100,
        "wires": []
    },
    {
        "id": "28d654bc8270de5e",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "69d31fcea48c5132",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4570,
        "y": 1100,
        "wires": [
            [
                "28ade256a9b75487"
            ]
        ]
    },
    {
        "id": "1e0df57eb3e96bf7",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "MQTT_source",
        "func": "var MQTT_Source = global.get('MQTT_Source'); //Memory Only\nif (typeof msg.payload === 'object') {\n    var war_wt2 = global.get('war_wt2',\"file\");\n    if (msg.payload.zone1.heat.target.low === undefined){ msg.payload = \"target: \" + (msg.payload.zone1.heat.target.high); }\n    else { msg.payload = \"shift: \" + (msg.payload.zone1.heat.target.high - war_wt2); }\n}\nif (MQTT_Source === undefined) {msg.payload = \"<b>\" + msg.payload + \"</b>\";}\nif (MQTT_Source !== undefined) {msg.payload = \"<b>\" + msg.payload + \"</b> (\" + MQTT_Source + \")\";}\n\nglobal.set('MQTT_Source', undefined); // reset and wait for next command.\n\nreturn msg;\n\n/*\n\nmqtt-source added for:\n======================\n-Function SoftStart (corrections)\n-Function Reduce Pump Peed\n-Power on/off (rtc, scheduler, gui)\n-Quietmode (scheduler, gui)\n-SS_Quietmode\n\n*/",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 2340,
        "wires": [
            [
                "46c5b8fae5c96441",
                "9202d8b025b48df6"
            ]
        ]
    },
    {
        "id": "fadad1e2505bf86d",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Quiet mode",
        "label": "Quiet mode",
        "tooltip": "",
        "place": "Select option",
        "group": "548e51986bce11b0",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Level 0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Level 1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Level 2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Level 3",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1750,
        "y": 200,
        "wires": [
            [
                "4125dbe2c258837c"
            ]
        ]
    },
    {
        "id": "493be73ce31c8c96",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Operation mode",
        "label": "Operation mode",
        "tooltip": "",
        "place": "Select option",
        "group": "548e51986bce11b0",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat only (0)",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Cool only (1)",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Auto (2)",
                "value": 2,
                "type": "num"
            },
            {
                "label": "DHW only (3)",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Heat+DHW (4)",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Cool+DHW (5)",
                "value": 5,
                "type": "num"
            },
            {
                "label": "Auto+DHW (6)",
                "value": 6,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1760,
        "y": 280,
        "wires": [
            [
                "367f1fc8966e2514"
            ]
        ]
    },
    {
        "id": "d286bfab06c854b3",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Pump flow 100%",
        "label": "Service mode (100%)",
        "tooltip": "Set pump flow to maximum",
        "group": "fea7672db2f050c9",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1550,
        "y": 360,
        "wires": [
            [
                "99fca21d30786e83"
            ]
        ]
    },
    {
        "id": "69e62408ae1d45fd",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET1 SetHeatpump",
        "topic": "panasonic_heat_pump/commands/SetHeatpump",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 100,
        "wires": []
    },
    {
        "id": "c168a66c6bcdd403",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET3 SetQuietMode",
        "topic": "panasonic_heat_pump/commands/SetQuietMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 200,
        "wires": []
    },
    {
        "id": "2c3aa272de5edf1f",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET9 SetOperationMode",
        "topic": "panasonic_heat_pump/commands/SetOperationMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2690,
        "y": 280,
        "wires": []
    },
    {
        "id": "6715b2c07ffdaf0f",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET14 SetPump",
        "topic": "panasonic_heat_pump/commands/SetPump",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 360,
        "wires": []
    },
    {
        "id": "98757de0a2842b4b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "conversion function",
        "func": "// SET15 SetMaxPumpDuty decimal value translate to hexadecimal in service menu 64 to 254\n// First find out the upper and lower limit of the waterpump. Trial and arror by injecting a number as payload to the mqtt topic. fill them in in the two lines below!!!\n//\nvar lowerlimit=64; // Lowest value\nvar upperlimit=254; // Hihghes value\n\n\nvar range=(upperlimit-lowerlimit); // This is the range of operation for the waterpump. You need to test this manually and correct the values if needed.\n\n\nmsg.payload = ((msg.payload) / 100 * range) + lowerlimit; // calculation\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"F_ReducePumpSpeed.NormalSpeed\", msg.payload, \"file\"); // edit 13-12-2022\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 460,
        "wires": [
            [
                "6864b73de510f046"
            ]
        ]
    },
    {
        "id": "43ad0d01b0c84de9",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET15 SetMaxPumpDuty",
        "topic": "panasonic_heat_pump/commands/SetMaxPumpDuty",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2690,
        "y": 460,
        "wires": []
    },
    {
        "id": "a6faaf6380e6d040",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET2 SetHolidayMode",
        "topic": "panasonic_heat_pump/commands/SetHolidayMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 780,
        "wires": []
    },
    {
        "id": "c318be9105a9e8e5",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET4 SetPowerfulMode",
        "topic": "panasonic_heat_pump/commands/SetPowerfulMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2690,
        "y": 840,
        "wires": []
    },
    {
        "id": "b8e7b80b511e3054",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET10 SetForceDHW",
        "topic": "panasonic_heat_pump/commands/SetForceDHW",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 900,
        "wires": []
    },
    {
        "id": "aa26d12b996f9c57",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET11 SetDHWTemp",
        "topic": "panasonic_heat_pump/commands/SetDHWTemp",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 1000,
        "wires": []
    },
    {
        "id": "97d91018b611d85e",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET12 SetForceDefrost",
        "topic": "panasonic_heat_pump/commands/SetForceDefrost",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2690,
        "y": 1060,
        "wires": []
    },
    {
        "id": "6c56f45eddcf6890",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET13 SetForceSterilization",
        "topic": "panasonic_heat_pump/commands/SetForceSterilization",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2700,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d4c237094a0d52f9",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET17 SetZones",
        "topic": "panasonic_heat_pump/commands/SetZones",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2710,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d66211d6bd2170ac",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET18 SetFloorHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorHeatDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2690,
        "y": 1320,
        "wires": []
    },
    {
        "id": "71bc8ac0ba520e9e",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET19 SetFloorCoolDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorCoolDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2690,
        "y": 1360,
        "wires": []
    },
    {
        "id": "99beaa5dde77b94c",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET20 SetDHWHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetDHWHeatDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2690,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ec2e17164979af03",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET21 SetHeaterDelayTime",
        "topic": "panasonic_heat_pump/commands/SetHeaterDelayTime",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2680,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ad4e8ac090e4b449",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET22 SetHeaterStartDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStartDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2680,
        "y": 1480,
        "wires": []
    },
    {
        "id": "9b9c2c12ee2f9256",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET23 SetHeaterStopDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStopDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2680,
        "y": 1520,
        "wires": []
    },
    {
        "id": "365cb4a95d68eb3e",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET24 SetMainSchedule",
        "topic": "panasonic_heat_pump/commands/SetMainSchedule",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2690,
        "y": 1560,
        "wires": []
    },
    {
        "id": "c6559a95bb3c55fb",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force DHW",
        "label": "Forceful DHW",
        "tooltip": "Forces DHW cycle (operating mode should be set first to include DHW mode (operation mode 3, 4, 5 or 6) to function)",
        "group": "4e9e24cca215ad4d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "GUI_F_DHW",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1750,
        "y": 920,
        "wires": [
            [
                "cd39dd6db4d4cbf2"
            ]
        ]
    },
    {
        "id": "17cf53c8acbfb4e1",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "Holiday Mode",
        "label": "Holiday Mode",
        "tooltip": "Off / On Holiday mode",
        "group": "548e51986bce11b0",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1760,
        "y": 780,
        "wires": [
            [
                "bdb7e8e0217cec66",
                "2f577f48a3804703"
            ]
        ]
    },
    {
        "id": "4dee981d88ea5cf3",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHW (SP)",
        "label": "DHW setpoint",
        "tooltip": "",
        "group": "4e9e24cca215ad4d",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": false,
        "topic": "dhw_sp",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "40",
        "max": "75",
        "step": 1,
        "className": "",
        "x": 1750,
        "y": 1020,
        "wires": [
            [
                "ac2652f2dd9df44c"
            ]
        ]
    },
    {
        "id": "45a93847a1d11766",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "Force defrost",
        "label": "Force defrost",
        "tooltip": "",
        "group": "548e51986bce11b0",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1750,
        "y": 1060,
        "wires": [
            [
                "5e3a9447502864ad",
                "3de982eda6f5e1a3"
            ]
        ]
    },
    {
        "id": "ccb9e79ff06190fa",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force sterilization",
        "label": "Force sterilization",
        "tooltip": "Forces sterilization cycle (operating mode should be set first to include DHW mode (operation mode 3, 4, 5 or 6) to function)",
        "group": "4e9e24cca215ad4d",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "Toggle",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1770,
        "y": 1100,
        "wires": [
            [
                "063fe3316395a6c4"
            ]
        ]
    },
    {
        "id": "20e2544a8277d8c2",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force sterilization1",
        "links": [
            "0609b7d54d31dafb",
            "4f62466c41bb3667"
        ],
        "x": 1975,
        "y": 1080,
        "wires": [
            [
                "063fe3316395a6c4"
            ]
        ]
    },
    {
        "id": "91fa7e389b484d7c",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Panasonic Main Scheduler",
        "label": "Panasonic main scheduler",
        "tooltip": "It is possible to use both Panasonic and NodeRed scheduler running at the same time. This is not recommended, make sure the schedules are not conflicting",
        "group": "548e51986bce11b0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1800,
        "y": 1560,
        "wires": [
            [
                "089ba42c8f7f7a61",
                "88e644ce965a6890"
            ]
        ]
    },
    {
        "id": "69ea88923a102a5d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heater Stop delta",
        "label": "Stop delta",
        "tooltip": "Turn off backup heater again when the temperature is xx °C lower than setpoint (only J-series)",
        "group": "fea7672db2f050c9",
        "order": 13,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-8",
        "max": "0",
        "step": 1,
        "className": "",
        "x": 1770,
        "y": 1520,
        "wires": [
            [
                "a2d7de4325e4bf91",
                "db41038f69a63144"
            ]
        ]
    },
    {
        "id": "7c7fd14d9f6ec530",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heater Start delta",
        "label": "Start delta",
        "tooltip": "Turn on backup heater when the temperature is xx °C lower than setpoint (only J-series)",
        "group": "fea7672db2f050c9",
        "order": 12,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-10",
        "max": "-2",
        "step": 1,
        "className": "",
        "x": 1770,
        "y": 1480,
        "wires": [
            [
                "78816343589b199a",
                "4694bfeaa76d43f1"
            ]
        ]
    },
    {
        "id": "02af248fc547b96b",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heater Delay Time",
        "label": "Delay time",
        "tooltip": "In case the final water temperature is not reached within the specified delay time turn on the backup heater (only J-series)",
        "group": "fea7672db2f050c9",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} min",
        "min": "0",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 1770,
        "y": 1440,
        "wires": [
            [
                "4021cdadbdc7768d",
                "c2baf1abae4e4441"
            ]
        ]
    },
    {
        "id": "b8abd042ad10fed8",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHW delta",
        "label": "DHW delta",
        "tooltip": "",
        "group": "4e9e24cca215ad4d",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-10",
        "max": "0",
        "step": 1,
        "className": "",
        "x": 1750,
        "y": 1400,
        "wires": [
            [
                "c803b9ad018fe78e",
                "e85a5bbd08082721"
            ]
        ]
    },
    {
        "id": "2d364a067e4a7b4a",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Cool delta",
        "label": "Cool delta",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 1740,
        "y": 1360,
        "wires": [
            [
                "7139256ff024b872",
                "f66e9fca72401ab4"
            ]
        ]
    },
    {
        "id": "a89b41c6600cac07",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heat delta",
        "label": "Heat delta",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 1750,
        "y": 1320,
        "wires": [
            [
                "9b2a45a90495e067",
                "9e59dd1bbe56fc88"
            ]
        ]
    },
    {
        "id": "e31636baf16e3b69",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Powerful mode",
        "label": "Powerful mode",
        "tooltip": "",
        "place": "Set powerful mode run time in minutes",
        "group": "26d9e6cf24507b4f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Off",
                "value": 0,
                "type": "num"
            },
            {
                "label": "30 minutes",
                "value": 1,
                "type": "num"
            },
            {
                "label": "60 minutes",
                "value": 2,
                "type": "num"
            },
            {
                "label": "90 minutes",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1760,
        "y": 840,
        "wires": [
            [
                "979c5ca99c054740",
                "b7a195156eedf201"
            ]
        ]
    },
    {
        "id": "1f2cb9545d7e212d",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Set zones",
        "label": "Set active zones",
        "tooltip": "Set the active zones",
        "place": "Select option",
        "group": "26d9e6cf24507b4f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Zone 1",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Zone 2",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Zone 1 and 2",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1740,
        "y": 1280,
        "wires": [
            [
                "2ed9d626c929fb95",
                "5b0e15b0804a4452"
            ]
        ]
    },
    {
        "id": "a6854436b6e1c7e8",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "TOP44 - panasonic_heat_pump/main/Error",
        "topic": "panasonic_heat_pump/main/Error",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1580,
        "y": 1620,
        "wires": [
            [
                "fce687f80b334b9e",
                "7813313c8fae18d5"
            ]
        ]
    },
    {
        "id": "fce687f80b334b9e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Current error",
        "label": "Current error",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1910,
        "y": 1600,
        "wires": []
    },
    {
        "id": "bdb7e8e0217cec66",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HolidayMode",
        "links": [
            "e8684c407d602e87"
        ],
        "x": 2035,
        "y": 760,
        "wires": []
    },
    {
        "id": "979c5ca99c054740",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "TOP17_Powerful_Mode_Time",
        "mode": "link",
        "links": [
            "f70b59196295efc0"
        ],
        "x": 2035,
        "y": 820,
        "wires": []
    },
    {
        "id": "092a9db0d9b923b3",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceDHW",
        "mode": "link",
        "links": [
            "12e43571a8c16fa2",
            "14d2ae6b4af7e45e",
            "327f3ad0eae0d7d5",
            "6ae86dc05a6a3c4a"
        ],
        "x": 2035,
        "y": 900,
        "wires": []
    },
    {
        "id": "5e3a9447502864ad",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceDefrost",
        "links": [
            "01744f1093a2fd51"
        ],
        "x": 2175,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2ed9d626c929fb95",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "TOP94_Zones_State",
        "mode": "link",
        "links": [
            "9c4e9ed4c3ac1779"
        ],
        "x": 2185,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9b2a45a90495e067",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "FloorHeatDelta",
        "links": [
            "4c1c4526944e820e"
        ],
        "x": 2175,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7139256ff024b872",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "FloorCoolDelta",
        "mode": "link",
        "links": [
            "25041e53f134e3fb",
            "c32298a87a338b1d"
        ],
        "x": 2175,
        "y": 1360,
        "wires": []
    },
    {
        "id": "c803b9ad018fe78e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHWHeatDelta",
        "links": [
            "5e35dee1374d6829"
        ],
        "x": 2175,
        "y": 1400,
        "wires": []
    },
    {
        "id": "4021cdadbdc7768d",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HeaterDelayTime",
        "links": [
            "bfcbe2fb120f457c"
        ],
        "x": 2175,
        "y": 1440,
        "wires": []
    },
    {
        "id": "78816343589b199a",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HeaterStartDelta",
        "links": [
            "0e3197d36afc45dc"
        ],
        "x": 2175,
        "y": 1480,
        "wires": []
    },
    {
        "id": "a2d7de4325e4bf91",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HeaterStopDelta",
        "links": [
            "ca1f0fdf0dd05c89"
        ],
        "x": 2175,
        "y": 1520,
        "wires": []
    },
    {
        "id": "089ba42c8f7f7a61",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "TOP13_Main_Schedule_State",
        "mode": "link",
        "links": [
            "c5cba27eac8a70a2"
        ],
        "x": 2175,
        "y": 1560,
        "wires": []
    },
    {
        "id": "3de982eda6f5e1a3",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1060,
        "wires": [
            [
                "a20fe452e34c26f2"
            ]
        ]
    },
    {
        "id": "5b0e15b0804a4452",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1280,
        "wires": [
            [
                "3c054d7f511af4eb"
            ]
        ]
    },
    {
        "id": "564fcdd537853126",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1320,
        "wires": [
            [
                "3b2ded71a11dfb75"
            ]
        ]
    },
    {
        "id": "381a37d17ef728cc",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1360,
        "wires": [
            [
                "c5f279c69179fd5b"
            ]
        ]
    },
    {
        "id": "cb354767e9f35bc0",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1400,
        "wires": [
            [
                "8ddf4987d6b31ae5"
            ]
        ]
    },
    {
        "id": "df60cdb125adaf72",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1440,
        "wires": [
            [
                "5182a29718a4142e"
            ]
        ]
    },
    {
        "id": "9b3cba642f3daa70",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1480,
        "wires": [
            [
                "08d04747592e753f"
            ]
        ]
    },
    {
        "id": "9e998e80ed82590d",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1520,
        "wires": [
            [
                "b6dd964e2537fb76"
            ]
        ]
    },
    {
        "id": "88e644ce965a6890",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1560,
        "wires": [
            [
                "87449349b95f6091"
            ]
        ]
    },
    {
        "id": "a26b41289a59dba3",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var2a         = global.get('TOP18_Quiet_Mode_Level',\"file\");\nlet msg1={};\nmsg1.source = \"boot\";\n\nif(var2a === undefined)     {return null;}\nelse                        {msg1.payload = var2a;\n                            msg1.topic = \"Quiet Mode\"; \n                            return msg1;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 200,
        "wires": [
            [
                "fadad1e2505bf86d"
            ]
        ],
        "outputLabels": [
            "Quiet Mode"
        ]
    },
    {
        "id": "a45a6b8b1ac4b46d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP4_Operating_Mode_State',\"file\");\nlet msg1={};\n\nif (var1 === undefined)      {\n                                return null;\n                            }\n\nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP4_Operating_Mode_State'; \n                            msg1.source = \"boot\";\n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 280,
        "wires": [
            [
                "493be73ce31c8c96"
            ]
        ],
        "outputLabels": [
            "Operation Mode"
        ]
    },
    {
        "id": "d9a7bffb1a15426e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var TOP0_Heatpump_State                    = global.get('TOP0_Heatpump_State',\"file\");\nlet msg1={};\n\nif (TOP0_Heatpump_State === undefined)      \n    {\n        return null;    \n    }\n\nelse\n    {\n        msg1.payload = TOP0_Heatpump_State;\n        msg1.topic = 'TOP0_Heatpump_State'; \n        msg1.source = 'boot'; //if using flow it will generate a mqqt-command every minute\n        return msg1;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 100,
        "wires": [
            [
                "7b3d20aa8c9abb1e"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "b203a1c024a72593",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1 = global.get('F_ReducePumpSpeed.PumpMaxFlowSetting',\"file\");\n\nif (var1 === undefined) { return null; }\n\nlet msg1 = {};                            \n\nvar1 = (var1-64) / (254-64) * 100;\nvar1 = Number(var1).toFixed(0);\nmsg1.payload = var1;\nmsg1.topic = 'PumpMaxFlowSetting'; \n\nmsg1.source = \"boot\";\nreturn msg1;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 540,
        "wires": [
            [
                "2c13c33324bb6c6e",
                "ea184fe6e1240203",
                "d5948f3208081ac8"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "34397163757fd58b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP19_Holiday_Mode_State',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP19_Holiday_Mode_State'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 780,
        "wires": [
            [
                "17cf53c8acbfb4e1"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "7c74fd1faa32c81d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP17_Powerful_Mode_Time',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP17_Powerful_Mode_Time'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 840,
        "wires": [
            [
                "e31636baf16e3b69"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "de0e892a0157baca",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var ForceDHW = global.get('ForceDHW',\"file\");\nif(ForceDHW === undefined) { return null; }\n\nlet msg1={};\nmsg1.payload = ForceDHW;\nmsg1.topic = 'ForceDHW'; \nreturn msg1;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 900,
        "wires": [
            [
                "092a9db0d9b923b3"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "05d3e85b3963e4e2",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP26_Defrosting_State',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP26_Defrosting_State'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1060,
        "wires": [
            [
                "45a93847a1d11766"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "0897b055d53c8a84",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP94_Zones_State',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP94_Zones_State'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1280,
        "wires": [
            [
                "1f2cb9545d7e212d"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "afa82ddd168a4ea4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP23_Heat_Delta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP23_Heat_Delta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1320,
        "wires": [
            [
                "a89b41c6600cac07"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "58ee259d850d95ac",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP24_Cool_Delta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP24_Cool_Delta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1360,
        "wires": [
            [
                "2d364a067e4a7b4a"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "332fb342687e1121",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP22_DHW_Heat_Delta',\"file\");\nlet msg1={};\n\nif(var1 === undefined) { return null; }\n                            \nelse {\n    msg1.payload = var1;\n    msg1.topic = 'TOP22_DHW_Heat_Delta'; \n    return msg1;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1400,
        "wires": [
            [
                "b8abd042ad10fed8"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "50f5134fb3ba9e38",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP96_Heater_Delay_Time',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP96_Heater_Delay_Time'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1440,
        "wires": [
            [
                "02af248fc547b96b"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "119d9c04e028ad98",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP97_Heater_Start_Delta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP97_Heater_Start_Delta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1480,
        "wires": [
            [
                "7c7fd14d9f6ec530"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "13b0a160e7f2d0a0",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP98_Heater_Stop_Delta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP98_Heater_Stop_Delta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1520,
        "wires": [
            [
                "69ea88923a102a5d"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "8e9f91dd021c2ccd",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP13_Main_Schedule_State',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP13_Main_Schedule_State'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1560,
        "wires": [
            [
                "91fa7e389b484d7c"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "0a683587ca4fc25c",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceSterilization",
        "mode": "link",
        "links": [
            "d0fda364deccc7f0"
        ],
        "x": 2225,
        "y": 1140,
        "wires": []
    },
    {
        "id": "05e2f23adde7a6fc",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HEAT SP lower limit",
        "label": "Minimum temp.",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 8,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "20",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 1780,
        "y": 1160,
        "wires": [
            [
                "9170caebad3acdcf"
            ]
        ]
    },
    {
        "id": "ede3b3328704cab1",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HEAT SP upper limit",
        "label": "Maximum temp.",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 9,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "20",
        "max": "100",
        "step": 1,
        "className": "",
        "x": 1780,
        "y": 1200,
        "wires": [
            [
                "58d199ee200d7b16"
            ]
        ]
    },
    {
        "id": "22afde8747ce6ca0",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HEAT_SP_upper_limit',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            global.set(\"HEAT_SP_upper_limit\",100,\"file\");\n                            var1 = 100;\n                            }\n                            \nmsg1.payload = var1;\nmsg1.topic = 'HEAT_SP_upper_limit'; \nreturn msg1;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1200,
        "wires": [
            [
                "ede3b3328704cab1"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "9170caebad3acdcf",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1160,
        "wires": [
            [
                "9fcae1bec983aa1f"
            ]
        ]
    },
    {
        "id": "58d199ee200d7b16",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 1200,
        "wires": [
            [
                "887a43d150c20eb2"
            ]
        ]
    },
    {
        "id": "9fcae1bec983aa1f",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HEAT SP lower limit",
        "links": [
            "8206cc922dc8874d"
        ],
        "x": 2175,
        "y": 1160,
        "wires": []
    },
    {
        "id": "887a43d150c20eb2",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HEAT SP upper limit",
        "mode": "link",
        "links": [
            "170936d914847ac0"
        ],
        "x": 2175,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7f6107d49ab83c40",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HEAT_SP_lower_limit',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            global.set(\"HEAT_SP_lower_limit\",20,\"file\");\n                            var1 = 20;\n}\n                            \nmsg1.payload = var1;\nmsg1.topic = 'HEAT_SP_lower_limit'; \nreturn msg1;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1160,
        "wires": [
            [
                "05e2f23adde7a6fc"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "6db2abfba9e25737",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1                    = global.get('TOP69_Sterilization_State',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'TOP69_Sterilization_State'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1100,
        "wires": [
            [
                "ccb9e79ff06190fa",
                "24b17d7139dc31a7"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "071ac5a0f08a8fdb",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "set HeatPump Power state",
        "links": [
            "0970bfa5a14caf6b",
            "346a3528a7770803",
            "7a30c0f0dbf50e03",
            "ee7e3fc1d241d09e",
            "f217f942f56cbfa9",
            "f7f21cce882495d8",
            "3cd1a1bc9111c34d",
            "3ee6946a57749651",
            "b248caed16a3e771"
        ],
        "x": 1565,
        "y": 60,
        "wires": [
            [
                "7b3d20aa8c9abb1e"
            ]
        ]
    },
    {
        "id": "6ae86dc05a6a3c4a",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceDHW IN",
        "links": [
            "092a9db0d9b923b3",
            "b131edf180140fb6"
        ],
        "x": 1635,
        "y": 920,
        "wires": [
            [
                "c6559a95bb3c55fb"
            ]
        ]
    },
    {
        "id": "2f577f48a3804703",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 780,
        "wires": [
            [
                "bcda53f9e43821c5"
            ]
        ]
    },
    {
        "id": "b7a195156eedf201",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 840,
        "wires": [
            [
                "1742dd060b79dfd1"
            ]
        ]
    },
    {
        "id": "99fca21d30786e83",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 360,
        "wires": [
            [
                "47b7f4736455a3cb"
            ]
        ]
    },
    {
        "id": "7b3d20aa8c9abb1e",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heat pump power",
        "label": "Heat pump power",
        "tooltip": "",
        "group": "bf4af523ba16d457",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1770,
        "y": 100,
        "wires": [
            [
                "4673d329949e0652"
            ]
        ]
    },
    {
        "id": "56131f5116b20fba",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "links": [
            "550d51c7fe788f9e",
            "7f44b9272e731114"
        ],
        "x": 1595,
        "y": 1000,
        "wires": [
            [
                "4dee981d88ea5cf3"
            ]
        ]
    },
    {
        "id": "550d51c7fe788f9e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHW SP post-filter",
        "mode": "link",
        "links": [
            "3f63919ddd4f0ea7",
            "56131f5116b20fba",
            "a6ccb9d3fcdad8e7",
            "d2d71d4e69ee31d7"
        ],
        "x": 2175,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e85a5bbd08082721",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1940,
        "y": 1400,
        "wires": [
            [
                "cb354767e9f35bc0"
            ]
        ]
    },
    {
        "id": "c2baf1abae4e4441",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1940,
        "y": 1440,
        "wires": [
            [
                "df60cdb125adaf72"
            ]
        ]
    },
    {
        "id": "4694bfeaa76d43f1",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1940,
        "y": 1480,
        "wires": [
            [
                "9b3cba642f3daa70"
            ]
        ]
    },
    {
        "id": "db41038f69a63144",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1940,
        "y": 1520,
        "wires": [
            [
                "9e998e80ed82590d"
            ]
        ]
    },
    {
        "id": "f66e9fca72401ab4",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1940,
        "y": 1360,
        "wires": [
            [
                "381a37d17ef728cc"
            ]
        ]
    },
    {
        "id": "9e59dd1bbe56fc88",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1940,
        "y": 1320,
        "wires": [
            [
                "564fcdd537853126"
            ]
        ]
    },
    {
        "id": "3ed1fd544412f391",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "links": [
            "158b8983b1dd0aa9"
        ],
        "x": 1375,
        "y": 1360,
        "wires": [
            [
                "2d364a067e4a7b4a"
            ]
        ]
    },
    {
        "id": "dcec18e192df8d64",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "name": "Line - Setup ",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Backup heater</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2470,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "be17c89704b598d8",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "26d9e6cf24507b4f",
        "name": "Line - Setup ",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2470,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "ea184fe6e1240203",
        "type": "ui_slider",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "fea7672db2f050c9",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 1730,
        "y": 540,
        "wires": [
            [
                "d5948f3208081ac8",
                "c9428fcff7af5f3a"
            ]
        ]
    },
    {
        "id": "2c13c33324bb6c6e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Current max flow",
        "format": "{{msg.payload  | number: 0}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1770,
        "y": 600,
        "wires": []
    },
    {
        "id": "684cdf95f8172514",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "group": "fea7672db2f050c9",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "SET {{msg.payload}}",
        "tooltip": "{{msg.tooltip}}",
        "color": "{{msg.color}}",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "Pump_Max_Flow",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1850,
        "y": 460,
        "wires": [
            [
                "7cfabb437dca890f"
            ]
        ]
    },
    {
        "id": "32c4b461266d4a6e",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link in 9",
        "links": [
            "8f0e209ac14bdb9a",
            "f45559f5e72abee8",
            "ea04ae839e1d6b46"
        ],
        "x": 1365,
        "y": 540,
        "wires": [
            [
                "b203a1c024a72593"
            ]
        ]
    },
    {
        "id": "b4efe8320bae812d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "order": 3,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Model",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2350,
        "y": 1680,
        "wires": []
    },
    {
        "id": "115cf15b6254cb9c",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "name": "Line - panasonic",
        "order": 13,
        "width": 12,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Hardware configuration</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2000,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "313780cf94ef9d1c",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "name": "Line - 1",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1800,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "d9cbcc885d31c1fd",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].model;\n                            msg1.topic = 'Model'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1680,
        "wires": [
            [
                "b4efe8320bae812d"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "00660af047d90d84",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].power;\n                            msg1.topic = 'Power'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1720,
        "wires": [
            [
                "d60532c945c70ab1"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "d60532c945c70ab1",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "order": 7,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Heat capacity",
        "format": "{{msg.payload}} kW",
        "layout": "row-spread",
        "className": "",
        "x": 2380,
        "y": 1720,
        "wires": []
    },
    {
        "id": "fb1ef412a32707e7",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].phase;\n                            msg1.topic = 'Phase'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1760,
        "wires": [
            [
                "7216a1bd8dc26f16"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "7216a1bd8dc26f16",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "order": 9,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Power connection",
        "format": "{{msg.payload}} Phase",
        "layout": "row-spread",
        "className": "",
        "x": 2390,
        "y": 1760,
        "wires": []
    },
    {
        "id": "849755bc336c0289",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].type;\n                            msg1.topic = 'Type'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1800,
        "wires": [
            [
                "ca8be52d82cfb2da"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "ca8be52d82cfb2da",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "order": 5,
        "width": 12,
        "height": 1,
        "name": "",
        "label": "Type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2350,
        "y": 1800,
        "wires": []
    },
    {
        "id": "85737143f803169a",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "name": "Line - Setup 2",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Water pump</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1320,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "80dd0b992f3f7c9a",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "26d9e6cf24507b4f",
        "name": "Line - heat limits",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Heat water temperature limits</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2320,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "7cfabb437dca890f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "filter",
        "func": "if (msg.source == \"boot\") return null; // exit\n\nvar ReducePumpSpeed = global.get('F_ReducePumpSpeed.state', \"file\");\n\n// check if running:\nvar Freq = global.get(\"compressor_frequency\", \"file\");\n\nif (ReducePumpSpeed == 1 && Freq == 0) return null; // exit\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 460,
        "wires": [
            [
                "98757de0a2842b4b"
            ]
        ]
    },
    {
        "id": "7813313c8fae18d5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Last error",
        "func": "if (msg.payload == \"No error\") { return null; };\n\nmsg.topic = \"SYSTEM - Last error\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1620,
        "wires": [
            [
                "0db2bdc455e4bffe"
            ]
        ]
    },
    {
        "id": "0db2bdc455e4bffe",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2230,
        "y": 1620,
        "wires": [
            [
                "2989d5851e2457ae"
            ]
        ]
    },
    {
        "id": "2989d5851e2457ae",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2375,
        "y": 1620,
        "wires": []
    },
    {
        "id": "a845813900ca9e55",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Exit to log",
        "info": "",
        "x": 2460,
        "y": 1620,
        "wires": []
    },
    {
        "id": "9717750d0d528f9c",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Dummy error",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "H62",
        "payloadType": "str",
        "x": 1890,
        "y": 1700,
        "wires": [
            [
                "7813313c8fae18d5"
            ]
        ]
    },
    {
        "id": "1f12871cda6c40b3",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT = global.get('MQTT', \"file\");\nlet msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\nmsg66.topic = \"SYSTEM\";\n\nif (msg.source == \"mqtt\") {return null;} // Block. no function after setting the GUI toggles.\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {   // Block all msg, and log it.\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                        \n}\n\nif (msg.source == \"GUI\" || msg.source == \"External\") {\n    global.set('MQTT_Source', msg.source);\n    return [msg, null]; // allow when user action  \n    }\n\nif (MQTT.block_active == 0) \n    { \n        return [msg, null]; // allow rtc, scheduler \n    }\n\n    // *****************************************************************************\n    //  MQTT.block_mode = BLOCK ALL (1)\n    //  MQTT.block_mode = CUSTOM (2)\n    //  MQTT.block_mode = UNRESTRICTED (3)\n    // *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) \n    {\n        //  MQTT_default_2 = CUSTOM\n            //**********************************************************************\n            //MQTT.allow_rtc_onoff\n            //**********************************************************************\n            if (MQTT.allow_rtc_onoff == 1)      {\n                global.set('MQTT_Source', \"rtc on/off\");\n                return [msg,null];        //  Pass through msg.\n                }\n            //**********************************************************************\n            //MQTT.allow_solar\n            //**********************************************************************\n            else if (MQTT.allow_solar == 1)      {\n                global.set('MQTT_Source', \"solar\");\n                return [msg,null];        //  Pass through msg.\n                }\n            //**********************************************************************\n            //MQTT.allow_scheduler\n            //**********************************************************************\n            else if (MQTT.allow_scheduler == 1)   {\n                global.set('MQTT_Source', \"scheduler\");\n                return [msg,null];              //  Pass through msg.\n                } \n    }\n    \n\nmsg66.payload = \"MQTT-Commands are blocked!\";\nreturn [null,msg66];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2440,
        "y": 100,
        "wires": [
            [
                "aad17e70a817393e",
                "69e62408ae1d45fd"
            ],
            [
                "85327198ddc6e251"
            ]
        ]
    },
    {
        "id": "85327198ddc6e251",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 100,
        "wires": []
    },
    {
        "id": "eeae40f40c5ecf87",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n\n\n    ////////////////////////////////////////////////////////////////////////////\n    //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is allowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT.allow_rtc_onoff\n        //**********************************************************************\n        //if (MQTT.allow_rtc_onoff == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_solar\n        //**********************************************************************\n        //if (MQTT.allow_solar == 1)          {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_scheduler\n        //**********************************************************************\n        if (MQTT.allow_scheduler == 1)      {return [msg,null];}        //  Pass through msg.\n        else                                      {return [null,null];}       //  Block\n        \n        //return [null,null];\n    }\n\n\n\nif (MQTT.block_active == 0) {\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 200,
        "wires": [
            [
                "c168a66c6bcdd403"
            ],
            [
                "d65b99037cb3740d"
            ]
        ]
    },
    {
        "id": "2810d417aa5c3457",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1) {                                           //  MQTT_default_1 = BLOCK ALL\n        let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n        msg66.topic = \"SYSTEM\";\n        msg66.payload = \"MQTT-Commands are blocked!\";\n        return [null, msg66];                                                   //  Block msg, and log it.\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 2) {                                           //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is aloowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT\n        //**********************************************************************\n        if (MQTT.allow_rtc_onoff == 1 || MQTT.allow_solar == 1 || MQTT.allow_scheduler == 1)      {\n            if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"flow\"); }\n            return [msg, null];                                                 //  Pass through msg.\n            }\n        else                                      {return [null,null];}         //  Block\n        \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                           //  MQTT_default_3 = UNRESTRICTED\n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"flow\"); }\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', msg.source); }\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 280,
        "wires": [
            [
                "2c3aa272de5edf1f",
                "aad17e70a817393e"
            ],
            [
                "29f1c1eaf91ec977"
            ]
        ]
    },
    {
        "id": "47b7f4736455a3cb",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "let msg99 = {}; // pin 2 - To Notify msg (and input LOGS)\n\nif (global.get('MQTT.block_active', \"file\") == 1) {\n    msg99.topic = \"SYSTEM\";\n    msg99.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg99];\n    }\n    \nglobal.set('MQTT_Source', \"GUI\");\nmsg99.topic = \"USER\";\nmsg99.payload = \"Pump Service-mode (max flow): \" + msg.payload;\nreturn [msg, msg99];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 360,
        "wires": [
            [
                "6715b2c07ffdaf0f"
            ],
            [
                "e0217508a82c4d43"
            ]
        ]
    },
    {
        "id": "5eebb66e29e252f6",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\n\nglobal.set('MQTT_Source', \"pump speed\"); // Memory Only\nglobal.set(\"F_ReducePumpSpeed.PumpMaxFlowSetting\", msg.payload, \"file\"); // not really save, better wait for mqtt\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 460,
        "wires": [
            [
                "43ad0d01b0c84de9"
            ],
            [
                "65e5ce7e8bb0e284"
            ]
        ]
    },
    {
        "id": "bcda53f9e43821c5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 780,
        "wires": [
            [
                "a6faaf6380e6d040"
            ],
            [
                "302de5d951e650b6"
            ]
        ]
    },
    {
        "id": "1742dd060b79dfd1",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 840,
        "wires": [
            [
                "c318be9105a9e8e5"
            ],
            [
                "db78ad9b985b4aa5"
            ]
        ]
    },
    {
        "id": "7c74eef7b504ee67",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1) {                                            //  MQTT_default_1 = BLOCK ALL\n        return [null, null];  \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 2) {                                            //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is aloowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT.allow_rtc_onoff\n        //**********************************************************************\n        //if (MQTT.allow_rtc_onoff == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_solar\n        //**********************************************************************\n        //if (MQTT.allow_solar == 1)          {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_scheduler\n        //**********************************************************************\n        if (MQTT.allow_scheduler == 1)      {return [msg,null];}        //  Pass through msg.\n        else                                      {return [null,null];}       //  Block\n        \n        //return [null,null];\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                            //  MQTT_default_3 = UNRESTRICTED\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    return [msg,null];\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 900,
        "wires": [
            [
                "b8e7b80b511e3054"
            ],
            [
                "e1d9c3b48e3b4cba"
            ]
        ]
    },
    {
        "id": "bc84f4340c3e5b0a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1000,
        "wires": [
            [
                "aa26d12b996f9c57"
            ],
            [
                "9b7f15d048bb1f60"
            ]
        ]
    },
    {
        "id": "a20fe452e34c26f2",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1) {                                            //  MQTT_default_1 = BLOCK ALL\n        return [null, null];  \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 2) {                                            //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is aloowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT.allow_rtc_onoff\n        //**********************************************************************\n        //if (MQTT.allow_rtc_onoff == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_solar\n        //**********************************************************************\n        //if (MQTT.allow_solar == 1)          {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_scheduler\n        //**********************************************************************\n        //if (MQTT.allow_scheduler == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        return [null,null];\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                            //  MQTT_default_3 = UNRESTRICTED\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1060,
        "wires": [
            [
                "97d91018b611d85e"
            ],
            [
                "749ce60adde338d9"
            ]
        ]
    },
    {
        "id": "7cfe771e9583a82d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1) {                                            //  MQTT_default_1 = BLOCK ALL\n        return [null, null];  \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 2) {                                            //  MQTT_default_2 = CUSTOM\n    //\n    //\n    // ATTENTION: UN-COMMENT 2 lines out so that the function below is aloowed to pass the block.\n    \n        //**********************************************************************\n        //MQTT.allow_rtc_onoff\n        //**********************************************************************\n        //if (MQTT.allow_rtc_onoff == 1)      {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_solar\n        //**********************************************************************\n        //if (MQTT.allow_solar == 1)          {return [msg,null];}        //  Pass through msg.\n        //else                                      {return [null,null];}       //  Block\n        \n        //**********************************************************************\n        //MQTT.allow_scheduler\n        //**********************************************************************\n        if (MQTT.allow_scheduler == 1)      {return [msg,null];}        //  Pass through msg.\n        else                                      {return [null,null];}       //  Block\n        \n        //return [null,null];\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                            //  MQTT_default_3 = UNRESTRICTED\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1100,
        "wires": [
            [
                "6c56f45eddcf6890",
                "e5f28058481d791a"
            ],
            [
                "c6e07a956cf2f293"
            ]
        ]
    },
    {
        "id": "3c054d7f511af4eb",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1280,
        "wires": [
            [
                "d4c237094a0d52f9"
            ],
            [
                "b8ed3bef56b272a1"
            ]
        ]
    },
    {
        "id": "3b2ded71a11dfb75",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nif (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"GUI\"); }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1320,
        "wires": [
            [
                "d66211d6bd2170ac"
            ],
            [
                "f94a97e9d42084d7"
            ]
        ]
    },
    {
        "id": "c5f279c69179fd5b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nif (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"GUI\"); }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1360,
        "wires": [
            [
                "71bc8ac0ba520e9e"
            ],
            [
                "400c912774a24583"
            ]
        ]
    },
    {
        "id": "8ddf4987d6b31ae5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1400,
        "wires": [
            [
                "99beaa5dde77b94c"
            ],
            [
                "f2e85ff23b3dc136"
            ]
        ]
    },
    {
        "id": "5182a29718a4142e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1440,
        "wires": [
            [
                "ec2e17164979af03"
            ],
            [
                "a863b940531858e1"
            ]
        ]
    },
    {
        "id": "08d04747592e753f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1480,
        "wires": [
            [
                "ad4e8ac090e4b449"
            ],
            [
                "6111292139d84986"
            ]
        ]
    },
    {
        "id": "b6dd964e2537fb76",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1520,
        "wires": [
            [
                "9b9c2c12ee2f9256"
            ],
            [
                "6886cb05525f8d0b"
            ]
        ]
    },
    {
        "id": "87449349b95f6091",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1560,
        "wires": [
            [
                "365cb4a95d68eb3e"
            ],
            [
                "16e91d824cef95e3"
            ]
        ]
    },
    {
        "id": "d65b99037cb3740d",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 200,
        "wires": []
    },
    {
        "id": "29f1c1eaf91ec977",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 280,
        "wires": []
    },
    {
        "id": "e0217508a82c4d43",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "c764c19340b7b720"
        ],
        "x": 2545,
        "y": 360,
        "wires": []
    },
    {
        "id": "65e5ce7e8bb0e284",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 460,
        "wires": []
    },
    {
        "id": "302de5d951e650b6",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 780,
        "wires": []
    },
    {
        "id": "db78ad9b985b4aa5",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 840,
        "wires": []
    },
    {
        "id": "e1d9c3b48e3b4cba",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 900,
        "wires": []
    },
    {
        "id": "9b7f15d048bb1f60",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 1000,
        "wires": []
    },
    {
        "id": "749ce60adde338d9",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c6e07a956cf2f293",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2545,
        "y": 1100,
        "wires": []
    },
    {
        "id": "6886cb05525f8d0b",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2535,
        "y": 1520,
        "wires": []
    },
    {
        "id": "16e91d824cef95e3",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2565,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6111292139d84986",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2535,
        "y": 1480,
        "wires": []
    },
    {
        "id": "a863b940531858e1",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2535,
        "y": 1440,
        "wires": []
    },
    {
        "id": "f2e85ff23b3dc136",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2535,
        "y": 1400,
        "wires": []
    },
    {
        "id": "400c912774a24583",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2535,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f94a97e9d42084d7",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2535,
        "y": 1320,
        "wires": []
    },
    {
        "id": "b8ed3bef56b272a1",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2535,
        "y": 1280,
        "wires": []
    },
    {
        "id": "4a2670b477ab7f75",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "548e51986bce11b0",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Force defrost",
        "label": "Force defrost routine",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1330,
        "y": 1060,
        "wires": []
    },
    {
        "id": "f6e0cc6687051bf1",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Filter",
        "func": "if (global.get('VirtualState') == msg.payload) { return null; }\n\nglobal.set('VirtualState', msg.payload); //always set VirtualState\n\nif (msg.source == \"boot\") {\n    return null;\n}\n\nif (msg.source == \"mqtt\") { \n    return null; \n    }\n\nif (msg.source == 'DHW-function') {\n    msg.source = \"GUI\";\n    global.set('MQTT_Source', \"DHW-function\");\n}\n\nif (msg.source === undefined) {\n    msg.source = \"GUI\";\n    global.set('MQTT_Source', \"GUI\");\n    }\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 100,
        "wires": [
            [
                "1f12871cda6c40b3"
            ]
        ]
    },
    {
        "id": "585e4d6a54d44021",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Filter",
        "func": "var last_msgid      = context.get('last_msgid');\nvar current_value   = global.get('TOP4_Operating_Mode_State',\"file\");\n\n//  READ: Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW) \n//  SET:  Operating mode (0=Heat only, 1=Cool only, 2=Auto, 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto+DHW\n\nif (current_value == 7) { current_value = 2; }\nif (current_value == 8) { current_value = 6; }\n\nif (last_msgid == msg._msgid){\n    return null;\n}\n\nif (last_msgid === undefined){\n    context.set('last_msgid',msg._msgid);\n}\n\nif (msg.payload != current_value){\n    context.set('last_msgid',msg._msgid);\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 280,
        "wires": [
            [
                "e21920a5a6155306"
            ]
        ]
    },
    {
        "id": "e21920a5a6155306",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2310,
        "y": 280,
        "wires": [
            [
                "2810d417aa5c3457"
            ]
        ]
    },
    {
        "id": "367f1fc8966e2514",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "filter",
        "func": "if (msg.source === undefined) {\n    msg.source = \"GUI\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 280,
        "wires": [
            [
                "27d4716d98709ec9"
            ]
        ]
    },
    {
        "id": "aad17e70a817393e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "c3a9e17b02222cee"
        ],
        "x": 2615,
        "y": 160,
        "wires": []
    },
    {
        "id": "fca8ea8f1117c808",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "To Function RTC",
        "info": "",
        "x": 2720,
        "y": 160,
        "wires": []
    },
    {
        "id": "4673d329949e0652",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "200",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 100,
        "wires": [
            [
                "f6e0cc6687051bf1"
            ]
        ]
    },
    {
        "id": "9202d8b025b48df6",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "bee7b2de27a2ac09",
        "name": "to update mqtt msg/dag label",
        "mode": "link",
        "links": [
            "2cc4d65eb692223b"
        ],
        "x": 1905,
        "y": 2340,
        "wires": []
    },
    {
        "id": "d5948f3208081ac8",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "color",
        "func": "let msg2 = {};\n\n\nvar ReducePumpSpeed = global.get('F_ReducePumpSpeed.state', \"file\"); // check if enabled switch reduce pump speed\n// check if running:\nvar Freq = global.get(\"compressor_frequency\",\"file\");\n\nif (ReducePumpSpeed == 0) {\n    if (msg.source != \"boot\") msg2.payload = msg.payload;           // send slider value to button\n    msg2.color = \"white\";\n    msg2.bgcolor = [];\n    msg2.tooltip = \"\";\n    return msg2;\n}\n\n\nif (ReducePumpSpeed == 1) {\n    msg2.payload = \"BLOCKED\";\n    msg2.color = \"white\";\n    msg2.bgcolor = \"grey\";\n    msg2.tooltip = \"Set via flexible pump speed function\";\n    return msg2;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 460,
        "wires": [
            [
                "684cdf95f8172514"
            ]
        ]
    },
    {
        "id": "9e1f07f9825bd79d",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "10",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2150,
        "y": 540,
        "wires": [
            [
                "d5948f3208081ac8"
            ]
        ]
    },
    {
        "id": "c9428fcff7af5f3a",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pump_Max_Flow",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 540,
        "wires": [
            [
                "9e1f07f9825bd79d"
            ]
        ]
    },
    {
        "id": "b643e9d5e036f4ee",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "Show SoftStart_Advanced tab",
        "group": "c2a0123d2e2c91f0",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "Advanced setup",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "settings",
        "payload": "{\"group\":{\"show\":[\"SoftStart_Advanced\"],\"hide\":[\"SoftStart_Settings\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 3670,
        "y": 2340,
        "wires": [
            [
                "a9eac72958d861ac",
                "c50ffc38e8d8bca7",
                "0244f3af4037bfe4"
            ]
        ]
    },
    {
        "id": "c3c9902496136a46",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "Hide SoftStart_Advanced tab",
        "group": "e18bf5825c47a08f",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"show\":[\"SoftStart_Settings\"],\"hide\":[\"SoftStart_Advanced\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 3660,
        "y": 2380,
        "wires": [
            [
                "a9eac72958d861ac",
                "c50ffc38e8d8bca7"
            ]
        ]
    },
    {
        "id": "a9eac72958d861ac",
        "type": "ui_ui_control",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "",
        "events": "all",
        "x": 4160,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "e211a5736784a0fc",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "stage 1 duration",
        "label": "",
        "tooltip": "Default 180 (range 60/500) ",
        "group": "e18bf5825c47a08f",
        "order": 6,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "phase_1_duration",
        "topicType": "str",
        "format": "{{value}}",
        "min": "60",
        "max": "500",
        "step": 1,
        "className": "",
        "x": 3620,
        "y": 2500,
        "wires": [
            [
                "6ec6a3d95c50a2f6",
                "f94254ca964c6921"
            ]
        ]
    },
    {
        "id": "bd802f87a97dcefd",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "stage 2 delay",
        "label": "",
        "tooltip": "Default 60 (range 1/180) If set too high (>120) the compressor will stop early",
        "group": "e18bf5825c47a08f",
        "order": 13,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "phase_2_delay_time",
        "topicType": "str",
        "format": "{{value}}",
        "min": "1",
        "max": "180",
        "step": 1,
        "className": "",
        "x": 3610,
        "y": 2660,
        "wires": [
            [
                "6ec6a3d95c50a2f6"
            ]
        ]
    },
    {
        "id": "c1486ebe999c1402",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Message delay (sec)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3380,
        "y": 2540,
        "wires": []
    },
    {
        "id": "b54015c2f88f6bae",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Message delay (sec)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3380,
        "y": 2660,
        "wires": []
    },
    {
        "id": "c3c59a45d2e39fec",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "order": 17,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Message delay (min/°C)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3390,
        "y": 2820,
        "wires": []
    },
    {
        "id": "ecb93ad39d98a1fd",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "stage 3 delay",
        "label": "",
        "tooltip": "Default 15 (range 5/120)",
        "group": "e18bf5825c47a08f",
        "order": 18,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "phase_3_delay_time",
        "topicType": "str",
        "format": "{{value}}",
        "min": "5",
        "max": "120",
        "step": 1,
        "className": "",
        "x": 3610,
        "y": 2820,
        "wires": [
            [
                "6ec6a3d95c50a2f6"
            ]
        ]
    },
    {
        "id": "d0269b3429462492",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Catch duration (sec)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3380,
        "y": 2500,
        "wires": []
    },
    {
        "id": "7bbad0897f1fcc7f",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "stage 1 delay",
        "label": "",
        "tooltip": "Default 3 (range 0/30) If set too high, reaction is too slow causing compressor to stop early",
        "group": "e18bf5825c47a08f",
        "order": 8,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "phase_1_delay_time",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 3610,
        "y": 2540,
        "wires": [
            [
                "6ec6a3d95c50a2f6"
            ]
        ]
    },
    {
        "id": "d6df210fe010dd33",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "name": "Line Phase 1",
        "order": 4,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Phase 1 (STARTUP)</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3510,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "f94254ca964c6921",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "name": "Line Phase 2",
        "order": 11,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Phase 2 (STABLE) - (start after {{msg.payload}} sec)</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3510,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "fc318adaf0d65e13",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "name": "Line Phase 3",
        "order": 16,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Phase 3 (END) - (start after {{msg.payload}} min)</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3510,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "72a545f547cbe5a3",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "Advanced settings",
        "label": "Advanced settings",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3370,
        "y": 2340,
        "wires": []
    },
    {
        "id": "3547352170ac81f9",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "name": "Disclaimer",
        "order": 3,
        "width": 6,
        "height": 3,
        "format": "Disclaimer:<br/>\nOnly change settings in this advanced section if you truely know what you are doing !!\nIncorrect setup can cause the heatpump to never reach a stable phase.",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3610,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "029c5c12e6deaf2a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "global.set to variable",
        "func": "if (msg.topic == \"phase_1_delay_time\") {\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    global.set(\"F_SS.phase_1_delay_time\",msg.payload,\"file\");\n}\n\nif (msg.topic == \"phase_1_duration\") {\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    global.set(\"F_SS.phase_1_duration\",msg.payload,\"file\");\n}\n\n\nif (msg.topic == \"phase_2_delay_time\") {\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    global.set(\"F_SS.phase_2_delay_time\",msg.payload,\"file\");\n}\n\n\n\nif (msg.topic == \"phase_3_delay_time\") {\n    msg.payload = msg.payload * 60;                                             // convert to seconds.\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    global.set(\"F_SS.phase_3_delay_time\",msg.payload,\"file\");\n}\n\n\nif (msg.topic == \"phase_1_max_dT\") {\n    msg.payload = msg.payload;\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    global.set(\"F_SS.phase_1_max_dT\",msg.payload,\"file\");\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4060,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "6ec6a3d95c50a2f6",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 3860,
        "y": 2560,
        "wires": [
            [
                "029c5c12e6deaf2a"
            ]
        ]
    },
    {
        "id": "6ca1c1b33b5cf449",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "lowerlimit_correction",
        "label": "Lowerlimit correction",
        "tooltip": "Default -5 (range -10/0) ",
        "group": "e18bf5825c47a08f",
        "order": 15,
        "width": 6,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "lowerlimit_correction",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-10",
        "max": "0",
        "step": 1,
        "className": "",
        "x": 3640,
        "y": 2740,
        "wires": [
            [
                "cc3e8e6c49910b24"
            ]
        ]
    },
    {
        "id": "8c0d3e8e47e5848c",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "1 Trigger / 30 minute",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "x": 3180,
        "y": 2380,
        "wires": [
            [
                "0c5c291dfef49206",
                "cb4f0ebfd47b2b34"
            ]
        ]
    },
    {
        "id": "296d72c4856363ff",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "Load on boot SS",
        "func": "// Load all variables in one go and write all variables in one go.\n\nvar F_SS = global.get('F_SS',\"file\");\nvar save = false;\n\nif (F_SS === undefined)         {F_SS = {}; global.set('F_SS',{},\"file\");}\n\n    if (F_SS.state === undefined)                    {F_SS.state = 0; save = true;}                         // State of the softstart function itself. 1=on 0=off    \n    if (F_SS.reset_after_defrost === undefined)      {F_SS.reset_after_defrost = 0; save = true;}           // Reset softstart function after a defrost cycle\n    if (F_SS.total_duration === undefined)           {F_SS.total_duration = 15*60; save = true;}            // default 15 minutes converted to seconds\n    \n    if (F_SS.correction_value === undefined)         {F_SS.correction_value = 0; save = true;}              // Current value for correction\n    // F_SS.correction_bandwidth is not set in this function, but in other logic. should not be in here.\n\nif (save === true)      {global.set('F_SS',F_SS,\"file\");}\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={};\n\nmsg1.payload    =   F_SS.state;\nmsg1.payload    =   Number(msg1.payload).toFixed(0);\nmsg1.payload    =   parseFloat(msg1.payload);\nmsg2.payload    =   F_SS.total_duration / 60;\nmsg3.payload    =   F_SS.reset_after_defrost;\n\n\n\n\nreturn [msg1,msg2,msg3];\n\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3310,
        "y": 1800,
        "wires": [
            [
                "7790b731fd9a1374",
                "c66f65978915e688"
            ],
            [
                "6d347eebf409d174"
            ],
            [
                "2f436c5ec33c9291"
            ]
        ],
        "outputLabels": [
            "F_SS.state",
            "F_SS.total_duration",
            "F_SS.reset_after_defrost"
        ]
    },
    {
        "id": "0c5c291dfef49206",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "Load on boot",
        "func": "// Load all variables in one go and write all variables in one go.\n\nvar F_SS = global.get('F_SS',\"file\");\nvar save = false;\n\nif (F_SS === undefined)         {F_SS = {};}\n\n\n\n    if (F_SS.phase_1_duration === undefined)            {F_SS.phase_1_duration = 180; save = true;}             // startup phase. Default 170 seconds\n    if (F_SS.phase_1_delay_time === undefined)          {F_SS.phase_1_delay_time = 3; save = true;}             // Holdingtime for temperature changes (up) during phase 1. Default 0 seconds\n    if (F_SS.phase_1_max_dT === undefined)              {F_SS.phase_1_max_dT = -1; save = true;}                // max temperature difference between SP and Toutlet (Ta)\n    \n    if (F_SS.phase_2_delay_time === undefined)          {F_SS.phase_2_delay_time = 60; save = true;}            // Holdingtime for temperature changes (up) during phase 2. Default 70 seconds\n    if (F_SS.upperlimit_correction === undefined)       {F_SS.upperlimit_correction = 1; save = true;}          // Upper limit for the softstart function to stay under during phase 2\n    if (F_SS.lowerlimit_correction === undefined)       {F_SS.lowerlimit_correction = -5; save = true;}         // Upper limit for the softstart function to stay under during phase 2\n\n    if (F_SS.phase_3_delay_time === undefined)          {F_SS.phase_3_delay_time = 15*60; save = true;}         // End speed of the function. Reduce correction to 0 (zero), in 1 C xx minutes. Default is 1 degree per 15 minutes.\n    \n    \n    \nif (save === true)      {global.set('F_SS',F_SS,\"file\");}\n\nlet msg1={}, msg2={}, msg3={}, msg4={},msg5={}, msg6={},msg7={};\n\n\nmsg1.payload    =   F_SS.phase_1_duration;\nmsg2.payload    =   F_SS.phase_1_delay_time;\nmsg3.payload    =   F_SS.phase_1_max_dT;\n\nmsg4.payload    =   F_SS.phase_2_delay_time;\nmsg5.payload    =   F_SS.upperlimit_correction;\nmsg6.payload    =   F_SS.lowerlimit_correction;\n\nmsg7.payload    =   F_SS.phase_3_delay_time / 60;\n\nreturn [msg1,msg2,msg3,msg4,msg5,msg6,msg7];\n\n",
        "outputs": 7,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3150,
        "y": 2500,
        "wires": [
            [
                "e211a5736784a0fc"
            ],
            [
                "7bbad0897f1fcc7f"
            ],
            [
                "6b090a2bc61386b2"
            ],
            [
                "bd802f87a97dcefd"
            ],
            [
                "3b7535829c2cdf6b"
            ],
            [
                "6ca1c1b33b5cf449"
            ],
            [
                "ecb93ad39d98a1fd"
            ]
        ],
        "outputLabels": [
            "F_SS.phase_1_duration",
            "F_SS.phase_1_delay_time",
            "F_SS.phase_1_max_dT",
            "F_SS.phase_2_delay_time",
            "F_SS.upperlimit_correction",
            "F_SS.lowerlimit_correction",
            "F_SS.phase_3_delay_time"
        ]
    },
    {
        "id": "50b756726996fb8b",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "group": "e18bf5825c47a08f",
        "order": 9,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Max temp difference (°C)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3390,
        "y": 2580,
        "wires": []
    },
    {
        "id": "6b090a2bc61386b2",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "phase_1_max_dT",
        "label": "",
        "tooltip": "Default -1 (range -3/0) If set too low (<-2) the compressor could stop too early",
        "group": "e18bf5825c47a08f",
        "order": 10,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "phase_1_max_dT",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-3",
        "max": "0",
        "step": 1,
        "className": "",
        "x": 3630,
        "y": 2580,
        "wires": [
            [
                "6ec6a3d95c50a2f6"
            ]
        ]
    },
    {
        "id": "4212c42fb72cce77",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "link in 21 - SS chart for accurate lines",
        "links": [
            "5a1d6b18490ded1c",
            "37db709069bc2dc2",
            "9ece6a95a9a5c846"
        ],
        "x": 2935,
        "y": 2200,
        "wires": [
            [
                "349683fa690f91a3"
            ]
        ]
    },
    {
        "id": "187c584c21359a3e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "shift vs direct",
        "func": "\nvar TOP76_Heating_Mode = global.get(\"TOP76_Heating_Mode\",\"file\");\nif (TOP76_Heating_Mode === undefined){\n    return null;\n}\n\nvar msg1={}; // payload value\n    msg1.topic = 'SP_DIRECT_virt';\nvar msg2={}; // label\nvar msg3={}; // limits\nlet msg4={}; // turn off WAR function when compensation curve is active\n    msg4.payload = 0;\n\nvar SP_DIRECT_virt          = global.get('SP_DIRECT_virt',\"file\");\n\nif (msg.payload == 'check_heating_mode'){\n        if (TOP76_Heating_Mode == 1){                   // Direct mode\n            msg1.payload = SP_DIRECT_virt;\n            \n            if (msg1.payload < 20 || msg1.payload === undefined) {msg1.payload = 20;}\n            \n            msg2.label = \"Water temp.\";\n            node.send([msg1,msg2,null,null]);\n            \n            msg3 = {ui_control:{min:+20, max:+65, step:1}};\n            node.send([null,null,msg3]);\n        }        \n        if (TOP76_Heating_Mode == 0){                   // Compensation Curve\n            msg1.payload = SP_DIRECT_virt;\n            \n            if (msg1.payload > 5 || msg1.payload === undefined)   { msg1.payload = 0; }\n            \n            msg2.label = \"Shift curve\";\n            node.send([msg1,msg2,null,msg4]);\n            \n            msg3 = {ui_control:{min:-5, max:+5, step:1}};\n            node.send([null,null,msg3]);\n        }\n}\n\n\n\nif (TOP76_Heating_Mode == 0) {                          // Compensation curve mode\n    node.send([null,null,null,msg4])                    // turn off WAR function\n    \n    if (msg.topic == 'trigger'){                        \n        msg1.payload = SP_DIRECT_virt;\n        //msg1.topic = 'SP_DIRECT_virt';\n        if (msg1.payload === undefined) { SP_DIRECT_virt = 0; }\n        node.send([msg1,null,null]);\n    }    \n    if (msg.topic == 'Water setpoint (heat shift)'){\n        msg1.payload = msg.payload;\n        node.send([msg1,null,null]);\n    }\n    msg2.label = \"Shift curve\";\n    node.send([null,msg2,null]);\n    \n    msg3 = {ui_control:{min:-5, max:+5, step:1}};\n    node.send([null,null,msg3]);\n\n    return null;\n}\n\n////////////////////////////////////\nif (TOP76_Heating_Mode == 1){                       // Direct mode\n\n    if (msg.topic == 'trigger'){    \n        msg1.payload = SP_DIRECT_virt;\n            if (msg1.payload === undefined) { SP_DIRECT_virt = 20; }\n        //msg1.topic = 'SP_DIRECT_virt';\n        node.send([msg1,null,null]);\n    }    \n    if (msg.topic == 'Water setpoint (direct)'){\n        msg1.payload = msg.payload;\n        msg1.topic = 'SP_DIRECT_virt';\n        node.send([msg1,null,null]);\n    }\n    msg2.label = \"Water temp.\";\n    node.send([null,msg2,null]);\n    \n    msg3 = {ui_control:{min:+20, max:+65, step:1}};\n    node.send([null,null,msg3]);\n    \n    return null;\n}\n\n",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 80,
        "wires": [
            [
                "8329aedf9204b75d"
            ],
            [
                "136e0fb8144c7c14"
            ],
            [
                "8329aedf9204b75d"
            ],
            [
                "0c8eb8257035ca5f",
                "81e0133d16c51789"
            ]
        ],
        "outputLabels": [
            "payload value",
            "label",
            "limits",
            "WAR function OFF"
        ]
    },
    {
        "id": "3b06cb6fe4aba512",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "Show QuietMode add-on setup",
        "group": "c2a0123d2e2c91f0",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "QuietMode add-on setup",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "settings",
        "payload": "{\"group\":{\"show\":[\"SoftStart_Quietmode_add-on_setings\"],\"hide\":[\"SoftStart_Settings\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 3750,
        "y": 2960,
        "wires": [
            [
                "a9eac72958d861ac",
                "2953bc932b436d2e",
                "f52fb1c1050e067f"
            ]
        ]
    },
    {
        "id": "d7cc3d6e4843a8ad",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "Hide QuietMode add-on setup",
        "group": "778fd272c9304a44",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"SoftStart_Quietmode_add-on_setings\"],\"show\":[\"SoftStart_Settings\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 3750,
        "y": 3000,
        "wires": [
            [
                "a9eac72958d861ac",
                "2953bc932b436d2e"
            ]
        ]
    },
    {
        "id": "c63eb9bc210b7b1d",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "group": "778fd272c9304a44",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "Quietmode add-on settings",
        "label": "QuietMode add-on settings",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3460,
        "y": 2960,
        "wires": []
    },
    {
        "id": "688af2d1eee80549",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "",
        "op1": "",
        "op2": "push button",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 4190,
        "y": 2960,
        "wires": [
            [
                "d7cc3d6e4843a8ad"
            ]
        ]
    },
    {
        "id": "2953bc932b436d2e",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4040,
        "y": 2920,
        "wires": [
            [
                "688af2d1eee80549"
            ]
        ]
    },
    {
        "id": "f52fb1c1050e067f",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4020,
        "y": 2960,
        "wires": [
            [
                "688af2d1eee80549"
            ]
        ]
    },
    {
        "id": "bab176f0addd9f32",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "num",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 4070,
        "y": 2380,
        "wires": [
            [
                "c3c9902496136a46"
            ]
        ]
    },
    {
        "id": "c50ffc38e8d8bca7",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3920,
        "y": 2340,
        "wires": [
            [
                "bab176f0addd9f32"
            ]
        ]
    },
    {
        "id": "0244f3af4037bfe4",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3900,
        "y": 2380,
        "wires": [
            [
                "bab176f0addd9f32"
            ]
        ]
    },
    {
        "id": "5444f8ed7b1fa765",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "1 Trigger / 30 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3180,
        "y": 3000,
        "wires": [
            [
                "d080747c531f1376",
                "2746ca6bcc924e40"
            ]
        ]
    },
    {
        "id": "ab31019d5a2a15b3",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "group": "778fd272c9304a44",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "Duration",
        "label": "Duration after start",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 3400,
        "y": 3040,
        "wires": []
    },
    {
        "id": "042a326783f2a657",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "QM_duration",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "778fd272c9304a44",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "5 mins",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 mins",
                "value": 10,
                "type": "num"
            },
            {
                "label": "15 mins",
                "value": 15,
                "type": "num"
            },
            {
                "label": "20 mins",
                "value": 20,
                "type": "num"
            },
            {
                "label": "25 mins",
                "value": 25,
                "type": "num"
            },
            {
                "label": "30 mins",
                "value": 30,
                "type": "num"
            },
            {
                "label": "45 mins",
                "value": 45,
                "type": "num"
            },
            {
                "label": "1 hour",
                "value": 60,
                "type": "num"
            },
            {
                "label": "1 h 15 mins",
                "value": 75,
                "type": "num"
            },
            {
                "label": "1 h 30 mins",
                "value": 90,
                "type": "num"
            },
            {
                "label": "1 h 45 mins",
                "value": 105,
                "type": "num"
            },
            {
                "label": "2 hours",
                "value": 120,
                "type": "num"
            },
            {
                "label": "3 hours",
                "value": 180,
                "type": "num"
            },
            {
                "label": "4 hours",
                "value": 240,
                "type": "num"
            },
            {
                "label": "5 hours",
                "value": 300,
                "type": "num"
            },
            {
                "label": "6 hours",
                "value": 360,
                "type": "num"
            },
            {
                "label": "7 hours",
                "value": 420,
                "type": "num"
            },
            {
                "label": "8 hours",
                "value": 480,
                "type": "num"
            },
            {
                "label": "9 hours",
                "value": 540,
                "type": "num"
            },
            {
                "label": "10 hours",
                "value": 600,
                "type": "num"
            },
            {
                "label": "12 hours",
                "value": 720,
                "type": "num"
            },
            {
                "label": "18 hours",
                "value": 1080,
                "type": "num"
            },
            {
                "label": "24 hours",
                "value": 1440,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "QM_duration",
        "topicType": "str",
        "className": "",
        "x": 3690,
        "y": 3040,
        "wires": [
            [
                "9c7187657eb05439"
            ]
        ]
    },
    {
        "id": "2f6dcfe431b67d95",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "1179fa790d2d89ca",
        "order": 19,
        "width": 6,
        "height": 1,
        "name": "Final water temp.",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 990,
        "y": 1340,
        "wires": []
    },
    {
        "id": "1f4a153d2239272b",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "link in Final water temp",
        "links": [
            "61dfad40f76daac7",
            "76a161da01cebe9c"
        ],
        "x": 155,
        "y": 1340,
        "wires": [
            [
                "00dd6c3fd833a5cf"
            ]
        ]
    },
    {
        "id": "00dd6c3fd833a5cf",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "Label",
        "func": "var TOP76_Heating_Mode          = global.get('TOP76_Heating_Mode',\"file\");\nvar TOP20_ThreeWay_Valve_State  = global.get('TOP20_ThreeWay_Valve_State');\n\n    if (TOP76_Heating_Mode === undefined || TOP20_ThreeWay_Valve_State == 1)    {return null;}\n\nlet msg1={};\n    if (TOP76_Heating_Mode == 0) \n        {\n            msg1.label = \"Temperature shift\";\n            msg1.payload = global.get('SHIFT_Final',\"file\");           \n        }\n\n    if (TOP76_Heating_Mode == 1) \n        {\n            msg1.label = \"Final water temperature\";\n            msg1.payload = global.get('SP_Final',\"file\");\n        }\nreturn [msg1];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1340,
        "wires": [
            [
                "2f6dcfe431b67d95"
            ]
        ]
    },
    {
        "id": "2c0778f496681b41",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "group": "778fd272c9304a44",
        "name": "Line QuietMode settings",
        "order": 3,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Settings</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3450,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "2bc0c1510a6e89c4",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 3450,
        "y": 2240,
        "wires": [
            [
                "37ae6fb47a326b5e"
            ]
        ]
    },
    {
        "id": "0c3e58e3b5cd3fd7",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "group": "4551542d51501ce1",
        "name": "Line - Setup ",
        "order": 1,
        "width": 23,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3730,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "c33b3e865b1bd8b8",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "QM Input from manager",
        "links": [
            "5a1d6b18490ded1c",
            "1cf41192d99c0a58"
        ],
        "x": 2145,
        "y": 200,
        "wires": [
            [
                "0a89bc3104c3ee9b"
            ]
        ]
    },
    {
        "id": "7d9dc928c0177c74",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "QM GUI to manager",
        "mode": "link",
        "links": [
            "4ac5cc278b7439a7"
        ],
        "x": 2035,
        "y": 200,
        "wires": []
    },
    {
        "id": "9c7187657eb05439",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "set.topic_variables",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"F_SS.\" + msg.topic,msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4050,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "51e9ad6273cba0ec",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "group": "778fd272c9304a44",
        "order": 12,
        "width": 2,
        "height": 1,
        "name": "Current level",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3690,
        "y": 3200,
        "wires": []
    },
    {
        "id": "02ec5c80f142f377",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "link in 25",
        "links": [
            "0771fea18659deea"
        ],
        "x": 3585,
        "y": 3200,
        "wires": [
            [
                "51e9ad6273cba0ec"
            ]
        ]
    },
    {
        "id": "24fbbd2b93a9c9f4",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "group": "778fd272c9304a44",
        "order": 11,
        "width": 4,
        "height": 1,
        "name": "Current QuietMode level",
        "label": "Current QuietMode level",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 3450,
        "y": 3200,
        "wires": []
    },
    {
        "id": "70aea97804b35103",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "group": "778fd272c9304a44",
        "name": "Line Quietmode Result",
        "order": 10,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Result</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3440,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "e9942046bea0d380",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "SS_Quietmode_on_off",
        "mode": "link",
        "links": [
            "6165734a2db82af9"
        ],
        "x": 3975,
        "y": 3160,
        "wires": []
    },
    {
        "id": "a423271481d5d54d",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "QM_state",
        "label": "QuietMode add-on",
        "tooltip": "",
        "group": "c2a0123d2e2c91f0",
        "order": 11,
        "width": 5,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "QM_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3680,
        "y": 3160,
        "wires": [
            [
                "9c7187657eb05439",
                "639bc923555d743a"
            ]
        ]
    },
    {
        "id": "d080747c531f1376",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "Load on boot",
        "func": "// Load all variables in one go and write all variables in one go.\n\nvar F_SS = global.get('F_SS',\"file\");\nvar save = false;\n\nif (F_SS === undefined)                                 {F_SS = {};}\n\nif (F_SS.QM_duration === undefined)                     {F_SS.QM_duration = 5; save = true;}\nif (F_SS.QM_active_level === undefined)                 {F_SS.QM_active_level = 3; save = true;}\n//  F_SS.QM_default_level does not need to be defined by default.\nif (F_SS.QM_state === undefined)                        {F_SS.QM_state = 0; save = true;}\n\nif (save === true)                                      {global.set('F_SS',F_SS,\"file\");}\n\nlet msg1={}, msg2={}, msg3={}, msg4={};\n\nmsg1.payload    =   F_SS.QM_duration;\nif (F_SS.QM_default_level !== undefined) {\n    msg2.payload    =   F_SS.QM_default_level;\n    node.send([null,msg2,null,null])\n}\nmsg3.payload    =   F_SS.QM_active_level;\nmsg4.payload    =   F_SS.QM_state;\n\n\nreturn [msg1,null,msg3,msg4];\n\n",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3190,
        "y": 3100,
        "wires": [
            [
                "9c59622b3f2c6e55"
            ],
            [
                "78f35dacfb4b5757"
            ],
            [
                "20df75efdb84f2a8"
            ],
            [
                "81be4bef9f6ab8be"
            ]
        ],
        "outputLabels": [
            "F_SS.QM_duration",
            "F_SS.QM_default_level",
            "F_SS.QM_active_level",
            "F_SS.QM_state"
        ]
    },
    {
        "id": "4d6957c0b336a3cb",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "link out 38",
        "mode": "link",
        "links": [
            "c94d6bdf03f2b540"
        ],
        "x": 3975,
        "y": 3080,
        "wires": []
    },
    {
        "id": "a3d9dc45c641ff7d",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Input QuietMode dash settings ",
        "links": [
            "1cf41192d99c0a58",
            "5a1d6b18490ded1c"
        ],
        "x": 1565,
        "y": 160,
        "wires": [
            [
                "fadad1e2505bf86d"
            ]
        ]
    },
    {
        "id": "4270ba926708b00d",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "QM_default_level",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "778fd272c9304a44",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Level 0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Level 1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Level 2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Level 3",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "QM_default_level",
        "topicType": "str",
        "className": "",
        "x": 3710,
        "y": 3080,
        "wires": [
            [
                "9c7187657eb05439",
                "4d6957c0b336a3cb"
            ]
        ]
    },
    {
        "id": "ab242c5522877fe3",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "group": "778fd272c9304a44",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Default QuietMode level",
        "label": "Default QuietMode level",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 3450,
        "y": 3080,
        "wires": []
    },
    {
        "id": "b530eb1ecdcd7af8",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "group": "778fd272c9304a44",
        "order": 8,
        "width": 4,
        "height": 1,
        "name": "Active QuietMode level",
        "label": "Active QuietMode level",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 3440,
        "y": 3120,
        "wires": []
    },
    {
        "id": "0834eda7cad080f5",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "QM_active_level",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "778fd272c9304a44",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Level 0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Level 1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Level 2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Level 3",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "QM_active_level",
        "topicType": "str",
        "className": "",
        "x": 3710,
        "y": 3120,
        "wires": [
            [
                "9c7187657eb05439",
                "4d6957c0b336a3cb"
            ]
        ]
    },
    {
        "id": "4125dbe2c258837c",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Filter",
        "func": "//var last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\n\n//if (last_value === undefined || last_msgid === undefined){\nif (last_msgid === undefined){    \n    //context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    msg.source = \"GUI\";\n    return msg;\n}\n\nif (last_msgid == msg._msgid){\n    return null;\n}\n\n//context.set('last_value',msg.payload);\ncontext.set('last_msgid',msg._msgid);\nmsg.source = \"GUI\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 200,
        "wires": [
            [
                "7d9dc928c0177c74"
            ]
        ]
    },
    {
        "id": "0a89bc3104c3ee9b",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2230,
        "y": 200,
        "wires": [
            [
                "eeae40f40c5ecf87"
            ]
        ]
    },
    {
        "id": "cb4f0ebfd47b2b34",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3430,
        "y": 2380,
        "wires": [
            [
                "c3c9902496136a46"
            ]
        ]
    },
    {
        "id": "2746ca6bcc924e40",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3390,
        "y": 3000,
        "wires": [
            [
                "d7cc3d6e4843a8ad"
            ]
        ]
    },
    {
        "id": "d83ab1374f972ad1",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "Filter",
        "func": "var last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\n\nif (last_value === undefined || last_msgid === undefined){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return msg;\n}\n\nif (last_msgid == msg._msgid || msg.payload == last_value){\n    return null;\n}\n\ncontext.set('last_value',msg.payload);\ncontext.set('last_msgid',msg._msgid);\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 1740,
        "wires": [
            [
                "c66f65978915e688",
                "7790b731fd9a1374",
                "39c4c5d262a3065b"
            ]
        ]
    },
    {
        "id": "22addf167b287f53",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Filter",
        "func": "var last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\n\nif (last_value === undefined || last_msgid === undefined){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return msg;\n}\n\nif (last_msgid == msg._msgid || msg.payload == last_value){\n    return null;\n}\n\n\ncontext.set('last_value',msg.payload);\ncontext.set('last_msgid',msg._msgid);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3890,
        "y": 780,
        "wires": [
            [
                "b4051f61cf6d4d65",
                "e8990d184ea1eca6",
                "25b8320badf7ef88",
                "b62de7b7b1c2c0b6",
                "54724886189b074f"
            ]
        ]
    },
    {
        "id": "639bc923555d743a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "Filter",
        "func": "var last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\n\nif (last_value === undefined || last_msgid === undefined){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return null;\n}\n\nif (last_msgid == msg._msgid || msg.payload == last_value){\n    return null;\n}\n\ncontext.set('last_value',msg.payload);\ncontext.set('last_msgid',msg._msgid);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3870,
        "y": 3160,
        "wires": [
            [
                "e9942046bea0d380"
            ]
        ]
    },
    {
        "id": "52a0fd0bd128ca0a",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "group": "778fd272c9304a44",
        "name": "Line Quietmode Info",
        "order": 13,
        "width": 6,
        "height": 6,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Information</left> \n</html>\n</br>\n<u>Duration after start</u>\n The duration the qm level should remain active after the compressor starts.</br></br>\n<u>Active QuietMode level</u>\n The qm level used for the duration after start</br></br>\n<u>Default QuietMode level</u>\n The normal / basic qm level. This should match the qm level when this function is not used.",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3440,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "b41f920bc63ae262",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Filter",
        "func": "var last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\nvar current_value   = global.get('TOP9_DHW_Target_Temp',\"file\");\n\n\n\nif (last_value === undefined || last_msgid === undefined){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return msg;\n}\n\nif (last_msgid == msg._msgid){\n    return null;\n}\n\nif (msg.payload != current_value || msg.payload != last_value){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 1000,
        "wires": [
            [
                "550d51c7fe788f9e"
            ]
        ]
    },
    {
        "id": "32840bc8d04fbb31",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHW SP prefilter",
        "links": [
            "7386864c75dbce5c",
            "dd45b1caa253346b"
        ],
        "x": 1865,
        "y": 980,
        "wires": [
            [
                "ac2652f2dd9df44c"
            ]
        ]
    },
    {
        "id": "61def1f2090e360a",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHW SP to SET11",
        "links": [
            "c4cb07ae79c0bf65",
            "e7d5b3d47ad1c53a"
        ],
        "x": 2295,
        "y": 1000,
        "wires": [
            [
                "bc84f4340c3e5b0a"
            ]
        ]
    },
    {
        "id": "95590d576d789646",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "link in - personal chart info",
        "links": [
            "837706e7772c4061"
        ],
        "x": 225,
        "y": 2240,
        "wires": [
            [
                "8cb1aceef81045bd"
            ]
        ]
    },
    {
        "id": "9975ddd7c9465aea",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "4e9e24cca215ad4d",
        "name": "Line - DHW",
        "order": 1,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "43464dca9fd194fa",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Link-in to SET9",
        "links": [
            "836082017500f9a9",
            "f0150106811a865b"
        ],
        "x": 2085,
        "y": 260,
        "wires": [
            [
                "585e4d6a54d44021"
            ]
        ]
    },
    {
        "id": "27d4716d98709ec9",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "To OM_Manager",
        "mode": "link",
        "links": [
            "efa847198158ca2c"
        ],
        "x": 2015,
        "y": 300,
        "wires": []
    },
    {
        "id": "ac2652f2dd9df44c",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1900,
        "y": 1020,
        "wires": [
            [
                "b41f920bc63ae262"
            ]
        ]
    },
    {
        "id": "7157605d81a5de0d",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 680,
        "y": 120,
        "wires": [
            [
                "7386864c75dbce5c"
            ]
        ]
    },
    {
        "id": "476134da722ea175",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Change OM",
        "links": [
            "4ff74e2b48b1d597",
            "836082017500f9a9",
            "f0150106811a865b"
        ],
        "x": 1565,
        "y": 240,
        "wires": [
            [
                "493be73ce31c8c96"
            ]
        ]
    },
    {
        "id": "97f8288d7402bc77",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "link in 39",
        "links": [
            "a85d4f84f1b538d1",
            "a7d4b11b9c045f95"
        ],
        "x": 3085,
        "y": 60,
        "wires": [
            [
                "187c584c21359a3e"
            ]
        ]
    },
    {
        "id": "136e0fb8144c7c14",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "1179fa790d2d89ca",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "xxFinal water temp.",
        "label": "{{msg.label}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3510,
        "y": 80,
        "wires": []
    },
    {
        "id": "b62de7b7b1c2c0b6",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link out 46",
        "mode": "link",
        "links": [
            "c3a9e17b02222cee"
        ],
        "x": 4085,
        "y": 740,
        "wires": []
    },
    {
        "id": "a7d4b11b9c045f95",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "check limits GUI",
        "mode": "link",
        "links": [
            "97f8288d7402bc77",
            "3f0803a3a230aca2"
        ],
        "x": 2165,
        "y": 2660,
        "wires": []
    },
    {
        "id": "872ffae146541a5a",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "link out 47",
        "mode": "link",
        "links": [
            "6bdcf84066368733"
        ],
        "x": 655,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5dfb70935ea409db",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "link out 48",
        "mode": "link",
        "links": [
            "7c9af6a20115c38e"
        ],
        "x": 605,
        "y": 1300,
        "wires": []
    },
    {
        "id": "939b63cd71edad9b",
        "type": "ui_toast",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "popup_class",
        "topic": "",
        "name": "",
        "x": 2470,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "45f764b22fa2979e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "function 21",
        "func": "if (msg.topic == 'DHW')   { return null }  // Do nothing. Exit function\n\n\nif (msg.payload == 1)   {\n    let msg1={};\n        \n    var OM = global.get('TOP4_Operating_Mode_State', \"file\");\n    \n    \n    if          (OM == 0)   {msg1.payload = \"Heat only\";} \n    else if     (OM == 1)   {msg1.payload = \"Cool only\";} \n    else if     (OM == 2)   {msg1.payload = \"Auto(Heat)\";} \n    else if     (OM == 7)   {msg1.payload = \"Auto(Cool)\";} \n    else                    {return null;}\n    \n    msg1.payload = \" Forcefull DHW enabled.\" + \n        \"<br><br> Current Operating mode is: \" + msg1.payload + \"(\" + OM + \")\" +\n        \"</br> Add DHW mode (manually) to perform a DHW run.</br></br>\";\n    return msg1;\n    \n}\n\nif (msg.payload == 0) {\n    global.set('Force_DHW_active',0,\"file\");\n    return null\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 960,
        "wires": [
            [
                "939b63cd71edad9b",
                "11d6554f952a6ae3"
            ]
        ]
    },
    {
        "id": "11d6554f952a6ae3",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "op1": "",
        "op2": "[]",
        "op1type": "nul",
        "op2type": "json",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2290,
        "y": 960,
        "wires": [
            [
                "939b63cd71edad9b"
            ]
        ]
    },
    {
        "id": "8406701f07ab7886",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link in 45",
        "links": [
            "7708ef15cae3ed59"
        ],
        "x": 2245,
        "y": 420,
        "wires": [
            [
                "6864b73de510f046"
            ]
        ]
    },
    {
        "id": "ca6c0bce1bb90d64",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "name": "Line 7x1 automations actions",
        "order": 8,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n\t<left>Automation actions</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3400,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "7f32080d7494b6ae",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "order": 14,
        "width": 7,
        "height": 4,
        "name": "Note ",
        "label": "When the temperature difference compared to the setpoint is more than the \"Trigger\" dT, the selected automation actions will be activated.<br><br> When the temperature difference is below the \"Revert\" dT, the selected automation actions will be reverted.",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3330,
        "y": 1560,
        "wires": []
    },
    {
        "id": "cfa2eec0803fe7cd",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "name": "Line 7x1 Note",
        "order": 13,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n\t<left>Note</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3360,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "6864b73de510f046",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Filter",
        "func": "var last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\nvar current_value   = global.get('F_ReducePumpSpeed.PumpMaxFlowSetting',\"file\");\n\n\nif (last_value === undefined || last_msgid === undefined){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return null;\n}\n\nif (last_msgid == msg._msgid){\n    return null;\n}\n\nif (msg.payload != current_value || msg.payload != last_value){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 460,
        "wires": [
            [
                "5eebb66e29e252f6"
            ]
        ]
    },
    {
        "id": "64d06b253783964a",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "1eb6d525c86c4977",
        "order": 11,
        "width": 12,
        "height": 2,
        "name": "extra text",
        "label": "Note: <br>If the model information is 'unknown', this means the heishamon firmware does not recognize the model (yet). It doesn't have any impact on the functionality. It is only for information purpose.",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 2560,
        "y": 1760,
        "wires": []
    },
    {
        "id": "281a5e0dca0e33dc",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 1365,
        "y": 100,
        "wires": [
            [
                "d9a7bffb1a15426e",
                "a26b41289a59dba3",
                "a45a6b8b1ac4b46d",
                "b203a1c024a72593",
                "34397163757fd58b",
                "7c74fd1faa32c81d",
                "de0e892a0157baca",
                "05d3e85b3963e4e2",
                "6db2abfba9e25737",
                "7f6107d49ab83c40",
                "22afde8747ce6ca0",
                "0897b055d53c8a84",
                "afa82ddd168a4ea4",
                "58ee259d850d95ac",
                "332fb342687e1121",
                "50f5134fb3ba9e38",
                "119d9c04e028ad98",
                "13b0a160e7f2d0a0",
                "8e9f91dd021c2ccd",
                "d9cbcc885d31c1fd",
                "00660af047d90d84",
                "fb1ef412a32707e7",
                "849755bc336c0289"
            ]
        ]
    },
    {
        "id": "e4d3b74c7c050a7d",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 155,
        "y": 60,
        "wires": [
            [
                "8c2afa46f759d9cd"
            ]
        ]
    },
    {
        "id": "a1d3737a5a110aa9",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 3045,
        "y": 300,
        "wires": [
            [
                "187c584c21359a3e",
                "ecf47b4f156ae616"
            ]
        ]
    },
    {
        "id": "2cf43683279df520",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 3155,
        "y": 1760,
        "wires": [
            [
                "296d72c4856363ff"
            ]
        ]
    },
    {
        "id": "b09ae278b516c328",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "x": 3130,
        "y": 1840,
        "wires": [
            [
                "296d72c4856363ff"
            ]
        ]
    },
    {
        "id": "e77ae78af76db973",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 3055,
        "y": 820,
        "wires": [
            [
                "48ac4170551d07e2"
            ]
        ]
    },
    {
        "id": "838a27801d1da2db",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 3155,
        "y": 1800,
        "wires": [
            [
                "296d72c4856363ff"
            ]
        ]
    },
    {
        "id": "5c8427c809a8f68f",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "47b08c1184b335ce",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 3095,
        "y": 2620,
        "wires": [
            [
                "0c5c291dfef49206"
            ]
        ]
    },
    {
        "id": "e3cf888e2774fce3",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a930214064f6df4c",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 3085,
        "y": 3120,
        "wires": [
            [
                "d080747c531f1376"
            ]
        ]
    },
    {
        "id": "7f2afa931336f755",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 650,
        "y": 2300,
        "wires": [
            [
                "9802bf01ebf45d28"
            ]
        ]
    },
    {
        "id": "c76df998b7cb23d3",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 650,
        "y": 2420,
        "wires": [
            [
                "9789265573ab4c80"
            ]
        ]
    },
    {
        "id": "063fe3316395a6c4",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Filter+",
        "func": "// to SET13 (PIN1)\n// to GUI (PIN2)\n// to trigger Scheduler (PIN3)\n\n\n\n\nif (msg.topic == \"Sterilization\") {       // to set13\n    return [msg,msg,null];\n}\n\n\nif (msg.topic == \"Toggle\") {       // to trigger through scheduler\n    return [null,msg,msg];\n} \n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 1100,
        "wires": [
            [
                "7cfe771e9583a82d"
            ],
            [
                "ccb9e79ff06190fa",
                "6591faa63b1b0351"
            ],
            [
                "0a683587ca4fc25c"
            ]
        ],
        "outputLabels": [
            "to SET13 (PIN1)",
            "to GUI (PIN2)",
            "to Scheduler (PIN3)"
        ]
    },
    {
        "id": "6591faa63b1b0351",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link out 56",
        "mode": "link",
        "links": [
            "4982424c661376ea"
        ],
        "x": 2225,
        "y": 1100,
        "wires": []
    },
    {
        "id": "24b17d7139dc31a7",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link out 57",
        "mode": "link",
        "links": [
            "4982424c661376ea"
        ],
        "x": 1625,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e498876c6a66fb4c",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "4e9e24cca215ad4d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "DHW current temperature",
        "label": "Current temperature",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 380,
        "wires": []
    },
    {
        "id": "de12a1bd6b72fc0a",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "4e9e24cca215ad4d",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Sterilization (SP)",
        "label": "Sterilization setpoint",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 320,
        "wires": []
    },
    {
        "id": "7f44b9272e731114",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "link out 58",
        "mode": "link",
        "links": [
            "56131f5116b20fba"
        ],
        "x": 365,
        "y": 140,
        "wires": []
    },
    {
        "id": "3e5558127fc3402a",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link in 55",
        "links": [
            "3d3b432c844ba87e",
            "fb5aeb896e8acc76"
        ],
        "x": 1845,
        "y": 880,
        "wires": [
            [
                "cd39dd6db4d4cbf2"
            ]
        ]
    },
    {
        "id": "70f71351c6facb1b",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 60,
        "wires": [
            [
                "8c2afa46f759d9cd"
            ]
        ]
    },
    {
        "id": "9164f892e385d90c",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "Reset current error",
        "label": "Reset current error",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2090,
        "y": 1600,
        "wires": []
    },
    {
        "id": "e9fc5e9327936cd3",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "RESET",
        "group": "fea7672db2f050c9",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "RESET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2280,
        "y": 1600,
        "wires": [
            [
                "47022621a9be56df"
            ]
        ]
    },
    {
        "id": "47022621a9be56df",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SetReset",
        "topic": "panasonic_heat_pump/commands/SetReset",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2740,
        "y": 1600,
        "wires": []
    },
    {
        "id": "30bdc6940be044bf",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "name": "Line 7x1 Status",
        "order": 11,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n\t<left>Automation status</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3640,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "a695685930d2097e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "ef3dbc543ae92bec",
        "order": 12,
        "width": 7,
        "height": 1,
        "name": "Status",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 3610,
        "y": 1520,
        "wires": []
    },
    {
        "id": "d9b3ca8bfaa4c10a",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link in 57",
        "links": [
            "346a3528a7770803",
            "fab44b5501eca10e",
            "47cb7500b0321fc1",
            "49ebac0412d87642",
            "e62a354ce682ea6f",
            "f217f942f56cbfa9",
            "317942154b6d1cb3",
            "92b636a9597d91b2",
            "c6801a6c865543b3",
            "3cd1a1bc9111c34d",
            "3ee6946a57749651",
            "b248caed16a3e771"
        ],
        "x": 3535,
        "y": 1560,
        "wires": [
            [
                "1728bf6be1141a5f"
            ]
        ]
    },
    {
        "id": "1728bf6be1141a5f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "automation status",
        "func": "var F_RTC = global.get('F_RTC',\"file\");\n\nif (F_RTC.automation_active === undefined) {\n    return null;    \n}\n\nlet msg1={};\nif (F_RTC.automation_active == 1) {msg1.payload = \"Action <font color = gold>TRIGGERED</font> - <font color = ''> waiting for Revert dT</font>\";}\nif (F_RTC.automation_active == 0) {msg1.payload = \"Action PENDING - waiting for Trigger dT\";}\nif (F_RTC.automation_power_state == 0 && F_RTC.automation_OM_state == 0) {msg1.payload = \"\";}\n\nreturn msg1\n\n\n// <font color= gold > {{msg.payload}} °C</font>",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 1560,
        "wires": [
            [
                "a695685930d2097e"
            ]
        ]
    },
    {
        "id": "e969a884012a60e7",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "Check",
        "func": "var stored_value = flow.get(\"persistency_test\",\"file\");\nlet msg99={};   msg99.topic = \"SYSTEM\";\n\nif (stored_value !== undefined) {\n    msg99.payload = \"Persistent storage: <font color=green>OK</font>\";\n    flow.set(\"persistency_test\", undefined,\"file\");\n    flow.set(\"persistency_test\", undefined);\n    return msg99;\n}\n\nelse {\n    msg99.payload = \"Persistent storage: <font color=red>WARNING</font> - Persistent storage not configured correctly\";\n    flow.set(\"persistency_test\", undefined);\n    return msg99;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 2480,
        "wires": [
            [
                "9a7dda15052b4034"
            ]
        ]
    },
    {
        "id": "997453c0771acfc3",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1735,
        "y": 2480,
        "wires": [
            [
                "e969a884012a60e7"
            ]
        ],
        "l": false
    },
    {
        "id": "e5c16c1442eeb1cc",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "4f352fdae09316c2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "check_heating_mode",
        "payloadType": "str",
        "x": 1540,
        "y": 2660,
        "wires": [
            [
                "a7d4b11b9c045f95"
            ]
        ]
    },
    {
        "id": "6bb32dd02ad372d4",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "Softstart togle on/off",
        "links": [
            "029c63457cab9dc0",
            "8e8c5440b14adc8f"
        ],
        "x": 3455,
        "y": 1720,
        "wires": [
            [
                "7790b731fd9a1374"
            ]
        ]
    },
    {
        "id": "354635fe353183fd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "bf4af523ba16d457",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Valve position",
        "label": "Valve position",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 980,
        "y": 1440,
        "wires": []
    },
    {
        "id": "cb7bd45634ebfb62",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "function 39",
        "func": "var msg1={};\nvar value;  // empty\n\nif (msg.topic == 'TOP20_ThreeWay_Valve_State') {\n    value = msg.payload;\n}\n\nif (msg.topic != 'TOP20_ThreeWay_Valve_State') {\n    value = global.get(\"TOP20_ThreeWay_Valve_State\");\n}\n\nif (value === undefined) { return null }\n\nif (value == 0) { value = 'Room' }\nif (value == 1) { value = 'DHW' }\n\nmsg1.payload = value;\nreturn msg1;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1440,
        "wires": [
            [
                "354635fe353183fd"
            ]
        ]
    },
    {
        "id": "ea31d112c91c0da9",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "link in 66",
        "links": [
            "aec0cb2b18e02d8b",
            "47cb7500b0321fc1",
            "49ebac0412d87642"
        ],
        "x": 155,
        "y": 1440,
        "wires": [
            [
                "cb7bd45634ebfb62"
            ]
        ]
    },
    {
        "id": "e3b0d458cec07c21",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 3870,
        "y": 2200,
        "wires": [
            [
                "2b065128513763fa"
            ]
        ]
    },
    {
        "id": "349683fa690f91a3",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 3060,
        "y": 2200,
        "wires": [
            [
                "0899698bb588f911"
            ]
        ]
    },
    {
        "id": "534ceb039d7f9812",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link in 70",
        "links": [
            "709cfb96bfb224ce"
        ],
        "x": 3125,
        "y": 1180,
        "wires": [
            [
                "6b9a0352c4460ae5"
            ]
        ]
    },
    {
        "id": "65ea8cc832ad6d50",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 4720,
        "y": 1460,
        "wires": [
            [
                "72bcb750dc791f05"
            ]
        ]
    },
    {
        "id": "0899698bb588f911",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "ffa1f23278378e79",
        "name": "block",
        "func": "//\n// If compressor is off, do not listen to every input and do not show frequent data points on chart.\n\nif (global.get('compressor_frequency', \"file\") == 0) { return null; }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3230,
        "y": 2200,
        "wires": [
            [
                "3578d6b18ceb5727"
            ]
        ]
    },
    {
        "id": "f8cd2e5c468286a5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "FWD",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3215,
        "y": 1440,
        "wires": [
            [
                "f8d7e53aed62cd14",
                "7d582005c7d66f28"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "2d1a9fcd35c50c2a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "FWD",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3215,
        "y": 1500,
        "wires": [
            [
                "6efc9729afea79a2",
                "7d582005c7d66f28"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "5223d146c38458b5",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET7 SetZ2HeatRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2HeatRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2670,
        "y": 1940,
        "wires": []
    },
    {
        "id": "c1086c48c4817504",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET8 SetZ2CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2CoolRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2670,
        "y": 1980,
        "wires": []
    },
    {
        "id": "05fd5911f3c06997",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Z2-HEAT Setpoint",
        "label": "HEAT Setpoint",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 11,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": false,
        "topic": "z2_heat_setpoint",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "-5",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 1770,
        "y": 1940,
        "wires": [
            [
                "635229c11e4fe43d"
            ]
        ]
    },
    {
        "id": "280f1a6cbf825ee2",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "26d9e6cf24507b4f",
        "name": "Line - Zone 2",
        "order": 10,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Zone 2</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1750,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "ab935ff6cc1d4377",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Z2-COOL Setpoint",
        "label": "COOL Setpoint",
        "tooltip": "",
        "group": "26d9e6cf24507b4f",
        "order": 12,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": false,
        "topic": "z2_cool_setpoint",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "5",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 1770,
        "y": 1980,
        "wires": [
            [
                "3abff96efac6ca31"
            ]
        ]
    },
    {
        "id": "9907c88ef470d1c9",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link in 72",
        "links": [
            "ed363518f4ab4108"
        ],
        "x": 1465,
        "y": 1940,
        "wires": [
            [
                "05fd5911f3c06997"
            ]
        ]
    },
    {
        "id": "e137742b346ad008",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link in 73",
        "links": [
            "3b192c4fedabf0f7"
        ],
        "x": 1465,
        "y": 1980,
        "wires": [
            [
                "ab935ff6cc1d4377"
            ]
        ]
    },
    {
        "id": "635229c11e4fe43d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 1940,
        "wires": [
            [
                "5223d146c38458b5"
            ],
            [
                "e6f11948336b5214"
            ]
        ]
    },
    {
        "id": "e6f11948336b5214",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2465,
        "y": 1940,
        "wires": []
    },
    {
        "id": "3abff96efac6ca31",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 1980,
        "wires": [
            [
                "c1086c48c4817504"
            ],
            [
                "d233c56ec779154b"
            ]
        ]
    },
    {
        "id": "d233c56ec779154b",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2465,
        "y": 1980,
        "wires": []
    },
    {
        "id": "6b9a0352c4460ae5",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set topic",
        "func": "msg.topic = 'WoonkamerSP';\nmsg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3175,
        "y": 1180,
        "wires": [
            [
                "1b8f5447c498c1d6",
                "11c68fc0d3095541"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "9a9be8259411b188",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP111 - Z1_Sensor_Settings",
        "topic": "panasonic_heat_pump/main/Z1_Sensor_Settings",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1800,
        "y": 3280,
        "wires": [
            [
                "53f65661269a8316",
                "4b58e0b897c474db"
            ]
        ]
    },
    {
        "id": "53f65661269a8316",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "name": "set.TOP111_Z1_Sensor_Settings",
        "func": "let msg1 = {};\n    msg1.topic = 'SYSTEM';\nlet msg2 = {}; // to Dashboard System HW information\n\nswitch (msg.payload) {\n    case 0:\n        msg1.payload = \"Heatpump zone 1 is set to controle water temperature\";\n        msg2.payload = \"Water temperature\";\n        break;\n    case 1:\n        msg1.payload = \"Heatpump zone 1 is controlled by thermostat (external)\";\n        msg2.payload = \"Thermostat (external)\";\n        break;\n    case 2:\n        msg1.payload = \"Heatpump zone 1 is controlled by thermostat (internal)\";\n        msg2.payload = \"Thermostat (internal)\";\n        break;\n    case 3:\n        msg1.payload = \"Heatpump zone 1 is controlled by roomsensor\";\n        msg2.payload = \"Room sensor\";\n}\nnode.send([msg1, null, msg2]);\n\nvar TOP111_Z1_Sensor_Settings = global.get('TOP111_Z1_Sensor_Settings', \"file\");\nif (msg.payload !== TOP111_Z1_Sensor_Settings) {\n    let msg2 = {};\n    msg2.payload = 'check_top111';\n    global.set('TOP111_Z1_Sensor_Settings', msg.payload, \"file\");\n    node.send([null, msg2, null]);\n}",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 3440,
        "wires": [
            [
                "14bf5034dffa27d5"
            ],
            [
                "8987f5b6cd22b0be"
            ],
            [
                "f26b77294a794d45",
                "502ce1eab4851dc5"
            ]
        ],
        "outputLabels": [
            "to log",
            "trigger calculation",
            ""
        ]
    },
    {
        "id": "ae3b104ec8689934",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "function 88",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3655,
        "y": 100,
        "wires": [
            [
                "8329aedf9204b75d"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "8987f5b6cd22b0be",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "name": "check limits GUI",
        "mode": "link",
        "links": [
            "3f0803a3a230aca2"
        ],
        "x": 2375,
        "y": 3400,
        "wires": []
    },
    {
        "id": "14bf5034dffa27d5",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2410,
        "y": 3440,
        "wires": [
            [
                "a4c25442b9ae52a6"
            ]
        ]
    },
    {
        "id": "f700767045104b75",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3700,
        "y": 160,
        "wires": [
            [
                "9535722dad6d0995"
            ]
        ]
    },
    {
        "id": "d77ae32f90417f20",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP15 - panasonic_heat_pump/main/Heat_Power_Production",
        "topic": "panasonic_heat_pump/main/Heat_Power_Production",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 1560,
        "wires": [
            [
                "e7d39d4073a87d3c"
            ]
        ]
    },
    {
        "id": "6fb3c122147f795e",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP40 - panasonic_heat_pump/main/DHW_Energy_Production",
        "topic": "panasonic_heat_pump/main/DHW_Power_Production",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1680,
        "wires": [
            [
                "14789bda2966231c"
            ]
        ]
    },
    {
        "id": "3841a34afa539254",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 1500,
        "wires": [
            [
                "00dd6c3fd833a5cf"
            ]
        ]
    },
    {
        "id": "b167f12e02c63359",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4040,
        "y": 240,
        "wires": [
            [
                "187c584c21359a3e"
            ]
        ]
    },
    {
        "id": "82a387f8895ef8f6",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "function 91",
        "func": "if (msg.payload == 1) { \n    msg.payload = 'check_heating_mode' ;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3830,
        "y": 240,
        "wires": [
            [
                "b167f12e02c63359"
            ]
        ]
    },
    {
        "id": "f26b77294a794d45",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 21,
        "width": 10,
        "height": 1,
        "name": "Zone 1 sensor",
        "label": "Zone 1 control method / sensor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2400,
        "y": 3280,
        "wires": []
    },
    {
        "id": "989ffc21b6486309",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "name": "TOP112 - Z2_Sensor_Settings",
        "topic": "panasonic_heat_pump/main/Z2_Sensor_Settings",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1800,
        "y": 3320,
        "wires": [
            [
                "3716ea5ed2283e0d"
            ]
        ]
    },
    {
        "id": "3716ea5ed2283e0d",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "name": "set.TOP112_Z1_Sensor_Settings",
        "func": "let msg1 = {};\n    msg1.topic = 'SYSTEM';\nlet msg2 = {}; // to Dashboard System HW information\n\nswitch (msg.payload) {\n    case 0:\n        msg1.payload = \"Heatpump zone 2 is set to controle water temperature\";\n        msg2.payload = \"Water temperature\";\n        break;\n    case 1:\n        msg1.payload = \"Heatpump zone 2 is controlled by thermostat (external)\";\n        msg2.payload = \"Thermostat (external)\";\n        break;\n    case 2:\n        msg1.payload = \"Heatpump zone 2 is controlled by thermostat (internal)\";\n        msg2.payload = \"Thermostat (internal)\";\n        break;\n    case 3:\n        msg1.payload = \"Heatpump zone 2 is controlled by roomsensor\";\n        msg2.payload = \"Room sensor\";\n}\nnode.send([msg1, null, msg2]);\n\nvar TOP112_Z2_Sensor_Settings = global.get('TOP112_Z2_Sensor_Settings', \"file\");\nif (msg.payload !== TOP112_Z2_Sensor_Settings) {\n    let msg2 = {};\n    msg2.payload = 'check_top112';\n    global.set('TOP112_Z2_Sensor_Settings', msg.payload, \"file\");\n    node.send([null, msg2, null]);\n}",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 3500,
        "wires": [
            [
                "cd62b15a689efa7f"
            ],
            [],
            [
                "24d85445d68c3771"
            ]
        ],
        "outputLabels": [
            "to log",
            "trigger calculation",
            ""
        ]
    },
    {
        "id": "24d85445d68c3771",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "1eb6d525c86c4977",
        "order": 23,
        "width": 10,
        "height": 1,
        "name": "Zone 2 sensor",
        "label": "Zone 2 control method / sensor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2400,
        "y": 3320,
        "wires": []
    },
    {
        "id": "cd62b15a689efa7f",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2410,
        "y": 3500,
        "wires": [
            [
                "a4c25442b9ae52a6"
            ]
        ]
    },
    {
        "id": "a4c25442b9ae52a6",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "name": "toLog",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2505,
        "y": 3480,
        "wires": []
    },
    {
        "id": "2009b8f539852f90",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "name": "Startup trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1840,
        "y": 3600,
        "wires": [
            [
                "f6504757ef5384ae"
            ]
        ]
    },
    {
        "id": "f6504757ef5384ae",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "op1": "",
        "op2": "PING",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "99",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2070,
        "y": 3600,
        "wires": [
            [
                "0ea63ebb2e6afe2b"
            ]
        ]
    },
    {
        "id": "502ce1eab4851dc5",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "99",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2410,
        "y": 3540,
        "wires": [
            [
                "f6504757ef5384ae"
            ]
        ]
    },
    {
        "id": "0ea63ebb2e6afe2b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "name": "function 92",
        "func": "if (msg.payload == \"PING\") {\nlet msg1={};\nlet msg2={};\nmsg1.topic = \"SYSTEM\";\n    msg1.payload = \"Warning - The heishamon firmware seems to be lower than 3.1. <br>****************<br>This NodeRed flow will not function correctly because of this. <br> Please update the heishamon firmware to 3.1 or higher.<br>See: https://github.com/Egyras/HeishaMon/tree/master/binaries<br>****************<br>\";\n\nmsg2.payload = \"GUI\";\nmsg2.topic = \"\"\nreturn [msg1,msg2];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3600,
        "wires": [
            [
                "fe400cf04a92e802",
                "a4c25442b9ae52a6"
            ],
            [
                "49f0d472527729fa"
            ]
        ]
    },
    {
        "id": "6a6ab2aa9b6e4348",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ATTENTION",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2070,
        "y": 3640,
        "wires": []
    },
    {
        "id": "48519b6aabf7ba2b",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "name": "Line",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2050,
        "y": 3680,
        "wires": [
            []
        ]
    },
    {
        "id": "28a530c283788d82",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "name": "Select your configuration",
        "label": "",
        "tooltip": "",
        "place": "Select Zone1 control",
        "group": "182f5ffccfef5c11",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Water Temperature",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Thermostat (External)",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Thermostat (Internal)",
                "value": 2,
                "type": "num"
            },
            {
                "label": "RoomSensor",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "TOP111",
        "topicType": "msg",
        "className": "",
        "x": 2110,
        "y": 3760,
        "wires": [
            [
                "55209d6cbc65b2d6"
            ]
        ]
    },
    {
        "id": "e866e9916737011e",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "name": "Text",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<left>\n    <b>WARNING:</b><br>\n    Since the flow has started, no value has been received from mqtt topic TOP111 (Z1_Sensor_Settings) for 10 minutes.<br>\n    Without this value, it is not possible for for the flow to operate correctly. As a result, no HEAT setpoint values will be sent to the heatpump.<br>\n    <br>\n    <b>Firmware:</b><br>\n    The reason for not receiving TOP111 values could be that the HeishaMon firmware is lower than version 3.1.<br>\n    Considder checking and updating your heishamon firmware. Here is a collection of the latest firmware versions: <br>\n    https://github.com/Egyras/HeishaMon/tree/master/binaries <br>\n    <br>\n    <b>Set TOP111 manually:</b><br>\n    In the dropdown you can manually set the required value for TOP111. <br>In the Panasonic wallmounted controller, under [System settings] > [Zone & Control], you have configured the control method. The options are:<br>\n    - Water Temperature<br>\n    - Thermostat (External)<br>\n    - Thermostat (Internal)<br>\n    - Room Sensor)<br>\n<br>\n    The Zone 1 configuration in the wallmounted controller, needs to be selected in the above dropdown.<br><br>\n\n    <br>Note:<br><br>\n    - If you have set this value manually and after some time the TOP111 value IS received from HeishaMon, it will just correct and overwrite the manually set value. <br>\n    - If you do not have firmware 3.1 (or higher) you always need to keep the manually set value in sync with the value set in the wallmounted controller. <br>This should not a major issue, because this setting is most often: \"Set and forget\".<br>\n    - Once you have set this value manually, you should be able to see it under [System] > [Hardware] on the bottom.<br>\n    - Setting this value through the dashboard will NOT send any information to HeishaMon / Panasonic heatpump. It is used only within NodeRed.<br>\n    <br>\n    </left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2050,
        "y": 3840,
        "wires": [
            []
        ]
    },
    {
        "id": "69439e3f71d2d663",
        "type": "ui_template",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "name": "Line",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2050,
        "y": 3800,
        "wires": [
            []
        ]
    },
    {
        "id": "4c329311799e7b15",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "order": 3,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Please select your configuration (Z1_Sensor_Settings)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2200,
        "y": 3720,
        "wires": []
    },
    {
        "id": "11003a42d2f23cde",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "order": 8,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1930,
        "y": 3780,
        "wires": []
    },
    {
        "id": "b8bc80edf59aca76",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "order": 11,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1930,
        "y": 3800,
        "wires": []
    },
    {
        "id": "1c7826b17fddc2d0",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "group": "182f5ffccfef5c11",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "SYSTEM",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2050,
        "y": 3880,
        "wires": [
            [
                "49f0d472527729fa"
            ]
        ]
    },
    {
        "id": "6ccf501c07a5e992",
        "type": "ui_button",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "group": "1eb6d525c86c4977",
        "order": 22,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "SET",
        "tooltip": "Set manually",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "GUI",
        "payloadType": "str",
        "topic": "SET",
        "topicType": "msg",
        "x": 2050,
        "y": 3920,
        "wires": [
            [
                "49f0d472527729fa"
            ]
        ]
    },
    {
        "id": "0d82e5b55b8aa98f",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 3920,
        "wires": [
            [
                "6ccf501c07a5e992"
            ]
        ]
    },
    {
        "id": "fe400cf04a92e802",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 3960,
        "wires": [
            [
                "6ccf501c07a5e992"
            ]
        ]
    },
    {
        "id": "12bfd50eec6db5d2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1930,
        "y": 3760,
        "wires": []
    },
    {
        "id": "37383d58efb94aa2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "order": 7,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1930,
        "y": 3740,
        "wires": []
    },
    {
        "id": "8a6eb442e3de3fb6",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1930,
        "y": 3820,
        "wires": []
    },
    {
        "id": "6d3e2c899d358510",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "182f5ffccfef5c11",
        "order": 6,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1930,
        "y": 3840,
        "wires": []
    },
    {
        "id": "55209d6cbc65b2d6",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "name": "Save variable",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::TOP111_Z1_Sensor_Settings",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 3760,
        "wires": [
            [
                "53f65661269a8316"
            ]
        ]
    },
    {
        "id": "4b58e0b897c474db",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2110,
        "y": 3280,
        "wires": [
            [
                "0d82e5b55b8aa98f"
            ]
        ]
    },
    {
        "id": "49f0d472527729fa",
        "type": "ui_ui_control",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "events": "change",
        "x": 2240,
        "y": 3900,
        "wires": [
            []
        ]
    },
    {
        "id": "bb0d73c45b82afab",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "GUI",
        "payloadType": "str",
        "x": 1710,
        "y": 3780,
        "wires": [
            [
                "49f0d472527729fa"
            ]
        ]
    },
    {
        "id": "cc930ab5b67c257e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "Room",
        "label": "Difference",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3570,
        "y": 840,
        "wires": []
    },
    {
        "id": "a2afbd9244cceed5",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "Water",
        "label": "Correction",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3690,
        "y": 840,
        "wires": []
    },
    {
        "id": "368bd104ea1ba4e6",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t1_correction",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 10,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t1_correction",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "-0.2",
        "step": "0.1",
        "className": "",
        "x": 3580,
        "y": 880,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "922a3b1879d1a5ec",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t2_correction",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 12,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t2_correction",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "-0.2",
        "step": "0.1",
        "className": "",
        "x": 3580,
        "y": 920,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "ae00df3cd05e6b06",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t3_correction",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 14,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t3_correction",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "-0.1",
        "step": "0.1",
        "className": "",
        "x": 3580,
        "y": 960,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "470ba61639a6ba2d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t4_correction",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 21,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t4_correction",
        "topicType": "str",
        "format": "+{{value}}",
        "min": "0.1",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 3580,
        "y": 1080,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "1b0dd0c926383896",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t5_correction",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 23,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t5_correction",
        "topicType": "str",
        "format": "+{{value}}",
        "min": "0.2",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 3580,
        "y": 1120,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "ce9db55d9de18296",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "z1.t6_correction",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 25,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "z1.t6_correction",
        "topicType": "str",
        "format": "+{{value}}",
        "min": "0.3",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3580,
        "y": 1160,
        "wires": [
            [
                "7d582005c7d66f28"
            ]
        ]
    },
    {
        "id": "cd39dd6db4d4cbf2",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "function 94",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1905,
        "y": 920,
        "wires": [
            [
                "092a9db0d9b923b3"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "3f6602042d2dc015",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC Correction",
        "mode": "link",
        "links": [],
        "x": 3945,
        "y": 1460,
        "wires": []
    },
    {
        "id": "7a357aa51ea65c2f",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 2050,
        "y": 660,
        "wires": [
            [
                "6c56f45eddcf6890"
            ]
        ]
    },
    {
        "id": "e5f28058481d791a",
        "type": "debug",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "debug 265",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2690,
        "y": 1180,
        "wires": []
    },
    {
        "id": "5a3e1810b8f2135a",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "link in 77",
        "links": [
            "56d4bfa341d3eded"
        ],
        "x": 2355,
        "y": 900,
        "wires": [
            [
                "7c74eef7b504ee67"
            ]
        ]
    },
    {
        "id": "e0c5ca5db0a7df5b",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "link out 96",
        "mode": "link",
        "links": [
            "6bd234b67b830924"
        ],
        "x": 3965,
        "y": 100,
        "wires": [],
        "icon": "node-red/leveldb.svg"
    },
    {
        "id": "54724886189b074f",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NR - RTC state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 860,
        "wires": [
            [
                "b44fceec58293e64"
            ]
        ]
    },
    {
        "id": "4ffcf5c7dbf32067",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "changetopic",
        "func": "if (msg.topic == 'z1.t1_limit') {msg.topic = 'NR - RTC limit 1';}\nif (msg.topic == 'z1.t2_limit') {msg.topic = 'NR - RTC limit 2';}\nif (msg.topic == 'z1.t3_limit') {msg.topic = 'NR - RTC limit 3';}\nif (msg.topic == 'z1.t4_limit') {msg.topic = 'NR - RTC limit 4';}\nif (msg.topic == 'z1.t5_limit') {msg.topic = 'NR - RTC limit 5';}\nif (msg.topic == 'z1.t6_limit') {msg.topic = 'NR - RTC limit 6';}\nif (msg.topic == 'z1.t7_limit') {msg.topic = 'NR - RTC limit 7';}\n\nif (msg.topic == 'z1.t1_correction') { msg.topic = 'NR - RTC correction 1'; }\nif (msg.topic == 'z1.t2_correction') { msg.topic = 'NR - RTC correction 2'; }\nif (msg.topic == 'z1.t3_correction') { msg.topic = 'NR - RTC correction 3'; }\nif (msg.topic == 'z1.t4_correction') { msg.topic = 'NR - RTC correction 4'; }\nif (msg.topic == 'z1.t5_correction') { msg.topic = 'NR - RTC correction 5'; }\nif (msg.topic == 'z1.t6_correction') { msg.topic = 'NR - RTC correction 6'; }\nif (msg.topic == 'z1.t7_correction_value') { msg.topic = 'NR - RTC correction 7'; }\n\n\n\nif (msg.topic == 'automation_power_state') { msg.topic = 'NR - RTC automation (Power) state'; }\nif (msg.topic == 'automation_OM_state') { msg.topic = 'NR - RTC automation (Operating Mode) state'; }\n\nif (msg.topic == 'automation_on_limit') { msg.topic = 'NR - RTC automation trigger limit'; }\nif (msg.topic == 'automation_off_limit') { msg.topic = 'NR - RTC automation revert limit'; }\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4130,
        "y": 940,
        "wires": [
            [
                "b44fceec58293e64"
            ]
        ]
    },
    {
        "id": "a7d4c9f19c358e4f",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "link out 99",
        "mode": "link",
        "links": [
            "6bd234b67b830924"
        ],
        "x": 4325,
        "y": 1780,
        "wires": [],
        "icon": "node-red/leveldb.svg"
    },
    {
        "id": "adc15a17d080d791",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "4d3178806b1f0577",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NR - SS state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4110,
        "y": 1780,
        "wires": [
            [
                "a7d4c9f19c358e4f"
            ]
        ]
    },
    {
        "id": "0bf8dbceb8cf0c93",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "function 98",
        "func": "if (msg.topic == 'Correction_0_WAR_on_off') { msg.topic = 'NR - WAR state'; return msg; }\n\nif (msg.topic == 'war_ot1') { msg.topic = 'NR - WAR Outside temperature 1'; return msg; }\nif (msg.topic == 'war_ot2') { msg.topic = 'NR - WAR Outside temperature 2'; return msg; }\nif (msg.topic == 'war_ot3') { msg.topic = 'NR - WAR Outside temperature 3'; return msg; }\nif (msg.topic == 'war_wt1') { msg.topic = 'NR - WAR water temperature 1'; return msg; }\nif (msg.topic == 'war_wt2') { msg.topic = 'NR - WAR water temperature 2'; return msg; }\nif (msg.topic == 'war_wt3') { msg.topic = 'NR - WAR water temperature 3'; return msg; }\n\nif (msg.topic == 'SP_DIRECT_virt') { msg.topic = 'NR - WAR manual water temperature / shift'; return msg; }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 100,
        "wires": [
            [
                "e0c5ca5db0a7df5b"
            ]
        ]
    },
    {
        "id": "b15c419913e8770a",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NR - RTC Setpoint (Room)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4130,
        "y": 900,
        "wires": [
            [
                "b44fceec58293e64"
            ]
        ]
    },
    {
        "id": "b44fceec58293e64",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "link out 100",
        "mode": "link",
        "links": [
            "6bd234b67b830924"
        ],
        "x": 4245,
        "y": 900,
        "wires": [],
        "icon": "node-red/leveldb.svg"
    },
    {
        "id": "9fda0aa836fde5a4",
        "type": "trigger",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "15",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 3850,
        "y": 60,
        "wires": [
            [
                "0bf8dbceb8cf0c93"
            ]
        ]
    },
    {
        "id": "aa53a0c487c666f0",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP15 - panasonic_heat_pump/main/Heat_Power_Production_Extra",
        "topic": "panasonic_heat_pump/main/Heat_Power_Production_Extra",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 1560,
        "wires": [
            [
                "e7d39d4073a87d3c"
            ]
        ]
    },
    {
        "id": "e7d39d4073a87d3c",
        "type": "switch",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 1540,
        "wires": [
            [
                "4b0bb57d44bd8bb1"
            ]
        ]
    },
    {
        "id": "bed822f215bd3ddf",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP40 - panasonic_heat_pump/main/DHW_Power_Production_Extra",
        "topic": "panasonic_heat_pump/main/DHW_Power_Production_Extra",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 1680,
        "wires": [
            [
                "14789bda2966231c"
            ]
        ]
    },
    {
        "id": "14789bda2966231c",
        "type": "switch",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 1700,
        "wires": [
            [
                "b4d652a4c0313e8a"
            ]
        ]
    },
    {
        "id": "a938de76db0b71f6",
        "type": "tab",
        "label": "WP Control",
        "disabled": false,
        "info": "\n---\n\n"
    },
    {
        "id": "0077cf76d14c5757",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "2c893b32851ad2a2",
            "fa82488bbb78cd7c",
            "9ac43b3e57349093",
            "121250d0adaabb74",
            "bec0abeb65096b50",
            "16a78ece414b3c3f",
            "d812dc07d5eb627a",
            "2cbf5dc56d038900",
            "8f95cf0d80fef38e",
            "ea494b908a0574c7",
            "cbded61fe1f8bfa6",
            "9dad0ebe8e5b9c2a",
            "820cd8755edee724",
            "df752804bad7d4c9",
            "846a789dca74329d",
            "aa66f523450fd337",
            "6c127111459a7668",
            "3614cf0c48d0f160",
            "9285cfa754ee552e",
            "a861b75804a0978a",
            "a0d8b4706f8d61b1",
            "3b23831ccc3641c6",
            "b131edf180140fb6",
            "4ff74e2b48b1d597",
            "905527b22aae9dc8",
            "35ca9241fc9fc7a1",
            "12a26bbb7c8070d7",
            "aec0cb2b18e02d8b",
            "0771fea18659deea",
            "8ed91c4260d9b758",
            "7ce3c0d525800846",
            "609ce750edb0db2b",
            "8f6938d08a85ad26",
            "75ecf6650a5109d6",
            "a5dd53dd3d0d1b7f",
            "dd45b1caa253346b",
            "d54ac3b979428b64",
            "52945322ab63b965",
            "f34333d0f62bbd2d",
            "d69bd0a7c3dd5d4f",
            "bb8e93b0650250f5",
            "39aabf25524d867e",
            "3ec15c8e37ccda1b",
            "b9adf06497b1e231",
            "c57a81d1dee5b8a9",
            "62d663629483143e",
            "e5fb067144c27e1b",
            "ff3dd227527b76c3",
            "9de1bde370b68508",
            "8206cc922dc8874d",
            "170936d914847ac0",
            "8572da168a9397e1",
            "76803a7773afbef6",
            "3097c4184ba03f0b",
            "158cd656457b884a",
            "10ca1d93fdd1afe2",
            "a3180920b08e8108",
            "b9da2620c239be36",
            "5053e21b4c187e48",
            "2063c96f1ba07327",
            "5f7b921ab9a4ce7c",
            "61ed1c56d1ec2c21",
            "7a30c0f0dbf50e03",
            "72ecd08129670f6d",
            "7ae9d386f40efb4d",
            "d613171223cb64d2",
            "303e9746fe17030f",
            "f1055c6bf5c95540",
            "da5b21d833a80e29",
            "ab4c54e8c1061535",
            "45c90f37a7b32d68",
            "ecb3b52a28d4771f",
            "2bd2d081e8cd67e2",
            "70b76184cb3f0700",
            "ed363518f4ab4108",
            "3b192c4fedabf0f7",
            "a5eb2e2427c1608a",
            "10f3cc54edfb37d1",
            "25633efa4485f375",
            "c1c8d438953b1c8b",
            "8dc0ca4b26915b2a",
            "7430c37f5c30419b",
            "4f9a7ab2aa7cddaf",
            "64ae46079504e47e"
        ],
        "x": 114,
        "y": 1359,
        "w": 1422,
        "h": 1582
    },
    {
        "id": "5a496e1f1ea93a38",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "REQUIRED INPUTS FOR FUNCTIONS",
        "style": {
            "fill": "#ffffbf",
            "label": true,
            "stroke": "#ff0000"
        },
        "nodes": [
            "a22898dfdc4ff0ca",
            "6051d06bc75eda72",
            "d6a9c376dde9c43f",
            "df9c3a6c0a51be9b",
            "f0b20c8165a68430",
            "ea89c213947bdf26",
            "a8d51c8773f8f17f",
            "0fb10778eba34911",
            "2df41704fe34f586",
            "6c6c2315d73dcb16",
            "9f6d1c245559171f"
        ],
        "x": 114,
        "y": 39,
        "w": 1052,
        "h": 302
    },
    {
        "id": "cd2050a861736ec5",
        "type": "group",
        "z": "a938de76db0b71f6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ba4a12897a805cee",
            "3472c99aef20f07f",
            "4f8c3c7d06c1b19a",
            "eda4721e720d1975",
            "8501242129d89e2c",
            "e8684c407d602e87",
            "f70b59196295efc0",
            "690250e7cb51c576",
            "695ce56812fda3d2",
            "12e43571a8c16fa2",
            "f4fadebd69120ccb",
            "a79fac04465c243e",
            "01744f1093a2fd51",
            "ab34ebcc109b74de",
            "10b4e15b0f3199ad",
            "283dd6b0185b554b",
            "cb2c4d61eeec2c6f",
            "1281e2b1451c301f",
            "e164eaa22e0fa1dc",
            "a25d1f5d91c84a33",
            "f9edb4875d3f2c5b",
            "9c4e9ed4c3ac1779",
            "4c1c4526944e820e",
            "c32298a87a338b1d",
            "5e35dee1374d6829",
            "78ddc73a94ec89be",
            "e11f7d8caf20dbba",
            "3fb7221a7218435a",
            "460a1a83313cfcc5",
            "8121e5bfa638e9ab",
            "58a904f891a8e2cc",
            "7caff8b1418d65da",
            "5f758eb9af24eb35",
            "bfcbe2fb120f457c",
            "0e3197d36afc45dc",
            "ca1f0fdf0dd05c89",
            "c5cba27eac8a70a2",
            "2c34d9f3299bef00",
            "fd08994eed1621be",
            "cd3f44853ed1a6cd",
            "a0d48945187b9bf6",
            "5023bec7ba5973f3",
            "ad6a84d6161eab48",
            "d7fdd42d981a2d7d",
            "a82dac1b05afcaac",
            "a815d38c5137d852",
            "a0f14e8ff8b7b008",
            "3bab99eab669bd21",
            "182df2f14a9ca82f",
            "ce9434fc05a5b849",
            "bf5c0eefd9f68f35",
            "d90d8243969aecef",
            "8f0e209ac14bdb9a",
            "0b10bc17b24896b7",
            "6c685782864f1787",
            "a1e757cb1d79e3f9",
            "d8c3356483134cf9",
            "d7e9f20e80d48fa1",
            "64955157496ed92f",
            "a329c0a372402264"
        ],
        "x": 114,
        "y": 2959,
        "w": 1182,
        "h": 1122
    },
    {
        "id": "94f57429e16c8e82",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "COP calculation function",
        "style": {
            "label": true
        },
        "nodes": [
            "f4e55b938e645737",
            "43b60b667e5e5610",
            "306b69356454f3ff",
            "5787c91b303f2538"
        ],
        "x": 1604,
        "y": 1539,
        "w": 502,
        "h": 122
    },
    {
        "id": "b37318d1b7f66e33",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "NightReduction logic",
        "style": {
            "label": true
        },
        "nodes": [
            "5a629acf35a11cc1",
            "3151f56b9d086c84",
            "e3c1faa5a1fb80c6",
            "3f05f1c6e437d5d3",
            "2b04b7dd5ea852f2",
            "f0b7868c48887de4",
            "b1dbfa8badec14e4",
            "4f05df9205955fba",
            "a852d7a03c2a4cb0",
            "038f578f8cc12163",
            "64489162c0113379",
            "d283d9a5d5181aed",
            "3a9f53d1ad6ec693",
            "0884ccad88528175",
            "c77c4767a9dd84f4",
            "6815e3004fa8b341",
            "db81c5d226a5dab3",
            "afb8bfd949251c6c",
            "e8b855966cfa18d3",
            "849bb02e7d0f4dfa",
            "9fd7064be2551caa"
        ],
        "x": 114,
        "y": 4119,
        "w": 1352,
        "h": 322
    },
    {
        "id": "7987a450598985bb",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "Panasonic internal WAR > Node Red WAR",
        "style": {
            "label": true
        },
        "nodes": [
            "1055c816d0b21553",
            "4f0447af5e532d6f",
            "91e1151b60bc9a35",
            "dc036a2e660127ec",
            "5e56ba56cb2fd474",
            "246757b0d4390b0d",
            "87bd21b4647187d2",
            "123d7b6352639620",
            "b46cfcf8ce6d8f91",
            "ab60719365f6bde0",
            "8944d416f44e4183",
            "fde418209aab6a87",
            "9005e7a87f86a06e",
            "dfd98e02f46447fb",
            "c0a54684ef46f711",
            "07bfc2f9f00870d7",
            "3adf2738c40e2c50"
        ],
        "x": 94,
        "y": 4539,
        "w": 1122,
        "h": 342
    },
    {
        "id": "1d8b21349d38bc85",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "WAR import/export",
        "style": {
            "label": true
        },
        "nodes": [
            "3a027c0cd9f8a957",
            "1acb7989b3df5970",
            "fa6cbe3250ca3abf",
            "c5bf8e25eda73442",
            "c4d5d436d1a4b0e4",
            "f70eae138246bae0",
            "4af0ddb4ff3ccf32",
            "418e761f03c6c9cd",
            "88e74ca7c5982d24",
            "b1bc9035edfd596b",
            "ae97f18776a1de28"
        ],
        "x": 1254,
        "y": 4479,
        "w": 1112,
        "h": 162
    },
    {
        "id": "d2b7e1d6e85a96cf",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "FUNCTIONS",
        "style": {
            "fill": "#ffbfbf",
            "fill-opacity": "0.75",
            "label": true
        },
        "nodes": [
            "d593fd3f7b87de1c",
            "90ec77dc04772b5c",
            "3c0adb2ef465094a",
            "d44ff20770c3e9a1",
            "3f0803a3a230aca2",
            "899964bbc5334847",
            "126583bf986bb2c7",
            "92b75262811f09f9",
            "44d83d4e58d63689",
            "add6fa4d403dd143",
            "8b1072427fdbc1e0",
            "e340492700d3f5b3",
            "16054e8334890ad8",
            "d16f38ef74db786a",
            "18fd7ac120089042",
            "93404b62f7fb0fb2",
            "34cc66e23b5eec55",
            "663fd79ce5a1610d",
            "c54efadb07816cb9",
            "e9d9dc531d3b166d",
            "4369249a4c68c277",
            "51526ab18642b30b",
            "346a3528a7770803",
            "fab44b5501eca10e",
            "fd481458ee82463b",
            "c477f38740192ea9",
            "7bd31985b9223517",
            "cc0bfd5240e5cd1c",
            "50d7d63eec1f72e1",
            "eca1e570e844713e",
            "36856525108ec859",
            "c3a9e17b02222cee",
            "bedbded591fa9076",
            "d4cd561c0ac4473e",
            "4051d3cb1ad86dbd",
            "0ccf5d93deef2e68",
            "4c81e32b9d30b212",
            "549c557827b37714",
            "0d996033de2ed84e",
            "2ade66982bca360c",
            "c5506b5fe3e4d571",
            "4223b24f5dc06d8e",
            "987d38642eaa3c4c",
            "7c6f02c851467bc0",
            "0f365a79d7e2857d",
            "d53e66c37991fa8e",
            "1cbf3f3272baec48",
            "1a9b736187a463f7",
            "148fdf6802233c77",
            "398d29ed6f37b424",
            "2695bccfb69a52d5",
            "acd2fcbdbfe464b3",
            "079d3ecc98b9f2d0",
            "bc219d3bc7ec043e",
            "e9b2408568d2ec7a",
            "47f8da37ddbb8a39",
            "dfca926433d18402",
            "3fc220e85feb9ec9",
            "f2d08992a6b90758",
            "61beb903ec0e5a74",
            "8716fd26da93059d",
            "f27cfc9c262f0b0a",
            "f67d5dfc15a9a469",
            "71a546a3b074148f",
            "6c6c36d2fc35901c",
            "cb987aa12172f46f",
            "e4932a30dba95577",
            "9ece6a95a9a5c846",
            "2df56a3ae0782bfd",
            "41a9c3500d63fb7e",
            "76a161da01cebe9c",
            "c24406bef1e6355d",
            "437a28325613c061",
            "56ae2f8cd74e99c9",
            "ab62e7cec773d86d",
            "37db709069bc2dc2",
            "2ab69331460bb678",
            "37c42afd25bc6594",
            "bf9d1ac2d5e48dd5",
            "5cc3ee0f614e6a06",
            "ab80bbcbde14cd64",
            "4f51ea978caaef1a",
            "e09487eff90c64b3",
            "6766b92901602397",
            "df044144e4292bd6"
        ],
        "x": 114,
        "y": 379,
        "w": 1832,
        "h": 942
    },
    {
        "id": "cbc655a89768996f",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "Pumpspeed Chart",
        "style": {
            "label": true,
            "fill": "#bfc7d7"
        },
        "nodes": [
            "3d8e357b01de57ff",
            "05d2363eb8b5cbac",
            "0b0a84c6b2ac5946",
            "95d38a3c0dc7bfef",
            "9bbcf43a99bb4686",
            "de37787a803f74af",
            "bf06baa7b5212f0d",
            "02337b972681a94a",
            "f2ccd5d9f4518044",
            "5710a4a40d36cae6",
            "cc5d732b8a28779d",
            "5e82e401e9c3083f",
            "fab9eab71225fbf7",
            "21abbbb132d72856",
            "dd7484dc5380d24f",
            "6410b5f879c6a3ec",
            "dd1a38c2ccf4f47e",
            "9b7a14cd7f7c2870"
        ],
        "x": 2504,
        "y": 1399,
        "w": 1182,
        "h": 202
    },
    {
        "id": "8464ca0ddfa2e5de",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "Pumpspeed Function",
        "style": {
            "fill": "#bfc7d7",
            "label": true
        },
        "nodes": [
            "879b071f7e013653",
            "73a3b137b4661912",
            "c2c09dbebda13484",
            "c91855502498f443",
            "9dfdd1d4ae5594b1",
            "17069d9228f8f72d",
            "ec44ca9b8998e3a4",
            "dc6b3a3d39fd9593",
            "ee5c4cc82116fb3a",
            "0a5194a2ae53226f",
            "62f703fc3bef4b9d",
            "07adfdd98bc7ec6f",
            "dd27a17d3914b050",
            "7d78560a43c952f3",
            "c613a0a91992893e",
            "b1e622419da850aa",
            "3bb1ed005c52a0fa",
            "dee4758644beb652",
            "ad467c3d58db0284",
            "dbb3202d2fc26245",
            "3df02652ea9f1de4",
            "0fa4a814492d2259",
            "ea04ae839e1d6b46",
            "dc99be6d3a53311d",
            "7708ef15cae3ed59",
            "7e0e6f1fd86c6d31",
            "b23ef1030db7e252",
            "b1a202d9c6da4df3",
            "ba33ab6d58b9fb8d",
            "4e3b27ed573b6399",
            "83481f0a61aed9b2",
            "bf8ce4cf96b236c2",
            "fb9db2149be4a5a9",
            "677c69e23dd934ce",
            "2cd7aab6fa9d94c2",
            "94fb2ca53932250b",
            "925216cb64196829",
            "6689f388c8028972"
        ],
        "x": 2494,
        "y": 919,
        "w": 1342,
        "h": 442
    },
    {
        "id": "116d861b2bd34e3a",
        "type": "group",
        "z": "a938de76db0b71f6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f50b182247afbf12",
            "513f1edff2205368",
            "82de6121db22b74a",
            "1cf36419e733671a",
            "0d915486f4ef0946",
            "b9e80ad80744b62d",
            "fdc7a953bf5abbc3",
            "d3798ceb0669cafe",
            "b9cc5f94e160078d",
            "4e973bdc6d2bfa33",
            "223d6f652b0e0dc4",
            "92ebec7316b4f003",
            "480251095571d632",
            "9e780462d79e7157",
            "393897917e4a8106",
            "40ad0556b1f55896",
            "c0c20e2e3caa81e0",
            "c860a4238803ed02",
            "12c84fbd61e2d1c2",
            "f7bdc92c0ed8e3b9",
            "8f0fdd05619b6080",
            "8effd9295d55099f",
            "2ef668070522b01d",
            "a8be0fdf50f25150",
            "376d42685ccec772",
            "ce5a606d14d7a2fe",
            "5e6950dffab43add",
            "319d7b2735937f1a",
            "9bc9b1a547ea7ef6",
            "ed7426a6f03b7d44",
            "706c5dcd5d6c136b"
        ],
        "x": 2494,
        "y": 1633,
        "w": 1292,
        "h": 628
    },
    {
        "id": "992121a08b66faa3",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "COOL function",
        "style": {
            "label": true
        },
        "nodes": [
            "e248409fb553d16c",
            "914dbce5e778229e",
            "5b8f3786bc1abbb1",
            "2649d773ad06b50d",
            "7c9af6a20115c38e",
            "dee73ffd96da5786",
            "13909c8cd33f26ef",
            "1cf37ff9fa4fc42b",
            "6c93a57f910e03c2",
            "f0ae9eea42cf90ea",
            "25041e53f134e3fb",
            "158b8983b1dd0aa9",
            "25323c5d6bbdbebe",
            "f5ccbd22c1c9fe22",
            "6fc958da73fbdf09",
            "4dfb2312d5cb06d5",
            "1d63998e541e4d5a",
            "dea135ecc9872411",
            "f13532d971be853e",
            "b665e9aa13d44f8e",
            "6a50ef63d9d35647",
            "0e8ca4bb561b59ed",
            "6b2644c3a510f50f",
            "b43820fd5a21f4e7",
            "71a59b9661071adc",
            "21b21c01326b2eb3",
            "25691ccde88f5530",
            "07ba09a16be50433",
            "78e42bcd53ea8133",
            "57bd8e997e9659ed",
            "b6ad3dc97e3bae93",
            "069a1e1137dff3c5",
            "31e6f728a58af434",
            "8446efaaa0db1b07",
            "af6c986b9bd32b5d",
            "de420200e2112c80",
            "bc259ef4511cfc49",
            "a0b2a8ca1de90c30",
            "967eb9e23a816211",
            "7fd8e4be18710797",
            "ab9d088e21062ff8",
            "2bb5988706fb572a",
            "37a369fd9ad03085",
            "0df0e84326dbeec7",
            "cdd89d5c10c71407",
            "b16ab0b5c23a9ca9",
            "793e8c5bacadc28c",
            "b08c0859f26b8233",
            "2cc53aa4981b4a7d",
            "c49ef874bd1fee9d",
            "f91c28a6cf174863",
            "c631c7c6b5043e9b",
            "941c0631859a870e",
            "5d82a01035854d15",
            "e6d062c49d66078a",
            "3072102c9a588df4",
            "4f5325f35beb918b"
        ],
        "x": 2494,
        "y": 79,
        "w": 1672,
        "h": 782
    },
    {
        "id": "f7bdc92c0ed8e3b9",
        "type": "group",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "DHW Tank temperature logic",
        "style": {
            "label": true
        },
        "nodes": [
            "64021d928c59c5cd",
            "017e95185010581b",
            "f651bed25831c6f4",
            "c8b5382d8d981e31",
            "0970bfa5a14caf6b",
            "399bbbd616d3dc55",
            "3b56718868c66537"
        ],
        "x": 2534,
        "y": 1659,
        "w": 692,
        "h": 162
    },
    {
        "id": "b08c0859f26b8233",
        "type": "group",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "4a7112414493107c"
        ],
        "x": 3574,
        "y": 519,
        "w": 212,
        "h": 82
    },
    {
        "id": "ed7426a6f03b7d44",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "function 96",
        "func": "if (msg.payload == 0) {\n    msg.topic = 'GUI_DHW_automation_state';\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "2c893b32851ad2a2",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP0 - panasonic_heat_pump/main/Heatpump_State",
        "topic": "panasonic_heat_pump/main/Heatpump_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 1520,
        "wires": [
            [
                "2063c96f1ba07327"
            ]
        ]
    },
    {
        "id": "fa82488bbb78cd7c",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP1 - panasonic_heat_pump/main/Pump_Flow",
        "topic": "panasonic_heat_pump/main/Pump_Flow",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 1580,
        "wires": [
            [
                "ea494b908a0574c7"
            ]
        ]
    },
    {
        "id": "9ac43b3e57349093",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP2 - panasonic_heat_pump/main/Force_DHW_State",
        "topic": "panasonic_heat_pump/main/Force_DHW_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 1640,
        "wires": [
            [
                "df752804bad7d4c9"
            ]
        ]
    },
    {
        "id": "121250d0adaabb74",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP5 - panasonic_heat_pump/main/Main_Inlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Inlet_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 1760,
        "wires": [
            [
                "d613171223cb64d2"
            ]
        ]
    },
    {
        "id": "bec0abeb65096b50",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP6 - panasonic_heat_pump/main/Main_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Outlet_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 1820,
        "wires": [
            [
                "303e9746fe17030f"
            ]
        ]
    },
    {
        "id": "16a78ece414b3c3f",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP4 - panasonic_heat_pump/main/Operating_Mode_State",
        "topic": "panasonic_heat_pump/main/Operating_Mode_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 440,
        "y": 1700,
        "wires": [
            [
                "4ff74e2b48b1d597",
                "846a789dca74329d"
            ]
        ]
    },
    {
        "id": "d812dc07d5eb627a",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP20 - panasonic_heat_pump/main/ThreeWay_Valve_State",
        "topic": "panasonic_heat_pump/main/ThreeWay_Valve_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 440,
        "y": 2000,
        "wires": [
            [
                "6c127111459a7668"
            ]
        ]
    },
    {
        "id": "2cbf5dc56d038900",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP70 - panasonic_heat_pump/main/Sterilization_Temp",
        "topic": "panasonic_heat_pump/main/Sterilization_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 2180,
        "wires": [
            [
                "a861b75804a0978a"
            ]
        ]
    },
    {
        "id": "8f95cf0d80fef38e",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP69 - panasonic_heat_pump/main/Sterilization_State",
        "topic": "panasonic_heat_pump/main/Sterilization_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 2120,
        "wires": [
            [
                "9285cfa754ee552e"
            ]
        ]
    },
    {
        "id": "62d663629483143e",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Read values from Heishamon and put them in global variables and link out",
        "info": "",
        "x": 480,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ea494b908a0574c7",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 1580,
        "wires": [
            [
                "820cd8755edee724"
            ]
        ]
    },
    {
        "id": "cbded61fe1f8bfa6",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 2060,
        "wires": [
            [
                "3614cf0c48d0f160"
            ]
        ]
    },
    {
        "id": "9dad0ebe8e5b9c2a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP0_Heatpump_State",
        "func": "var VirtualState = global.get('VirtualState');\n\nvar TOP0_Heatpump_State = global.get('TOP0_Heatpump_State',\"file\");\n\n\nif (TOP0_Heatpump_State != msg.payload)\n{\n    msg.topic = 'TOP0_Heatpump_State';\n    global.set('TOP0_Heatpump_State',msg.payload,\"file\");\n\n    let msg99={};\n    msg99.topic = '[Debug]';\n    msg99.payload = 'Real TOP0_Heatpump_State = ' + msg.payload + ', VirtualState = ' + VirtualState;\n    \n    //return msg99;           <----for debugging to log\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1440,
        "wires": [
            [
                "5f7b921ab9a4ce7c"
            ]
        ],
        "outputLabels": [
            "original payload from mqtt topic"
        ]
    },
    {
        "id": "820cd8755edee724",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP1_Pump_Flow",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP1_Pump_Flow';\nglobal.set(\"TOP1_Pump_Flow\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1580,
        "wires": [
            [
                "3b23831ccc3641c6"
            ]
        ]
    },
    {
        "id": "df752804bad7d4c9",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP2_Force_DHW_State",
        "func": "var current = global.get(\"TOP2_Force_DHW_State\");\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP2_Force_DHW_State';\n\nif (current != msg.payload || current === undefined)\n{\n    global.set(\"TOP2_Force_DHW_State\",msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1640,
        "wires": [
            [
                "b131edf180140fb6"
            ]
        ]
    },
    {
        "id": "846a789dca74329d",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP4_Operating_Mode_State",
        "func": "if (msg.payload == global.get('TOP4_Operating_Mode_State',\"file\")) {return null;}           // only send if needed\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP4_Operating_Mode_State';\n\nglobal.set(\"TOP4_Operating_Mode_State\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1700,
        "wires": [
            [
                "7430c37f5c30419b",
                "d15519b2b7caae11"
            ]
        ]
    },
    {
        "id": "aa66f523450fd337",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP27_Z1_Heat_Request_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP27_Z1_Heat_Request_Temp';\nglobal.set(\"TOP27_Z1_Heat_Request_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1940,
        "wires": [
            [
                "12a26bbb7c8070d7"
            ]
        ]
    },
    {
        "id": "6c127111459a7668",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP20_ThreeWay_Valve_State",
        "func": "var current_value = global.get(\"TOP20_ThreeWay_Valve_State\");\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (current_value == msg.payload) { return null; }\n\nmsg.topic = 'TOP20_ThreeWay_Valve_State';\nglobal.set(\"TOP20_ThreeWay_Valve_State\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2000,
        "wires": [
            [
                "aec0cb2b18e02d8b",
                "d15519b2b7caae11"
            ]
        ]
    },
    {
        "id": "3614cf0c48d0f160",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP18_Quiet_Mode_Level",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP18_Quiet_Mode_Level';\nglobal.set(\"TOP18_Quiet_Mode_Level\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2060,
        "wires": [
            [
                "0771fea18659deea"
            ]
        ]
    },
    {
        "id": "9285cfa754ee552e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP69_Sterilization_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload == global.get(\"TOP69_Sterilization_State\",\"file\")) {\n    return null;\n}\n\nmsg.topic = 'TOP69_Sterilization_State';\n\nglobal.set(\"TOP69_Sterilization_State\",msg.payload,\"file\");\n/*\nif (msg.payload == 0){\nglobal.set('Sterilization_active',msg.payload,\"file\");\n}\n*/\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2120,
        "wires": [
            [
                "8ed91c4260d9b758"
            ]
        ]
    },
    {
        "id": "a861b75804a0978a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP70_Sterilization_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP70_Sterilization_Temp';\nglobal.set(\"TOP70_Sterilization_Temp\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2180,
        "wires": [
            [
                "7ce3c0d525800846"
            ]
        ]
    },
    {
        "id": "a0d8b4706f8d61b1",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "to Shutdown detection",
        "mode": "link",
        "links": [
            "e5ee81fbd045b5ef"
        ],
        "x": 1495,
        "y": 1520,
        "wires": []
    },
    {
        "id": "3b23831ccc3641c6",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Pump_Flow",
        "links": [
            "43b60b667e5e5610",
            "5d54922367195a62",
            "5eef2d3a1816ae18",
            "02337b972681a94a"
        ],
        "x": 1495,
        "y": 1580,
        "wires": []
    },
    {
        "id": "b131edf180140fb6",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP2_Force_DHW_State",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "14d2ae6b4af7e45e",
            "6ae86dc05a6a3c4a",
            "e33b5a24cd58c8d2"
        ],
        "x": 1495,
        "y": 1640,
        "wires": []
    },
    {
        "id": "4ff74e2b48b1d597",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP4_Operating_Mode_State",
        "mode": "link",
        "links": [
            "702993e29cd93413",
            "83481f0a61aed9b2",
            "b51f6522ce8b3103",
            "476134da722ea175"
        ],
        "x": 1495,
        "y": 1700,
        "wires": []
    },
    {
        "id": "905527b22aae9dc8",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Main_Inlet_Temp",
        "links": [
            "1d97c2a9ed08db30",
            "43b60b667e5e5610",
            "5eef2d3a1816ae18",
            "126583bf986bb2c7",
            "03627deedb0f6615"
        ],
        "x": 1495,
        "y": 1760,
        "wires": []
    },
    {
        "id": "35ca9241fc9fc7a1",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Main_Outlet_Temp",
        "links": [
            "43b60b667e5e5610",
            "5eef2d3a1816ae18",
            "9dc0d35330d31725",
            "18262dc9129cb370",
            "126583bf986bb2c7",
            "cc0bb6c15a44abd2"
        ],
        "x": 1495,
        "y": 1820,
        "wires": []
    },
    {
        "id": "12a26bbb7c8070d7",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP27_Z1_Heat_Request_Temp",
        "mode": "link",
        "links": [],
        "x": 1495,
        "y": 1940,
        "wires": []
    },
    {
        "id": "aec0cb2b18e02d8b",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "ThreeWay_Valve_State",
        "mode": "link",
        "links": [
            "aa0fd9c437762a4e",
            "b51f6522ce8b3103",
            "ea31d112c91c0da9",
            "c24406bef1e6355d"
        ],
        "x": 1495,
        "y": 2000,
        "wires": []
    },
    {
        "id": "0771fea18659deea",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Quiet_Mode_Level",
        "links": [
            "5eef2d3a1816ae18",
            "5f3bf84b25568561",
            "02ec5c80f142f377"
        ],
        "x": 1495,
        "y": 2060,
        "wires": []
    },
    {
        "id": "8ed91c4260d9b758",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Sterilization_State",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "e33b5a24cd58c8d2"
        ],
        "x": 1495,
        "y": 2120,
        "wires": []
    },
    {
        "id": "7ce3c0d525800846",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Sterilization_Temp",
        "links": [
            "5eef2d3a1816ae18",
            "6366ce3358b65976"
        ],
        "x": 1495,
        "y": 2180,
        "wires": []
    },
    {
        "id": "a22898dfdc4ff0ca",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T_RoomTemperature",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "899964bbc5334847",
            "ecbb543ba37d9962"
        ],
        "x": 1040,
        "y": 260,
        "wires": [],
        "l": true
    },
    {
        "id": "609ce750edb0db2b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP9 - panasonic_heat_pump/main/DHW_Target_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Target_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 2300,
        "wires": [
            [
                "75ecf6650a5109d6"
            ]
        ]
    },
    {
        "id": "8f6938d08a85ad26",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP10 - panasonic_heat_pump/main/DHW_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 2360,
        "wires": [
            [
                "a5dd53dd3d0d1b7f"
            ]
        ]
    },
    {
        "id": "75ecf6650a5109d6",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP9_DHW_Target_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'DHW_Target_Temp';\n\nvar current_value = context.get('current_value');\nif (msg.payload != current_value || current_value === undefined){\n    context.set('current_value',msg.payload);\n    node.send(msg);\n}\n\nif (msg.payload == global.get('TOP9_DHW_Target_Temp',\"file\")) {return null;}   // only send if needed\nglobal.set(\"TOP9_DHW_Target_Temp\",msg.payload,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2300,
        "wires": [
            [
                "dd45b1caa253346b"
            ]
        ]
    },
    {
        "id": "a5dd53dd3d0d1b7f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP10_DHW_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP10_DHW_Temp';\nglobal.set(\"TOP10_DHW_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2360,
        "wires": [
            [
                "d54ac3b979428b64"
            ]
        ]
    },
    {
        "id": "dd45b1caa253346b",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "DHW_Target_Temp",
        "mode": "link",
        "links": [
            "32840bc8d04fbb31",
            "1a13319ab357d563"
        ],
        "x": 1495,
        "y": 2300,
        "wires": []
    },
    {
        "id": "d54ac3b979428b64",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "DHW_Temp",
        "links": [
            "4cfdc172228a42bb",
            "5eef2d3a1816ae18",
            "992b1344cc8fd4eb",
            "c6997c53221fb9a0",
            "64021d928c59c5cd",
            "4e973bdc6d2bfa33"
        ],
        "x": 1495,
        "y": 2360,
        "wires": []
    },
    {
        "id": "52945322ab63b965",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Source: Panasonic MQTT",
        "info": "",
        "x": 370,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f34333d0f62bbd2d",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "TOP29 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 400,
        "y": 2420,
        "wires": [
            [
                "39aabf25524d867e"
            ]
        ]
    },
    {
        "id": "d69bd0a7c3dd5d4f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "set.Z1_Heat_Curve_Target_High_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Z1_Heat_Curve_Target_High_Temp';\nglobal.set(\"Z1_Heat_Curve_Target_High_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2420,
        "wires": [
            [
                "bb8e93b0650250f5"
            ]
        ]
    },
    {
        "id": "bb8e93b0650250f5",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "Z1_Heat_Curve_Target_High_Temp",
        "links": [],
        "x": 1495,
        "y": 2420,
        "wires": []
    },
    {
        "id": "39aabf25524d867e",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 2420,
        "wires": [
            [
                "d69bd0a7c3dd5d4f"
            ]
        ]
    },
    {
        "id": "3ec15c8e37ccda1b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "topic": "panasonic_heat_pump/main/Compressor_Freq",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 2480,
        "wires": [
            [
                "b9adf06497b1e231"
            ]
        ]
    },
    {
        "id": "b9adf06497b1e231",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.compressor_frequency",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'compressor_frequency';\nglobal.set(\"compressor_frequency\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2480,
        "wires": [
            [
                "c57a81d1dee5b8a9"
            ]
        ]
    },
    {
        "id": "c57a81d1dee5b8a9",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "mode": "link",
        "links": [
            "1daf8c5944f23d71",
            "f3ab44f6bb3c013a",
            "32c013973096ab65",
            "73a3b137b4661912",
            "00699ca21bf22c1e",
            "3fc220e85feb9ec9",
            "97f2b889b6d54a8c"
        ],
        "x": 1495,
        "y": 2480,
        "wires": []
    },
    {
        "id": "f4e55b938e645737",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "COP_calculated",
        "func": "var runtime =   global.get('compressor_runtime', \"file\");                                    // Get the global variable for absorbed energy of the heatpump\nif (runtime === undefined || runtime < 2)    {\n    return null;\n}\n\nelse    {                                                                               // if not, continue.\n        var TOP6_Main_Outlet_Temp=global.get('TOP6_Main_Outlet_Temp');                  // Get the global variable for water Outlet temperature\n        var TOP5_Main_Inlet_Temp=global.get('TOP5_Main_Inlet_Temp');                    // Get the global variable for water inlet temperature\n        var TOP1_Pump_Flow=global.get('TOP1_Pump_Flow');                                          // Get the global variable for water flow\n        var Energy_Consumption;                                                         // declare variable\n        var TOP16_Heat_Energy_Consumption;                                                    // declare variable\n        var COP_calculated;                                                             // declare variable\n        var Watt_heat_c;                                                                // declare variable\n        var TOP20_ThreeWay_Valve_State=global.get('TOP20_ThreeWay_Valve_State');                    // Get the global variable for 3-way valve position.   0=HEAT / 1=DHW\n        \n        if (TOP20_ThreeWay_Valve_State == 0){\n                Energy_Consumption = global.get('TOP16_Heat_Energy_Consumption');             // Get the global variable for absorbed energy of the heatpump heat\n                if (Energy_Consumption === undefined || isNaN(Energy_Consumption) === true) {\n                    TOP16_Heat_Energy_Consumption = 0;\n                    return null;\n                }\n        }\n        \n        if (TOP20_ThreeWay_Valve_State == 1){\n                Energy_Consumption = global.get('TOP41_DHW_Energy_Consumption');       // Get the global variable for absorbed energy of the heatpump dhw\n                if (Energy_Consumption === undefined || isNaN(Energy_Consumption) === true) {\n                    TOP16_Heat_Energy_Consumption = 0;\n                    return null;\n                }\n        }\n                \n                \n        let msg1={}, msg2={};\n        //**********************************************************************\n        if (TOP20_ThreeWay_Valve_State == 0 && TOP6_Main_Outlet_Temp !== undefined && TOP5_Main_Inlet_Temp !== undefined && TOP1_Pump_Flow !== undefined && Energy_Consumption != 0){    //  HEAT mode\n\n            Watt_heat_c             = (TOP6_Main_Outlet_Temp - TOP5_Main_Inlet_Temp) * 4.187 * (TOP1_Pump_Flow / 60) * 1000;\n            \n            COP_calculated          = Watt_heat_c / Energy_Consumption;\n            msg1.payload            = COP_calculated\n            msg1.topic              = \"COP_HEAT\";\n            msg1.payload            = Number(msg1.payload).toFixed(2);\n            msg1.payload            = parseFloat(msg1.payload);\n            global.set('COP_HEAT', msg1.payload);\n\n            if (msg1.payload > 0) {\n                return [msg1,null];\n            }\n            if (msg1.payload === undefined){\n                return [null,null];\n            }\n            else {\n                msg1.payload = 0;\n                return [msg1,null];\n            }\n            \n        }\n            \n        //**********************************************************************\n        if (TOP20_ThreeWay_Valve_State == 1 && TOP6_Main_Outlet_Temp !== undefined && TOP5_Main_Inlet_Temp !== undefined && TOP1_Pump_Flow !== undefined && Energy_Consumption != 0)    // DHW mode\n            {\n                \n                Watt_heat_c             = (TOP6_Main_Outlet_Temp - TOP5_Main_Inlet_Temp) * 4.187 * (TOP1_Pump_Flow / 60) * 1000;\n                COP_calculated          = Watt_heat_c / Energy_Consumption;\n                msg2.payload            = COP_calculated\n                msg2.topic              = \"COP_DHW\";\n                msg2.payload            = Number(msg2.payload).toFixed(2);\n                msg2.payload            = parseFloat(msg2.payload);\n                global.set('COP_DHW', msg2.payload );\n                \n                if (msg2.payload > 0) {\n                    return [null,msg2];\n                }\n                if (msg2.payload === undefined){\n                    return [null,null];\n                }\n                else    {\n                    msg2.payload = 0;\n                    return [null,msg2];\n                }\n        }\n}    ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1600,
        "wires": [
            [
                "306b69356454f3ff"
            ],
            [
                "5787c91b303f2538"
            ]
        ],
        "outputLabels": [
            "COP HEAT [-]",
            "COP DHW [-]"
        ]
    },
    {
        "id": "e5fb067144c27e1b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP16 - panasonic_heat_pump/main/Heat_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Consumption",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 2540,
        "wires": [
            [
                "ff3dd227527b76c3"
            ]
        ]
    },
    {
        "id": "ff3dd227527b76c3",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP16_Heat_Energy_Consumption",
        "func": "if (msg.payload >= 0) {\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    msg.topic = 'TOP16_Heat_Energy_Consumption';\n    global.set(\"TOP16_Heat_Energy_Consumption\",msg.payload,);\n\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2540,
        "wires": [
            [
                "9de1bde370b68508"
            ]
        ]
    },
    {
        "id": "9de1bde370b68508",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP16_Heat_Energy_Consumption",
        "mode": "link",
        "links": [
            "6a7fa8b57f2d9800",
            "8627726ba882e493"
        ],
        "x": 1495,
        "y": 2540,
        "wires": []
    },
    {
        "id": "43b60b667e5e5610",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "",
        "links": [
            "35ca9241fc9fc7a1",
            "3b23831ccc3641c6",
            "905527b22aae9dc8"
        ],
        "x": 1645,
        "y": 1600,
        "wires": [
            [
                "f4e55b938e645737"
            ]
        ]
    },
    {
        "id": "306b69356454f3ff",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "COP HEAT",
        "mode": "link",
        "links": [
            "ad2577846265e4ee",
            "fe8e23b8971b868e"
        ],
        "x": 2065,
        "y": 1580,
        "wires": []
    },
    {
        "id": "6051d06bc75eda72",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "TOP33 - panasonic_heat_pump/main/Room_Thermostat_Temp",
        "topic": "panasonic_heat_pump/main/Room_Thermostat_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "0fb10778eba34911"
            ]
        ]
    },
    {
        "id": "d6a9c376dde9c43f",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T_outside",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "4051d3cb1ad86dbd"
        ],
        "x": 1000,
        "y": 140,
        "wires": [],
        "l": true
    },
    {
        "id": "df9c3a6c0a51be9b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "TOP14 - panasonic_heat_pump/main/Outside_Temp",
        "topic": "panasonic_heat_pump/main/Outside_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 140,
        "wires": [
            [
                "a8d51c8773f8f17f"
            ]
        ]
    },
    {
        "id": "ba4a12897a805cee",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.PumpMaxFlowSetting",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'PumpMaxFlowSetting';\n\nvar F_ReducePumpSpeed = global.get('F_ReducePumpSpeed', \"file\");\n\nif (F_ReducePumpSpeed === undefined) {\n    F_ReducePumpSpeed = {};\n    F_ReducePumpSpeed.PumpMaxFlowSetting = msg.payload;\n    global.set('F_ReducePumpSpeed', F_ReducePumpSpeed , \"file\");\n    \n}\nreturn msg;\n\n/*\nif (F_ReducePumpSpeed.PumpMaxFlowSetting === undefined) {\n    global.set('F_ReducePumpSpeed.PumpMaxFlowSetting', msg.payload, \"file\");\n    return msg;\n}\n\nif (F_ReducePumpSpeed.PumpMaxFlowSetting != msg.payload) {\n    global.set('F_ReducePumpSpeed.PumpMaxFlowSetting', msg.payload, \"file\");\n    return msg;\n}\n*/",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 3140,
        "wires": [
            [
                "d8c3356483134cf9"
            ]
        ]
    },
    {
        "id": "3472c99aef20f07f",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3200,
        "wires": [
            [
                "4f8c3c7d06c1b19a"
            ]
        ]
    },
    {
        "id": "4f8c3c7d06c1b19a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP19_Holiday_Mode_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP19_Holiday_Mode_State';\nglobal.set(\"TOP19_Holiday_Mode_State\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 3200,
        "wires": [
            []
        ]
    },
    {
        "id": "eda4721e720d1975",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3260,
        "wires": [
            [
                "8501242129d89e2c"
            ]
        ]
    },
    {
        "id": "8501242129d89e2c",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP17_Powerful_Mode_Time",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP17_Powerful_Mode_Time';\nglobal.set(\"TOP17_Powerful_Mode_Time\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "e8684c407d602e87",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "bdb7e8e0217cec66"
        ],
        "x": 615,
        "y": 3180,
        "wires": [
            [
                "3472c99aef20f07f"
            ]
        ]
    },
    {
        "id": "f70b59196295efc0",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "979c5ca99c054740"
        ],
        "x": 615,
        "y": 3240,
        "wires": [
            [
                "eda4721e720d1975"
            ]
        ]
    },
    {
        "id": "690250e7cb51c576",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3320,
        "wires": [
            [
                "695ce56812fda3d2"
            ]
        ]
    },
    {
        "id": "695ce56812fda3d2",
        "type": "function",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "cd2050a861736ec5",
        "name": "set.ForceDHW",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'ForceDHW';\nglobal.set(\"ForceDHW\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "12e43571a8c16fa2",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "092a9db0d9b923b3"
        ],
        "x": 155,
        "y": 3320,
        "wires": [
            [
                "690250e7cb51c576"
            ]
        ]
    },
    {
        "id": "f4fadebd69120ccb",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3380,
        "wires": [
            [
                "a79fac04465c243e"
            ]
        ]
    },
    {
        "id": "a79fac04465c243e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP26_Defrosting_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP26_Defrosting_State';\nglobal.set(\"TOP26_Defrosting_State\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 3380,
        "wires": [
            [
                "6c685782864f1787"
            ]
        ]
    },
    {
        "id": "01744f1093a2fd51",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "5e3a9447502864ad"
        ],
        "x": 615,
        "y": 3360,
        "wires": [
            [
                "f4fadebd69120ccb"
            ]
        ]
    },
    {
        "id": "ab34ebcc109b74de",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3440,
        "wires": [
            [
                "10b4e15b0f3199ad"
            ]
        ]
    },
    {
        "id": "10b4e15b0f3199ad",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP94_Zones_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP94_Zones_State';\nglobal.set(\"TOP94_Zones_State\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "283dd6b0185b554b",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3500,
        "wires": [
            [
                "cb2c4d61eeec2c6f"
            ]
        ]
    },
    {
        "id": "cb2c4d61eeec2c6f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP23_Heat_Delta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP23_Heat_Delta';\nglobal.set(\"TOP23_Heat_Delta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 3500,
        "wires": [
            []
        ]
    },
    {
        "id": "1281e2b1451c301f",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3620,
        "wires": [
            [
                "e164eaa22e0fa1dc",
                "bf5c0eefd9f68f35"
            ]
        ]
    },
    {
        "id": "e164eaa22e0fa1dc",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP24_Cool_Delta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP24_Cool_Delta';\nglobal.set(\"TOP24_Cool_Delta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 3620,
        "wires": [
            []
        ]
    },
    {
        "id": "a25d1f5d91c84a33",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3680,
        "wires": [
            [
                "f9edb4875d3f2c5b"
            ]
        ]
    },
    {
        "id": "f9edb4875d3f2c5b",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP22_DHW_Heat_Delta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP22_DHW_Heat_Delta';\nglobal.set(\"TOP22_DHW_Heat_Delta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3680,
        "wires": [
            []
        ]
    },
    {
        "id": "9c4e9ed4c3ac1779",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "2ed9d626c929fb95"
        ],
        "x": 615,
        "y": 3420,
        "wires": [
            [
                "ab34ebcc109b74de"
            ]
        ]
    },
    {
        "id": "4c1c4526944e820e",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "9b2a45a90495e067"
        ],
        "x": 615,
        "y": 3480,
        "wires": [
            [
                "283dd6b0185b554b"
            ]
        ]
    },
    {
        "id": "c32298a87a338b1d",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "7139256ff024b872"
        ],
        "x": 615,
        "y": 3600,
        "wires": [
            [
                "1281e2b1451c301f"
            ]
        ]
    },
    {
        "id": "5e35dee1374d6829",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "c803b9ad018fe78e"
        ],
        "x": 615,
        "y": 3660,
        "wires": [
            [
                "a25d1f5d91c84a33"
            ]
        ]
    },
    {
        "id": "78ddc73a94ec89be",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3740,
        "wires": [
            [
                "e11f7d8caf20dbba"
            ]
        ]
    },
    {
        "id": "e11f7d8caf20dbba",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP96_Heater_Delay_Time",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP96_Heater_Delay_Time';\nglobal.set(\"TOP96_Heater_Delay_Time\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3740,
        "wires": [
            []
        ]
    },
    {
        "id": "3fb7221a7218435a",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3800,
        "wires": [
            [
                "460a1a83313cfcc5"
            ]
        ]
    },
    {
        "id": "460a1a83313cfcc5",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP97_Heater_Start_Delta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP97_Heater_Start_Delta';\nglobal.set(\"TOP97_Heater_Start_Delta\",msg.payload,\"file\");\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3800,
        "wires": [
            []
        ]
    },
    {
        "id": "8121e5bfa638e9ab",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3860,
        "wires": [
            [
                "58a904f891a8e2cc"
            ]
        ]
    },
    {
        "id": "58a904f891a8e2cc",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP98_Heater_Stop_Delta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP98_Heater_Stop_Delta';\nglobal.set(\"TOP98_Heater_Stop_Delta\",msg.payload,\"file\");\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3860,
        "wires": [
            []
        ]
    },
    {
        "id": "7caff8b1418d65da",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3920,
        "wires": [
            [
                "5f758eb9af24eb35"
            ]
        ]
    },
    {
        "id": "5f758eb9af24eb35",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP13_Main_Schedule_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP13_Main_Schedule_State';\nglobal.set(\"TOP13_Main_Schedule_State\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 3920,
        "wires": [
            []
        ]
    },
    {
        "id": "bfcbe2fb120f457c",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "4021cdadbdc7768d"
        ],
        "x": 615,
        "y": 3720,
        "wires": [
            [
                "78ddc73a94ec89be"
            ]
        ]
    },
    {
        "id": "0e3197d36afc45dc",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "78816343589b199a"
        ],
        "x": 615,
        "y": 3780,
        "wires": [
            [
                "3fb7221a7218435a"
            ]
        ]
    },
    {
        "id": "ca1f0fdf0dd05c89",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "a2d7de4325e4bf91"
        ],
        "x": 615,
        "y": 3840,
        "wires": [
            [
                "8121e5bfa638e9ab"
            ]
        ]
    },
    {
        "id": "c5cba27eac8a70a2",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "089ba42c8f7f7a61"
        ],
        "x": 615,
        "y": 3900,
        "wires": [
            [
                "7caff8b1418d65da"
            ]
        ]
    },
    {
        "id": "2c34d9f3299bef00",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "Put settings from GUI - DASH into variables",
        "info": "",
        "x": 410,
        "y": 3080,
        "wires": []
    },
    {
        "id": "8206cc922dc8874d",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "links": [
            "9fcae1bec983aa1f"
        ],
        "x": 215,
        "y": 2680,
        "wires": [
            [
                "8572da168a9397e1"
            ]
        ]
    },
    {
        "id": "170936d914847ac0",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "links": [
            "887a43d150c20eb2"
        ],
        "x": 215,
        "y": 2740,
        "wires": [
            [
                "76803a7773afbef6"
            ]
        ]
    },
    {
        "id": "8572da168a9397e1",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.HEAT_SP_lower_limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HEAT_SP_lower_limit';\nglobal.set(\"HEAT_SP_lower_limit\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "76803a7773afbef6",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.HEAT_SP_upper_limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HEAT_SP_upper_limit';\nglobal.set(\"HEAT_SP_upper_limit\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "a0d48945187b9bf6",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP98 - panasonic_heat_pump/main/Heater_Stop_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Stop_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 3860,
        "wires": [
            [
                "8121e5bfa638e9ab"
            ]
        ]
    },
    {
        "id": "cd3f44853ed1a6cd",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP97 - panasonic_heat_pump/main/Heater_Start_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Start_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 3800,
        "wires": [
            [
                "3fb7221a7218435a"
            ]
        ]
    },
    {
        "id": "fd08994eed1621be",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP96 - panasonic_heat_pump/main/Heater_Delay_Time",
        "topic": "panasonic_heat_pump/main/Heater_Delay_Time",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 3740,
        "wires": [
            [
                "78ddc73a94ec89be"
            ]
        ]
    },
    {
        "id": "5023bec7ba5973f3",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP22 - panasonic_heat_pump/main/DHW_Heat_Delta",
        "topic": "panasonic_heat_pump/main/DHW_Heat_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 3680,
        "wires": [
            [
                "a25d1f5d91c84a33"
            ]
        ]
    },
    {
        "id": "ad6a84d6161eab48",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP23 - panasonic_heat_pump/main/Heat_Delta",
        "topic": "panasonic_heat_pump/main/Heat_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 3500,
        "wires": [
            [
                "283dd6b0185b554b"
            ]
        ]
    },
    {
        "id": "d7fdd42d981a2d7d",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP24 - panasonic_heat_pump/main/Cool_Delta",
        "topic": "panasonic_heat_pump/main/Cool_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 3620,
        "wires": [
            [
                "1281e2b1451c301f"
            ]
        ]
    },
    {
        "id": "a815d38c5137d852",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP17 - panasonic_heat_pump/main/Powerful_Mode_Time",
        "topic": "panasonic_heat_pump/main/Powerful_Mode_Time",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 3260,
        "wires": [
            [
                "eda4721e720d1975"
            ]
        ]
    },
    {
        "id": "a82dac1b05afcaac",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP19 - panasonic_heat_pump/main/Holiday_Mode_State",
        "topic": "panasonic_heat_pump/main/Holiday_Mode_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 3200,
        "wires": [
            [
                "3472c99aef20f07f"
            ]
        ]
    },
    {
        "id": "3097c4184ba03f0b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP18 - panasonic_heat_pump/main/Quiet_Mode_Level",
        "topic": "panasonic_heat_pump/main/Quiet_Mode_Level",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 2060,
        "wires": [
            [
                "cbded61fe1f8bfa6"
            ]
        ]
    },
    {
        "id": "a0f14e8ff8b7b008",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP13 - panasonic_heat_pump/main/Main_Schedule_State",
        "topic": "panasonic_heat_pump/main/Main_Schedule_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 3920,
        "wires": [
            [
                "7caff8b1418d65da"
            ]
        ]
    },
    {
        "id": "3bab99eab669bd21",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP94 - panasonic_heat_pump/main/Zones_State",
        "topic": "panasonic_heat_pump/main/Zones_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 3440,
        "wires": [
            [
                "ab34ebcc109b74de"
            ]
        ]
    },
    {
        "id": "182df2f14a9ca82f",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "topic": "panasonic_heat_pump/main/Defrosting_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 3380,
        "wires": [
            [
                "f4fadebd69120ccb"
            ]
        ]
    },
    {
        "id": "5a629acf35a11cc1",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "Night reduction",
        "label": "Change temperature with",
        "tooltip": "",
        "group": "9aec7afe54746c39",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "night_reduction_correction",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-20",
        "max": "0",
        "step": "1",
        "className": "",
        "x": 820,
        "y": 4400,
        "wires": [
            [
                "3a9f53d1ad6ec693"
            ]
        ]
    },
    {
        "id": "3151f56b9d086c84",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "set.NightReductionWaterTemp.correction",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"NightReductionWaterTemp.correction\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 4400,
        "wires": [
            []
        ]
    },
    {
        "id": "e3c1faa5a1fb80c6",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "Load on boot nachtverlaging",
        "func": "// Pin 1 - Current_value\n// Pin 2 - State\n// Pin 3 - Correction\n\nvar NR_W = global.get('NightReductionWaterTemp',\"file\");\n    if (NR_W === undefined) { \n        NR_W = {};\n        global.set('NightReductionWaterTemp',NR_W,\"file\");\n    }\n\nvar state = NR_W.state;\nif (state === undefined) { \n        global.set('NightReductionWaterTemp.state',0,\"file\");\n        state = 0;\n}\n    \nvar correction      = NR_W.correction;\nvar current_value   = NR_W.current_value;\n\nlet msg1={}, msg2={},msg3={};\n\n\nmsg1.payload = current_value;\nmsg2.payload = state;\nmsg3.payload = correction;\n\n//if(current_value === undefined)     { msg2=null,msg3=null;}\nif(state === undefined)             { msg2=null,msg3=null;}\n\nif (current_value !== undefined)    { msg1.payload = current_value; node.send([msg1,null,null]); }\n\nif (state == 0) {\n    global.set(\"NightReductionWaterTemp.current_value\",0,\"file\");\n    msg1.payload = 0;\n    node.send([msg1,null,null])\n}\n\nif (state == 1) {\n    global.set(\"NightReductionWaterTemp.current_value\",0,\"file\");\n    msg1.payload = correction;\n    node.send([msg1,null,null])\n}\n\nreturn [null,msg2,msg3];\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 4240,
        "wires": [
            [],
            [
                "f0b7868c48887de4"
            ],
            [
                "5a629acf35a11cc1",
                "afb8bfd949251c6c"
            ]
        ],
        "outputLabels": [
            "current_value",
            "state",
            "correction"
        ]
    },
    {
        "id": "3f05f1c6e437d5d3",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "group": "1179fa790d2d89ca",
        "order": 17,
        "width": 2,
        "height": 1,
        "name": "nightreduction read",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-spread",
        "className": "",
        "x": 830,
        "y": 4200,
        "wires": []
    },
    {
        "id": "2b04b7dd5ea852f2",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "group": "1179fa790d2d89ca",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "text nightreduction",
        "label": "Night reduction",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 4200,
        "wires": []
    },
    {
        "id": "f0b7868c48887de4",
        "type": "ui_switch",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "Nightreduction",
        "label": "",
        "tooltip": "",
        "group": "1179fa790d2d89ca",
        "order": 15,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 820,
        "y": 4300,
        "wires": [
            [
                "64489162c0113379"
            ]
        ]
    },
    {
        "id": "b1dbfa8badec14e4",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "NightReductionWaterTemp.state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"NightReductionWaterTemp.state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "4f05df9205955fba",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "geprogrammeerde reductie",
        "info": "",
        "x": 850,
        "y": 4360,
        "wires": []
    },
    {
        "id": "a852d7a03c2a4cb0",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "current value",
        "info": "",
        "x": 810,
        "y": 4160,
        "wires": []
    },
    {
        "id": "038f578f8cc12163",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "toggle",
        "info": "",
        "x": 790,
        "y": 4260,
        "wires": []
    },
    {
        "id": "64489162c0113379",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 4300,
        "wires": [
            [
                "b1dbfa8badec14e4",
                "e3c1faa5a1fb80c6",
                "d283d9a5d5181aed",
                "0884ccad88528175",
                "db81c5d226a5dab3"
            ]
        ]
    },
    {
        "id": "d283d9a5d5181aed",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "nightreduction_on_off",
        "mode": "link",
        "links": [
            "73ee925b927ed0c6",
            "3ab7a10b46379da2",
            "44d83d4e58d63689"
        ],
        "x": 1135,
        "y": 4260,
        "wires": []
    },
    {
        "id": "3a9f53d1ad6ec693",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 4400,
        "wires": [
            [
                "3151f56b9d086c84",
                "db81c5d226a5dab3"
            ]
        ]
    },
    {
        "id": "10ca1d93fdd1afe2",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP41_DHW_Energy_Consumption",
        "func": "if (msg.payload >= 0) {\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    msg.topic = 'TOP41_DHW_Energy_Consumption';\n    global.set(\"TOP41_DHW_Energy_Consumption\",msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2600,
        "wires": [
            [
                "a3180920b08e8108"
            ]
        ]
    },
    {
        "id": "158cd656457b884a",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP41 - panasonic_heat_pump/main/DHW_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Consumption",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 420,
        "y": 2600,
        "wires": [
            [
                "10ca1d93fdd1afe2"
            ]
        ]
    },
    {
        "id": "5787c91b303f2538",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "COP DHW",
        "mode": "link",
        "links": [
            "c302223665944545",
            "fe8e23b8971b868e"
        ],
        "x": 2065,
        "y": 1620,
        "wires": []
    },
    {
        "id": "0884ccad88528175",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Function NightReduction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 4200,
        "wires": [
            [
                "c77c4767a9dd84f4"
            ]
        ]
    },
    {
        "id": "c77c4767a9dd84f4",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 1355,
        "y": 4220,
        "wires": []
    },
    {
        "id": "f0b20c8165a68430",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "To Log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1090,
        "y": 200,
        "wires": [],
        "l": true
    },
    {
        "id": "ce9434fc05a5b849",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "Source TOP24 cool_delta",
        "mode": "link",
        "links": [
            "25041e53f134e3fb"
        ],
        "x": 1235,
        "y": 3560,
        "wires": []
    },
    {
        "id": "bf5c0eefd9f68f35",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1070,
        "y": 3560,
        "wires": [
            [
                "ce9434fc05a5b849"
            ]
        ]
    },
    {
        "id": "a3180920b08e8108",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP41_DHW_Energy_Consumption",
        "mode": "link",
        "links": [
            "05c67c5f7508a04d",
            "2347fd7ebf82b618"
        ],
        "x": 1495,
        "y": 2600,
        "wires": []
    },
    {
        "id": "b9da2620c239be36",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP27 - panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 1940,
        "wires": [
            [
                "aa66f523450fd337"
            ]
        ]
    },
    {
        "id": "6815e3004fa8b341",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "NR gui changes to function trigger",
        "mode": "link",
        "links": [
            "44d83d4e58d63689"
        ],
        "x": 1355,
        "y": 4360,
        "wires": []
    },
    {
        "id": "db81c5d226a5dab3",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1180,
        "y": 4360,
        "wires": [
            [
                "6815e3004fa8b341"
            ]
        ]
    },
    {
        "id": "d90d8243969aecef",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP95 - panasonic_heat_pump/main/Max_Pump_Duty",
        "topic": "panasonic_heat_pump/main/Max_Pump_Duty",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 3140,
        "wires": [
            [
                "0b10bc17b24896b7",
                "ba4a12897a805cee"
            ]
        ]
    },
    {
        "id": "8f0e209ac14bdb9a",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "Max_Pump_Duty_Currentvalue",
        "mode": "link",
        "links": [
            "32c4b461266d4a6e",
            "403a171a02400af0"
        ],
        "x": 995,
        "y": 3100,
        "wires": []
    },
    {
        "id": "0b10bc17b24896b7",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3100,
        "wires": [
            [
                "8f0e209ac14bdb9a"
            ]
        ]
    },
    {
        "id": "1fea7e86a5a61e8b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "name": "TOP92 - panasonic_heat_pump/main/Heat_Pump_Model",
        "topic": "panasonic_heat_pump/main/Heat_Pump_Model",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 4480,
        "wires": [
            [
                "8ef3101cc4e83705"
            ]
        ]
    },
    {
        "id": "8ef3101cc4e83705",
        "type": "function",
        "z": "a938de76db0b71f6",
        "name": "Heatpump type (Panasonic)",
        "func": "var panasonic = global.get('panasonic',\"file\");\n\nif (panasonic === undefined || panasonic.payload[0].nr != msg.payload  || (panasonic.payload[0].model === 'unknown' && panasonic.payload[0].nr != 255))    {\n    global.set('panasonic',undefined,\"file\");\n    \n    var model;\n    var phase;\n    var type;\n    var power;\n    var nr;\n    \n    if (msg.payload == 0)   {model = 'WH-MDC05H3E5';    power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 1)   {model = 'WH-MDC07H3E5';    power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 2)   {model = 'WH-UX09HE5';      power = '9';        phase = '1';        type = 'T-CAP';}\n    if (msg.payload == 3)   {model = 'WH-UD09HE8';      power = '9';        phase = '3';        type = 'HP';}\n    if (msg.payload == 4)   {model = 'WH-UX09HE8';      power = '9';        phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 5)   {model = 'WH-UX12HE8';      power = '12';       phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 6)   {model = 'WH-UX16HE8';      power = '16';       phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 7)   {model = 'WH-UD05HE5';      power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 8)   {model = 'WH-UD09JE5';      power = '9';        phase = '1';        type = 'HP';}\n    if (msg.payload == 9)   {model = 'WH-MDC05J3E5';    power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 10)  {model = 'WH-MDC09H3E5';    power = '9';        phase = '1';        type = 'HP';}\n    if (msg.payload == 11)  {model = 'WH-MXC09H3E5';    power = '9';        phase = '1';        type = 'T-CAP';}\n    if (msg.payload == 12)  {model = 'WH-UD09JE5';      power = '9';        phase = '1';        type = 'HP - All-In-One';}\n    if (msg.payload == 13)  {model = 'WH-UX12HE8';      power = '12';       phase = '3';        type = 'T-CAP - All-In-One';}\n    if (msg.payload == 14)  {model = 'WH-UQ09HE8';      power = '9';        phase = '3';        type = 'T-CAP - Super Quiet';}\n    if (msg.payload == 15)  {model = 'WH-UD09HE5';      power = '9';        phase = '1';        type = 'HP';}\n    if (msg.payload == 16)  {model = 'WH-UD09HE5';      power = '9';        phase = '1';        type = 'HP - All-In-One';}\n    if (msg.payload == 17)  {model = 'WH-UD05JE5';      power = '5';        phase = '1';        type = 'HP - All-In-One';}\n    if (msg.payload == 18)  {model = 'WH-UD07JE5';      power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 19)  {model = 'WH-UD07HE5-1';    power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 20)  {model = 'WH-MDC07J3E5';    power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 21)  {model = 'WH-MDC09J3E5';    power = '9';        phase = '1';        type = 'HP';}\n    if (msg.payload == 22)  {model = 'WH-UD05JE5';      power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 23)  {model = 'WH-MXC09J3E8';    power = '9';        phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 24)  {model = 'WH-MXC12J9E8';    power = '12';       phase = '3';        type = 'T-CAP';}\n    if (msg.payload == 25)  {model = 'WH-UD12HE5';      power = '12';       phase = '1';        type = 'T-CAP';}\n    if (msg.payload == 26)  {model = 'WH-UD07JE5';      power = '7';        phase = '1';        type = 'HP - All-In-One Compact';}\n    if (msg.payload == 27)  {model = 'WH-MDC07J3E5';    power = '7';        phase = '1';        type = 'HP';}\n    if (msg.payload == 28)  {model = 'WH-MDC05J3E5';    power = '5';        phase = '1';        type = 'HP';}\n    if (msg.payload == 29)  {model = 'WH-SXC12H6E5';    power = '12';       phase = '3';        type = '3ph\tT-CAP - Super Quiet';}\n    if (msg.payload == 30)  {model = 'WH-UX12HE5';      power = '12';       phase = '1';        type = 'T-CAP';}\n    if (msg.payload == 31)  {model = 'WH-MDC09J3E5';    power = '9';        phase = '1';        type = 'HP (new version?)';}\n    if (msg.payload == 32)  {model = 'WH-MXC09J3E5';    power = '9';        phase = '1';        type = 'T-CAP';}\n// Added on 24-10-2023 below\n    if (msg.payload == 33)  { model = 'WH-UD12HE5';     power = '12';       phase = '1';        type = 'HP - All-In-One Compact'; }\n    if (msg.payload == 34)  { model = 'WH-WDG07LE5';    power = '7';        phase = '1';        type = 'HP - All-In-One L-series'; }\n    if (msg.payload == 35)  { model = 'WH-UX09HE8';     power = '9';        phase = '3';        type = 'T-CAP - new version'; }\n    if (msg.payload == 36)  { model = 'WH-UDZ07KE5';    power = '7';        phase = '1';        type = 'HP - All-In-One K-series - AN'; }\n    if (msg.payload == 37)  { model = 'WH-UDZ05KE5';    power = '5';        phase = '1';        type = 'HP - split K-series'; }\n\n    if (msg.payload == 255) {model = 'unknown';         power = 'unknown';  phase = 'unknown';  type = 'unknown';}\n\n\n\n\n\n    \n    let panasonic={};\n        panasonic.type = type;\n        panasonic.phase = phase;\n        panasonic.power = power;\n        panasonic.model = model;\n        panasonic.nr = msg.payload;\n    \n    global.set('panasonic',{payload:[panasonic]},\"file\");\n    return msg;\n}\n\n\nelse    {\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 4480,
        "wires": [
            []
        ]
    },
    {
        "id": "1055c816d0b21553",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "TOP29 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 4660,
        "wires": [
            [
                "9005e7a87f86a06e",
                "5e56ba56cb2fd474"
            ]
        ]
    },
    {
        "id": "4f0447af5e532d6f",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "TOP30 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 4620,
        "wires": [
            [
                "dfd98e02f46447fb",
                "5e56ba56cb2fd474"
            ]
        ]
    },
    {
        "id": "91e1151b60bc9a35",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "TOP31 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 4760,
        "wires": [
            [
                "c0a54684ef46f711",
                "5e56ba56cb2fd474"
            ]
        ]
    },
    {
        "id": "dc036a2e660127ec",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "TOP32 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 4800,
        "wires": [
            [
                "07bfc2f9f00870d7",
                "5e56ba56cb2fd474"
            ]
        ]
    },
    {
        "id": "5e56ba56cb2fd474",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "function 3",
        "func": "var war_ot1         = global.get('war_ot1',\"file\");                 // Outside temperature high         (warm outside)\nvar war_ot2         = global.get('war_ot2',\"file\");                 // Outside temperature intermediate (intermediate outside temperature)\nvar war_ot3         = global.get('war_ot3',\"file\");                 // Outside temperature low          (cold outside)\n\nvar war_wt1         = global.get('war_wt1',\"file\");                 // Water temperature low            (cold water)\nvar war_wt2         = global.get('war_wt2',\"file\");                 // Water temperature intermediate   (intermediate water temperature)\nvar war_wt3         = global.get('war_wt3',\"file\");                 // Water temperature high           (warm water)\nlet msg99={};\n\n/*\n                weer    buiten      water\n                warm    war_ot1     war_wt1\n                        war_ot2     war_wt2\n                cold    war_ot3     war_wt3\n*/\n\nif (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp\")   {global.set('Z1_Heat_Curve_Outside_Low_Temp',msg.payload);}\nif (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp\")  {global.set('Z1_Heat_Curve_Outside_High_Temp',msg.payload);}\nif (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp\")    {global.set('Z1_Heat_Curve_Target_Low_Temp',msg.payload);}\nif (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp\")   {global.set('Z1_Heat_Curve_Target_High_Temp',msg.payload);}\n\nif ((war_ot1+war_ot2+war_ot3+war_wt1+war_wt2+war_wt3)>-1000)\n    {\n        msg99.topic=\"SYSTEM\";\n        msg99.payload=\"WAR settings OK\";\n        return [null,msg99]\n    }\n\nmsg99.topic=\"Function WAR\";\n\nif (war_wt2===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp\")\n            {\n                global.set('war_wt2',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP29 from Panasonic (Z1_Heat_Curve_Target_High_Temp = \" + msg.payload + \"°C)\";\n                if (war_wt3===undefined)\n                    {\n                        global.set('war_wt3',msg.payload,\"file\");\n                    }\n                return [msg,msg99]\n            }\n    }\n    \nif (war_wt1===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp\")\n            {\n                global.set('war_wt1',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP30 from Panasonic (Z1_Heat_Curve_Target_Low_Temp = \" + msg.payload + \"°C)\";\n                \n                \n                return [msg,msg99]\n            }\n    }\n\nif (war_ot1===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp\")\n            {\n                global.set('war_ot1',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP31 from Panasonic (Z1_Heat_Curve_Outside_High_Temp = \" + msg.payload + \"°C)\";\n                return [msg,msg99]\n            }\n    }\nif (war_ot2===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp\")\n            {\n                global.set('war_ot2',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP32 from Panasonic (Z1_Heat_Curve_Outside_Low_Temp = \" + msg.payload + \"°C)\";\n                if (war_ot3===undefined)\n                    {\n                        global.set('war_ot3',msg.payload-1,\"file\");\n                    }\n                return [msg,msg99]\n            }\n    }\n\nreturn null;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 4720,
        "wires": [
            [
                "123d7b6352639620"
            ],
            [
                "87bd21b4647187d2"
            ]
        ],
        "outputLabels": [
            "",
            "ToLog"
        ]
    },
    {
        "id": "246757b0d4390b0d",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 1175,
        "y": 4760,
        "wires": []
    },
    {
        "id": "87bd21b4647187d2",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1070,
        "y": 4760,
        "wires": [
            [
                "246757b0d4390b0d"
            ]
        ]
    },
    {
        "id": "123d7b6352639620",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1080,
        "y": 4720,
        "wires": [
            [
                "b46cfcf8ce6d8f91"
            ]
        ]
    },
    {
        "id": "b46cfcf8ce6d8f91",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "05065bbd47aa9dd3"
        ],
        "x": 1175,
        "y": 4720,
        "wires": []
    },
    {
        "id": "afb8bfd949251c6c",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "Color",
        "func": "var nr_state = global.get('NightReductionWaterTemp.state',\"file\");\n    if (nr_state === undefined)    {return null;}\n\nlet msg1={};\n\n\n    if (nr_state == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (nr_state == 1) \n        {\n            msg1.color = \"\";\n        }\nif (msg.payload > 0){msg.payload = '+' + msg.payload;}\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 4200,
        "wires": [
            [
                "3f05f1c6e437d5d3"
            ]
        ]
    },
    {
        "id": "ea89c213947bdf26",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 80,
        "wires": [
            [
                "f0b20c8165a68430"
            ]
        ]
    },
    {
        "id": "fde418209aab6a87",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "name": "Line - Setup ",
        "order": 33,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Internal Panasonic profile (read-only)</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 530,
        "y": 4580,
        "wires": [
            []
        ]
    },
    {
        "id": "8944d416f44e4183",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 35,
        "width": 3,
        "height": 1,
        "name": "Outside temp.",
        "label": "<font color=gray>Outside temp.</font>",
        "format": "",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 700,
        "y": 4720,
        "wires": []
    },
    {
        "id": "ab60719365f6bde0",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 36,
        "width": 3,
        "height": 1,
        "name": "Water temp.",
        "label": "<font color=gray>Water temp.</font>",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 710,
        "y": 4580,
        "wires": []
    },
    {
        "id": "3a027c0cd9f8a957",
        "type": "ui_button",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "",
        "group": "052caff3b2365345",
        "order": 31,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Export",
        "tooltip": "This will send the above temperature profile to the Panasonic heatpump (internal).",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Export current profile to heatpump?",
        "payloadType": "str",
        "topic": "Please confirm",
        "topicType": "str",
        "x": 1330,
        "y": 4540,
        "wires": [
            [
                "1acb7989b3df5970"
            ]
        ]
    },
    {
        "id": "1acb7989b3df5970",
        "type": "ui_toast",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "Abort",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Deploy?",
        "x": 1480,
        "y": 4540,
        "wires": [
            [
                "fa6cbe3250ca3abf"
            ]
        ]
    },
    {
        "id": "fa6cbe3250ca3abf",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "Confirm",
        "func": "\nif (msg.payload == 'Yes') \n    {\n            \n        var war_ot1         = global.get('war_ot1',\"file\");                 // Outside temperature high         (warm outside)\n        var war_ot2         = global.get('war_ot2',\"file\");                 // Outside temperature intermediate (intermediate outside temperature)\n        //var war_ot3         = global.get('war_ot3',\"file\");                 // Outside temperature low          (cold outside)\n        var war_wt1         = global.get('war_wt1',\"file\");                 // Water temperature low            (cold water)\n        var war_wt2         = global.get('war_wt2',\"file\");                 // Water temperature intermediate   (intermediate water temperature)\n        //var war_wt3         = global.get('war_wt3',\"file\");                 // Water temperature high           (warm water)\n        \n        let msg1    ={};    //  pin 1 - export JSON\n        let msg99   ={};    //  pin 2 - output to log\n        \n        msg1.topic = \"JSON_ZONE1_HEAT\"\n        msg1.payload = {\n                        \t\"zone1\": {\n                        \t\t\"heat\": {\n                        \t\t\t\"target\": {\n                        \t\t\t\t\"high\": war_wt2,\n                        \t\t\t\t\"low\": war_wt1\n                        \t\t\t},\n                        \t\t\t\"outside\": {\n                        \t\t\t\t\"high\": war_ot1,\n                        \t\t\t\t\"low\": war_ot2\n                        \t\t\t}\n                        \t\t}\n                        \t}\n                        }\n        msg99.topic = \"SYSTEM\";\n        msg99.payload = \"Exported settings with WAR temperature profile to Panasonic heatpump\";\n        \n        node.send([msg1,msg99]);\n    }\nreturn null;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 4540,
        "wires": [
            [
                "c5bf8e25eda73442"
            ],
            [
                "ae97f18776a1de28"
            ]
        ],
        "outputLabels": [
            "export JSON",
            "output to log"
        ]
    },
    {
        "id": "c5bf8e25eda73442",
        "type": "json",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1870,
        "y": 4520,
        "wires": [
            [
                "b1bc9035edfd596b"
            ]
        ]
    },
    {
        "id": "c4d5d436d1a4b0e4",
        "type": "mqtt out",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "SET16 SetCurves",
        "topic": "panasonic_heat_pump/commands/SetCurves",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2250,
        "y": 4520,
        "wires": []
    },
    {
        "id": "f70eae138246bae0",
        "type": "ui_button",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "",
        "group": "052caff3b2365345",
        "order": 29,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Import",
        "tooltip": "This will read the internal Panasonic profile and save it in this Node Red flow",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Import Panasonic profile into Node Red?",
        "payloadType": "str",
        "topic": "Please confirm",
        "topicType": "str",
        "x": 1330,
        "y": 4600,
        "wires": [
            [
                "4af0ddb4ff3ccf32"
            ]
        ]
    },
    {
        "id": "4af0ddb4ff3ccf32",
        "type": "ui_toast",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "Abort",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Deploy?",
        "x": 1480,
        "y": 4600,
        "wires": [
            [
                "418e761f03c6c9cd"
            ]
        ]
    },
    {
        "id": "418e761f03c6c9cd",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "Confirm",
        "func": "\nif (msg.payload == 'Yes') \n    {\n        let msg99={};\n        var Z1_Heat_Curve_Outside_Low_Temp      = global.get('Z1_Heat_Curve_Outside_Low_Temp');\n        var Z1_Heat_Curve_Outside_High_Temp     = global.get('Z1_Heat_Curve_Outside_High_Temp');\n        var Z1_Heat_Curve_Target_Low_Temp       = global.get('Z1_Heat_Curve_Target_Low_Temp');\n        var Z1_Heat_Curve_Target_High_Temp      = global.get('Z1_Heat_Curve_Target_High_Temp');\n        \n        \n        global.set('war_ot1',Z1_Heat_Curve_Outside_High_Temp,\"file\");                 // Outside temperature high         (warm outside)\n        global.set('war_ot2',Z1_Heat_Curve_Outside_Low_Temp,\"file\");                 // Outside temperature intermediate (intermediate outside temperature)\n        global.set('war_ot3',Z1_Heat_Curve_Outside_Low_Temp-1,\"file\");                 // Outside temperature low          (cold outside)\n        \n        global.set('war_wt1',Z1_Heat_Curve_Target_Low_Temp,\"file\");                 // Water temperature low            (cold water)\n        global.set('war_wt2',Z1_Heat_Curve_Target_High_Temp,\"file\");                 // Water temperature intermediate   (intermediate water temperature)\n        global.set('war_wt3',Z1_Heat_Curve_Target_High_Temp,\"file\");\n        \n        \n        \n        msg99.topic = \"SYSTEM\";\n        msg99.payload = \"Import profile from Panasonic heatpump to Node Red\";\n    \n        msg.payload = \"Done\" ;\n        msg.topic = \"\";\n        \n    \n        return msg;\n        \n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 4600,
        "wires": [
            [
                "88e74ca7c5982d24"
            ]
        ]
    },
    {
        "id": "88e74ca7c5982d24",
        "type": "ui_toast",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Done",
        "x": 1870,
        "y": 4600,
        "wires": [
            []
        ]
    },
    {
        "id": "9005e7a87f86a06e",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 40,
        "width": 3,
        "height": 1,
        "name": "war_wt2",
        "label": "",
        "format": "<font color=gray>{{value}} °C</font>",
        "layout": "row-center",
        "className": "",
        "x": 740,
        "y": 4660,
        "wires": []
    },
    {
        "id": "dfd98e02f46447fb",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 38,
        "width": 3,
        "height": 1,
        "name": "war_wt1",
        "label": "",
        "format": "<font color=gray>{{value}} °C</font>",
        "layout": "row-center",
        "className": "",
        "x": 740,
        "y": 4620,
        "wires": []
    },
    {
        "id": "c0a54684ef46f711",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 37,
        "width": 3,
        "height": 1,
        "name": "war_ot1",
        "label": "",
        "format": "<font color=gray>{{value}} °C</font>",
        "layout": "row-center",
        "className": "",
        "x": 740,
        "y": 4760,
        "wires": []
    },
    {
        "id": "07bfc2f9f00870d7",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 39,
        "width": 3,
        "height": 1,
        "name": "war_ot2",
        "label": "",
        "format": "<font color=gray>{{value}} °C</font>",
        "layout": "row-center",
        "className": "",
        "x": 740,
        "y": 4800,
        "wires": []
    },
    {
        "id": "a8d51c8773f8f17f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T_outside - Input selector",
        "func": "//***********************************************************************************\nlet msg1={};            //  pin 1 - panasonic_heat_pump/main/Outside_Temp output\nlet msg99={};           //  pin 2 - To log\nlet msg2={};            //  pin 3 - custom sensor output\nlet msg3={};            //  pin 4 - final output. selected custom sensor or default panasonic_heat_pump/.. sensor\n\n//  \n//  return [msg1,msg99,msg2,msg3]\nmsg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\n\nmsg99.topic = \"SETUP - Sensors\";\n\n\nvar TOP76_Heating_Mode    = global.get('TOP76_Heating_Mode',\"file\");\n    if (TOP76_Heating_Mode === undefined)     {return null;}\n\nvar T_outside_custom = global.get(\"T_outside_custom\",\"file\");\n\n//***********************************************************************************\n// Timer how long the compressoris on. Runtime\n//\nvar CurrentTime = new Date().getTime();\nvar StartTime = context.get(\"StartTime\");\nif (StartTime === undefined)\n    {\n        context.set(\"StartTime\",CurrentTime);\n        return null;\n    }\nelse\n    {\n        var TimeElapsed = ((CurrentTime - StartTime)/1000);\n        TimeElapsed = parseFloat(TimeElapsed.toFixed(0));\n//        node.warn(TimeElapsed);\n    }\n//***********************************************************************************\n\n//***********************************************************************************\n//\n//  Set delay after which the function will switch back from custom sensor to panasonic internal sensor. \n//  Choosen delay is 2 hours, 60 seconds x 60 x 2 = 7200 seconds\n//\n//***********************************************************************************\n\n//***********************************************************************************\n//  \nif (msg.topic == \"panasonic_heat_pump/main/Outside_Temp\")\n    {\n        msg1 = msg;\n\n        global.set(\"TOP14_Outside_Temp\",msg1.payload,\"file\");\n\n        if (T_outside_custom === undefined)\n            {\n                msg3.payload = msg1.payload;\n                global.set(\"T_outside\", msg3.payload, \"file\");\n                msg99.payload = \"Custom outside temperature sensor not found\";\n                return [msg1,null,null,msg3]\n            //  return [msg1,msg99,msg2,msg3]\n            }\n        else if (TOP76_Heating_Mode == 1 && TimeElapsed > 7200)\n            {\n                msg3.payload = msg1.payload;\n                global.set(\"T_outside_custom\",undefined,\"file\");\n                global.set(\"T_outside\",msg3.payload,\"file\");\n                msg99.payload = \"Custom outside temperature sensor LOST. Using TOP14 instead\";// (\" + msg3.payload + \"°C)\";\n                return [msg1,null,null,msg3]\n            //  return [msg1,msg99,msg2,msg3]\n            }\n        else if (TOP76_Heating_Mode == 0)\n            {\n                msg3.payload = msg1.payload;\n                global.set(\"T_outside\",msg3.payload,\"file\");\n                msg99.payload = \"Heatpump is in compensation mode (WAR). Custom outside temperature sensor ignored. Using TOP14 instead\";\n                return [msg1,null,null,msg3]\n            //  return [msg1,msg99,msg2,msg3]\n            }\n        else\n            {\n                return [msg1,null,null,null]\n            //  return [msg1,msg99,msg2,msg3]\n            }\n    }    \n//******************************************************************************\nelse\n    {\n        msg2 = msg;\n        msg2.payload = Number(msg2.payload).toFixed(1);\n        msg2.payload = parseFloat(msg2.payload);\n        global.set(\"T_outside_custom\",msg2.payload,\"file\");\n        \n        if (TOP76_Heating_Mode == 0)\n            {\n                context.set(\"StartTime\",CurrentTime);\n                msg99.payload = \"Custom outside temperature sensor FOUND, but not used. Heatpump is in compensation mode (WAR) and using TOP14\";\n                return [null,msg99,msg2,null];\n            //  return [msg1,msg99,msg2,msg3]\n            }\n        if (TOP76_Heating_Mode == 1)\n            {\n                context.set(\"StartTime\",CurrentTime);\n                msg3.payload = msg2.payload;\n                msg3.topic = \"custom sensor\";\n                msg99.payload = \"Custom outside temperature sensor FOUND and used\";// (\" + msg2.payload + \"°C)\";\n                global.set(\"T_outside\",msg3.payload,\"file\");\n                return [null,msg99,msg2,msg3];\n            //  return [msg1,msg99,msg2,msg3]\n            }\n    }\n",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 100,
        "wires": [
            [],
            [
                "ea89c213947bdf26"
            ],
            [],
            [
                "d6a9c376dde9c43f"
            ]
        ],
        "outputLabels": [
            "panasonic_heat_pump/main/Outside_Temp output",
            "To log",
            "custom sensor output",
            "Final output"
        ]
    },
    {
        "id": "303e9746fe17030f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP6_Main_Outlet_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(2);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP6_Main_Outlet_Temp';\nglobal.set(\"TOP6_Main_Outlet_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1820,
        "wires": [
            [
                "35ca9241fc9fc7a1"
            ]
        ]
    },
    {
        "id": "d613171223cb64d2",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP5_Main_Inlet_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(2);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"TOP5_Main_Inlet_Temp\";\nglobal.set(\"TOP5_Main_Inlet_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1760,
        "wires": [
            [
                "905527b22aae9dc8"
            ]
        ]
    },
    {
        "id": "b1bc9035edfd596b",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "Block?",
        "func": "if (global.get('MQTT', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 4520,
        "wires": [
            [
                "c4d5d436d1a4b0e4"
            ],
            [
                "ae97f18776a1de28"
            ]
        ]
    },
    {
        "id": "ae97f18776a1de28",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "1d8b21349d38bc85",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 2125,
        "y": 4520,
        "wires": []
    },
    {
        "id": "6c685782864f1787",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "mode": "link",
        "links": [
            "1ebb1a2803291fd7",
            "702993e29cd93413",
            "afa5bf9f7c3531bc",
            "ffa2e7745e5aed4c",
            "4f37968e1a1ebacc",
            "29daf0bbd602db4f"
        ],
        "x": 1255,
        "y": 3380,
        "wires": []
    },
    {
        "id": "3adf2738c40e2c50",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "7987a450598985bb",
        "group": "052caff3b2365345",
        "order": 41,
        "width": 8,
        "height": 1,
        "name": "text: In DIRECT mode, the water temperature high is variable",
        "label": "<font color=gray>In Compensation Curve mode, the water temperature is variable</font>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 680,
        "y": 4840,
        "wires": []
    },
    {
        "id": "5053e21b4c187e48",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "msg.source mqtt",
        "rules": [
            {
                "t": "set",
                "p": "source",
                "pt": "msg",
                "to": "mqtt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 1520,
        "wires": [
            [
                "7ae9d386f40efb4d"
            ]
        ]
    },
    {
        "id": "2063c96f1ba07327",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 730,
        "y": 1520,
        "wires": [
            [
                "5053e21b4c187e48",
                "9dad0ebe8e5b9c2a"
            ]
        ]
    },
    {
        "id": "5f7b921ab9a4ce7c",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "to log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "3f0803a3a230aca2"
        ],
        "x": 1495,
        "y": 1440,
        "wires": []
    },
    {
        "id": "61ed1c56d1ec2c21",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "delay",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 1480,
        "wires": [
            [
                "72ecd08129670f6d"
            ]
        ]
    },
    {
        "id": "7a30c0f0dbf50e03",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "to switch Heatpump_State",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb"
        ],
        "x": 1495,
        "y": 1480,
        "wires": []
    },
    {
        "id": "72ecd08129670f6d",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Reset VirtualState",
        "func": "global.set('VirtualState', undefined); //reset every time the state is changing\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1480,
        "wires": [
            [
                "7a30c0f0dbf50e03"
            ]
        ]
    },
    {
        "id": "7ae9d386f40efb4d",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Filter",
        "func": "var VirtualState = global.get('VirtualState');  // Memory Only\nif (msg.payload == VirtualState) return null;   // only send if needed\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1520,
        "wires": [
            [
                "a0d8b4706f8d61b1",
                "61ed1c56d1ec2c21"
            ]
        ]
    },
    {
        "id": "d593fd3f7b87de1c",
        "type": "complete",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "scope": [
            "cb987aa12172f46f"
        ],
        "uncaught": false,
        "x": 290,
        "y": 1240,
        "wires": [
            [
                "987d38642eaa3c4c"
            ]
        ]
    },
    {
        "id": "90ec77dc04772b5c",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 580,
        "wires": [
            [
                "148fdf6802233c77"
            ]
        ]
    },
    {
        "id": "3c0adb2ef465094a",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "25",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 760,
        "wires": [
            [
                "1a9b736187a463f7"
            ]
        ]
    },
    {
        "id": "d44ff20770c3e9a1",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "25",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 1120,
        "wires": [
            [
                "d53e66c37991fa8e"
            ]
        ]
    },
    {
        "id": "3f0803a3a230aca2",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in WAR2DIRECT function",
        "links": [
            "5f7b921ab9a4ce7c",
            "a7d4b11b9c045f95",
            "8987f5b6cd22b0be",
            "0380b395668eee8e"
        ],
        "x": 225,
        "y": 540,
        "wires": [
            [
                "d4cd561c0ac4473e"
            ]
        ]
    },
    {
        "id": "899964bbc5334847",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in RTC Function",
        "links": [
            "a22898dfdc4ff0ca"
        ],
        "x": 225,
        "y": 680,
        "wires": [
            [
                "47f8da37ddbb8a39"
            ]
        ]
    },
    {
        "id": "126583bf986bb2c7",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Link in SoftStart function T",
        "links": [
            "35ca9241fc9fc7a1",
            "905527b22aae9dc8"
        ],
        "x": 225,
        "y": 1040,
        "wires": [
            [
                "e4932a30dba95577"
            ]
        ]
    },
    {
        "id": "92b75262811f09f9",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 900,
        "wires": [
            [
                "1cbf3f3272baec48"
            ]
        ]
    },
    {
        "id": "44d83d4e58d63689",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in Nightreduction Function",
        "links": [
            "6815e3004fa8b341",
            "b91f0b27e28d647b",
            "d283d9a5d5181aed"
        ],
        "x": 225,
        "y": 820,
        "wires": [
            [
                "e340492700d3f5b3"
            ]
        ]
    },
    {
        "id": "add6fa4d403dd143",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Calculate new SP",
        "func": "/*\nThis function has the purpose to regularly check the actual SP from the heatpump against the calculated setpoint in from the dashboard/functions. \nOnly when there is a deviation between the two, the new setpoint gets sent through MQTT to SET5.\n*/\n//*****************************************************************************\nvar msg1={};        // pin 1 - SP_Final\nvar msg99={};       // pin 2 - To Log\nvar msg2={};        // pin 3 - SHIFT_Final\n// return [msg1,msg99,msg2]\n\nmsg99.topic = \"Function - Calculate new SP\";        // ToLog\n\n\nvar SP_Final            =global.get('SP_DIRECT_virt',\"file\");                   //\n    if (SP_Final===undefined) {return null;}\n\nvar F_WAR_onoff         =global.get('Correction_0_WAR_on_off',\"file\");          //\n    if (F_WAR_onoff === undefined) {F_WAR_onoff = 0;}\n    \nvar F_WAR_SP            =global.get('F_WAR_SP');                                //\n    if (F_WAR_SP===undefined) {return null;}\n\nvar F_RTC_state         =global.get('F_RTC.z1.state',\"file\");          //\n        if (F_RTC_state === undefined) {F_RTC_state=0;}\n        \nvar F_RTC_correction    =global.get('F_RTC.z1.correction_value',\"file\");                        // Memory Only!\n    if (F_RTC_correction === undefined) {return null;}\n\nvar F_SS_state          =global.get('F_SS.state',\"file\");    //\n        if (F_SS_state === undefined) {F_SS_state=0;}\n        \nvar F_SS_correction     =global.get('F_SS.correction_value',\"file\");                         //\n    if (F_SS_correction===undefined) {return null;}\n\nvar F_NR_state          =global.get('NightReductionWaterTemp.state',\"file\");            //\n        if (F_NR_state === undefined) {F_NR_state=0;}\n        \nvar F_NR_correction     =global.get('NightReductionWaterTemp.correction',\"file\");                         //\n    if (F_NR_correction===undefined) {return null;}\n\nvar current_sp = global.get('TOP42_Z1_Water_Target_Temp',\"file\");                        //\n    if (current_sp===undefined) {return null;}\n\nvar TOP76_Heating_Mode        =global.get('TOP76_Heating_Mode',\"file\");\n    if (TOP76_Heating_Mode===undefined) {return null;}\n\nvar Operating_Mode      =global.get('TOP4_Operating_Mode_State',\"file\");              //\n\nvar HEAT_SP_lower_limit =global.get('HEAT_SP_lower_limit',\"file\");               //\n    if (HEAT_SP_lower_limit === undefined)  {HEAT_SP_lower_limit = 20;}\n    \nvar HEAT_SP_upper_limit =global.get('HEAT_SP_upper_limit',\"file\");               //\n    if (HEAT_SP_upper_limit === undefined)  {HEAT_SP_upper_limit = 100;}\n\n\n//*****************************************************************************\nif (Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)                         // check if all variables are present befor checking\n            // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    {\n        return null;\n    }\n//*****************************************************************************\n//*****************************************************************************\n\nif (TOP76_Heating_Mode == 0) // Compensation Curve mode\n    {\n        var SP_start       = global.get('SP_DIRECT_virt',\"file\");                       // Get the global variable for SP_DIRECT_virt. Value is set through the dashboard\n        \n        var SHIFT_Final_old = global.get('SHIFT_Final',\"file\");\n            if (SHIFT_Final_old === undefined) {SHIFT_Final_old=0;}\n        \n        if (F_RTC_state == 0) { F_RTC_correction = 0;}\n        if (F_SS_state == 0)    {F_SS_correction = 0;}\n        if (F_NR_state == 0)    {F_NR_correction = 0;}\n        \n        var SHIFT_Final = SP_start + F_RTC_correction + F_SS_correction + F_NR_correction;\n        \n        msg2.payload = SHIFT_Final;\n        msg2.topic = \"Shift\";\n        \n        msg2.payload = Math.ceil(msg2.payload);\n\n        if (msg2.payload < -5)  {msg2.payload = -5;}\n        if (msg2.payload > 5)   {msg2.payload = 5;}\n        \n        if (SHIFT_Final_old == SHIFT_Final) { return null; }\n        if (SHIFT_Final_old != SHIFT_Final) { global.set('SHIFT_Final', msg2.payload, \"file\"); }\n\n        global.set('SP_Final', F_WAR_SP + msg2.payload ,\"file\");\n\n        msg99.payload   = \"New final T shift calculated: Current T shift: \" + SHIFT_Final_old + \" °C. New calculated T shift:  \" + msg2.payload + \" °C\";\n        \n\n        return [null,msg99,msg2];\n        //return [SP,toLog,shift]\n    }\n//*****************************************************************************\n//*****************************************************************************\nif (TOP76_Heating_Mode == 1) // Direct mode\n    {\n        if (F_WAR_onoff==1)                 {SP_Final   = F_WAR_SP;}\n        if (F_RTC_state == 1)               {SP_Final   = SP_Final + F_RTC_correction;}\n        if (F_NR_state==1)                  {SP_Final   = SP_Final + F_NR_correction;}\n        if (F_SS_state==1)                  {SP_Final   = SP_Final + F_SS_correction;}\n        if (SP_Final<HEAT_SP_lower_limit)   {SP_Final   = HEAT_SP_lower_limit;}\n        if (SP_Final>HEAT_SP_upper_limit)   {SP_Final   = HEAT_SP_upper_limit;}\n        if (SP_Final<20)                    {SP_Final   = 20;}\n    \n        // *****************************************************************************\n        SP_Final = Number(SP_Final).toFixed(0);\n        SP_Final = parseFloat(SP_Final);\n\n        msg1.payload    = SP_Final;\n        msg1.topic  = \"SP_Final\";\n    \n        global.set('SP_Final',SP_Final,\"file\");\n                \n        if (global.get('Debugging', \"file\") == 1) {\n            msg99.topic = \"*** Function Calculate new SP\";\n            msg99.payload   = \"New final SP calculated: Current setpoint: \" + current_sp + \" °C. New calculated setpoint:  <b>\" + SP_Final + \"</b> °C\";//debug\n        }\n\n    \n        //*****************************************************************************\n\n        if (SP_Final ==  current_sp)                                            // Check only if there is a difference between SP and current value, a signal should be sent.\n            {\n                return null;\n            }\n        if (global.get('MQTT_Source') !== undefined) { global.set('MQTT_Source', undefined); }           // only reset when defined\n    \n        msg99.payload = \"New final SP calculated: Current setpoint: \" + current_sp + \" °C. New calculated setpoint:  <b>\" + SP_Final + \"</b> °C\";\n        \n        return [msg1, msg99, null]; \n        //return [SP,toLog,shift]\n    }\n    \n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1240,
        "wires": [
            [
                "93404b62f7fb0fb2",
                "e09487eff90c64b3",
                "76a161da01cebe9c"
            ],
            [
                "663fd79ce5a1610d"
            ],
            [
                "93404b62f7fb0fb2",
                "2ab69331460bb678",
                "76a161da01cebe9c"
            ]
        ],
        "outputLabels": [
            "SP_Final",
            "ToLog",
            "Shift to SET5"
        ]
    },
    {
        "id": "8b1072427fdbc1e0",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 500,
        "wires": [
            [
                "36856525108ec859"
            ]
        ]
    },
    {
        "id": "e340492700d3f5b3",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 820,
        "wires": [
            [
                "1cbf3f3272baec48"
            ]
        ]
    },
    {
        "id": "16054e8334890ad8",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Link out - F_SS.state",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "4c49268a7054041c"
        ],
        "x": 1625,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d16f38ef74db786a",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SP_WAR (function on)",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "080c11bcc5a2ac73"
        ],
        "x": 1625,
        "y": 540,
        "wires": []
    },
    {
        "id": "18fd7ac120089042",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Correction_1_RTC",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "e6999514a091fd05"
        ],
        "x": 1625,
        "y": 620,
        "wires": []
    },
    {
        "id": "93404b62f7fb0fb2",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SP_Final",
        "mode": "link",
        "links": [
            "02f25651d70831c9"
        ],
        "x": 1235,
        "y": 1240,
        "wires": []
    },
    {
        "id": "34cc66e23b5eec55",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 1625,
        "y": 1120,
        "wires": []
    },
    {
        "id": "663fd79ce5a1610d",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1410,
        "y": 1120,
        "wires": [
            [
                "34cc66e23b5eec55"
            ]
        ]
    },
    {
        "id": "c54efadb07816cb9",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SP RTC result",
        "mode": "link",
        "links": [
            "1bb2933854287555"
        ],
        "x": 1625,
        "y": 660,
        "wires": []
    },
    {
        "id": "e9d9dc531d3b166d",
        "type": "complete",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "scope": [
            "0d996033de2ed84e"
        ],
        "uncaught": false,
        "x": 280,
        "y": 720,
        "wires": [
            [
                "1a9b736187a463f7"
            ]
        ]
    },
    {
        "id": "4369249a4c68c277",
        "type": "complete",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "scope": [
            "2ade66982bca360c"
        ],
        "uncaught": false,
        "x": 280,
        "y": 860,
        "wires": [
            [
                "1cbf3f3272baec48"
            ]
        ]
    },
    {
        "id": "51526ab18642b30b",
        "type": "complete",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "scope": [
            "c5506b5fe3e4d571"
        ],
        "uncaught": false,
        "x": 280,
        "y": 1080,
        "wires": [
            [
                "d53e66c37991fa8e"
            ]
        ]
    },
    {
        "id": "346a3528a7770803",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb",
            "d9b3ca8bfaa4c10a"
        ],
        "x": 1625,
        "y": 720,
        "wires": []
    },
    {
        "id": "fab44b5501eca10e",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "d9b3ca8bfaa4c10a",
            "f76db0ea91c39edd"
        ],
        "x": 1625,
        "y": 760,
        "wires": []
    },
    {
        "id": "fd481458ee82463b",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Result",
        "info": "",
        "x": 270,
        "y": 1200,
        "wires": []
    },
    {
        "id": "c477f38740192ea9",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "ToLog",
        "info": "",
        "x": 1710,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7bd31985b9223517",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "FUNCTIONS",
        "info": "",
        "x": 1090,
        "y": 460,
        "wires": []
    },
    {
        "id": "cc0bfd5240e5cd1c",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Triggers",
        "info": "",
        "x": 200,
        "y": 420,
        "wires": []
    },
    {
        "id": "50d7d63eec1f72e1",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 1040,
        "y": 1160,
        "wires": []
    },
    {
        "id": "eca1e570e844713e",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SUM OF ALL FUNCTIONS",
        "info": "",
        "x": 770,
        "y": 1200,
        "wires": []
    },
    {
        "id": "36856525108ec859",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 500,
        "wires": [
            [
                "148fdf6802233c77"
            ]
        ]
    },
    {
        "id": "c3a9e17b02222cee",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in RTC Function1",
        "links": [
            "aad17e70a817393e",
            "b62de7b7b1c2c0b6",
            "c3c748a1b5f04d42",
            "e17b09af13812496"
        ],
        "x": 225,
        "y": 640,
        "wires": [
            [
                "bedbded591fa9076"
            ]
        ]
    },
    {
        "id": "bedbded591fa9076",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 640,
        "wires": [
            [
                "1a9b736187a463f7"
            ]
        ]
    },
    {
        "id": "d4cd561c0ac4473e",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "queue",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 540,
        "wires": [
            [
                "148fdf6802233c77"
            ]
        ]
    },
    {
        "id": "4051d3cb1ad86dbd",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in 8",
        "links": [
            "d6a9c376dde9c43f"
        ],
        "x": 225,
        "y": 500,
        "wires": [
            [
                "8b1072427fdbc1e0"
            ]
        ]
    },
    {
        "id": "0ccf5d93deef2e68",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "queue",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 960,
        "wires": [
            [
                "d53e66c37991fa8e",
                "71a546a3b074148f",
                "dfca926433d18402"
            ]
        ]
    },
    {
        "id": "4c81e32b9d30b212",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Link in SoftStart function GUI",
        "links": [
            "84f7cbc2cc8c135d",
            "b1118094796c2de3"
        ],
        "x": 225,
        "y": 960,
        "wires": [
            [
                "0ccf5d93deef2e68"
            ]
        ]
    },
    {
        "id": "549c557827b37714",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1410,
        "y": 700,
        "wires": [
            [
                "663fd79ce5a1610d"
            ]
        ]
    },
    {
        "id": "0d996033de2ed84e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function WAR2DIRECT",
        "func": "// All these functions ONLY need to be executed when the heatpump is in HEAT mode. \nvar msg1 = {};        //  pin 1 - SP_WAR (function on)\nvar msg99 = {};        //  pin 2 - Log information\n\n//******************************************************************************\nvar TOP20_ThreeWay_Valve_State = global.get('TOP20_ThreeWay_Valve_State');                    // Get the global variable for current possition of the three way valve. ROOM or DHW mode. (0=HEAT / 1=DHW)\nif (TOP20_ThreeWay_Valve_State === undefined) { return null; }\nvar Operating_Mode = global.get('TOP4_Operating_Mode_State', \"file\");\nif (Operating_Mode === undefined) { return null; }\nvar current_sp = global.get('TOP27_Z1_Heat_Request_Temp');                        // TOP27\nif (current_sp === undefined) { return null; }\nvar TOP76_Heating_Mode = global.get('TOP76_Heating_Mode', \"file\");                     // TOP76 - Compensation curve or DIRECT mode\nif (TOP76_Heating_Mode === undefined) { return null ; }\nvar war_state = global.get('Correction_0_WAR_on_off', \"file\");          // Get the global variable. Used to see if the WAR function is enabled.\nif (war_state === undefined) { war_state = 0; global.set('Correction_0_WAR_on_off', 0, \"file\") ; }\n\n//******************************************************************************\nvar war_ot1 = global.get('war_ot1', \"file\");                             // Outside temperature high         (warm outside)\nvar war_ot2 = global.get('war_ot2', \"file\");                             // Outside temperature intermediate (intermediate outside temperature)\nvar war_ot3 = global.get('war_ot3', \"file\");                             // Outside temperature low          (cold outside)\nvar war_wt1 = global.get('war_wt1', \"file\");                             // Water temperature low            (cold water)\nvar war_wt2 = global.get('war_wt2', \"file\");                             // Water temperature intermediate   (intermediate water temperature)\nvar war_wt3 = global.get('war_wt3', \"file\");                             // Water temperature high           (warm water)\n\n//******************************************************************************\nvar check = (war_ot1 + war_ot2 + war_ot3 + war_wt1 + war_wt2 + war_wt3);\nif (isNaN(check) || check === undefined)     // if the variables are added to eachother and the result is Not a Number, produce an error message.\n{\n    msg99.payload = \"Profile temperatures are not correctly set in the dashboard. Waiting for Panasonic import or user input\";\n    msg99.topic = \"Function WAR\";\n    return [null, msg99];\n}\n\n\n\nvar SP_start = global.get('SP_DIRECT_virt', \"file\");                       // Get the global variable for SP_DIRECT_virt. Value is set through the dashboard\n\nif (TOP76_Heating_Mode == 1 && (SP_start < 20 || SP_start === undefined)) {\n    SP_start = 20;\n    global.set('SP_DIRECT_virt', 20, \"file\");\n}\nif (TOP76_Heating_Mode == 0 && (SP_start > 5 || SP_start === undefined)) {\n    SP_start = 0;\n    global.set('SP_DIRECT_virt', 0, \"file\");\n}\n\nvar SP_war;                                                                     // set empty starting variable\n\nvar war_Tb = global.get('T_outside', \"file\");                           // Outdoor temperature.\nif (isNaN(war_Tb) === true || war_Tb === undefined || war_Tb < -50)             // if the variable is Not a Number, produce an error message.\n{\n    msg99.payload = \"T_outside is not valid. Waiting for correct value.\";\n    msg99.topic = \"Function WAR\";\n    return [null, msg99];\n}\n\nvar F_WAR_old_SP = global.get('F_WAR_SP');\nif (F_WAR_old_SP === undefined) {\n    F_WAR_old_SP = SP_start;\n    global.set('F_WAR_SP', SP_start);\n}\n\n\n////////////////////////////////////////////////////////////////////////////////\n//      Calculation of the NR WAR Setpoint\n////////////////////////////////////////////////////////////////////////////////\n\n\n\nif (war_Tb => war_ot1) { SP_war = war_wt1; }                                         // Range 1\n\nif (war_Tb < war_ot1 && war_Tb > war_ot2)                       // Range 2\n{ SP_war = (((war_wt1 - war_wt2) * ((war_Tb - war_ot1) / (war_ot1 - war_ot2))) + war_wt1); }\n\n\nif (war_Tb <= war_ot2 && war_Tb > war_ot3)                      // Range 3\n{ SP_war = (((war_wt2 - war_wt3) * ((war_Tb - war_ot2) / (war_ot2 - war_ot3))) + war_wt2); }\n\nif (war_Tb <= war_ot3)                                          // Range 4\n{ SP_war = war_wt3; }\n\nSP_war = Number(SP_war).toFixed(1);\nSP_war = parseFloat(SP_war);\n\n\n////////////////////////////////////////////////////////////////////////////////\n//      Compensation curve being used. WAR function not allowed.\n////////////////////////////////////////////////////////////////////////////////\nif (TOP76_Heating_Mode == 0) {\n    if (war_state == 1) {\n        global.set('Correction_0_WAR_on_off', 0, \"file\");\n        msg99.payload = \"Compensation curve active. Using internal Panasonic WAR function. NodeRed WAR function is now disabled\";\n        msg99.topic = \"Function WAR\";\n        return [null, msg99];\n    }\n    global.set('F_WAR_SP', SP_war);\n    msg1.payload = SP_war;\n    return [msg1, null];\n}\n////////////////////////////\n\n\n\n\n\n////////////////////////////////////////////////////////////////////////////////\n//      Direct mode > WAR function allowed.\n////////////////////////////////////////////////////////////////////////////////\nif (TOP76_Heating_Mode == 1) {\n    if (TOP20_ThreeWay_Valve_State == 1 || Operating_Mode === undefined || current_sp == 0 || TOP76_Heating_Mode == 0 || Operating_Mode == 1 || Operating_Mode == 3 || Operating_Mode == 5 || Operating_Mode == 7 || Operating_Mode == 8) {\n        return null;                                                        // If state is 1 (DHW mode), correction 0 is direclty exported to the message and the function ends here.\n    }\n    else {\n        msg1.payload = SP_war;                                                         // required\n        msg1.topic = 'SP_war';\n        msg1.source = 'WAR';\n\n        if (war_state == 0)                                               // If the state is 1 (enabled), AND outside temperature contains a value.\n        // Only if above conditions are met, we will go through the calculation.\n        {\n            global.set('F_WAR_SP', SP_start);\n\n            return [msg1, null];\n\n        }\n\n\n        if (war_state == 1) {\n\n            if (SP_war == F_WAR_old_SP) {\n                return [msg1, null];\n            }\n            else {\n                global.set('F_WAR_SP', SP_war);\n\n                msg99.payload = \"Setpoint change: From \" + F_WAR_old_SP + \" to \" + SP_war + \" °C\";\n                msg99.topic = \"Function WAR\";\n\n                return [msg1, msg99];\n            }\n        }\n        ////////////////////////////////////////////////////////////////////////////////\n    }\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 540,
        "wires": [
            [
                "d16f38ef74db786a",
                "5cc3ee0f614e6a06"
            ],
            [
                "663fd79ce5a1610d"
            ]
        ],
        "outputLabels": [
            "SP_WAR (function on)",
            "ToLog"
        ],
        "info": "# ALL IN ONE FUNCTION\n\nThis function takes care of WAR, RTC and SoftStart. Comments are within"
    },
    {
        "id": "2ade66982bca360c",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function RTC correction",
        "func": "var Operating_Mode = global.get('TOP4_Operating_Mode_State', \"file\");\nvar TOP69_Sterilization_State = global.get('TOP69_Sterilization_State', \"file\");\n\nif (Operating_Mode === undefined || Operating_Mode == 1 || Operating_Mode == 3 || Operating_Mode == 5 || Operating_Mode == 7 || Operating_Mode == 8 || TOP69_Sterilization_State == 1) {\n    return null;\n}\n\nelse {\n    var msg1 = {};    // pin 1 - current correction\n    var msg2 = {};    // pin 2 - current sp\n    var msg99 = {};   // pin 3\n    msg99.topic = \"Function RTC\";\n    var msg3 = {};    //  pin 4 - start sp\n\n    var F_RTC = global.get('F_RTC', \"file\");\n    if (F_RTC === undefined) { F_RTC = {}; }\n    if (F_RTC.z1 === undefined) { global.set('F_RTC.z1.state',0,\"file\"); }\n\n    //if (F_RTC.z1.state === undefined) { return null; }\n\n    var F_RTC_old_correction = global.get('F_RTC.z1.correction_value', \"file\");\n    if (F_RTC_old_correction === undefined) { F_RTC_old_correction = 0; global.set('F_RTC.z1.correction_value', 0, \"file\"); }\n\n    var F_WAR_SP = global.get('F_WAR_SP');\n    if (F_WAR_SP === undefined) { return null; }\n\n    if (F_RTC.z1.state == 0) {\n        rtc_correction = 0;               // If RTC is disabled, set correction to 0. end if\n        msg1.payload = rtc_correction;\n        msg1.topic = \"rtc_correction\";\n\n        msg2.payload = F_WAR_SP + rtc_correction;\n        msg2.topic = \"SP RTC result\";\n\n        msg3.payload = F_WAR_SP;\n        msg3.topic = \"Start SP\";\n\n        global.set('F_RTC.z1.correction_value', rtc_correction, \"file\");\n        return [msg1, msg2, null, msg3];\n\n    }\n\n    else {\n\n        // Declaration of variables including their values.    \n        var rtc_correction = 0;                                                // declare local variable, start with value zero\n        var rtc_PV = global.get('T_room');                             // Get the global variable. THe room temperature for RoomTemperatureCompensation you want to control.\n        if (rtc_PV === undefined) {/*node.warn('RTC correction rtc_PV');*/return null; }\n        var rtc_SP = global.get('WoonkamerSP', \"file\");                 // Virtual target temperature setpoint for RTC. Set in Dashboard.\n        if (rtc_SP === undefined) {/*node.warn('RTC correction rtc_SP');*/return null; }\n        //var rtc_Tb          = global.get('T_outside',\"file\");                   // Outdoor temperature.\n\n        var rtc_dT = (rtc_PV - rtc_SP);                                  // local variable for calculated temperature difference. If > 0 it is too warm, If < 0 it is too cold. \n        rtc_dT = Number(rtc_dT).toFixed(2);\n        rtc_dT = parseFloat(rtc_dT);\n        \n        //\n        // below are the variables containing the temperature ranges.\n        var rtc_t1 = F_RTC.z1.t1_limit;                      // Range +3\n        var rtc_t2 = F_RTC.z1.t2_limit;                      // Range +2\n        var rtc_t3 = F_RTC.z1.t3_limit;                      // Range +1\n\n        var rtc_t4 = F_RTC.z1.t4_limit;                      // Range -1\n        var rtc_t5 = F_RTC.z1.t5_limit;                      // Range -2\n        var rtc_t6 = F_RTC.z1.t6_limit;                      // Range -3\n        var rtc_t7 = F_RTC.z1.t7_limit;                     // Range -custom\n\n        var rtc_t7_custom_cor = F_RTC.z1.t7_correction_value;\n\n        if (isNaN(rtc_t1 + rtc_t2 + rtc_t3 + rtc_t4 + rtc_t5 + rtc_t6 + rtc_t7) === true)               // if the variables are added to eachother and the result is Not a Number, produce an error message.\n        {\n            msg99.payload = \"RTC function temperatures are not correctly set in the dashboard. Please correct this in the GUI.\";\n            return [null, null, msg99, null];\n\n        }\n\n        // ADJUST THE VALUES BELOW TO YOUR OWN SITUATION\n/*\n        if (rtc_dT >= rtc_t1) { rtc_correction = rtc_correction - 1; }                 // It is way too hot.\n        if (rtc_dT >= rtc_t2) { rtc_correction = rtc_correction - 1; }                 // It is too hot.\n        if (rtc_dT >= rtc_t3) { rtc_correction = rtc_correction - 1; }                 // It is a little too hot.\n\n        if (rtc_dT < rtc_t3 && rtc_dT > rtc_t4) { rtc_correction = 0; }               // It is right in the middle.... Nice\n\n        if (rtc_dT <= rtc_t4) { rtc_correction = rtc_correction + 1; }                 // It is a little too cold\n        if (rtc_dT <= rtc_t5) { rtc_correction = rtc_correction + 1; }                 // It is a little a fair bit colder\n        if (rtc_dT <= rtc_t6) { rtc_correction = 3; }                 // It is a little way too cold\n*/\n        if (rtc_dT >= rtc_t1)                        { rtc_correction = F_RTC.z1.t1_correction; } // It is way too hot.\n        if (rtc_dT >= rtc_t2 && rtc_correction == 0) { rtc_correction = F_RTC.z1.t2_correction; } // It is too hot.\n        if (rtc_dT >= rtc_t3 && rtc_correction == 0) { rtc_correction = F_RTC.z1.t3_correction; } // It is a little too hot.\n\n        if (rtc_dT <= rtc_t6 && rtc_correction == 0) { rtc_correction = F_RTC.z1.t6_correction; } // It is a little way too cold\n        if (rtc_dT <= rtc_t5 && rtc_correction == 0) { rtc_correction = F_RTC.z1.t5_correction; } // It is a little a fair bit colder\n        if (rtc_dT <= rtc_t4 && rtc_correction == 0) { rtc_correction = F_RTC.z1.t4_correction; } // It is a little too cold\n        \n        \n        // Use incremental_setpoints if switch enabled\n        var F_RTC_z1_incremental_setpoints_state = global.get('F_RTC.z1.incremental_setpoints_state', \"file\");    //switch on/off\n        if (F_RTC_z1_incremental_setpoints_state === undefined) { F_RTC_z1_incremental_setpoints_state = 0; }\n        if ((rtc_dT < rtc_t6 && rtc_dT > rtc_t7) && F_RTC_z1_incremental_setpoints_state == 1)                // in range (between +3 and +custom)\n        {\n            // calculate correction (between +3 and +custom):\n            rtc_correction = rtc_t7_custom_cor - F_RTC.z1.t1_correction;                                 // example (15-3)=12 degrees\n            // calculate temp range:\n            var Range = (rtc_t6 - rtc_t7); // -2.2 - -4.0 = 1.8                     //calculate No. steps    0.1 degrees steps?\n            Range = (Range * 10);                                                   // 18 steps\n            // devide rtc_correction through steps:\n            rtc_correction = (rtc_correction / Range);                              // 12 / 18 = 0.67 degrees-steps\n            // Calculate actual step:\n            var Actual_step = (rtc_t6 - rtc_dT) * 10;                               // stap 17 van 18\n            Actual_step = Number(Actual_step).toFixed(0);\n            // Apply correction at this step:\n            rtc_correction = (Actual_step * rtc_correction);                        // 18 * 0.67 = 11.32\n            rtc_correction = Number(rtc_correction).toFixed(1);                     // 11,3\n            rtc_correction = parseFloat(rtc_correction);\n            rtc_correction = rtc_correction + F_RTC.z1.t1_correction;                                     // 11.3 + 3 = 14.3\n            rtc_correction = Number(rtc_correction).toFixed(1);\n            rtc_correction = parseFloat(rtc_correction);\n            if (global.get('Debugging', \"file\") == 1) {                             // Show in log what incremental setpoint correction should be and continue:\n                msg99.payload = \"incremental setpoint correction at \" + rtc_PV + \"°C \" + \"--> \" + rtc_correction + \" °C\";\n                node.send([null, null, msg99, null]); // only to log and continue code from here\n            }\n        }\n\n        if (rtc_dT <= rtc_t7) { rtc_correction = rtc_t7_custom_cor; }                 // It is way too cold: use custom\n\n    }\n    //****************************************************************************** \n    msg1.payload = rtc_correction;\n    msg1.topic = \"rtc_correction\";\n\n    msg2.payload = F_WAR_SP + rtc_correction;\n    msg2.topic = \"SP RTC result\";\n\n    msg3.payload = F_WAR_SP;\n    msg3.topic = \"Start SP\";\n\n    var T_room = global.get('T_room'); // memory only\n\n    if (F_RTC_old_correction == rtc_correction) {\n        return [msg1, msg2, null, msg3];\n    }\n\n    else {\n        global.set('F_RTC.z1.correction_value', msg1.payload, \"file\");\n        msg99.payload = \"Correction change: From \" + F_RTC_old_correction + \" to \" + rtc_correction + \" °C (Room actual: \" + T_room + \" °C)\";\n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"function RTC\"); }\n        return [msg1, msg2, msg99, msg3];\n    }\n\n}",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 660,
        "wires": [
            [
                "18fd7ac120089042",
                "ab80bbcbde14cd64",
                "df044144e4292bd6"
            ],
            [
                "c54efadb07816cb9"
            ],
            [
                "549c557827b37714"
            ],
            []
        ],
        "outputLabels": [
            "rtc_correction",
            "SP RTC result",
            "ToLog",
            "Start SP"
        ]
    },
    {
        "id": "c5506b5fe3e4d571",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function NightReduction",
        "func": "\n////////////////////////////////////////////////////////////////////////////////\n// Night Reduction\nvar Operating_Mode      =global.get('TOP4_Operating_Mode_State',\"file\");\nif (Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)\n    {\n        return null;\n    }\nelse {\n    var nr_correction = global.get('NightReductionWaterTemp.correction',\"file\");\n    if (nr_correction === undefined) {\n        nr_correction=0;\n        global.set('NightReductionWaterTemp.correction',0,\"file\");\n    }\n\n    var NR_W_state = global.get('NightReductionWaterTemp.state',\"file\");\n    if (NR_W_state === undefined) {\n        NR_W_state=0;\n        global.set('NightReductionWaterTemp.current_value',0,\"file\");\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////\n    \n    let msg1={}, msg99={};\n    msg1.payload = nr_correction; \n    msg1.topic = \"nr_correction\";\n    \n    global.set('NightReductionWaterTemp.current_value',msg1.payload,\"file\");\n    \n    \n    msg99.payload = \"New correction: \" + nr_correction + \" °C\"; \n    msg99.topic = \"Function NightReduction\";\n    \n    return [msg1,msg99];\n}\n\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 820,
        "wires": [
            [
                "4223b24f5dc06d8e"
            ],
            [
                "663fd79ce5a1610d"
            ]
        ],
        "outputLabels": [
            "nr_correction",
            "ToLog"
        ]
    },
    {
        "id": "4223b24f5dc06d8e",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "9fd7064be2551caa"
        ],
        "x": 1625,
        "y": 820,
        "wires": []
    },
    {
        "id": "987d38642eaa3c4c",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "pong",
        "op2": "",
        "op1type": "str",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 520,
        "y": 1240,
        "wires": [
            [
                "add6fa4d403dd143"
            ]
        ]
    },
    {
        "id": "7c6f02c851467bc0",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "QM SS function to manager",
        "mode": "link",
        "links": [
            "9708d32f74bd48ae"
        ],
        "x": 1625,
        "y": 920,
        "wires": []
    },
    {
        "id": "0f365a79d7e2857d",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Exit QM SS function to manager",
        "info": "",
        "x": 1790,
        "y": 960,
        "wires": []
    },
    {
        "id": "d53e66c37991fa8e",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "",
        "op2": "ping",
        "op1type": "nul",
        "op2type": "str",
        "duration": "20",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "cb987aa12172f46f"
            ]
        ]
    },
    {
        "id": "1cbf3f3272baec48",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "ping",
        "op2": "",
        "op1type": "str",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 740,
        "y": 820,
        "wires": [
            [
                "c5506b5fe3e4d571"
            ]
        ]
    },
    {
        "id": "1a9b736187a463f7",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "ping",
        "op2": "",
        "op1type": "str",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 740,
        "y": 700,
        "wires": [
            [
                "2ade66982bca360c",
                "2695bccfb69a52d5"
            ]
        ]
    },
    {
        "id": "148fdf6802233c77",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "op1": "ping",
        "op2": "",
        "op1type": "str",
        "op2type": "nul",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 740,
        "y": 540,
        "wires": [
            [
                "0d996033de2ed84e"
            ]
        ]
    },
    {
        "id": "398d29ed6f37b424",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1370,
        "y": 800,
        "wires": [
            [
                "663fd79ce5a1610d"
            ]
        ]
    },
    {
        "id": "2695bccfb69a52d5",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function RTC automation",
        "func": "////////////////////////////////////////////////////////////////////////////\n////////////////////////// RTC - ON/OFF function ///////////////////////////\n//\n//\n//  This function has the goal to act when the temperature in the room is too high.\n//  It can either turn off the heatpump, or take the [heat]-mode out of the current operating mode.\n//  \n\nvar MQTT = global.get('MQTT', \"file\");\nif (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_rtc_onoff == 1)) {\n\n    var msg1 = {};        //  pin 1 - Output to power pump on/off \n    msg1.source = \"flow\";\n\n    var msg2 = {};        //  pin 2 - Output to Operating Mode\n    var msg99 = {};        //  pin 3 - Messages to Log\n    //\n    //  return [msg1,msg2,msg99]\n\n    var TOP69_Sterilization_State = global.get('TOP69_Sterilization_State', \"file\");\n\n    var Sterilization_active = global.get('Sterilization_active', \"file\");\n    if (Sterilization_active === undefined) { Sterilization_active = 0; }\n\n    var Force_DHW_active = global.get('Force_DHW_active', \"file\");\n    if (Force_DHW_active === undefined) { Force_DHW_active = 0; }\n\n    // var VirtualState = global.get('VirtualState'); //used to prevent unwanted shutdown detection \n\n    var Operating_Mode = global.get('TOP4_Operating_Mode_State', \"file\");\n    if (Operating_Mode === undefined) { return null; }\n    //  Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    \n    var F_RTC = global.get('F_RTC', \"file\");\n\n    //\n    if (F_RTC.automation_power_state === undefined) { F_RTC.automation_power_state = 0; }          // Get the global variable. Used to see if the RTC function is enabled through GUI.\n    if (F_RTC.automation_OM_state === undefined) { F_RTC.automation_OM_state = 0; }                // Get the global variable. Used to see if the RTC function is enabled through GUI.\n\n    var F_SOLAR = global.get(\"F_SOLAR\", \"file\");\n    if (F_SOLAR === undefined) {F_SOLAR={};}\n    if (F_SOLAR.function_active_state === undefined) { F_SOLAR.function_active_state = 0; }\n    //////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)    \n    if ((F_RTC.automation_power_state == 0 && F_RTC.automation_OM_state == 0) || Operating_Mode === undefined || Operating_Mode == 1 || Operating_Mode == 5 || Operating_Mode == 7 || Operating_Mode == 8 || Sterilization_active == 1 || Force_DHW_active == 1 || F_SOLAR.function_active_state == 1 || TOP69_Sterilization_State == 1)     //  First IF\n    {\n        //global.set('F_RTC.on_off_status',undefined,\"file\");\n        return null;\n    }\n\n\n\n    else {\n        // Declaration of variables including their values.    \n        var rtc_PV = global.get('T_room');                             // Get the global variable. THe room temperature for RoomTemperatureCompensation you want to control.\n        if (rtc_PV === undefined) { return null; }\n        var rtc_SP = global.get('WoonkamerSP', \"file\");                 // Virtual target temperature setpoint for RTC. Set in Dashboard. \n        if (rtc_SP === undefined) { return null; }\n        var rtc_dT = (rtc_PV - rtc_SP);                                  // local variable for calculated temperature difference. If > 0 it is too warm, If < 0 it is too cold. \n\n        var TOP0_Heatpump_State = global.get('TOP0_Heatpump_State', \"file\");              // get current state of the heatpump. on or off (1 or 0)\n        // below are the variables containing the temperature ranges.\n        var rtc_off = F_RTC.automation_off_limit;                               // Range turn heatpump off\n        if (rtc_off === undefined) { return null; }\n        var rtc_on = F_RTC.automation_on_limit;                               // Range turn heatpump on\n        if (rtc_on === undefined) { return null; }\n\n        var F_stored_next_operating_mode = global.get('F_stored_next_operating_mode', \"file\");\n\n        msg99.topic = \"Function RTC\";\n\n        //*****************************************************************************\n        //////////////////////////////////////////////////////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////////////////////////////////////////////////////\n        // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n        if (rtc_off > rtc_on) {\n            //node.warn('RTC function: Current OFF temperature is lower than the ON temperature. You must correct this !! ');\n            msg99.payload = \"<b>ERROR:</b> Current switch-OFF-temperature is lower than the switch-ON-temperature. You must correct this !!\";\n            return [null, null, msg99];\n        }\n\n        //if (rtc_dT > rtc_off)                           {global.set('F_RTC.on_off_status',0,\"file\");}\n        //if (rtc_dT >= rtc_on && rtc_dT <= rtc_off)      {global.set('F_RTC.on_off_status',1,\"file\");}\n        //if (rtc_dT < rtc_on)                            {global.set('F_RTC.on_off_status',2,\"file\");}\n\n\n        //*****************************************************************************\n        //      Scenario 1: the roomtemperature is high and above the 'off'limit. Automation start\n        //*****************************************************************************\n        if (rtc_dT > rtc_on && TOP0_Heatpump_State == 1 && Operating_Mode != 3) {\n            //  Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n            if (Operating_Mode == 2 && F_RTC.automation_power_state == 1) {\n\n                msg1.payload = 0;\n                msg1.source = \"flow\";\n                msg1.topic = \"new_heatpump_power\";\n                msg99.payload = \"Automation 'Turn off/on power' activated - power OFF (Room temp: \" + rtc_PV + \"°C)\";\n                global.set('MQTT_Source', \"rtc automation: on/off\");\n                global.set('F_RTC.automation_active', 1, \"file\");\n                return [msg1, null, msg99];\n            }\n\n            if (Operating_Mode == 0 && F_RTC.automation_power_state == 1) {\n                global.set('F_RTC.automation_active', 1, \"file\");\n                msg1.payload = 0;\n                msg1.source = \"flow\";\n                msg1.topic = \"new_heatpump_power\";\n                msg99.payload = \"Automation 'Turn off/on power' triggered - power OFF (Room temp: \" + rtc_PV + \"°C)\";\n                global.set('MQTT_Source', \"rtc automation: on/off\");\n                return [msg1, null, msg99];\n            }\n\n            if ((Operating_Mode == 4 || Operating_Mode == 6) && F_RTC.automation_OM_state == 1) {\n                if (F_stored_next_operating_mode === undefined) {\n                    global.set('F_stored_next_operating_mode', Operating_Mode, \"file\");\n                    msg99.payload = 'Stored next operating mode is set to ' + Operating_Mode; node.send([null, null, msg99]); \n                }\n                global.set('F_RTC.automation_active', 1, \"file\");\n                msg2.payload = 3;\n                msg2.topic = \"new_Operating_Mode\";\n                if (Operating_Mode == 4) { Operating_Mode = \"Heat+DHW\"; }\n                if (Operating_Mode == 6) { Operating_Mode = \"Auto+DHW\"; }\n                msg99.payload = \"Automation 'Change operating mode' triggered - Operating mode from \" + Operating_Mode + \" to DHW only\";\n                global.set('MQTT_Source', \"rtc automation: on/off\");\n                return [null, msg2, msg99];\n            }\n        }\n        //*****************************************************************************\n        //      Scenario 2: the roomtemperature is low enough again. Automation end\n        //*****************************************************************************\n        if (rtc_dT < rtc_off && F_RTC.automation_active == 1) {\n            if (TOP0_Heatpump_State == 0) {\n                global.set('F_RTC.automation_active', 0, \"file\");\n                msg1.payload = 1;\n                msg1.source = \"flow\";\n                msg1.topic = \"new_heatpump_power\";\n                msg99.payload = \"Automation 'Turn off/on power' triggered - power ON (Room temp: \" + rtc_PV + \"°C)\";\n                global.set('MQTT_Source', \"rtc automation: on/off\");\n                return [msg1, null, msg99];\n            }\n            if (TOP0_Heatpump_State == 1) {\n                global.set('F_RTC.automation_active', 0, \"file\");\n                var OM; // create empty\n                if (F_stored_next_operating_mode === undefined) {   \n                    //  READ: Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW) \n                    //  SET:  Operating mode (0=Heat only, 1=Cool only, 2=Auto, 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto+DHW\n                    if (Operating_Mode == 0) { F_stored_next_operating_mode = 0; }\n                    if (Operating_Mode == 1) { F_stored_next_operating_mode = 1; }\n                    if (Operating_Mode == 2) { F_stored_next_operating_mode = 2; }\n                    if (Operating_Mode == 3) { F_stored_next_operating_mode = 4; }\n                    if (Operating_Mode == 4) { F_stored_next_operating_mode = 4; }\n                    if (Operating_Mode == 5) { F_stored_next_operating_mode = 5; }\n                    if (Operating_Mode == 6) { F_stored_next_operating_mode = 6; }\n                    if (Operating_Mode == 7) { F_stored_next_operating_mode = 2; }\n                    if (Operating_Mode == 8) { F_stored_next_operating_mode = 6; }\n\n                    OM = F_stored_next_operating_mode;\n                    if (OM == 0) { OM = \"Heat only\"; } if (OM == 1) { OM = \"Cool only\"; } if (OM == 2) { OM = \"Auto\"; } if (OM == 3) { OM = \"DHW only\"; } if (OM == 4) { OM = \"Heat+DHW\"; } if (OM == 5) { OM = \"Cool+DHW\"; } if (OM == 6) { OM = \"Auto+DHW\"; } if (OM == 7) { OM = \"Auto\"; } if (OM == 8) { OM = \"Auto+DHW\"; }\n                    msg99.payload = \"Automation 'Change operating mode' triggered - Operation mode set to \" + F_stored_next_operating_mode + \" (\" + OM + \")\";\n                    node.send([null, null, msg99])\n                }\n                else {\n                    OM = F_stored_next_operating_mode;\n                    if (OM == 0) { OM = \"Heat only\"; } if (OM == 1) { OM = \"Cool only\"; } if (OM == 2) { OM = \"Auto\"; } if (OM == 3) { OM = \"DHW only\"; } if (OM == 4) { OM = \"Heat+DHW\"; } if (OM == 5) { OM = \"Cool+DHW\"; } if (OM == 6) { OM = \"Auto+DHW\"; } if (OM == 7) { OM = \"Auto\"; } if (OM == 8) { OM = \"Auto+DHW\"; }\n                    msg99.payload = \"Automation 'Change operating mode' triggered - Operation mode restored to \" + F_stored_next_operating_mode + \" (\" + OM + \")\";\n                    node.send([null, null, msg99])\n                }\n                msg2.payload = F_stored_next_operating_mode;\n                msg2.topic = \"new_Operating_Mode\";\n\n                global.set('F_stored_next_operating_mode', undefined, \"file\");\n                msg99.payload = 'Stored next operating mode is removed ' ; node.send([null, null, msg99]); \n                \n                //if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"rtc on/off\"); }\n                return [null, msg2, null];\n            }\n\n        }\n        //******************************************************************************\n    }\n}",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//global.set('F_stored_next_operating_mode',4,\"file\");",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 740,
        "wires": [
            [
                "346a3528a7770803"
            ],
            [
                "bf9d1ac2d5e48dd5"
            ],
            [
                "398d29ed6f37b424"
            ]
        ],
        "outputLabels": [
            "Output to pump on/off ",
            "Output to Operating Mode",
            "Messages to Log"
        ]
    },
    {
        "id": "acd2fcbdbfe464b3",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "RT",
        "info": "",
        "x": 330,
        "y": 680,
        "wires": []
    },
    {
        "id": "079d3ecc98b9f2d0",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "GUI",
        "info": "",
        "x": 330,
        "y": 640,
        "wires": []
    },
    {
        "id": "bc219d3bc7ec043e",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "GUI",
        "info": "",
        "x": 330,
        "y": 540,
        "wires": []
    },
    {
        "id": "e9b2408568d2ec7a",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "GUI",
        "info": "",
        "x": 330,
        "y": 960,
        "wires": []
    },
    {
        "id": "4e320817ddcf6f7b",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "name": "INFO INSIDE: Panasonic compressor rules",
        "info": "\n**Compressor on:**\nMain inlet 4 degrees lower than setpoint\n\nFormula:    [TOP5] <= [TOP27] - 4;\n            \n                [TOP5]  Main inlet\n                [TOP27] Setpoint (in direct mode)\n\n\n\n\n**Compressor off:**\nMain outlet temperature is 2 degrees higher than setpoint, for 3 minutes\n\nFormula:    [TOP6] + 2 >= [TOP27]\n\n                [TOP6]  Main outlet\n                [TOP27] Setpoint (in direct mode)\n\n",
        "x": 2140,
        "y": 500,
        "wires": []
    },
    {
        "id": "47f8da37ddbb8a39",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Filter",
        "func": "let msg1={};\nvar value = context.get('value');\n\n                                //After boot, make sure the first message is pushed forward.\nif (value === undefined){\n    context.set('value',msg.payload);\n    return msg;\n    \n}\n\n                                // filter messages with the same value.\nif (msg.payload != value) {\n    context.set('value',msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 680,
        "wires": [
            [
                "1a9b736187a463f7"
            ]
        ]
    },
    {
        "id": "dfca926433d18402",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function Quietmode Add-on",
        "func": "// Make an exception (bypass) during defrost routine:\nif (global.get('TOP26_Defrosting_State', \"file\") == 1) {\n    return [null, null, null]; // Do NOT send to log otherwise the filter node will pass this disabled-msg and SS disabled-msg in turn.\n}\nvar msg1 = {};  //  Pin 1: output to send softstart level to pump\nvar msg2 = {};  //  Pin 2: output to Input LOG\nmsg2.topic = \"Function SoftStart Quietmode\";\nvar msg3 = {};  //  pin 3: output to delay node\nmsg3.payload = 'ping';\n\n\nvar F_SS = global.get('F_SS', \"file\");\nif (F_SS === undefined) { F_SS = {}; global.set('F_SS', {}, \"file\"); return null; }\n\nvar CurrentQMLevel = global.get('TOP18_Quiet_Mode_Level', \"file\");                    // Current quiet mode level from TOP18\n\nif (F_SS.QM_state == 0 || F_SS.QM_state === undefined || F_SS.state == 0 || F_SS.state === undefined || CurrentQMLevel === undefined) {\n    return null;                                                   //leave function when parameters or settings are incorrect or unknown.\n}\n\nif (msg.topic == 'compressor_state' && msg.payload == 0) {\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart Quietmode\"); }\n    msg1.payload = F_SS.QM_active_level;\n    msg1.source = \"SoftStart Quietmode\";\n    msg2.payload = \"Compressor run ended, quiet mode set to level \" + F_SS.QM_active_level + \" for next run\";\n    msg3.topic = \"StopTimer\";\n    if (CurrentQMLevel != F_SS.QM_active_level) { return [msg1, msg2, msg3]; }\n    msg2.payload = \"Compressor run ended, quiet mode is already set to level \" + F_SS.QM_active_level;\n    return [null, msg2, msg3];\n}\n\nif (msg.topic == 'compressor_state' && msg.payload == 1) {\n    msg2.payload = \"Timer started (\" + F_SS.QM_duration + \" minutes)\";\n    msg3.delay = F_SS.QM_duration;                                              //  delay in minutes\n    return [null, msg2, msg3];                                                    //  Send delayed trigger\n}\n\nif (msg.payload == \"END\") {                                                     // End signal is received when timer ends, or when timer is reset.\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart Quietmode\"); }\n    msg1.payload = F_SS.QM_default_level;                        //restore Quietlevel to the default level\n    msg1.source = \"SoftStart Quietmode\";\n    msg2.payload = \"Timer ended, restoring quiet mode to level \" + F_SS.QM_default_level;\n    if (CurrentQMLevel != F_SS.QM_default_level) { return [msg1, msg2, null]; }\n    msg2.payload = \"Timer ended, quiet mode is already set to level \" + F_SS.QM_default_level;\n    return [null, msg2, null];\n}\n\nif (msg.topic == \"quietmode_disabled\") {\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart Quietmode\"); }\n    msg1.payload = F_SS.QM_default_level;                        //restore Quietlevel to the default level\n    msg1.source = \"SoftStart Quietmode\";\n    msg2.payload = \"Quiet mode disabled. restoring to level \" + F_SS.QM_default_level;\n    msg3.topic = \"StopTimer\";\n    if (CurrentQMLevel != F_SS.QM_default_level) { return [msg1, msg2, msg3]; }\n    return [null, null, msg3];\n}\n\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 920,
        "wires": [
            [
                "7c6f02c851467bc0",
                "ab62e7cec773d86d",
                "4f51ea978caaef1a"
            ],
            [
                "34cc66e23b5eec55"
            ],
            [
                "f27cfc9c262f0b0a"
            ]
        ],
        "outputLabels": [
            "to Quietmode manager",
            "to Input LOG",
            "to timer"
        ]
    },
    {
        "id": "3fc220e85feb9ec9",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Link in SoftStart function Hz",
        "links": [
            "c57a81d1dee5b8a9"
        ],
        "x": 225,
        "y": 1000,
        "wires": [
            [
                "f2d08992a6b90758"
            ]
        ]
    },
    {
        "id": "f2d08992a6b90758",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "on / off",
        "func": "var last_value = context.get('last_value');\n\nmsg.topic = 'compressor_state';\n\nif (msg.payload == 0)   {\n    if (last_value != msg.payload){\n            context.set('last_value',msg.payload);\n            return msg;\n    }\n}\n\nif (msg.payload > 0)    {\n    msg.payload = 1;\n    \n    if (last_value != msg.payload){\n            context.set('last_value',msg.payload);\n            return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1000,
        "wires": [
            [
                "d53e66c37991fa8e",
                "dfca926433d18402"
            ]
        ],
        "outputLabels": [
            "Compressor on(1) or off(0)"
        ]
    },
    {
        "id": "61beb903ec0e5a74",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Hz",
        "info": "",
        "x": 330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8716fd26da93059d",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "T",
        "info": "",
        "x": 330,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f27cfc9c262f0b0a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Delay timer",
        "func": "function myDelayFunction() {\n    let t = setTimeout(myEndFunction, timer);\n    context.set('tout',t);\n}\n\nfunction myEndFunction() {\n    let t = context.get('tout');  \n    let msg1={};\n    clearTimeout(t);\n    msg1.payload = 'END';\n    msg1.topic = msg.topic;\n    node.send(msg1);\n    node.status({});\n}\n\nfunction myResetFunction() {\n    let t = context.get('tout');    \n    clearTimeout(t);\n    node.status({});\n}\n\n//==================================\n\nif (msg.topic === \"StopTimer\"){\n    myResetFunction();\n}\n\n\nelse{\n    var delay = msg.delay;                                                          //  delay in minutes\n    var timer = (delay * 60000) + 250;                                              //  timer in seconds\n    \n    node.status({fill:\"green\", shape:\"ring\", text:\"Active: \" + delay + \" minutes\"});\n    myDelayFunction();  \n}\nreturn null;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 980,
        "wires": [
            [
                "dfca926433d18402"
            ]
        ]
    },
    {
        "id": "f67d5dfc15a9a469",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Delay timer",
        "func": "function myDelayFunction() {\n    let t = setTimeout(myEndFunction, timer);\n    context.set('tout',t);\n}\n\nfunction myEndFunction() {\n    let msg1={};\n    if (msg.topic == 'delayed_trigger'){\n        msg1.topic = 'delayed_trigger';\n    }\n    if (msg.force == 1) {msg1.force = 1;}\n    node.send(msg1);\n    node.status({});\n}\n\nfunction myResetFunction() {\n    let t = context.get('tout');    \n    clearTimeout(t);\n    node.status({});\n}\n\n//==================================\n\nif (msg.topic == 'reset'){\n    myResetFunction();\n}\nelse{\n    var timer = msg.delay;                                                          //  timer\n    timer = (timer * 1000) + 250;                                                    // increase timer by 250ms\n    node.status({fill:\"green\", shape:\"ring\", text:\"Active: \" + timer + \"ms\"});\n    \n    myDelayFunction();  \n}\nreturn null;\n\n/*\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n*/",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1100,
        "wires": [
            [
                "cb987aa12172f46f"
            ]
        ]
    },
    {
        "id": "71a546a3b074148f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "reset",
        "func": "// Function to check status of softstart / quietmode to interact with functions.\n// The timers will run when the softstart function starts. \n// when the ss functin is toggled off during the timer, the timer needs to be reset. \nvar msg1 = {}; //   pin 1 to SS_quietmode_state\nvar msg2 = {}; //   pin 2 to SS_state\n\nvar SS_state            = global.get('F_SS.state',\"file\");\nvar SS_quietmode_state  = global.get('SS_Quietmode_on_off',\"file\");\n\nif (SS_quietmode_state == 0){\n    msg1.topic = \"quietmode_disabled\";\n    node.send(msg1,null);\n}\n\nif (SS_state == 0){\n    msg2.reset = \"reset\";\n    node.send(null,msg2);\n}\n\nreturn null;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 960,
        "wires": [
            [
                "dfca926433d18402"
            ],
            [
                "f67d5dfc15a9a469"
            ]
        ],
        "outputLabels": [
            "SS_quietmode_state",
            "SS_state"
        ]
    },
    {
        "id": "6c6c36d2fc35901c",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "GUI / Scheduler",
        "info": "",
        "x": 360,
        "y": 820,
        "wires": []
    },
    {
        "id": "cb987aa12172f46f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "Function SoftStart",
        "func": "//////////////////////////////// SOFTSTART /////////////////////////////////////\nvar msg1={};            //  pin 1 - F_SS_correction\nvar msg99={};           //  pin 2 - To Log\n    msg99.topic     = \"Function SoftStart\";\nvar msg2={};            //  pin 3 - delay\n    msg2.payload    = 'PING';\n\nvar F_SS = global.get('F_SS',\"file\");\n    if (F_SS === undefined)         {global.set('F_SS',{},\"file\"); return null;}\n    \n    var total_duration              =   F_SS.total_duration;            // seconds\n    var phase_1_duration            =   F_SS.phase_1_duration;          // seconds\n    var phase_1_delay_time          =   F_SS.phase_1_delay_time;        // seconds\n    var phase_1_max_dT              =   F_SS.phase_1_max_dT;                 // max temperature difference between SP and Toutlet (Ta)\n    var phase_2_delay_time          =   F_SS.phase_2_delay_time;        // seconds\n    var phase_3_delay_time          =   F_SS.phase_3_delay_time;        // seconds\n    var upperlimit_correction       =   F_SS.upperlimit_correction;     // temperature\n    var lowerlimit_correction       =   F_SS.lowerlimit_correction;     // temperature\n    var F_SS_reset_after_defrost    =   F_SS.reset_after_defrost;       // 1 or 0. Should the softstar function restart after a defrost.\n    var F_SS_state                  =   F_SS.state;                     // 1 or 0. Is the SoftStart function enabled or not.\n    var F_SS_old_correction         =   F_SS.correction_value;          // stored correction as a result of the SoftStart function.\n    var correction_bandwidth        =   F_SS.correction_bandwidth;      // stored bandwidth inbetween the correction needs to be during phase 3, ending.\n\nif (F_SS_reset_after_defrost == 0 || F_SS_reset_after_defrost === undefined) {\n        if (global.get('TOP26_Defrosting_State', \"file\") == 1) {                              // uitzondering maken tijdens defrost                                   \n                msg99.payload = \"temporally disabled during defrost\"; \n                return [null, msg99];\n        }\n}\n\nvar TOP76_Heating_Mode = global.get('TOP76_Heating_Mode',\"file\");\nif (TOP76_Heating_Mode === undefined) {return null;}\n\nif (F_SS_state === undefined) { global.set('F_SS.state', +0 ,\"file\"); F_SS_state= +0; }\n\nif (F_SS_old_correction === undefined) {F_SS_old_correction=0; }\n\nvar TOP20_ThreeWay_Valve_State= global.get('TOP20_ThreeWay_Valve_State');\nif(TOP20_ThreeWay_Valve_State === undefined) { return null; }\n    \nvar F_SS_correction     = 0;\n\n//var HEAT_SP_lower_limit = global.get('HEAT_SP_lower_limit', \"file\") || 20; \n\nvar ss_Hz               = global.get('compressor_frequency',\"file\");                       // Get the global variable for current compressor frequency\n    if (ss_Hz === undefined)    {return null;}\n\nvar Operating_Mode      = global.get('TOP4_Operating_Mode_State',\"file\");\n\nvar SP_start            = global.get('F_WAR_SP');                                   //  Setpoint after WAR calculation\n    if (SP_start === undefined)    {return null;}\n\nvar F_RTC_correction    = global.get('F_RTC.z1.correction_value',\"file\");                    //  Correction of the RTC function Memory Only!\n    F_RTC_correction    = Number(F_RTC_correction).toFixed(1);                      // round it\n    F_RTC_correction    = parseFloat(F_RTC_correction);\n    if (F_RTC_correction===undefined) {F_RTC_correction=0;}\n\nvar F_NR_state = global.get('NightReductionWaterTemp.state', \"file\");                   \n    if (F_NR_state === undefined) { F_NR_state = 0; }\nvar F_NR_correction     = global.get('NightReductionWaterTemp.current_value',\"file\");                            //  Correction of the NightReduction function\n    if (F_NR_state == 0 || F_NR_correction === undefined) { F_NR_correction = 0; }\n\nvar F_SS_SP_start       = SP_start + F_RTC_correction + F_NR_correction;            //  Calculate the starting temperature (SP) for the SoftStart function \n\nvar Defrost             = global.get('TOP26_Defrosting_State',\"file\");\n    if (Defrost === undefined)  {Defrost = 0;}\n\n\n//// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, --- 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\n// ***********************************************************************************\nif (F_SS_state == 0 || ss_Hz == 0 || TOP20_ThreeWay_Valve_State != 0 || Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8 || Defrost==1)                     \n//  Check if the function is enabled. Check if the compressor is running. Check if 3wayvalvue is in HEAT mode(0).\n    {\n        F_SS_correction = 0;                                                        //  If the function is off, or the compressor is off, set  correction to zero\n        if (F_SS.correction_value != F_SS_correction) {\n        global.set('F_SS.correction_value',F_SS_correction,\"file\");                              //  Set the correctionvalue\n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }\n        }\n        global.set('StartTime', undefined, \"file\");\n        global.set('F_SS_actual_stage', undefined);                                 // 11-01-2023 reset (for debugging/System Check remember the softstart stage)\n        \n        msg1.payload = F_SS_correction; \n        msg1.topic = 'Compressor off. F_SS_correction 0';\n        \n        msg2.topic = 'reset';\n        msg2.payload = 'PANG';\n        \n        msg99.payload = \"SoftStart function end\";\n        \n        if (Defrost == 1) {\n            msg1.topic = 'Function SoftStart';\n            msg99.payload = \"Defrost - Correction: 0\";\n        }\n        \n        global.set('F_SS.correction_bandwidth',undefined,\"file\");\n        msg1.payload = Number(msg1.payload).toFixed(0);\n        msg1.payload = parseFloat(msg1.payload);\n        return [msg1,msg99,msg2];\n    }\n// ***********************************************************************************\n//\nelse    \n{\n        var F_SS_new_SP;                                                            //  declare an empty variable\n        var ss_PV_Ta            = global.get('TOP6_Main_Outlet_Temp');                   //  PV (Ta/outlet) Temperature of water.\n        var ss_PV_Tr            = global.get('TOP5_Main_Inlet_Temp');                    //  PV (Tr/inlet) Temperature of water\n            if (ss_PV_Ta === undefined || ss_PV_Tr === undefined)   {return null;}\n        var T = '';\n        var C = '';\n        \n        //\n        // ***********************************************************************************\n        /////// Timer how long the compressor is on. Runtime //////////\n        // ***********************************************************************************\n        var CurrentTime = new Date().getTime();\n        var StartTime = global.get('StartTime', \"file\");\n        \n        if (StartTime === undefined)\n            {\n                StartTime = CurrentTime;\n                global.set('StartTime', StartTime, \"file\");\n                \n                // send trigger to timer after phase 1\n                msg2.topic = 'delayed_trigger';\n                \n                msg2.delay = phase_1_duration;\n                msg2.force = 1;\n                node.send([null,null,msg2]);                                         // SENDS MSG TO TIMER FUNCTION\n                msg2.force = 0;\n            }\n            \n        var TimeElapsed = ((CurrentTime - StartTime)/1000);\n        TimeElapsed = parseFloat(TimeElapsed.toFixed(0));\n        // *********************************************************************\n        var Phase;\n            if (TimeElapsed < phase_1_duration)                                     {Phase = 1;}\n            if (TimeElapsed >= phase_1_duration && TimeElapsed < total_duration)    {Phase = 2;}\n            if (TimeElapsed >= total_duration)                                      {Phase = 3;}\n\n        if (msg.force == 1) {\n                if (Phase == 1 && phase_1_delay_time != 0) {\n                        msg2.delay = phase_1_delay_time;\n                        if (msg2.delay < 5) {msg2.delay = 5;}\n                        msg2.force = 1;\n                        node.send([null,null,msg2]);                            // SENDS MSG TO TIMER FUNCTION\n                        msg2.force = 0;\n                }\n                \n                if (Phase == 2) {\n                    msg2.delay = total_duration - TimeElapsed;\n                    msg2.force = 1;\n                    node.send([null,null,msg2]);                                // SENDS MSG TO TIMER FUNCTION\n                    msg2.force = 0;\n                }\n                if (Phase == 3) {\n                    msg2.topic = 'reset';                                       // reset any ongoing timers. force shutdown at given interval\n                    node.send([null,null,msg2]); \n                    \n                    msg2.topic = 'delayed_trigger';                             // send msg to timer to trigger next reductin step\n                    msg2.force = 1;\n                    msg2.delay = phase_3_delay_time;\n                    node.send([null,null,msg2]);                                \n                    msg2.force = 0;\n                    msg2.topic = '';\n                }\n        }\n\n\n        // ***********************************************************************************\n        //      Stage 1 - Start up\n        // ***********************************************************************************\n        if (Phase == 1){\n                \n                global.set('F_SS_actual_stage', \"Stage 1 - just started\");          // 11-01-2023 remember actual stage for debugging/system check)\n                F_SS_correction = -5;                                               //  Set the starting correction to -5\n                F_SS_new_SP = F_SS_SP_start + F_SS_correction;                      //  Calculate the NEW SP.\n                \n                T = ' - (STARTUP)';\n                \n                if (ss_PV_Ta + phase_1_max_dT > F_SS_new_SP)                        //  Check if the NEW SP is not too low (2C below Ta) \n                    {\n                        F_SS_new_SP             = ss_PV_Ta + phase_1_max_dT;        //  NEW SP\n                        F_SS_correction         = F_SS_new_SP - F_SS_SP_start;      //  NEW CORRECTION\n                    }\n                if (F_SS_new_SP > F_SS_SP_start + 7)                                //  Check if the NEW SP is not too high (7C above original SP) coming out of DHW eg.\n                    {\n                        F_SS_new_SP             = F_SS_SP_start + 7;                //  NEW SP\n                        F_SS_correction         = 7;                                //  NEW CORRECTION\n                    }\n            }\n        \n        // ***********************************************************************************\n        //      Stage 2 - waiting for pump to relax\n        // ***********************************************************************************\n        if (Phase == 2){                                                                                                // phase 2\n                global.set('F_SS_actual_stage', \"Stage 2 - waiting for pump to relax\");                                 // 11-01-2023 remember actual stage for debugging/system check)\n                \n                F_SS_new_SP                     = ss_PV_Ta -1;                      //  NEW SP\n                    if (F_SS_new_SP < F_SS_SP_start + lowerlimit_correction)\n                        {\n                            F_SS_new_SP = F_SS_SP_start + lowerlimit_correction;\n                        }\n                F_SS_correction                 = F_SS_new_SP - F_SS_SP_start;      //  NEW CORRECTION\n                \n                if (F_SS_correction > upperlimit_correction)   {\n                        F_SS_correction = upperlimit_correction;\n                        F_SS_new_SP = F_SS_SP_start + upperlimit_correction;\n                        C = ' (Capped)';\n                    }\n                if (F_SS_correction < lowerlimit_correction)   {\n                        F_SS_correction = lowerlimit_correction;\n                        F_SS_new_SP = F_SS_SP_start + lowerlimit_correction;\n                        C = ' (Capped)';\n                    }\n                \n                T = ' - (STABLE)';\n        }\n        // ***********************************************************************************\n        //       Stage 3 - Pump has relaxed. Remove correction, back to original setpoint... Slowly\n        //***********************************************************************************\n        if (Phase == 3){                                                                                                // phase 2\n                    \n                    global.set('F_SS_actual_stage', \"Stage 3 - Pump has relaxed, back to original setpoint\");           // 11-01-2023 remember actual stage for debugging/system check)\n                    F_SS_new_SP = F_SS_SP_start + F_SS_correction;                      //  Calculate the NEW SP.\n                    \n                    if (F_SS_old_correction < -1) {\n                        F_SS_correction = F_SS_old_correction + 1;\n                    }\n                    \n                    \n                    if (F_SS_old_correction > 1) {\n                        F_SS_correction = F_SS_old_correction - 1;\n                    }\n                    \n                    if (F_SS_old_correction >= -1 && F_SS_old_correction <= 1) {\n                        F_SS_correction = 0;\n                        // No delay triggers needed anymore\n                    }                    \n                    \n                    F_SS_new_SP                 = F_SS_SP_start + F_SS_correction ;                    //  NEW SP\n                    T = ' - (ENDING)';\n        }\n        // ***********************************************************************************\n}\n\n\n// *****************************************************************************\n// calculate temp SP_Final *note* only for log message\nvar F_WAR_onoff = global.get('Correction_0_WAR_on_off', \"file\") || 0;\nvar F_WAR_SP    = global.get('F_WAR_SP');\nvar F_RTC_state = global.get('F_RTC.z1.state', \"file\") || 0;\nvar SP_Final    = global.get('SP_DIRECT_virt',\"file\");\n    if (F_WAR_onoff == 1 && TOP76_Heating_Mode == 0) { SP_Final = SP_Final; }\n    if (F_WAR_onoff == 0 && TOP76_Heating_Mode == 1) { SP_Final = F_WAR_SP; }\n    if (F_RTC_state == 1) { SP_Final = SP_Final + F_RTC_correction; }\n    if (F_NR_state  == 1) { SP_Final = SP_Final + F_NR_correction; }\n\n// *****************************************************************************\n\nvar StartTime_temp_step = context.get('StartTime_temp_step');\nif (StartTime_temp_step === undefined) {\n    StartTime_temp_step = CurrentTime;\n    context.set('StartTime_temp_step',CurrentTime);\n}\n\nvar TimeElapsed_temp_step = (CurrentTime - StartTime_temp_step) / 1000;         // time is in ms. \n    TimeElapsed_temp_step = parseFloat(TimeElapsed_temp_step.toFixed(0));\n\nF_SS_correction = Number(F_SS_correction).toFixed(0);\nF_SS_correction = parseFloat(F_SS_correction);\n\nmsg1.payload = F_SS_correction; \nmsg1.topic = 'F_SS_correction ' + T;\n\n\nif (msg.force == 1) {\n    if (Phase == 1) {msg99.payload = \"Start Phase 1\";}\n    if (Phase == 2) {msg99.payload = \"Start Phase 2\";}\n    if (Phase == 3) {msg99.payload = \"Phase 3 - Phase out step\";}\n    node.send([null,msg99,null]);\n}\n\nif (Phase == 1){\n        \n        //node.warn('Phase 1 main section');\n        if (F_SS_correction <= F_SS_old_correction){\n            //node.warn('Phase 1 sub-section (1)');\n                global.set('F_SS.correction_value',F_SS_correction,\"file\"); \n                context.set('StartTime_temp_step',undefined);\n                \n                SP_Final += F_SS_correction;\n                SP_Final = Math.ceil(SP_Final);\n                msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + F_SS_correction + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n                msg1.payload = F_SS_correction; \n                if (F_SS_correction != F_SS_old_correction)     { if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); } return [msg1,msg99,null];}\n                else                                            {return [msg1,null,null];}\n        }\n        \n        if (F_SS_correction > F_SS_old_correction && TimeElapsed_temp_step >= phase_1_delay_time){\n           // node.warn('Phase 1 sub-section (2)');\n                global.set('F_SS.correction_value',F_SS_correction,\"file\"); \n                context.set('StartTime_temp_step',undefined);\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }\n                SP_Final += F_SS_correction;\n                SP_Final = Math.ceil(SP_Final);\n                msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + F_SS_correction + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n                msg1.payload = F_SS_correction; \n                return [msg1,msg99,null];\n        }\n        \n        if (F_SS_correction > F_SS_old_correction && TimeElapsed_temp_step < phase_1_delay_time){\n            //node.warn('Phase 1 sub-section (3)');\n                F_SS_correction = F_SS_old_correction;\n                //global.set('F_SS.correction_value',F_SS_old_correction,\"file\");\n                //if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }\n                msg2.delay = phase_1_delay_time;\n                msg2.topic = \"delayed_trigger\";\n                msg1.payload = F_SS_old_correction; \n                \n                //msg99.payload = \"Less than phase_1_delay_time. TimeElapsed_temp_step: \" + TimeElapsed_temp_step + \"s StartTime_temp_step: \" + StartTime_temp_step;\n                return [msg1,null,msg2]; ///////////   <<<<<<<<<<<<<<<<<<<<<<<<\n        }\n}\n\nif (Phase == 2){\n        if (F_SS_correction <= F_SS_old_correction){\n                global.set('F_SS.correction_value',F_SS_correction,\"file\"); \n                context.set('StartTime_temp_step', undefined);\n                \n                SP_Final += F_SS_correction;\n                SP_Final = Math.ceil(SP_Final);\n                msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + F_SS_correction + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n                msg1.payload = F_SS_correction; \n            if (F_SS_correction != F_SS_old_correction)     { if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }   return [msg1,msg99,null];}\n            else                                            {return [msg1,null,null];}\n        }\n        \n        if (F_SS_correction > F_SS_old_correction && TimeElapsed_temp_step >= phase_2_delay_time){\n                global.set('F_SS.correction_value',F_SS_correction,\"file\");\n                context.set('StartTime_temp_step', undefined);\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }\n                SP_Final += F_SS_correction;\n                SP_Final = Math.ceil(SP_Final);\n                msg1.payload = F_SS_correction; \n                msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + F_SS_correction + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n                return [msg1,msg99,null];\n        }\n        \n        if (F_SS_correction > F_SS_old_correction && TimeElapsed_temp_step < phase_2_delay_time){\n                global.set('F_SS.correction_value',F_SS_old_correction,\"file\");\n                //if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart\"); }\n                msg2.delay = phase_2_delay_time;\n                msg2.topic = \"delayed_trigger\";\n                msg1.payload = F_SS_old_correction; \n                //msg99.payload = \"Less than phase_2_delay_time. TimeElapsed_temp_step: \" + TimeElapsed_temp_step + \"s StartTime_temp_step: \" + StartTime_temp_step;\n                return [msg1,null,msg2]; ///////////   <<<<<<<<<<<<<<<<<<<<<<<<\n        }\n}\n\nif (Phase == 3 && msg.force == 1) {\n        if (F_SS_old_correction < -1 || F_SS_old_correction > 1){\n            correction_bandwidth = F_SS_correction;\n            global.set('F_SS.correction_bandwidth',correction_bandwidth,\"file\");\n        }\n        \n        \n        if (F_SS_old_correction != 0)   {global.set('F_SS.correction_value',F_SS_correction,\"file\");}\n        if (F_SS_old_correction == 0)   {\n                                            global.set('F_SS.correction_value',0,\"file\");\n                                            global.set('F_SS.correction_bandwidth',undefined,\"file\");\n                                        }\n        \n        SP_Final += F_SS_correction;\n        SP_Final = Math.ceil(SP_Final);\n        msg1.payload = F_SS_correction; \n        msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + F_SS_correction + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n        if (F_SS_old_correction != 0)   {   return [msg1,msg99,null];\n        }\n        else                            {   msg2.topic = 'reset';                                       // reset any ongoing timers. force shutdown at given interval\n                                            return [msg1,null,msg2];\n        }\n\n}\n\n if (Phase == 3 && msg.force != 1){\n        if (correction_bandwidth > 0 && F_SS_correction > correction_bandwidth){\n            global.set('F_SS.correction_value',correction_bandwidth,\"file\");\n            SP_Final += correction_bandwidth;\n            msg1.payload = correction_bandwidth; \n            //msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + correction_bandwidth + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n            return [msg1,null,null];\n        }\n        if (correction_bandwidth > 0 && F_SS_correction < -1 * correction_bandwidth){\n            global.set('F_SS.correction_value',-1 * correction_bandwidth,\"file\");\n            SP_Final += -1 * correction_bandwidth;\n            msg1.payload = correction_bandwidth * -1; \n            //msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + -1 * correction_bandwidth + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n            return [msg1,null,null];\n        }\n        \n        \n        \n        if (correction_bandwidth < 0 && F_SS_correction < correction_bandwidth){\n            global.set('F_SS.correction_value',correction_bandwidth,\"file\");\n            SP_Final += correction_bandwidth;\n            msg1.payload = correction_bandwidth; \n            //msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + correction_bandwidth + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n            return [msg1,null,null];\n        }\n        if (correction_bandwidth < 0 && F_SS_correction > -1 * correction_bandwidth){\n            global.set('F_SS.correction_value',-1 * correction_bandwidth,\"file\");\n            SP_Final += -1 * correction_bandwidth;\n            msg1.payload = correction_bandwidth * -1; \n            //msg99.payload = \"Correction: \" + F_SS_old_correction + \" > \" + -1 * correction_bandwidth + \" °C\" + T + \" Freq: \" + ss_Hz + \"Hz, SP_Final: <b>\" + SP_Final + \"</b>°C\"; \n            return [msg1,null,null];\n        }\n        \n        //global.set('F_SS.correction_value',F_SS_old_correction,\"file\");\n        //return [null,null,null];\n        \n}",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1040,
        "wires": [
            [
                "16054e8334890ad8",
                "ab62e7cec773d86d",
                "37c42afd25bc6594"
            ],
            [
                "663fd79ce5a1610d"
            ],
            [
                "f67d5dfc15a9a469"
            ]
        ],
        "outputLabels": [
            "F_SS_correction",
            "ToLog",
            "Dynamic delay trigger"
        ]
    },
    {
        "id": "e8b855966cfa18d3",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "NightReduction WATER",
        "info": "",
        "x": 260,
        "y": 4160,
        "wires": []
    },
    {
        "id": "e4932a30dba95577",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 1040,
        "wires": [
            [
                "d53e66c37991fa8e",
                "9ece6a95a9a5c846"
            ]
        ]
    },
    {
        "id": "9ece6a95a9a5c846",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out - To SS chart",
        "mode": "link",
        "links": [
            "4212c42fb72cce77"
        ],
        "x": 655,
        "y": 1100,
        "wires": []
    },
    {
        "id": "2df56a3ae0782bfd",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "to chart",
        "info": "",
        "x": 750,
        "y": 1120,
        "wires": []
    },
    {
        "id": "41a9c3500d63fb7e",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "T",
        "info": "",
        "x": 330,
        "y": 500,
        "wires": []
    },
    {
        "id": "0fb10778eba34911",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T_Room Input Selector",
        "func": "var TOP33 = global.get('TOP33_Room_Thermostat_Temp');             // The default heatpump outside temperature sensor\nvar T_room_custom = global.get('T_room_custom', \"file\");                          // Custom outside temperature sensor\nif (T_room_custom === undefined) { T_room_custom = {} }\nvar T_room;\nvar CurrentTime = new Date().getTime();\n\n\n\n//  msg={};         // payload\nmsg.payload = Number(msg.payload).toFixed(2);\nmsg.payload = parseFloat(msg.payload);\n\nlet msg99 = {};       // Info to log\nmsg99.topic = \"SETUP - Sensors\";\n\n//******************************************************************************\n// Default panasonic thermostat temperature sensor\n//******************************************************************************\nif (msg.topic == 'panasonic_heat_pump/main/Room_Thermostat_Temp') {\n        if (msg.payload != TOP33) {\n                global.set('TOP33_Room_Thermostat_Temp', msg.payload);\n                TOP33 = msg.payload;\n\n        }\n\n        if (T_room_custom.value_time === undefined) {\n                global.set('T_room', TOP33);\n                msg99.payload = \"<font color=red>Custom room temperature sensor not found. Using internal sensor (TOP33)</font>\";\n\n                return [msg, msg99];\n        }\n\n        if ((CurrentTime - T_room_custom.value_time) > 60 * 1000 * 60 * 5) {   // 5 hours\n                global.set('T_room', TOP33)\n                msg99.payload = \"<font color=red> Custom room temperature sensor lost - last value older than 5 hours. Using internal sensor (TOP33)</font>\";\n\n                return [msg, msg99];\n        }\n\n}\n//******************************************************************************\n// Custom temperature sensor\n//******************************************************************************\nif (msg.topic != 'panasonic_heat_pump/main/Room_Thermostat_Temp') {\n\n\n        if (T_room_custom.value_time === undefined || (CurrentTime - T_room_custom.value_time) > 60 * 1000 * 60 * 5) {\n                T_room_custom.value = msg.payload;\n                T_room_custom.value_time = CurrentTime;\n                global.set('T_room_custom', T_room_custom, \"file\");\n                global.set('T_room', msg.payload);\n                msg99.payload = \"<font color=green>Custom room temperature sensor found</font>\";\n\n                return [msg, msg99];\n        }\n\n        if (msg.payload != T_room) {\n                T_room_custom.value = msg.payload;\n                T_room_custom.value_time = CurrentTime;\n                global.set('T_room_custom', T_room_custom, \"file\");\n\n                global.set('T_room', msg.payload);\n                return [msg, null];\n        }\n\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 260,
        "wires": [
            [
                "a22898dfdc4ff0ca"
            ],
            [
                "2df41704fe34f586"
            ]
        ],
        "outputLabels": [
            "payload",
            "Info to log"
        ]
    },
    {
        "id": "2df41704fe34f586",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 300,
        "wires": [
            [
                "f0b20c8165a68430"
            ]
        ]
    },
    {
        "id": "76a161da01cebe9c",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 44",
        "mode": "link",
        "links": [
            "1f4a153d2239272b",
            "5d0b7390e93f7e48"
        ],
        "x": 1235,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f1055c6bf5c95540",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP7 panasonic_heat_pump/main/Main_Target_Temp",
        "topic": "panasonic_heat_pump/main/Main_Target_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 1880,
        "wires": [
            [
                "da5b21d833a80e29"
            ]
        ]
    },
    {
        "id": "da5b21d833a80e29",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.TOP7_Main_Target_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP7_Main_Target_Temp';\nif (msg.payload != global.get('TOP7_Main_Target_Temp')) {\n    global.set(\"TOP7_Main_Target_Temp\",msg.payload);} \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1880,
        "wires": [
            [
                "ab4c54e8c1061535"
            ]
        ]
    },
    {
        "id": "ab4c54e8c1061535",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP7_Main_Target_Temp",
        "mode": "link",
        "links": [],
        "x": 1495,
        "y": 1880,
        "wires": []
    },
    {
        "id": "3d8e357b01de57ff",
        "type": "ui_chart",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "",
        "group": "1fd46fe459716742",
        "order": 1,
        "width": 14,
        "height": 10,
        "label": "Water flow",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#de425b",
            "#00876c",
            "#f59b56",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3590,
        "y": 1440,
        "wires": [
            [
                "dd1a38c2ccf4f47e"
            ]
        ]
    },
    {
        "id": "879b071f7e013653",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "Function Reduce pump speed (check)",
        "func": "var msg1 = {};      // Pin 1 - Pumpspeed to set\nvar msg2 = {};      // pin 2 - output current mode (name)\nvar msg99 = {};     // pin 3 - To log\n    msg99.topic = \"Function Pump speed\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nif (global.get('TOP0_Heatpump_State',\"file\") == 0)              { return null; }\n\nvar compressor_frequency = global.get('compressor_frequency',\"file\");\n    if (compressor_frequency === undefined)                     { return null; }\n\nvar F_ReducePumpSpeed = global.get('F_ReducePumpSpeed', \"file\");\n    if (F_ReducePumpSpeed === undefined)                        { return null; }\n    if (F_ReducePumpSpeed.PumpMaxFlowSetting === undefined)     { return null; }\n\nvar TOP69_Sterilization_State = global.get('TOP69_Sterilization_State',\"file\");\n    if (TOP69_Sterilization_State === undefined)                { return null; }\n\nvar TOP20_ThreeWay_Valve_State = global.get('TOP20_ThreeWay_Valve_State');\n    if (TOP20_ThreeWay_Valve_State === undefined)               { return null; }\n\nvar TOP26_Defrosting_State = global.get('TOP26_Defrosting_State', \"file\");\n    if (TOP26_Defrosting_State === undefined)                   { return null; }\n    if (TOP26_Defrosting_State == 1)                            { return null; } // exit during defrosting\n    \n////////////////////////////////////////////////////////////////////////////////\nif (F_ReducePumpSpeed.state === undefined)                      { return null; }\nif (F_ReducePumpSpeed.state == 0)                               { return null; }\n\n\nif (compressor_frequency == 0 && F_ReducePumpSpeed.PumpMaxFlowSetting != F_ReducePumpSpeed.LowSpeed)      { msg1.payload = F_ReducePumpSpeed.LowSpeed; msg2.payload = \"Low\";} // low\nif (compressor_frequency == 0 && F_ReducePumpSpeed.PumpMaxFlowSetting == F_ReducePumpSpeed.LowSpeed)      { return null; }\n\nif (compressor_frequency > 0) {\n    if (TOP20_ThreeWay_Valve_State == 1)                                                { msg1.payload = F_ReducePumpSpeed.DHWSpeed; msg2.payload = \"DHW\";} // dhw\n    if (TOP20_ThreeWay_Valve_State == 0)                                                { msg1.payload = F_ReducePumpSpeed.HEATSpeed; msg2.payload = \"HEAT\";} // room\n}\n\nif (TOP69_Sterilization_State == 1)                                                     { msg1.payload = F_ReducePumpSpeed.DHWSpeed; msg2.payload = \"DHW\";}\n\n\nlet var1 = msg1.payload;\nvar1 = (var1 - 64) / 190 * 100;\nvar1 = \" (\" + Number(var1).toFixed(0) + \"%)\";\n\nif (F_ReducePumpSpeed.PumpMaxFlowSetting != msg1.payload) {\n    global.set(\"F_ReducePumpSpeed.PumpMaxFlowSetting\", msg1.payload, \"file\");\n}\n\nmsg99.payload = \"Max pumpspeed set to \" + msg1.payload + var1 + \" (\" + msg2.payload + \")\";\nreturn [msg1,msg2,msg99];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 1000,
        "wires": [
            [
                "7708ef15cae3ed59"
            ],
            [
                "b23ef1030db7e252"
            ],
            [
                "7e0e6f1fd86c6d31"
            ]
        ],
        "outputLabels": [
            "to SET15 - max pumpspeed",
            "current mode",
            "to log"
        ]
    },
    {
        "id": "73a3b137b4661912",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "Frequency link-in",
        "links": [
            "c57a81d1dee5b8a9"
        ],
        "x": 2695,
        "y": 1040,
        "wires": [
            [
                "879b071f7e013653"
            ]
        ]
    },
    {
        "id": "c2c09dbebda13484",
        "type": "ui_switch",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "label": "Flexible pumpspeed",
        "tooltip": "",
        "group": "4fb2801b6ab7ae20",
        "order": 2,
        "width": 7,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3160,
        "y": 1120,
        "wires": [
            [
                "dbb3202d2fc26245",
                "925216cb64196829"
            ]
        ]
    },
    {
        "id": "c91855502498f443",
        "type": "ui_slider",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "Low",
        "label": "",
        "tooltip": "",
        "group": "4fb2801b6ab7ae20",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "LowSpeed",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 3110,
        "y": 1200,
        "wires": [
            [
                "07adfdd98bc7ec6f"
            ]
        ]
    },
    {
        "id": "9dfdd1d4ae5594b1",
        "type": "ui_slider",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "DHW",
        "label": "",
        "tooltip": "",
        "group": "4fb2801b6ab7ae20",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "DHWSpeed",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 3110,
        "y": 1320,
        "wires": [
            [
                "7d78560a43c952f3"
            ]
        ]
    },
    {
        "id": "17069d9228f8f72d",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "group": "4fb2801b6ab7ae20",
        "name": "Line - Reduce pumpspeed function",
        "order": 1,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Flexible pumpspeed function</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3060,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "ec44ca9b8998e3a4",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "group": "4fb2801b6ab7ae20",
        "name": "Line - Settings",
        "order": 3,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Max speed settings (%)</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3000,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "05d2363eb8b5cbac",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "group": "4fb2801b6ab7ae20",
        "order": 15,
        "width": 2,
        "height": 1,
        "name": "text actual",
        "label": "",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 3110,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0b0a84c6b2ac5946",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "group": "4fb2801b6ab7ae20",
        "order": 17,
        "width": 2,
        "height": 1,
        "name": "text flow",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3100,
        "y": 1520,
        "wires": []
    },
    {
        "id": "dc6b3a3d39fd9593",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "group": "4fb2801b6ab7ae20",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "Low",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1200,
        "wires": []
    },
    {
        "id": "ee5c4cc82116fb3a",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "group": "4fb2801b6ab7ae20",
        "order": 10,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "DHW",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1320,
        "wires": []
    },
    {
        "id": "0a5194a2ae53226f",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "group": "4fb2801b6ab7ae20",
        "order": 7,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "HEAT",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1260,
        "wires": []
    },
    {
        "id": "62f703fc3bef4b9d",
        "type": "ui_slider",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "HEAT",
        "label": "",
        "tooltip": "",
        "group": "4fb2801b6ab7ae20",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "HEATSpeed",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 3110,
        "y": 1260,
        "wires": [
            [
                "c613a0a91992893e"
            ]
        ]
    },
    {
        "id": "95d38a3c0dc7bfef",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "group": "4fb2801b6ab7ae20",
        "name": "Line - Result",
        "order": 13,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Result</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2870,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "9bbcf43a99bb4686",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "link in 43",
        "links": [
            "d8c3356483134cf9"
        ],
        "x": 2545,
        "y": 1480,
        "wires": [
            [
                "5710a4a40d36cae6"
            ]
        ]
    },
    {
        "id": "07adfdd98bc7ec6f",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "4fb2801b6ab7ae20",
        "order": 6,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "LowSpeed",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 3240,
        "y": 1200,
        "wires": [
            [
                "dd27a17d3914b050"
            ]
        ]
    },
    {
        "id": "dd27a17d3914b050",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3370,
        "y": 1200,
        "wires": [
            [
                "c91855502498f443",
                "ad467c3d58db0284"
            ]
        ]
    },
    {
        "id": "7d78560a43c952f3",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "dhw",
        "label": "",
        "tooltip": "",
        "group": "4fb2801b6ab7ae20",
        "order": 12,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "DHWSpeed",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 3230,
        "y": 1320,
        "wires": [
            [
                "b1e622419da850aa"
            ]
        ]
    },
    {
        "id": "c613a0a91992893e",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "4fb2801b6ab7ae20",
        "order": 9,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "HEATSpeed",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 3240,
        "y": 1260,
        "wires": [
            [
                "3bb1ed005c52a0fa"
            ]
        ]
    },
    {
        "id": "b1e622419da850aa",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3370,
        "y": 1320,
        "wires": [
            [
                "9dfdd1d4ae5594b1",
                "ad467c3d58db0284"
            ]
        ]
    },
    {
        "id": "3bb1ed005c52a0fa",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3370,
        "y": 1260,
        "wires": [
            [
                "62f703fc3bef4b9d",
                "ad467c3d58db0284"
            ]
        ]
    },
    {
        "id": "a1e757cb1d79e3f9",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "link-in MaxPumpDuty",
        "links": [
            "24c2db611509adf8"
        ],
        "x": 615,
        "y": 3100,
        "wires": [
            [
                "0b10bc17b24896b7"
            ]
        ]
    },
    {
        "id": "d8c3356483134cf9",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "Max_Pump_Duty_Currentvalue2",
        "mode": "link",
        "links": [
            "9bbcf43a99bb4686"
        ],
        "x": 1255,
        "y": 3140,
        "wires": []
    },
    {
        "id": "de37787a803f74af",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "group": "4fb2801b6ab7ae20",
        "order": 14,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Actual max pumpspeed",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2910,
        "y": 1480,
        "wires": []
    },
    {
        "id": "bf06baa7b5212f0d",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "group": "4fb2801b6ab7ae20",
        "order": 16,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Water flow (L/min)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2890,
        "y": 1520,
        "wires": []
    },
    {
        "id": "02337b972681a94a",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "link in 44",
        "links": [
            "3b23831ccc3641c6"
        ],
        "x": 2745,
        "y": 1520,
        "wires": [
            [
                "0b0a84c6b2ac5946"
            ]
        ]
    },
    {
        "id": "f2ccd5d9f4518044",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "Chart data",
        "func": "\nvar F_ReducePumpSpeed = global.get('F_ReducePumpSpeed',\"file\");\nvar TOP1_Pump_Flow = global.get('TOP1_Pump_Flow');\nif (F_ReducePumpSpeed === undefined || TOP1_Pump_Flow === undefined) {return null}\n\nlet msg1={}; // flow L/min\nlet msg2={}; // Actual max pumpspeed\nlet msg3={}; // Chart limits\n\nmsg1.payload = null; msg1.topic = 'Flow (L/min)';\nmsg2.payload = null; msg2.topic = 'Maximum pumpspeed (%)';\nmsg3.payload = null;\n\nif (TOP1_Pump_Flow !== undefined) {\n    msg1.payload = TOP1_Pump_Flow;\n}\n\nif (F_ReducePumpSpeed.PumpMaxFlowSetting !== undefined) {\n    msg2.payload = F_ReducePumpSpeed.PumpMaxFlowSetting - 64;\n    msg2.payload = msg2.payload / 190 * 100;    // calculate to %\n    msg2.payload = Number(msg2.payload).toFixed(0);\n}\nif (F_ReducePumpSpeed.DHWSpeed !== undefined && F_ReducePumpSpeed.HEATSpeed !== undefined && F_ReducePumpSpeed.LowSpeed !== undefined) {\n    // @ts-ignore\n    msg3 = { ui_control:{ymin:0, ymax:((Math.max(F_ReducePumpSpeed.DHWSpeed, F_ReducePumpSpeed.HEATSpeed, F_ReducePumpSpeed.LowSpeed)-64)/190*100)+5} }; \n}\n\nreturn [[msg1,msg2,msg3]];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 1440,
        "wires": [
            [
                "3d8e357b01de57ff"
            ]
        ]
    },
    {
        "id": "dee4758644beb652",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "Store",
        "func": "if (msg.topic == 'LowSpeed'){\n    msg.payload = ((msg.payload) / 100 * 190) + 64; // calculation\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    global.set('F_ReducePumpSpeed.LowSpeed',msg.payload,\"file\")\n}\n\nif (msg.topic == 'HEATSpeed'){\n    msg.payload = ((msg.payload) / 100 * 190) + 64; // calculation\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    global.set('F_ReducePumpSpeed.HEATSpeed',msg.payload,\"file\")\n}\n\nif (msg.topic == 'DHWSpeed'){\n    msg.payload = ((msg.payload) / 100 * 190) + 64; // calculation\n    msg.payload = Number(msg.payload).toFixed(0);\n    msg.payload = parseFloat(msg.payload);\n    global.set('F_ReducePumpSpeed.DHWSpeed',msg.payload,\"file\")\n}\n\nif (msg.topic == 'state'){\n    global.set('F_ReducePumpSpeed.state',msg.payload,\"file\")\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3710,
        "y": 1120,
        "wires": [
            [
                "ea04ae839e1d6b46"
            ]
        ]
    },
    {
        "id": "5710a4a40d36cae6",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "conversion function",
        "func": "var lowerlimit=64; // Lowest value\nvar upperlimit=254; // Hihghes value\nvar range=(upperlimit-lowerlimit);\n\nmsg.payload = (msg.payload - 64) / range * 100\n\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 1480,
        "wires": [
            [
                "05d2363eb8b5cbac",
                "5e82e401e9c3083f"
            ]
        ]
    },
    {
        "id": "ad467c3d58db0284",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 3540,
        "y": 1120,
        "wires": [
            [
                "dee4758644beb652"
            ]
        ]
    },
    {
        "id": "cc5d732b8a28779d",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "trigger",
        "x": 3240,
        "y": 1440,
        "wires": [
            [
                "f2ccd5d9f4518044"
            ]
        ]
    },
    {
        "id": "5e82e401e9c3083f",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3250,
        "y": 1480,
        "wires": [
            [
                "f2ccd5d9f4518044"
            ]
        ]
    },
    {
        "id": "dbb3202d2fc26245",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3370,
        "y": 1120,
        "wires": [
            [
                "ad467c3d58db0284"
            ]
        ]
    },
    {
        "id": "fab9eab71225fbf7",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "group": "4fb2801b6ab7ae20",
        "order": 19,
        "width": 2,
        "height": 1,
        "name": "Current",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3100,
        "y": 1560,
        "wires": []
    },
    {
        "id": "3df02652ea9f1de4",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "Load trigger",
        "func": "var F_ReducePumpSpeed = global.get('F_ReducePumpSpeed',\"file\");\nvar save = false;\n\nif (F_ReducePumpSpeed === undefined)                    { global.set('F_ReducePumpSpeed',{},\"file\") } \nif (F_ReducePumpSpeed.PumpMaxFlowSetting === undefined) { return null; }\nif (F_ReducePumpSpeed.LowSpeed === undefined)           { F_ReducePumpSpeed.LowSpeed    = F_ReducePumpSpeed.PumpMaxFlowSetting  ; save = true; }\nif (F_ReducePumpSpeed.DHWSpeed === undefined)           { F_ReducePumpSpeed.DHWSpeed    = F_ReducePumpSpeed.PumpMaxFlowSetting  ; save = true; }\nif (F_ReducePumpSpeed.HEATSpeed === undefined)          { F_ReducePumpSpeed.HEATSpeed   = F_ReducePumpSpeed.PumpMaxFlowSetting  ; save = true; }\nif (F_ReducePumpSpeed.state === undefined)              { F_ReducePumpSpeed.state       = 0                                     ; save = true; }\n\nif (save == true) { global.set('F_ReducePumpSpeed', F_ReducePumpSpeed, \"file\"); return null;}\n\nlet msg1={};    //  state\nlet msg2={};    //  low\nlet msg3={};    //  heat\nlet msg4={};    //  dhw\n\nmsg1.payload = F_ReducePumpSpeed.state; msg1.topic = 'state';\nmsg2.payload = F_ReducePumpSpeed.LowSpeed; msg2.topic = 'LowSpeed';\nmsg3.payload = F_ReducePumpSpeed.HEATSpeed; msg3.topic = 'HEATSpeed';\nmsg4.payload = F_ReducePumpSpeed.DHWSpeed; msg4.topic = 'DHWSpeed';\n\nmsg2.payload = (msg2.payload - 64) / 190 * 100; msg2.payload = Number(msg2.payload).toFixed(0);\nmsg3.payload = (msg3.payload - 64) / 190 * 100; msg3.payload = Number(msg3.payload).toFixed(0);\nmsg4.payload = (msg4.payload - 64) / 190 * 100; msg4.payload = Number(msg4.payload).toFixed(0);\n\nreturn [msg1,msg2,msg3,msg4];",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 1220,
        "wires": [
            [
                "c2c09dbebda13484"
            ],
            [
                "c91855502498f443"
            ],
            [
                "62f703fc3bef4b9d"
            ],
            [
                "9dfdd1d4ae5594b1"
            ]
        ],
        "outputLabels": [
            "F_ReducePumpSpeed.state",
            "F_ReducePumpSpeed.LowSpeed",
            "F_ReducePumpSpeed.HEATSpeed",
            "F_ReducePumpSpeed.DHWSpeed"
        ]
    },
    {
        "id": "0fa4a814492d2259",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 2600,
        "y": 1200,
        "wires": [
            [
                "3df02652ea9f1de4"
            ]
        ]
    },
    {
        "id": "ea04ae839e1d6b46",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "link out 49",
        "mode": "link",
        "links": [
            "32c4b461266d4a6e",
            "b1a202d9c6da4df3"
        ],
        "x": 3795,
        "y": 1120,
        "wires": []
    },
    {
        "id": "21abbbb132d72856",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "group": "4fb2801b6ab7ae20",
        "order": 18,
        "width": 5,
        "height": 1,
        "name": "Active mode",
        "label": "Active mode",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 2870,
        "y": 1560,
        "wires": []
    },
    {
        "id": "dc99be6d3a53311d",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "link out 50",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 3675,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7708ef15cae3ed59",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "link out 51",
        "mode": "link",
        "links": [
            "8406701f07ab7886"
        ],
        "x": 3675,
        "y": 960,
        "wires": []
    },
    {
        "id": "7e0e6f1fd86c6d31",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3370,
        "y": 1040,
        "wires": [
            [
                "dc99be6d3a53311d"
            ]
        ]
    },
    {
        "id": "b23ef1030db7e252",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "link out 52",
        "mode": "link",
        "links": [
            "dd7484dc5380d24f"
        ],
        "x": 3675,
        "y": 1000,
        "wires": []
    },
    {
        "id": "dd7484dc5380d24f",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "link in 46",
        "links": [
            "b23ef1030db7e252"
        ],
        "x": 2745,
        "y": 1560,
        "wires": [
            [
                "fab9eab71225fbf7"
            ]
        ]
    },
    {
        "id": "b1a202d9c6da4df3",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "link in 47",
        "links": [
            "ea04ae839e1d6b46"
        ],
        "x": 2695,
        "y": 1000,
        "wires": [
            [
                "879b071f7e013653"
            ]
        ]
    },
    {
        "id": "ba33ab6d58b9fb8d",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "Hz",
        "info": "",
        "x": 2770,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4e3b27ed573b6399",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "GUI",
        "info": "",
        "x": 2770,
        "y": 1000,
        "wires": []
    },
    {
        "id": "83481f0a61aed9b2",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "link in 48",
        "links": [
            "4ff74e2b48b1d597"
        ],
        "x": 2695,
        "y": 960,
        "wires": [
            [
                "bf8ce4cf96b236c2"
            ]
        ]
    },
    {
        "id": "bf8ce4cf96b236c2",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "OM",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2770,
        "y": 960,
        "wires": [
            [
                "879b071f7e013653"
            ]
        ]
    },
    {
        "id": "fb9db2149be4a5a9",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "to SET15",
        "info": "",
        "x": 3540,
        "y": 960,
        "wires": []
    },
    {
        "id": "677c69e23dd934ce",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "current mode",
        "info": "",
        "x": 3550,
        "y": 1000,
        "wires": []
    },
    {
        "id": "2cd7aab6fa9d94c2",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "to log",
        "info": "",
        "x": 3530,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6410b5f879c6a3ec",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "Store/Load chart",
        "func": "if (msg.topic != 'trigger') {\n    flow.set('chart_pumpspeed',msg,\"file\");\n    return null\n}\n\nif (msg.topic == 'trigger') {\n    msg = flow.get('chart_pumpspeed',\"file\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1560,
        "wires": [
            [
                "3d8e357b01de57ff"
            ]
        ]
    },
    {
        "id": "dd1a38c2ccf4f47e",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 3360,
        "y": 1560,
        "wires": [
            [
                "6410b5f879c6a3ec"
            ]
        ]
    },
    {
        "id": "9b7a14cd7f7c2870",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "cbc655a89768996f",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "x": 3380,
        "y": 1520,
        "wires": [
            [
                "6410b5f879c6a3ec"
            ]
        ]
    },
    {
        "id": "d7e9f20e80d48fa1",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "TOP79 - panasonic_heat_pump/main/Heat_To_Cool_Temp",
        "topic": "panasonic_heat_pump/main/Heat_To_Cool_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 4040,
        "wires": [
            [
                "64955157496ed92f"
            ]
        ]
    },
    {
        "id": "64955157496ed92f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.TOP79_Heat_To_Cool_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP79_Heat_To_Cool_Temp';\nif (msg.payload != global.get(\"TOP79_Heat_To_Cool_Temp\",\"file\")) {\n    global.set(\"TOP79_Heat_To_Cool_Temp\",msg.payload,\"file\");\n}\n//return msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 4040,
        "wires": [
            []
        ]
    },
    {
        "id": "94fb2ca53932250b",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 2545,
        "y": 1240,
        "wires": [
            [
                "3df02652ea9f1de4"
            ]
        ]
    },
    {
        "id": "c24406bef1e6355d",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link in - Other triggers functions",
        "links": [
            "5a1d6b18490ded1c",
            "7430c37f5c30419b",
            "836082017500f9a9",
            "aec0cb2b18e02d8b",
            "ed2c73bf6b96d4a0"
        ],
        "x": 225,
        "y": 460,
        "wires": [
            [
                "56ae2f8cd74e99c9"
            ]
        ]
    },
    {
        "id": "437a28325613c061",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "All other triggers",
        "info": "",
        "x": 360,
        "y": 460,
        "wires": []
    },
    {
        "id": "849bb02e7d0f4dfa",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "1 Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 4240,
        "wires": [
            [
                "e3c1faa5a1fb80c6"
            ]
        ]
    },
    {
        "id": "9fd7064be2551caa",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "b37318d1b7f66e33",
        "name": "link in 54",
        "links": [
            "4223b24f5dc06d8e",
            "49ebac0412d87642"
        ],
        "x": 265,
        "y": 4200,
        "wires": [
            [
                "e3c1faa5a1fb80c6"
            ]
        ]
    },
    {
        "id": "f50b182247afbf12",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Block DHW-run above",
        "label": "Block DHW-run above",
        "tooltip": "",
        "group": "4e9e24cca215ad4d",
        "order": 9,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 3180,
        "y": 1940,
        "wires": [
            [
                "fdc7a953bf5abbc3"
            ]
        ]
    },
    {
        "id": "513f1edff2205368",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "set.DHW_threshold_upper",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"DHW_threshold_upper\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 1940,
        "wires": [
            [
                "0d915486f4ef0946"
            ]
        ]
    },
    {
        "id": "82de6121db22b74a",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 2640,
        "y": 1960,
        "wires": [
            [
                "1cf36419e733671a"
            ]
        ]
    },
    {
        "id": "1cf36419e733671a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Load on boot",
        "func": "var DHW_threshold_upper = global.get('DHW_threshold_upper',\"file\");\nif  (DHW_threshold_upper === undefined)             { global.set('DHW_threshold_upper',75,\"file\"); DHW_threshold_upper = 75; }\n\nvar DHW_threshold_lower = global.get('DHW_threshold_lower',\"file\")\nif (DHW_threshold_lower === undefined)              { global.set('DHW_threshold_lower',25,\"file\"); DHW_threshold_lower = 25; }\n\nvar TOP9_DHW_Target_Temp_Secondairy = global.get('TOP9_DHW_Target_Temp_Secondairy',\"file\")\nif (TOP9_DHW_Target_Temp_Secondairy === undefined)  { TOP9_DHW_Target_Temp_Secondairy = global.get('TOP9_DHW_Target_Temp',\"file\"); } \n\nvar DHW_automation_state = global.get('DHW_automation_state',\"file\");\nif (DHW_automation_state === undefined)             { DHW_automation_state = 0; }\n\n\n//////// Trigger logic when temperature of DHW tank is lower than the DHW_threshold_lower\nlet msg1={}, msg2={}, msg3={}, msg99={}, msg4={}, msg5={};\n\nif (msg.topic == 'TOP10_DHW_Temp' && msg.payload < DHW_threshold_lower) {\n    msg3.payload = 1;\n    msg3.topic = '';\n    \n    msg99.topic = 'DHW tank'\n    msg99.payload = 'DHW temperature below threshold of ' + DHW_threshold_lower + '°C. Starting DHW run'\n    }\n\n\n\n\nmsg1.payload = DHW_threshold_upper;         // DHW_threshold_upper\nmsg2.payload = DHW_threshold_lower;         // DHW_threshold_lower\nmsg4.payload = TOP9_DHW_Target_Temp_Secondairy;\nmsg5.payload = DHW_automation_state; msg5.topic = 'GUI_DHW_automation_state';\n\nreturn [msg1, msg2, msg3, msg4, msg5];",
        "outputs": 5,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2950,
        "y": 1960,
        "wires": [
            [
                "f50b182247afbf12"
            ],
            [
                "d3798ceb0669cafe"
            ],
            [
                "480251095571d632"
            ],
            [
                "9e780462d79e7157"
            ],
            [
                "c860a4238803ed02"
            ]
        ],
        "outputLabels": [
            "DHW_threshold_upper",
            "DHW_threshold_lower",
            "Trigger DHW run",
            "",
            ""
        ]
    },
    {
        "id": "0d915486f4ef0946",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "DHW_threshold_upper",
        "mode": "link",
        "links": [],
        "x": 3745,
        "y": 1940,
        "wires": []
    },
    {
        "id": "b9e80ad80744b62d",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "DHW_threshold ",
        "info": "",
        "x": 3540,
        "y": 1840,
        "wires": []
    },
    {
        "id": "fdc7a953bf5abbc3",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3370,
        "y": 1940,
        "wires": [
            [
                "513f1edff2205368"
            ]
        ]
    },
    {
        "id": "d3798ceb0669cafe",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Auto start DHW",
        "label": "Auto start DHW",
        "tooltip": "Auto start DHW: If the DHW temperature drops below this temperature, a Force DHW cycle will be started.",
        "group": "e3cc96332cd59f07",
        "order": 13,
        "width": 5,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "10",
        "max": "75",
        "step": 1,
        "className": "",
        "x": 3220,
        "y": 2040,
        "wires": [
            [
                "8f0fdd05619b6080"
            ]
        ]
    },
    {
        "id": "b9cc5f94e160078d",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "link in from on_change_GUI",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 2805,
        "y": 2000,
        "wires": [
            [
                "1cf36419e733671a"
            ]
        ]
    },
    {
        "id": "4e973bdc6d2bfa33",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "link in TOP10_DHW_Temp",
        "links": [
            "d54ac3b979428b64"
        ],
        "x": 2805,
        "y": 2040,
        "wires": [
            [
                "1cf36419e733671a"
            ]
        ]
    },
    {
        "id": "223d6f652b0e0dc4",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Link in TOP10_DHW_Temp",
        "info": "",
        "x": 2660,
        "y": 2040,
        "wires": []
    },
    {
        "id": "92ebec7316b4f003",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Link in GUI update",
        "info": "",
        "x": 2610,
        "y": 2000,
        "wires": []
    },
    {
        "id": "480251095571d632",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Link out to Trigger DHW run",
        "mode": "link",
        "links": [],
        "x": 3155,
        "y": 2080,
        "wires": []
    },
    {
        "id": "9e780462d79e7157",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Boost DHW now",
        "label": "Boost DHW now",
        "tooltip": "Boost DHW now: Force a DHW run to reach a (higher) secondairy DHW target temperature. When you temprary require more hot water",
        "group": "e3cc96332cd59f07",
        "order": 15,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "40",
        "max": "75",
        "step": 1,
        "className": "",
        "x": 3220,
        "y": 2220,
        "wires": [
            [
                "40ad0556b1f55896"
            ]
        ]
    },
    {
        "id": "393897917e4a8106",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "group": "4e9e24cca215ad4d",
        "name": "Line - Limits",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n\n\t<left>Limits</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3530,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "40ad0556b1f55896",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Secondairy setpoint",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::TOP9_DHW_Target_Temp_Secondairy",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3470,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "c0c20e2e3caa81e0",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "link out 59",
        "mode": "link",
        "links": [
            "327f3ad0eae0d7d5",
            "efa847198158ca2c"
        ],
        "x": 3395,
        "y": 2180,
        "wires": []
    },
    {
        "id": "64021d928c59c5cd",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "f7bdc92c0ed8e3b9",
        "name": "DHW temp",
        "links": [
            "d54ac3b979428b64"
        ],
        "x": 2620,
        "y": 1740,
        "wires": [
            [
                "017e95185010581b"
            ]
        ],
        "l": true
    },
    {
        "id": "017e95185010581b",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "f7bdc92c0ed8e3b9",
        "name": "function 25",
        "func": "var DHW_automation_state    = global.get('DHW_automation_state',\"file\");\nvar DHW_threshold_upper     = global.get('DHW_threshold_upper',\"file\");\nvar TOP9_DHW_Target_Temp    = global.get('TOP9_DHW_Target_Temp',\"file\");\n\nif (msg.payload >= 60 ) {                // legionella temperature. Above 60 I assume legionella in the tank will be killed. If this T is reached, this moment in time will be logged.\n    let CurrentTime = new Date().getTime();\n    global.set('Schedule_conditions.DHW_last_at_60C',CurrentTime,\"file\")\n}\nif (msg.payload >= TOP9_DHW_Target_Temp ) { \n    let CurrentTime = new Date().getTime();\n    global.set('Schedule_conditions.DHW_last_at_target_temperature',CurrentTime,\"file\")\n}\n\n///////////////////\nvar Sterilization_active = global.get('Sterilization_active', \"file\");\nvar Force_DHW_active = global.get('Force_DHW_active', \"file\");\n\nif (DHW_automation_state == 0 || DHW_automation_state === undefined) {return null;}\n\nif (DHW_threshold_upper === undefined) { return null; }\n//if (msg.payload > DHW_threshold_upper) { return null; }\nif (global.get('TOP20_ThreeWay_Valve_State') == 1) { return null; }\n\nif (Sterilization_active == 1 || Force_DHW_active == 1) { return null; }\n\nvar compressor_frequency = global.get('compressor_frequency', \"file\");\nvar msg99 = {}; msg99.topic = 'Auto-start-DHW function';\n\nvar DHW_automation_active = global.get('DHW_automation_active', \"file\")\nif (DHW_automation_active === undefined) { DHW_automation_active = 0; }\n\n////////////////////////////////////////////////////////////////////\nif (DHW_automation_active == 0 && msg.payload <= global.get('DHW_threshold_lower', \"file\") && (compressor_frequency == 0 || (compressor_frequency >= 1 && global.get('TOP20_ThreeWay_Valve_State') == 0))  ) {\n    var HP_state = global.get('TOP0_Heatpump_State', \"file\"); if (HP_state === undefined) { return null; }\n            // if heatpump is off, turn it on.\n    if (HP_state == 0) {\n        let msg2={}; msg2.payload = 1; msg2.source = 'DHW-function'; // turn on pump\n        global.set('F_RTC.automation_active', 0, \"file\");  // set RTC turn on/off function to inactive.\n        msg99.payload = 'Heatpump is off. Turning on for Auto-start-DHW function';\n        node.send([null, msg99, msg2])\n    }\n            // store current operating mode\n    if (global.get('F_stored_next_operating_mode', \"file\") === undefined) { global.set('F_stored_next_operating_mode', global.get('TOP4_Operating_Mode_State',\"file\"), \"file\");}\n            // send new operating \n        let msg1 = {}; msg1.payload = 3; msg1.delay = 0; // DHW Only\n        msg99.payload = 'DHW temperature: ' + msg.payload + '°C. Lower threshold: ' + global.get('DHW_threshold_lower',\"file\") + '°C. Starting DHW run.';\n        msg99.delay = 0;\n        global.set('DHW_automation_active', 1, \"file\");\n        return [msg1, msg99, null];\n}\n///////////////////////////////////////////////////////////\nif (DHW_automation_active == 1 ) {\n    if (msg.payload >= TOP9_DHW_Target_Temp && compressor_frequency == 0) {\n\n        var delay = 15 * 60 * 1000; // 15 minutes delay\n\n        if (global.get('F_stored_next_operating_mode', \"file\") !== undefined) {\n            let msg1 = {};\n            msg1.delay = delay;\n            msg1.payload = global.get('F_stored_next_operating_mode', \"file\"); \n\n            msg99.payload = 'Operating mode reverted to ' + global.get('F_stored_next_operating_mode', \"file\"); \n            msg99.delay = delay;\n            \n            global.set('F_stored_next_operating_mode',undefined, \"file\");\n            node.send([msg1, msg99,null]);\n        }   \n\n        msg99.payload = 'DHW temperature: ' + msg.payload + '°C reached. End Auto-start-DHW. Reverting operating mode in ' + delay / 1000 / 60 + ' minutes.'; \n        msg99.delay = 0;\n        global.set('DHW_automation_active',0, \"file\");\n        return [null, msg99, null];\n    }\n}\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2810,
        "y": 1740,
        "wires": [
            [
                "399bbbd616d3dc55"
            ],
            [
                "3b56718868c66537"
            ],
            [
                "0970bfa5a14caf6b"
            ]
        ],
        "outputLabels": [
            "Operating Mode",
            "To log",
            "power out"
        ]
    },
    {
        "id": "f651bed25831c6f4",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "f7bdc92c0ed8e3b9",
        "name": "link out 54",
        "mode": "link",
        "links": [
            "efa847198158ca2c"
        ],
        "x": 3185,
        "y": 1700,
        "wires": []
    },
    {
        "id": "c8b5382d8d981e31",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "f7bdc92c0ed8e3b9",
        "name": "link out 55",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 3185,
        "y": 1740,
        "wires": []
    },
    {
        "id": "c860a4238803ed02",
        "type": "ui_switch",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Auto start DHW",
        "label": "",
        "tooltip": "Auto start DHW: If the DHW temperature drops below this temperature, a Force DHW cycle will be started.",
        "group": "e3cc96332cd59f07",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "GUI_DHW_automation_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2940,
        "y": 2040,
        "wires": [
            [
                "5e6950dffab43add"
            ]
        ]
    },
    {
        "id": "12c84fbd61e2d1c2",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::DHW_automation_state",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3280,
        "y": 2000,
        "wires": [
            [
                "706c5dcd5d6c136b"
            ]
        ]
    },
    {
        "id": "8f0fdd05619b6080",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::DHW_threshold_lower",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3520,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "8effd9295d55099f",
        "type": "ui_switch",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "Boost DHW now",
        "label": "",
        "tooltip": "Boost DHW now: Force a DHW run to reach a (higher) secondairy DHW target temperature. When you temprary require more hot water",
        "group": "e3cc96332cd59f07",
        "order": 14,
        "width": 1,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "GUI_boost_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2940,
        "y": 2220,
        "wires": [
            [
                "319d7b2735937f1a"
            ]
        ]
    },
    {
        "id": "2ef668070522b01d",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "GUI_boost_state status change",
        "links": [
            "56d4bfa341d3eded"
        ],
        "x": 2645,
        "y": 2220,
        "wires": [
            [
                "376d42685ccec772"
            ]
        ]
    },
    {
        "id": "a8be0fdf50f25150",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "function 26",
        "func": "global.set('DHW_boost_state', msg.payload, \"file\");\nmsg.topic = 'Start_DHW_Run_SP2';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3230,
        "y": 2180,
        "wires": [
            [
                "c0c20e2e3caa81e0"
            ]
        ]
    },
    {
        "id": "376d42685ccec772",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "function 27",
        "func": "if (msg.topic == 'DHW End'){\n    return msg;    \n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 2220,
        "wires": [
            [
                "8effd9295d55099f"
            ]
        ]
    },
    {
        "id": "e248409fb553d16c",
        "type": "mqtt out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "SET6 SetZ1CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1CoolRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 3990,
        "y": 760,
        "wires": []
    },
    {
        "id": "914dbce5e778229e",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "label": "Cool setpoint",
        "tooltip": "Range 5-20 °C",
        "group": "273f74f363a57507",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "setpoint_requested",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "5",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 3130,
        "y": 460,
        "wires": [
            [
                "57bd8e997e9659ed",
                "c631c7c6b5043e9b"
            ]
        ]
    },
    {
        "id": "5b8f3786bc1abbb1",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "TOP28 - panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2750,
        "y": 740,
        "wires": [
            [
                "f5ccbd22c1c9fe22",
                "b6ad3dc97e3bae93"
            ]
        ]
    },
    {
        "id": "2649d773ad06b50d",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "273f74f363a57507",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Cool status",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3130,
        "y": 340,
        "wires": []
    },
    {
        "id": "7c9af6a20115c38e",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Cool status",
        "links": [
            "5dfb70935ea409db"
        ],
        "x": 2935,
        "y": 340,
        "wires": [
            [
                "2649d773ad06b50d",
                "13909c8cd33f26ef"
            ]
        ]
    },
    {
        "id": "dee73ffd96da5786",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "273f74f363a57507",
        "name": "Line - Setup ",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2630,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "13909c8cd33f26ef",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Cool status",
        "label": "Cool status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3130,
        "y": 380,
        "wires": []
    },
    {
        "id": "1cf37ff9fa4fc42b",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "name": "Line - Setup ",
        "order": 5,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3130,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "6c93a57f910e03c2",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "label": "Setpoint requested",
        "tooltip": "",
        "group": "830a81a1c54c6ef5",
        "order": 6,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "setpoint_requested",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "5",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 3150,
        "y": 500,
        "wires": [
            [
                "57bd8e997e9659ed",
                "c631c7c6b5043e9b"
            ]
        ]
    },
    {
        "id": "f0ae9eea42cf90ea",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Cool delta",
        "label": "Cool delta",
        "tooltip": "",
        "group": "830a81a1c54c6ef5",
        "order": 16,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 3120,
        "y": 820,
        "wires": [
            [
                "25323c5d6bbdbebe"
            ]
        ]
    },
    {
        "id": "25041e53f134e3fb",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "cool input",
        "links": [
            "7139256ff024b872",
            "ce9434fc05a5b849"
        ],
        "x": 3005,
        "y": 820,
        "wires": [
            [
                "f0ae9eea42cf90ea"
            ]
        ]
    },
    {
        "id": "158b8983b1dd0aa9",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "mode": "link",
        "links": [
            "3ed1fd544412f391"
        ],
        "x": 3595,
        "y": 820,
        "wires": []
    },
    {
        "id": "25323c5d6bbdbebe",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3360,
        "y": 820,
        "wires": [
            [
                "158b8983b1dd0aa9"
            ]
        ]
    },
    {
        "id": "f5ccbd22c1c9fe22",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "set.Z1_Cool_Request_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Z1_Cool_Request_Temp';\nglobal.set(\"Z1_Cool_Request_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3420,
        "y": 740,
        "wires": [
            [
                "25691ccde88f5530"
            ]
        ]
    },
    {
        "id": "6fc958da73fbdf09",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "-- Dew point",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3130,
        "y": 560,
        "wires": []
    },
    {
        "id": "4dfb2312d5cb06d5",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "name": "Line - Setup",
        "order": 12,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Sensor value</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3130,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "2bb5988706fb572a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Save RH / T",
        "func": "msg.payload = Number(msg.payload).toFixed(2);\nmsg.payload = parseFloat(msg.payload);\n\nvar CurrentTime = new Date().getTime();\nvar F_COOL = global.get('F_COOL',\"file\");\n    if (F_COOL === undefined) {return null}\n\nif (msg.topic == \"RH\"){\n    global.set('F_COOL.RelativeHumidity',msg.payload,\"file\");\n    global.set('F_COOL.RelativeHumidity_timestamp',CurrentTime,\"file\");\n}\n\nif (msg.topic == \"Temperature\") {\n    global.set('F_COOL.Temperature',msg.payload,\"file\");\n    global.set('F_COOL.Temperature_timestamp',CurrentTime,\"file\");\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// if there are no values present, then exit the function.\nif (F_COOL.Temperature_timestamp === undefined || F_COOL.RelativeHumidity_timestamp === undefined) { \n    return null;\n    }\n\n\n////////////////////////////////////////////////////////////////////////////////\nif ((CurrentTime - F_COOL.Temperature_timestamp) > 60*1000*60*2) {   // 2 hours\n    global.set('F_COOL.Temperature_timestamp',undefined,\"file\");\n    return null;\n    }\nif ((CurrentTime - F_COOL.RelativeHumidity_timestamp) > 60*1000*60*2) {   // 2 hours\n    global.set('F_COOL.RelativeHumidity_timestamp',undefined,\"file\");\n    return null;\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3710,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "37a369fd9ad03085",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "RH",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "RH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3110,
        "y": 140,
        "wires": [
            [
                "2bb5988706fb572a"
            ]
        ]
    },
    {
        "id": "0df0e84326dbeec7",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Temperature",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Temperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3130,
        "y": 180,
        "wires": [
            [
                "2bb5988706fb572a"
            ]
        ]
    },
    {
        "id": "cdd89d5c10c71407",
        "type": "ui_chart",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "group": "397a51ddac8419aa",
        "order": 1,
        "width": 11,
        "height": "13",
        "label": "Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#de425b",
            "#dd6e81",
            "#f59b56",
            "#1f77b4",
            "#7f8389",
            "#afb4bb",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3520,
        "y": 300,
        "wires": [
            [
                "6a50ef63d9d35647"
            ]
        ]
    },
    {
        "id": "1d63998e541e4d5a",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3700,
        "y": 120,
        "wires": []
    },
    {
        "id": "dea135ecc9872411",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Room temperature",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3730,
        "y": 200,
        "wires": []
    },
    {
        "id": "f13532d971be853e",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "COOL gui changes to function trigger2",
        "mode": "link",
        "links": [
            "ab9d088e21062ff8"
        ],
        "x": 3595,
        "y": 680,
        "wires": []
    },
    {
        "id": "b665e9aa13d44f8e",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "restore",
        "x": 2760,
        "y": 260,
        "wires": [
            [
                "0e8ca4bb561b59ed"
            ]
        ]
    },
    {
        "id": "6a50ef63d9d35647",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Store chart",
        "func": "var myArray = msg;\nglobal.set(\"F_COOL.chart\", myArray,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3710,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "0e8ca4bb561b59ed",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Restore chart",
        "func": "if (msg.topic == 'restore') {\n    let msg1={};\n    msg1 = global.get(\"F_COOL.chart\",\"file\");\n    if (msg1 === undefined)\n        {return null;}\n    return msg1;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3140,
        "y": 260,
        "wires": [
            [
                "cdd89d5c10c71407"
            ]
        ]
    },
    {
        "id": "6b2644c3a510f50f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];\n    }\nif (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"GUI\"); }\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3870,
        "y": 720,
        "wires": [
            [
                "e248409fb553d16c"
            ],
            [
                "b43820fd5a21f4e7"
            ]
        ]
    },
    {
        "id": "b43820fd5a21f4e7",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 3975,
        "y": 720,
        "wires": []
    },
    {
        "id": "71a59b9661071adc",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "rate",
        "pauseType": "timed",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 3270,
        "y": 300,
        "wires": [
            [
                "cdd89d5c10c71407"
            ]
        ]
    },
    {
        "id": "21b21c01326b2eb3",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "397a51ddac8419aa",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "text below chart",
        "label": "This chart shows 1 datapoint every 5 minutes",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 3520,
        "y": 340,
        "wires": []
    },
    {
        "id": "56ae2f8cd74e99c9",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 460,
        "wires": [
            [
                "148fdf6802233c77"
            ]
        ]
    },
    {
        "id": "25691ccde88f5530",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "TOP72_Z1_Cool_Request_Temp",
        "mode": "link",
        "links": [
            "ab9d088e21062ff8",
            "ddcff50cd968534a"
        ],
        "x": 3595,
        "y": 740,
        "wires": []
    },
    {
        "id": "07ba09a16be50433",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "-- Lower limit (calc)",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Century Gothic,CenturyGothic,AppleGothic,sans-serif",
        "fontSize": "",
        "color": "#000000",
        "x": 3150,
        "y": 640,
        "wires": []
    },
    {
        "id": "78e42bcd53ea8133",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Safety margin",
        "label": "-- Safety margin",
        "tooltip": "",
        "group": "830a81a1c54c6ef5",
        "order": 8,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "safety_margin",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "1.5",
        "max": "10",
        "step": "0.5",
        "className": "",
        "x": 3140,
        "y": 600,
        "wires": [
            [
                "57bd8e997e9659ed",
                "941c0631859a870e"
            ]
        ]
    },
    {
        "id": "57bd8e997e9659ed",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "save",
        "func": "global.set('F_COOL.' + msg.topic,msg.payload,\"file\");\nmsg.flush = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3350,
        "y": 680,
        "wires": [
            [
                "967eb9e23a816211"
            ]
        ]
    },
    {
        "id": "b6ad3dc97e3bae93",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "Final Setpoint",
        "label": "Setpoint final",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Century Gothic,CenturyGothic,AppleGothic,sans-serif",
        "fontSize": "",
        "color": "#000000",
        "x": 3140,
        "y": 740,
        "wires": []
    },
    {
        "id": "069a1e1137dff3c5",
        "type": "ui_template",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "name": "Line - Setup 2",
        "order": 15,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Cool setting</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3720,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "31e6f728a58af434",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 3360,
        "y": 400,
        "wires": [
            [
                "c49ef874bd1fee9d"
            ]
        ]
    },
    {
        "id": "8446efaaa0db1b07",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Load on boot",
        "func": "var F_COOL = global.get('F_COOL',\"file\");\nvar save;\n\nif (F_COOL === undefined)                                   { F_COOL={}; save = 1 }\nif (F_COOL.setpoint_requested === undefined)                { F_COOL.setpoint_requested = 18; save = 1}              // Default value\nif (F_COOL.safety_margin === undefined)                     { F_COOL.safety_margin = 3; save = 1 }                   // Default value\nif (F_COOL.manual_setpoint_lower_limit === undefined)       { F_COOL.manual_setpoint_lower_limit = 12; save = 1 }    // Default value\n\nif (save == 1)                                              { global.set('F_COOL',F_COOL,\"file\"); }\n\nlet msg1={};        // setpoint_requested\nlet msg2={};        // safety_margin\nlet msg3={};        // manual_setpoint_lower_limit\nlet msg4={};        // calculated_dew_point\nlet msg5={};        // calculated_setpoint_lower_limit\n\nmsg1.payload = F_COOL.setpoint_requested;\nmsg2.payload = F_COOL.safety_margin;\nmsg3.payload = F_COOL.manual_setpoint_lower_limit; \nnode.send([msg1, msg2, msg3]);\n\nif (F_COOL.calculated_dew_point !== undefined) {\n    msg4.payload = F_COOL.calculated_dew_point;\n    node.send([null,null,null,msg4]);\n}\n\nif (F_COOL.calculated_setpoint_lower_limit !== undefined) {\n    msg5.payload = F_COOL.calculated_setpoint_lower_limit;\n    node.send([null,null,null,null,msg5]);\n}\n\n\n\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 500,
        "wires": [
            [
                "c631c7c6b5043e9b"
            ],
            [
                "941c0631859a870e"
            ],
            [
                "5d82a01035854d15"
            ],
            [
                "6fc958da73fbdf09"
            ],
            [
                "07ba09a16be50433"
            ]
        ],
        "outputLabels": [
            "setpoint_requested",
            "safety_margin",
            "manual_setpoint_lower_limit",
            "calculated_dew_point",
            "calculated_setpoint_lower_limit "
        ]
    },
    {
        "id": "af6c986b9bd32b5d",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2610,
        "y": 480,
        "wires": [
            [
                "8446efaaa0db1b07"
            ]
        ]
    },
    {
        "id": "4a7112414493107c",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "b08c0859f26b8233",
        "name": "COOL function",
        "func": "var F_COOL                      = global.get('F_COOL',\"file\");\n    if (F_COOL === undefined || F_COOL.setpoint_requested === undefined) {return null}\nvar TOP20_ThreeWay_Valve_State  = global.get('TOP20_ThreeWay_Valve_State');\nvar TOP4_Operating_Mode_State   = global.get('TOP4_Operating_Mode_State',\"file\");\nvar TOP0_Heatpump_State         = global.get('TOP0_Heatpump_State',\"file\");\n//\n//  TOP20_ThreeWay_Valve_State  = 0 (ROOM)\n//  TOP4_Operating_Mode_State  = 1, 5  TOP20=0\n//\n//// Operating mode     0=Heat only,     1=Cool only,       2=Auto(Heat),       3=DHW only,       4=Heat+DHW,      5=Cool+DHW,       6=Auto(Heat)+DHW,       7=Auto(Cool),     8=Auto(Cool)+DHW\n////////////////////////////////////////////////////////////////////////////////\n//                          DEW POINT CALCULATION                             //\n////////////////////////////////////////////////////////////////////////////////\n\nlet msg1={};    // calculated_dew_point\nlet msg2={};    // calculated_setpoint_lower_limit\nlet msg3={};    // final setpoint\n\nif (F_COOL.RelativeHumidity !== undefined && F_COOL.Temperature !== undefined && F_COOL.safety_margin !== undefined && F_COOL.manual_setpoint_lower_limit !== undefined) {\n    \n    var A = Math.log(F_COOL.RelativeHumidity / 100) / Math.log(2.718282) + 17.62 * F_COOL.Temperature / (243.12 + F_COOL.Temperature);         // BLB 20230405 corrected Td calculation\n    var Td = 243.12 * A / (17.62 - A);\n    \n    msg1.payload = Td;\n    msg1.payload = Number(msg1.payload).toFixed(2);\n    msg1.payload = parseFloat(msg1.payload);\n    msg1.topic = \"Dew Point (°C)\";\n        global.set(\"F_COOL.calculated_dew_point\",msg1.payload,\"file\");\n\n    msg2.payload = Td + F_COOL.safety_margin;\n    msg2.payload = Number(msg2.payload).toFixed(2);\n    msg2.payload = parseFloat(msg2.payload);\n    msg2.topic = 'Setpoint lower limit';\n        global.set(\"F_COOL.calculated_setpoint_lower_limit\",msg2.payload,\"file\");\n\n    msg3.payload = Math.ceil(msg2.payload);\n    if (msg3.payload < F_COOL.manual_setpoint_lower_limit)  { msg3.payload = F_COOL.manual_setpoint_lower_limit; }\n    if (F_COOL.setpoint_requested > msg3.payload)           { msg3.payload = F_COOL.setpoint_requested; }\n\n    // Check if heatpump is on. if not, do nothing / exit\n    if (TOP0_Heatpump_State === undefined || TOP0_Heatpump_State == 0) { return null } \n    \n    // check if COOL is in the current operating mode. if not, do nothing / exit\n    if (TOP4_Operating_Mode_State === undefined || TOP4_Operating_Mode_State == 0 || TOP4_Operating_Mode_State == 2 || TOP4_Operating_Mode_State == 3 || TOP4_Operating_Mode_State == 4) { return null }\n\n    msg3.topic = 'new setpoint';\n    return msg3 \n\n}\n\n\n// If there is no humidity or temperature sensor data, the requested setpoint will be sent.\nif (F_COOL.RelativeHumidity === undefined && F_COOL.Temperature === undefined) {\n    msg3.payload = F_COOL.setpoint_requested\n    msg3.topic = 'new setpoint';\n    return msg3 \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 560,
        "wires": [
            [
                "793e8c5bacadc28c",
                "4f5325f35beb918b"
            ]
        ],
        "outputLabels": [
            "Setpoint Requested"
        ]
    },
    {
        "id": "de420200e2112c80",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3470,
        "y": 560,
        "wires": [
            [
                "4a7112414493107c"
            ]
        ]
    },
    {
        "id": "bc259ef4511cfc49",
        "type": "ui_numeric",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Manual lower limit",
        "label": "-- Lower limit (man)",
        "tooltip": "",
        "group": "830a81a1c54c6ef5",
        "order": 9,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "manual_setpoint_lower_limit",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "5",
        "max": "20",
        "step": "1",
        "className": "",
        "x": 3150,
        "y": 680,
        "wires": [
            [
                "57bd8e997e9659ed",
                "5d82a01035854d15"
            ]
        ]
    },
    {
        "id": "a0b2a8ca1de90c30",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "link in 59",
        "links": [
            "47cb7500b0321fc1",
            "49ebac0412d87642",
            "b16ab0b5c23a9ca9"
        ],
        "x": 2665,
        "y": 520,
        "wires": [
            [
                "8446efaaa0db1b07"
            ]
        ]
    },
    {
        "id": "967eb9e23a816211",
        "type": "trigger",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3480,
        "y": 680,
        "wires": [
            [
                "4a7112414493107c",
                "f13532d971be853e"
            ]
        ]
    },
    {
        "id": "7fd8e4be18710797",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Chart data",
        "func": "let msg1={};        // setpoint final\n    msg1.topic = 'Setpoint final';\n    \nlet msg2={};        // setpoint requested\n    msg2.topic = 'Setpoint requested';\n    \nlet msg3={};        // temperature\n    msg3.topic = 'Temperature';\n    \nlet msg4={};        // dewpoint\n    msg4.topic = 'Dew Point';\n    \nlet msg5={};        // calculated lower setpoint\n    msg5.topic = 'Lower limit (calc)';\n    \nlet msg6={};        // manual lower setpoint\n    msg6.topic = 'Lower limit (man)';\n\nif (msg.flush !== undefined) {\n    msg1.flush = msg.flush;\n    msg2.flush = msg.flush;\n    msg3.flush = msg.flush;\n    msg4.flush = msg.flush;\n    msg5.flush = msg.flush;\n    msg6.flush = msg.flush;\n\n}\n\nif (msg.topic == 'Z1_Cool_Request_Temp') {\n    msg1.payload = msg.payload;\n    node.send(msg1);\n}\n\n\nvar F_COOL = global.get('F_COOL',\"file\");\nif (F_COOL === undefined) {return null}\n\n\nif (msg.topic != 'Z1_Cool_Request_Temp') {\n    msg1.payload = global.get('Z1_Cool_Request_Temp');\n    if (msg1.payload === undefined) {return null}\n    node.send(msg1);\n}\n\nif (F_COOL.setpoint_requested === undefined) {return null}\nmsg2.payload = F_COOL.setpoint_requested;\nnode.send(msg2);\n\nif (F_COOL.Temperature === undefined) {return null}\nmsg3.payload = F_COOL.Temperature;\nnode.send(msg3);\n\nif (F_COOL.calculated_dew_point === undefined) {return null}\nmsg4.payload = F_COOL.calculated_dew_point;\nnode.send(msg4);\n\nif (F_COOL.calculated_setpoint_lower_limit === undefined) {return null}\nmsg5.payload = F_COOL.calculated_setpoint_lower_limit;\nnode.send(msg5);\n\nif (F_COOL.manual_setpoint_lower_limit === undefined) {return null}\nmsg6.payload = F_COOL.manual_setpoint_lower_limit;\nnode.send(msg6);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3130,
        "y": 300,
        "wires": [
            [
                "71a59b9661071adc"
            ]
        ]
    },
    {
        "id": "ab9d088e21062ff8",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "link in 60",
        "links": [
            "f13532d971be853e",
            "25691ccde88f5530"
        ],
        "x": 2685,
        "y": 300,
        "wires": [
            [
                "7fd8e4be18710797"
            ]
        ]
    },
    {
        "id": "b16ab0b5c23a9ca9",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "link out 61",
        "mode": "link",
        "links": [
            "a0b2a8ca1de90c30"
        ],
        "x": 3975,
        "y": 560,
        "wires": []
    },
    {
        "id": "793e8c5bacadc28c",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3870,
        "y": 560,
        "wires": [
            [
                "b16ab0b5c23a9ca9"
            ]
        ]
    },
    {
        "id": "2cc53aa4981b4a7d",
        "type": "ui_text",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "group": "830a81a1c54c6ef5",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2840,
        "y": 820,
        "wires": []
    },
    {
        "id": "c49ef874bd1fee9d",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "check",
        "func": "var check = flow.get(\"chart_cool\",\"file\");\n\nif (check === undefined) { return null }\n\nelse { \n    flow.set(\"chart_cool\", undefined,\"file\");\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3310,
        "y": 340,
        "wires": [
            [
                "cdd89d5c10c71407"
            ]
        ]
    },
    {
        "id": "f91c28a6cf174863",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "check",
        "x": 2960,
        "y": 160,
        "wires": [
            [
                "2bb5988706fb572a"
            ]
        ]
    },
    {
        "id": "c631c7c6b5043e9b",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "FWD",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3025,
        "y": 480,
        "wires": [
            [
                "914dbce5e778229e",
                "6c93a57f910e03c2"
            ]
        ],
        "icon": "node-red-contrib-home-assistant-websocket/ha-events-all.svg",
        "l": false
    },
    {
        "id": "941c0631859a870e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "FWD",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3025,
        "y": 580,
        "wires": [
            [
                "78e42bcd53ea8133"
            ]
        ],
        "icon": "node-red-contrib-home-assistant-websocket/ha-events-all.svg",
        "l": false
    },
    {
        "id": "5d82a01035854d15",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "FWD",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3025,
        "y": 660,
        "wires": [
            [
                "bc259ef4511cfc49"
            ]
        ],
        "icon": "node-red-contrib-home-assistant-websocket/ha-events-all.svg",
        "l": false
    },
    {
        "id": "925216cb64196829",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "FWD",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2795,
        "y": 1120,
        "wires": [
            [
                "c2c09dbebda13484"
            ]
        ],
        "icon": "node-red-contrib-home-assistant-websocket/ha-events-all.svg",
        "l": false
    },
    {
        "id": "6c6c2315d73dcb16",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "sensor - outside temperature",
        "links": [
            "90c369a401f8419d"
        ],
        "x": 155,
        "y": 100,
        "wires": [
            [
                "a8d51c8773f8f17f"
            ]
        ]
    },
    {
        "id": "9f6d1c245559171f",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "livingroom temperature",
        "links": [
            "af24bcd85c7c6485"
        ],
        "x": 155,
        "y": 260,
        "wires": [
            [
                "0fb10778eba34911"
            ]
        ]
    },
    {
        "id": "e6d062c49d66078a",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "link in 68",
        "links": [
            "93092472a2d44b45"
        ],
        "x": 3005,
        "y": 200,
        "wires": [
            [
                "0df0e84326dbeec7",
                "dea135ecc9872411"
            ]
        ]
    },
    {
        "id": "3072102c9a588df4",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "link in 69",
        "links": [
            "b640b7d51f9d0adf"
        ],
        "x": 3005,
        "y": 120,
        "wires": [
            [
                "37a369fd9ad03085",
                "1d63998e541e4d5a"
            ]
        ]
    },
    {
        "id": "ab62e7cec773d86d",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1530,
        "y": 1000,
        "wires": [
            [
                "37db709069bc2dc2"
            ]
        ]
    },
    {
        "id": "37db709069bc2dc2",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 87",
        "mode": "link",
        "links": [
            "4212c42fb72cce77"
        ],
        "x": 1625,
        "y": 1000,
        "wires": []
    },
    {
        "id": "45c90f37a7b32d68",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP34 - panasonic_heat_pump/main/Z2_Heat_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Request_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 410,
        "y": 2800,
        "wires": [
            [
                "70b76184cb3f0700"
            ]
        ]
    },
    {
        "id": "ecb3b52a28d4771f",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP35 - panasonic_heat_pump/main/Z2_Cool_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Request_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 410,
        "y": 2840,
        "wires": [
            [
                "2bd2d081e8cd67e2"
            ]
        ]
    },
    {
        "id": "2bd2d081e8cd67e2",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Z2_Cool_Request_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Z2_Cool_Request_Temp';\nglobal.set(\"TOP35_Z2_Cool_Request_Temp\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2840,
        "wires": [
            [
                "3b192c4fedabf0f7"
            ]
        ]
    },
    {
        "id": "70b76184cb3f0700",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Z2_Heat_Request_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Z2_Heat_Request_Temp';\nglobal.set(\"TOP34_Z2_Heat_Request_Temp\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2800,
        "wires": [
            [
                "ed363518f4ab4108"
            ]
        ]
    },
    {
        "id": "ed363518f4ab4108",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "link out 88",
        "mode": "link",
        "links": [
            "9907c88ef470d1c9"
        ],
        "x": 1495,
        "y": 2800,
        "wires": []
    },
    {
        "id": "3b192c4fedabf0f7",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "link out 89",
        "mode": "link",
        "links": [
            "e137742b346ad008"
        ],
        "x": 1495,
        "y": 2840,
        "wires": []
    },
    {
        "id": "ce5a606d14d7a2fe",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "link in 74",
        "links": [
            "3b0c5855d9f81d85"
        ],
        "x": 3035,
        "y": 2140,
        "wires": [
            [
                "319d7b2735937f1a"
            ]
        ]
    },
    {
        "id": "5e6950dffab43add",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "function 65",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3055,
        "y": 2040,
        "wires": [
            [
                "c860a4238803ed02",
                "12c84fbd61e2d1c2"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "a5eb2e2427c1608a",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP42 - panasonic_heat_pump/main/Z1_Water_Target_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Water_Target_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 400,
        "y": 2900,
        "wires": [
            [
                "10f3cc54edfb37d1"
            ]
        ]
    },
    {
        "id": "10f3cc54edfb37d1",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Z1_Water_Target_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nif (global.get('TOP42_Z1_Water_Target_Temp', \"file\") == msg.payload) { return null; }\nglobal.set(\"TOP42_Z1_Water_Target_Temp\", msg.payload, \"file\");\nmsg.topic = 'TOP42_Z1_Water_Target_Temp';\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2900,
        "wires": [
            [
                "25633efa4485f375"
            ]
        ]
    },
    {
        "id": "25633efa4485f375",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "link out 91",
        "mode": "link",
        "links": [
            "fd2003d6bc939d36"
        ],
        "x": 1495,
        "y": 2900,
        "wires": []
    },
    {
        "id": "c1c8d438953b1c8b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP16 - panasonic_heat_pump/main/Heat_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Heat_Power_Consumption",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 2540,
        "wires": [
            [
                "ff3dd227527b76c3"
            ]
        ]
    },
    {
        "id": "8dc0ca4b26915b2a",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP41 - panasonic_heat_pump/main/DHW_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/DHW_Power_Consumption",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 420,
        "y": 2600,
        "wires": [
            [
                "10ca1d93fdd1afe2"
            ]
        ]
    },
    {
        "id": "2ab69331460bb678",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 238",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1280,
        "wires": []
    },
    {
        "id": "37c42afd25bc6594",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "SOFT_START",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7430c37f5c30419b",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "link out 92",
        "mode": "link",
        "links": [
            "c24406bef1e6355d"
        ],
        "x": 1495,
        "y": 1720,
        "wires": []
    },
    {
        "id": "319d7b2735937f1a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "function 95",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3075,
        "y": 2220,
        "wires": [
            [
                "8effd9295d55099f",
                "a8be0fdf50f25150"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "bf9d1ac2d5e48dd5",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1380,
        "y": 740,
        "wires": [
            [
                "fab44b5501eca10e"
            ]
        ]
    },
    {
        "id": "5cc3ee0f614e6a06",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 252",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 500,
        "wires": []
    },
    {
        "id": "ab80bbcbde14cd64",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 253",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 600,
        "wires": []
    },
    {
        "id": "4f51ea978caaef1a",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 254",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 880,
        "wires": []
    },
    {
        "id": "e09487eff90c64b3",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "debug 255",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1220,
        "wires": []
    },
    {
        "id": "eb50549bbbcbee75",
        "type": "function",
        "z": "a938de76db0b71f6",
        "name": "Filter",
        "func": "var last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\n\n\n\nif (last_value === undefined || last_msgid === undefined){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return null;\n}\n\nif (last_msgid == msg._msgid){\n    return null;\n}\n\nif (msg.payload != last_value){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n//    msg.topic = 'SP final';\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "4f5325f35beb918b",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "992121a08b66faa3",
        "name": "Filter",
        "func": "var last_value = context.get('last_value');\n\nif (last_value === undefined) {\n    context.set('last_value', msg.payload);\n    return null;\n}\n\nif (msg.payload != last_value) {\n    context.set('last_value', msg.payload);\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3870,
        "y": 680,
        "wires": [
            [
                "6b2644c3a510f50f"
            ]
        ]
    },
    {
        "id": "9bc9b1a547ea7ef6",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "link out 93",
        "mode": "link",
        "links": [
            "efe3dd019498a583"
        ],
        "x": 3635,
        "y": 2000,
        "wires": []
    },
    {
        "id": "706c5dcd5d6c136b",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "116d861b2bd34e3a",
        "name": "function 96",
        "func": "if (msg.payload == 0) { return msg; }",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 2000,
        "wires": [
            [
                "9bc9b1a547ea7ef6"
            ]
        ]
    },
    {
        "id": "a329c0a372402264",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "140",
        "payloadType": "num",
        "x": 310,
        "y": 3000,
        "wires": [
            [
                "ba4a12897a805cee"
            ]
        ]
    },
    {
        "id": "0970bfa5a14caf6b",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "f7bdc92c0ed8e3b9",
        "name": "link out 94",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb"
        ],
        "x": 3015,
        "y": 1780,
        "wires": []
    },
    {
        "id": "d15519b2b7caae11",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "name": "export to log testing",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1665,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6689f388c8028972",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "8464ca0ddfa2e5de",
        "name": "Pumpspeed function on/off",
        "links": [
            "4d0ef717fa8fdb71"
        ],
        "x": 2555,
        "y": 1140,
        "wires": [
            [
                "c2c09dbebda13484",
                "dbb3202d2fc26245"
            ]
        ]
    },
    {
        "id": "399bbbd616d3dc55",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "f7bdc92c0ed8e3b9",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3060,
        "y": 1700,
        "wires": [
            [
                "f651bed25831c6f4"
            ]
        ]
    },
    {
        "id": "3b56718868c66537",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "f7bdc92c0ed8e3b9",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3060,
        "y": 1740,
        "wires": [
            [
                "c8b5382d8d981e31"
            ]
        ]
    },
    {
        "id": "6766b92901602397",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "link out 103",
        "mode": "link",
        "links": [
            "6bd234b67b830924"
        ],
        "x": 1625,
        "y": 580,
        "wires": [],
        "icon": "node-red/leveldb.svg"
    },
    {
        "id": "df044144e4292bd6",
        "type": "change",
        "z": "a938de76db0b71f6",
        "g": "d2b7e1d6e85a96cf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NR - RTC Calculated correction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 580,
        "wires": [
            [
                "6766b92901602397"
            ]
        ]
    },
    {
        "id": "4f9a7ab2aa7cddaf",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP16 - panasonic_heat_pump/main/Heat_Power_Consumption_Extra",
        "topic": "panasonic_heat_pump/main/Heat_Power_Consumption_Extra",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 2540,
        "wires": [
            [
                "ff3dd227527b76c3"
            ]
        ]
    },
    {
        "id": "64ae46079504e47e",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP41 - panasonic_heat_pump/main/DHW_Power_Consumption_Extra",
        "topic": "panasonic_heat_pump/main/DHW_Power_Consumption_Extra",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 2600,
        "wires": [
            [
                "10ca1d93fdd1afe2"
            ]
        ]
    },
    {
        "id": "43c4ee3ee4757f3c",
        "type": "tab",
        "label": "WP Managers",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eae83de4837abd07",
        "type": "group",
        "z": "43c4ee3ee4757f3c",
        "name": "Quiet Mode Manager",
        "style": {
            "label": true,
            "fill": "#ffefbf"
        },
        "nodes": [
            "2a72a0a50c226d0f",
            "a3ab6c0ec376501c",
            "06d5536b79bbad36",
            "c94d6bdf03f2b540",
            "148e50df3de81e03",
            "74ccc8947e89976a",
            "1027f83996564c11",
            "9708d32f74bd48ae",
            "906071287f20398e",
            "5a1d6b18490ded1c",
            "3862c55621fdbb6d",
            "6165734a2db82af9",
            "2798e84309619975",
            "0ad5396b01ed9ce0",
            "3f035e294e03f28c",
            "a44c9937f2ab3ee0",
            "4aeca25016f1790a",
            "4e71c5f774dde93c",
            "aa0fd9c437762a4e",
            "45cb23dd7d903663",
            "20f812994e45e10a",
            "4f37968e1a1ebacc",
            "4ac5cc278b7439a7",
            "405317f0af84b0d2",
            "b6ca22591212ef37",
            "69d01a9ce5c2f74f",
            "2257c7f00dc04133",
            "76613b798744d288"
        ],
        "x": 154,
        "y": 19
    },
    {
        "id": "424338733e4798c9",
        "type": "group",
        "z": "43c4ee3ee4757f3c",
        "name": "DHW SP manager",
        "style": {
            "label": true,
            "fill": "#ffefbf"
        },
        "nodes": [
            "35a1975644451093",
            "a6ccb9d3fcdad8e7",
            "c4cb07ae79c0bf65",
            "609ccd0fd9799230",
            "114053cd7796cbd8",
            "9f0d3363157b8087",
            "b02fa3c8b43f5d62",
            "fe877578d4a955fa",
            "f65899a1446c22c7",
            "b62af09024bd5955",
            "dd5a385aad192c71",
            "cc67a559f6872a34",
            "47b30756351d8037",
            "aeae0e1e5be9ad20",
            "c82ec16fb6ba6769",
            "6f29a5e5626945ea",
            "327f3ad0eae0d7d5",
            "90505d69973e3970",
            "fb5aeb896e8acc76",
            "b3359bc3c036e439",
            "a333286329402b87",
            "4e1fa036d5ada897",
            "0770871389001bc5",
            "3cdd0f73da377608",
            "e44b30546eb4ad2d",
            "ded02fca7021c0c6",
            "3ef323f843b0f516",
            "290f1b5381842a42"
        ],
        "x": 164,
        "y": 399
    },
    {
        "id": "ab02dbcde88f3267",
        "type": "group",
        "z": "43c4ee3ee4757f3c",
        "name": "popup Style",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "a0c12406bf11e1e5",
            "5478fc658f9e7b24",
            "6ade9410c4a9dd70"
        ],
        "x": 1894,
        "y": 59
    },
    {
        "id": "d9eb0a2937cbbc7b",
        "type": "group",
        "z": "43c4ee3ee4757f3c",
        "name": "Operating mode Manager",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "adfcd4f481333501",
            "84bff5c3d4a4cede",
            "c5e4882db5fea41f",
            "73e10ff5ebe614ef",
            "b9c4f0a59b3270ad",
            "2a530d47b288e289",
            "e73d130bb1839444",
            "efa847198158ca2c",
            "f76db0ea91c39edd",
            "836082017500f9a9",
            "87f71902ec6b1541",
            "8b4945ae5f3915e8",
            "4a4a891dece731a1",
            "cc38651b04af8756",
            "a5db2d3cd0084878"
        ],
        "x": 164,
        "y": 679
    },
    {
        "id": "7c9fc2b0c2d2a5dc",
        "type": "group",
        "z": "43c4ee3ee4757f3c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "65e47b8ca0c36fca",
            "1b409e1ea72f94dd",
            "04af9373e9f7a428",
            "78cd6de319a6d061",
            "d62a7aa18d066598",
            "9c1e75a839561879",
            "5b68f411defbf165",
            "c33331020f81138c",
            "5a4f06715dc2679e",
            "6f65651e620cf7e7",
            "eb847ef562556312",
            "1a4fde738593db6a",
            "d5711fa416b266f4"
        ],
        "x": 1114,
        "y": 859
    },
    {
        "id": "8f85827475badab6",
        "type": "group",
        "z": "43c4ee3ee4757f3c",
        "name": "HEAT SP Manager",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "7ddd3f5d8f76897e",
            "5d0b7390e93f7e48",
            "642356c6a779d7fa",
            "694768bd9f0a9a39",
            "02c7c088196cb575",
            "2d52ca9e08c7fb9a",
            "d154cb2b92987925",
            "ff40b3d6f1b996fe",
            "fc202bdb5486d9fe",
            "ecc3180f70a1af53",
            "5d8b7981975b516e",
            "7a2f0f42321d7256",
            "61dfad40f76daac7",
            "fa2a77572981525d",
            "ed2c73bf6b96d4a0",
            "fd2003d6bc939d36",
            "909640f1caf950f8",
            "a85d4f84f1b538d1",
            "3decf85e0dfd50ae",
            "9d678818ee4f7078",
            "ddcff50cd968534a",
            "ea22f152face3bf2",
            "0e04122d6f8a2033",
            "a1ecb8084e0daf19",
            "bc40f8b817aa9a3f",
            "831ae2781ec40575",
            "9c9e0c42f12befa6"
        ],
        "x": 174,
        "y": 1059
    },
    {
        "id": "2a72a0a50c226d0f",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "link out towards LOGs",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1405,
        "y": 160,
        "wires": []
    },
    {
        "id": "a3ab6c0ec376501c",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "Exit to InputLOGS",
        "info": "",
        "x": 930,
        "y": 160,
        "wires": []
    },
    {
        "id": "06d5536b79bbad36",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "Quiet Mode Manager",
        "func": "/*\nmsg.source:\n    \"SoftStart Quietmode\";\n    \"scheduler\";\n    \"GUI\";\n    \"boot\";\n    \"Operating_Mode_State\";\n*/\nvar msg1 = {};      // quiet mode level sent to mqtt SET3\n    msg1.topic = 'QuietMode level';\nvar msg2 = {};      // To Log\n    msg2.topic = \"Quiet mode manager\";\nvar msg3 = {};      // Popup Okay\nvar msg4 = {};      // Popup Yes/No\n\nvar F_SS            = global.get(\"F_SS\",\"file\");\nif (F_SS === undefined) { F_SS = {}; }\nif (F_SS.QM_state === undefined) { F_SS.QM_state = 0; global.set(F_SS.QM_state, 0,\"file\"); }\n\nvar Hz              = global.get('compressor_frequency',\"file\");                // Get the global variable for current compressor frequency\nvar CurrentQMLevel  = global.get('TOP18_Quiet_Mode_Level',\"file\");                    // Current quiet mode level from TOP18\n\n\n//******************************************************************************\n//****** SOURCE : GUI Toggle - SoftStart / Quietmode Add-on          ***********\n//******************************************************************************\nif ((msg.topic == \"QM_state\" && F_SS.state == 1) || (msg.topic == \"Function - SoftStart\" && F_SS.QM_state == 1)){\n        \n        if (msg.payload == 1 && Hz > 0 ){\n                return null;\n        }\n        if (msg.payload == 1 && Hz == 0 ){\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"QuietMode Manager\"); }\n                msg1.payload = F_SS.QM_active_level;\n                msg2.payload = 'Function turned on. Restoring quietmode to level ' + F_SS.QM_active_level;\n                return [msg1,msg2];\n        }\n        \n        if (msg.payload == 0){\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"QuietMode Manager\"); }\n                msg1.payload = F_SS.QM_default_level;\n                msg2.payload = 'Function turned off. Restoring quietmode to level ' + F_SS.QM_default_level;\n                return [msg1,msg2];\n        }\n}\n\n//******************************************************************************\n//****** Source : SCHEDULER                                          ***********\n//******************************************************************************\nif (msg.source == \"scheduler\"){\n        msg1.payload = msg.payload;\n        if (F_SS.QM_state == 1 && F_SS.state == 1){\n            // msg2 = message to the log\n            msg2.payload = '*** ATTENTION *** Scheduler changed the quiet mode level while the softstart quiet mode add-on is still active.';\n            node.send([null,msg2])\n        }\n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Scheduler\"); }\n        return msg1;\n}\n\n\n//******************************************************************************\n//******  Source : GUI changes from the Quietmode Add-on settings    ***********\n//******************************************************************************\nif (msg.topic == \"QM_default_level\" && Hz > 0 && F_SS.QM_state == 1 && F_SS.state == 1){    // SoftStart QuietMode tab\n\n        // msg4 = message to the Notify dialog\n        msg4.topic = \" Action\"\n        msg4.payload = \" Setting 'Default quietmode level' changed to \" + msg.payload + \n        \"</br></br> Should the quietmode level be applied now? \" + \n        \"</br>\"\n        msg4.value = msg.payload;                                           // wrap the qm level into msg4 as a msg3.value\n\n        return [null,null,null,msg4];\n}\n\nif (msg.topic == \"QM_active_level\" && Hz == 0 && F_SS.QM_state == 1 && F_SS.state == 1){    // SoftStart QuietMode tab\n\n        // msg4 = message to the Notify dialog\n        msg4.topic = \" Action\"\n        msg4.payload = \" Setting 'active quietmode level' changed to \" + msg.payload + \n        \"</br></br> Should the quietmode level be applied now? \" + \n        \"</br>\"\n        msg4.value = msg.payload;                                           // wrap the qm level into msg4 as a msg3.value\n\n        return [null,null,null,msg4];\n}\n\n\n//******************************************************************************\n//******  Source : Quietmode Add-on functional results               ***********\n//******************************************************************************\nif (msg.source == \"SoftStart Quietmode\"){\n        msg1.payload = msg.payload;\n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SoftStart Quietmode\"); }\n        return msg1;   \n}\n\n//******************************************************************************\n//******  Source : Change in DHW / HEAT mode                         ***********\n//******************************************************************************\nif (msg.topic == 'TOP20_ThreeWay_Valve_State' && F_SS.QM_state == 1 && F_SS.state == 1){\n    \n        if (msg.payload == 0 && CurrentQMLevel != F_SS.QM_active_level){            // 0 == 3-way valve in position HEAT \n                msg1.payload = F_SS.QM_active_level;\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"QuietMode Manager\"); }\n                \n                msg2.payload = 'Detected 3-way valve set to HEAT position again. Restoring quiet mode to level ' + F_SS.QM_active_level;\n                \n                return [msg1,msg2]\n        }\n        if (msg.payload == 1 && CurrentQMLevel != F_SS.QM_default_level){            // 1 == 3-way valve in position DHW \n                msg1.payload = F_SS.QM_default_level;\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"QuietMode Manager\"); }\n                \n                msg2.payload = 'Detected 3-way valve set to DHW. Disabling the quiet mode function during DHW. Restored to level ' + F_SS.QM_default_level;\n                \n                return [msg1,msg2]\n        }\n}\n\n//******************************************************************************\n//******  Source : Defrost state                                     ***********\n//******************************************************************************\n\nif (msg.topic == 'TOP26_Defrosting_State' && F_SS.QM_state == 1 && F_SS.state == 1){\n    \n        if (msg.payload == 0 && Hz == 0 && CurrentQMLevel != F_SS.QM_active_level){            // 0 == defrost state is inactive\n                msg1.payload = F_SS.QM_active_level;\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"QuietMode Manager\"); }\n                msg2.payload = 'Detected defrost cycle end. (comporessor off) Restoring quietmode to level ' + F_SS.QM_active_level;\n                return [msg1,msg2]\n        }\n        \n        if (msg.payload == 0 && Hz > 0 && CurrentQMLevel != F_SS.QM_default_level){            // 0 == defrost state is inactive\n                msg1.payload = F_SS.QM_default_level;\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"QuietMode Manager\"); }\n                msg2.payload = 'Detected defrost cycle end. (comporessor on) Restoring quietmode to level ' + F_SS.QM_default_level;\n                return [msg1,msg2]\n        }\n\n        if (msg.payload == 1 && CurrentQMLevel != F_SS.QM_default_level){            // 1 == defrost cycle ongoing\n                msg1.payload = F_SS.QM_default_level;\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"QuietMode Manager\"); }\n                msg2.payload = 'Detected defrost cycle start. Disabling the quiet mode function during defrost. Restored to level ' + F_SS.QM_default_level;\n                return [msg1,msg2]\n        }\n}\n\n//******************************************************************************\n//******  Source : GUI changes from the Settings tab                 ***********\n//******************************************************************************\nif (msg.source == \"GUI\"){\n        msg1.payload = msg.payload;\n        \n        if (F_SS.QM_state == 1 && F_SS.state == 1){\n                // msg3 = message to the Notify dialog\n                msg3.topic = \" Attention ...\"\n                msg3.payload =  \" Quiet mode is now changed to level \" + msg1.payload + \n                                \"</br></br></br> The SoftStart quiet mode Add-on is active\" + \n                                \"</br> Beware that settings of the Add-on have not been changed.\" +\n                                \"</br>\";\n                msg3.value = msg1.payload;\n                node.send([null,null,msg3])\n        }\n        \n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"GUI\"); }\n        \n        return msg1;\n}",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 180,
        "wires": [
            [
                "b6ca22591212ef37"
            ],
            [
                "69d01a9ce5c2f74f"
            ],
            [
                "2257c7f00dc04133"
            ],
            [
                "76613b798744d288"
            ]
        ],
        "outputLabels": [
            "QuietMode OUT (mqtt)",
            "To Log",
            "Popup",
            ""
        ]
    },
    {
        "id": "c94d6bdf03f2b540",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "link in 21",
        "links": [
            "4d6957c0b336a3cb"
        ],
        "x": 195,
        "y": 140,
        "wires": [
            [
                "06d5536b79bbad36"
            ]
        ]
    },
    {
        "id": "148e50df3de81e03",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "QM GUI changes",
        "info": "",
        "x": 310,
        "y": 140,
        "wires": []
    },
    {
        "id": "74ccc8947e89976a",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "link in 22",
        "links": [
            "14327004637e05c7"
        ],
        "x": 195,
        "y": 100,
        "wires": [
            [
                "06d5536b79bbad36"
            ]
        ]
    },
    {
        "id": "1027f83996564c11",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "QM Scheduler",
        "info": "",
        "x": 300,
        "y": 100,
        "wires": []
    },
    {
        "id": "9708d32f74bd48ae",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "link in 23",
        "links": [
            "7c6f02c851467bc0"
        ],
        "x": 195,
        "y": 180,
        "wires": [
            [
                "06d5536b79bbad36"
            ]
        ]
    },
    {
        "id": "906071287f20398e",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "QM SoftStart results",
        "info": "",
        "x": 320,
        "y": 180,
        "wires": []
    },
    {
        "id": "5a1d6b18490ded1c",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "QM output from manager",
        "mode": "link",
        "links": [
            "4212c42fb72cce77",
            "a3d9dc45c641ff7d",
            "c24406bef1e6355d",
            "c33b3e865b1bd8b8"
        ],
        "x": 1405,
        "y": 120,
        "wires": []
    },
    {
        "id": "3862c55621fdbb6d",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "SS QM Add-on state",
        "info": "",
        "x": 320,
        "y": 60,
        "wires": []
    },
    {
        "id": "6165734a2db82af9",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "link in 24",
        "links": [
            "84f7cbc2cc8c135d",
            "e9942046bea0d380"
        ],
        "x": 195,
        "y": 60,
        "wires": [
            [
                "06d5536b79bbad36"
            ]
        ]
    },
    {
        "id": "2798e84309619975",
        "type": "ui_toast",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 1,
        "ok": "OK ... (30 sec)",
        "cancel": "",
        "raw": true,
        "className": "popup_class",
        "topic": "",
        "name": "OK",
        "x": 1100,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0ad5396b01ed9ce0",
        "type": "trigger",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "",
        "op1": "",
        "op2": "[]",
        "op1type": "nul",
        "op2type": "json",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 910,
        "y": 200,
        "wires": [
            [
                "2798e84309619975"
            ]
        ]
    },
    {
        "id": "3f035e294e03f28c",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "Exit to mqtt SET3",
        "info": "",
        "x": 920,
        "y": 120,
        "wires": []
    },
    {
        "id": "a44c9937f2ab3ee0",
        "type": "trigger",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "",
        "op1": "",
        "op2": "[]",
        "op1type": "nul",
        "op2type": "json",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 910,
        "y": 240,
        "wires": [
            [
                "4aeca25016f1790a"
            ]
        ]
    },
    {
        "id": "4aeca25016f1790a",
        "type": "ui_toast",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No (default 30 sec)",
        "raw": true,
        "className": "popup_class",
        "topic": "",
        "name": "Yes / No",
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "4e71c5f774dde93c"
            ]
        ]
    },
    {
        "id": "4e71c5f774dde93c",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "Forward Yes",
        "func": "if (msg.payload == \"Yes\")   {\n    msg.payload = msg.value;\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"GUI\"); }\n    return msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 240,
        "wires": [
            [
                "5a1d6b18490ded1c"
            ]
        ]
    },
    {
        "id": "aa0fd9c437762a4e",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "QM Manager - DHW/HEAT",
        "links": [
            "aec0cb2b18e02d8b"
        ],
        "x": 195,
        "y": 220,
        "wires": [
            [
                "06d5536b79bbad36"
            ]
        ]
    },
    {
        "id": "45cb23dd7d903663",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "3-way valvue",
        "info": "",
        "x": 300,
        "y": 220,
        "wires": []
    },
    {
        "id": "20f812994e45e10a",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "Defrost",
        "info": "",
        "x": 280,
        "y": 260,
        "wires": []
    },
    {
        "id": "4f37968e1a1ebacc",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "link in 26",
        "links": [
            "6c685782864f1787"
        ],
        "x": 195,
        "y": 260,
        "wires": [
            [
                "06d5536b79bbad36"
            ]
        ]
    },
    {
        "id": "4ac5cc278b7439a7",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "link in 27",
        "links": [
            "7d9dc928c0177c74"
        ],
        "x": 195,
        "y": 300,
        "wires": [
            [
                "06d5536b79bbad36"
            ]
        ]
    },
    {
        "id": "405317f0af84b0d2",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "Settings tab",
        "info": "",
        "x": 300,
        "y": 300,
        "wires": []
    },
    {
        "id": "35a1975644451093",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "DHW SP Manager",
        "func": "var F_SOLAR = global.get('F_SOLAR',\"file\");\n/*\n*** Sources of DHW setpoint changes ***\n    Solar function\n    GUI settings tab\n    GUI solar tab\n    GUI DHW tab\n*/\n// pin 1: output to mqtt SET9 (DHW SP)\n// pin 2: output for popup with OK\n// pin 3: output for popup with yes/no option\n// pin 4: output to log\n\n\n//******************************************************************************\nif (F_SOLAR.state == 0 && msg.topic == 'dhw_sp') {\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"GUI\"); }\n    return msg;    \n    // changing the SP will send mqtt command.\n}\nif (F_SOLAR.state == 0 && (msg.topic == 'dhw_sp_high' || msg.topic == 'dhw_sp_low')) {\n    return null;    \n    // changing the SP high can be done freely. \n}\n\n\n\n//******************************************************************************\n// Source = Solar function itself\nif (msg.topic == 'Solar function') {\n    if (global.get('TOP9_DHW_Target_Temp',\"file\") != msg.payload)   {\n        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Solar\"); }\n        return [msg,null,null,null];\n    }\n    \n}\n\n\n\n\n//******************************************************************************\n// Source = GUI settings tab\nif (F_SOLAR.state == 1 && msg.topic == 'dhw_sp') {\n    let msg2={} // Popup\n    msg2.payload = \"DHW setpoint is changed to \" + msg.payload + \n    \"</br></br> Be aware that the 'Solar energie to DHW' function enabled\" + \n    \"</br></br> When this function start or end, the DHW setpoint will change to\"+\n    \"</br> Setpoint low: \" + F_SOLAR.dhw_sp_low + \n    \"</br> Setpoint high: \" + F_SOLAR.dhw_sp_high + \n    \"</br>\";\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"GUI\"); }\n    return [msg,msg2,null];\n}\n\n\n\n//******************************************************************************\n// Source = GUI solar tab\nif (F_SOLAR.state == 1 && F_SOLAR.function_active_state >= 1 && (msg.topic == 'dhw_sp_high' || msg.topic == 'dhw_sp_low')) {\n    let msg2={} // Popup\n    msg2.payload = \"<B>Solar function</B>\" +\n    \"</br></br> Change DHW setpoint to \" + msg.payload + \"°C now?</br></br>\";\n    msg2.value = msg.payload;\n    return [null,null,msg2];\n}\n//******************************************************************************\n// Source = GUI solar tab\nif (F_SOLAR.state == 1 && F_SOLAR.function_active_state < 1 && msg.topic == 'dhw_sp_low') {\n    let msg2={} // Popup\n    msg2.payload = \" <B>Solar function</B>\" +\n    \"</br></br> Change DHW setpoint to \" + msg.payload + \" °C now?</br></br> \";\n    msg2.value = msg.payload;\n    return [null,null,msg2];\n    // When changing SP low while solar function did not start yet, will ask if the SP needs to be applied.\n}\n//******************************************************************************\n// Source = GUI solar tab\nif (F_SOLAR.function_active_state < 1 && msg.topic == 'dhw_sp_high') {\n    return null;\n    // changing the SP high can be done freely. \n}\n\nif (msg.topic == 'Start_DHW_Run_SP2' && msg.payload == 1) {\n    var new_DHW_SP = global.get('TOP9_DHW_Target_Temp_Secondairy',\"file\");\n    global.set('TOP9_DHW_Target_Temp_restore_value', global.get('TOP9_DHW_Target_Temp',\"file\") ,\"file\");\n    if (new_DHW_SP === undefined)   { return null; }\n    let msg1={};    msg1.payload = new_DHW_SP;\n    let msg2={};    msg2.topic = 'DHW';             msg2.payload = 1;      msg2.force = 1;\n    let msg99={};   msg99.topic = 'DHW Boost';      msg99.payload = 'Manually started DHW cycle to boost temperature to (' + new_DHW_SP + '°C)';\n    return [msg1,null,null,msg2,msg99]\n}\n\nif (msg.topic == 'Start_DHW_Run_SP2' && msg.payload == 0) {\n    \n    let msg1 = {};  msg1.topic = 'DHW';             msg1.payload = global.get('TOP9_DHW_Target_Temp_restore_value',\"file\");\n    let msg2={};    msg2.topic = 'DHW';             msg2.payload = 0;      msg2.force = 1;\n    let msg99={};   msg99.topic = 'DHW Boost';      msg99.payload = 'Manually stopped DHW boost. Restoring DHW setpoint to ' + msg1.payload + '°C';\n    global.set('TOP9_DHW_Target_Temp_restore_value', undefined, \"file\");\n    return [msg1,null,null,msg2,msg99]\n}\n\nif (msg.topic == 'GUI_F_DHW') {\n    msg.topic='DHW';\n    msg.force=1;\n    node.warn(msg);\n    return [null, null, null, msg];\n}",
        "outputs": 5,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 520,
        "wires": [
            [
                "3cdd0f73da377608"
            ],
            [
                "e44b30546eb4ad2d"
            ],
            [
                "ded02fca7021c0c6"
            ],
            [
                "3ef323f843b0f516"
            ],
            [
                "290f1b5381842a42"
            ]
        ],
        "outputLabels": [
            "DHW SP out (mqtt)",
            "popup ok",
            "popup yes/no",
            "Start DHW Cycle",
            ""
        ]
    },
    {
        "id": "a6ccb9d3fcdad8e7",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "DHW SP MANAGER_in",
        "links": [
            "550d51c7fe788f9e"
        ],
        "x": 205,
        "y": 460,
        "wires": [
            [
                "35a1975644451093"
            ]
        ]
    },
    {
        "id": "c4cb07ae79c0bf65",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "link out 40",
        "mode": "link",
        "links": [
            "61def1f2090e360a"
        ],
        "x": 1415,
        "y": 440,
        "wires": []
    },
    {
        "id": "609ccd0fd9799230",
        "type": "trigger",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 820,
        "y": 480,
        "wires": [
            [
                "114053cd7796cbd8",
                "9f0d3363157b8087"
            ]
        ]
    },
    {
        "id": "114053cd7796cbd8",
        "type": "ui_toast",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 1,
        "ok": "OK ... (30 sec)",
        "cancel": "",
        "raw": true,
        "className": "popup_class",
        "topic": "",
        "name": "OK",
        "x": 1110,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "9f0d3363157b8087",
        "type": "trigger",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "",
        "op1": "",
        "op2": "[]",
        "op1type": "nul",
        "op2type": "json",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 480,
        "wires": [
            [
                "114053cd7796cbd8"
            ]
        ]
    },
    {
        "id": "b02fa3c8b43f5d62",
        "type": "trigger",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 820,
        "y": 520,
        "wires": [
            [
                "fe877578d4a955fa",
                "f65899a1446c22c7"
            ]
        ]
    },
    {
        "id": "fe877578d4a955fa",
        "type": "trigger",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "",
        "op1": "",
        "op2": "[]",
        "op1type": "nul",
        "op2type": "json",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 520,
        "wires": [
            [
                "f65899a1446c22c7"
            ]
        ]
    },
    {
        "id": "f65899a1446c22c7",
        "type": "ui_toast",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No (default 30 sec)",
        "raw": true,
        "className": "popup_class",
        "topic": "",
        "name": "Yes / No",
        "x": 1120,
        "y": 520,
        "wires": [
            [
                "b62af09024bd5955"
            ]
        ]
    },
    {
        "id": "b62af09024bd5955",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "Forward Yes",
        "func": "if (msg.payload == \"Yes\")   {\n    msg.payload = msg.value;\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"GUI\"); }\n    return msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 520,
        "wires": [
            [
                "c4cb07ae79c0bf65"
            ]
        ]
    },
    {
        "id": "dd5a385aad192c71",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "link in 31",
        "links": [
            "f6779270108c1106"
        ],
        "x": 205,
        "y": 500,
        "wires": [
            [
                "35a1975644451093"
            ]
        ]
    },
    {
        "id": "cc67a559f6872a34",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "GUI (Home/Settings)",
        "info": "",
        "x": 330,
        "y": 460,
        "wires": []
    },
    {
        "id": "47b30756351d8037",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "GUI (Solar)",
        "info": "",
        "x": 310,
        "y": 500,
        "wires": []
    },
    {
        "id": "aeae0e1e5be9ad20",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "Exit to mqtt SET11",
        "info": "",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "a0c12406bf11e1e5",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "g": "ab02dbcde88f3267",
        "group": "e3cc96332cd59f07",
        "name": "style [Home] DHW",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .popup_class{\n        padding-left:20px !important;\n        padding-right:20px !important;\n}\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2010,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "5478fc658f9e7b24",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "g": "ab02dbcde88f3267",
        "group": "26d9e6cf24507b4f",
        "name": "style [Settings] HEAT | DHW",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .popup_class{\n        padding-left:20px !important;\n        padding-right:20px !important;\n}\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2040,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6ade9410c4a9dd70",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "g": "ab02dbcde88f3267",
        "group": "2bd11d2d909e2ba3",
        "name": "style [Settings] HEAT | DHW",
        "order": 9,
        "width": 14,
        "height": 1,
        "format": "<style>\n    .popup_class{\n        padding-left:20px !important;\n        padding-right:20px !important;\n}\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2040,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b629087d36acf89e",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "bf4af523ba16d457",
        "name": "style [Home]",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2010,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "29daf0bbd602db4f",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "name": "Banner color",
        "links": [
            "6c685782864f1787",
            "c3c58f9072c16f58"
        ],
        "x": 1695,
        "y": 280,
        "wires": [
            [
                "2589c727fc2ad928"
            ]
        ]
    },
    {
        "id": "2589c727fc2ad928",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "name": "function 15",
        "func": "if (msg.topic != 'TOP26_Defrosting_State')  {  // must be MQTT blockmode then....\n        if (msg.payload == 1)   {\n            msg.payload = 'red';\n            return msg;\n        }\n        \n        if (msg.payload == 0)   {\n            msg.payload = '[]';\n            return msg;\n        }\n}\n\n\n// ************** DEFROST ****************\nif (msg.topic == 'TOP26_Defrosting_State')  {\n        \n        if (msg.payload == 1)   {\n            msg.payload = 'blue';\n            return msg;\n        }\n        \n        if (msg.payload == 0)   {\n            msg.payload = '[]';\n            return msg;\n        }    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 280,
        "wires": [
            [
                "b629087d36acf89e",
                "c6c17a92f472d3e4",
                "229a4ee1d7377c5e",
                "631c09dd9632c92a",
                "b04505a68eb19642",
                "a4b7150004829f97",
                "0e8096a2f8827083",
                "8bb1e12a22d4dc11",
                "848fa7aade4f22a3",
                "11685bca2f768125",
                "edc08fb519edf993",
                "05b8832e0e7fda7e"
            ]
        ]
    },
    {
        "id": "0c8735d186ca284a",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "name": "All tabs",
        "info": "",
        "x": 1910,
        "y": 220,
        "wires": []
    },
    {
        "id": "c6c17a92f472d3e4",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "fea7672db2f050c9",
        "name": "style [Settings]",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2020,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "229a4ee1d7377c5e",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "052caff3b2365345",
        "name": "style [WAR]",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2010,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "631c09dd9632c92a",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "e27cfec311892d88",
        "name": "style [RTC]",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2010,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b04505a68eb19642",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "397a51ddac8419aa",
        "name": "style [Cool]",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2010,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a4b7150004829f97",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "c2a0123d2e2c91f0",
        "name": "style [Softstart]",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2020,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "0e8096a2f8827083",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "b7f22c282fde0f86",
        "name": "style [Solar]",
        "order": 6,
        "width": 9,
        "height": 1,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2010,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "8bb1e12a22d4dc11",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "2b0c8e162d47abbb",
        "name": "style [Scheduler]",
        "order": 16,
        "width": 27,
        "height": 1,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2030,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "848fa7aade4f22a3",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "e374621a9f5ac0d6",
        "name": "style [Temp]",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2010,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "11685bca2f768125",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "fb77ab43998a2f18",
        "name": "style [Energy]",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2020,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "edc08fb519edf993",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "70a5fe6af8ed1d29",
        "name": "style [System]",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2020,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "05b8832e0e7fda7e",
        "type": "ui_template",
        "z": "43c4ee3ee4757f3c",
        "group": "87be08e6a82ef6a0",
        "name": "style [Degreedays]",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<style>\n\nmd-toolbar#toolbar{\n    background-color: {{msg.payload}} !important;\n}\n\n</style>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2030,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "adfcd4f481333501",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "Operating Mode Manager",
        "func": "if (msg.topic == 'Start_DHW_Run_SP2' && msg.payload == 1) {\n\n    var TOP4_Operating_Mode_State = global.get('TOP4_Operating_Mode_State', \"file\");\n    if (TOP4_Operating_Mode_State != 3) {\n        if (TOP4_Operating_Mode_State == 7) { TOP4_Operating_Mode_State = 2; } // convert OM 7 > 2\n        if (TOP4_Operating_Mode_State == 8) { TOP4_Operating_Mode_State = 6; } // convert OM 8 > 6\n\n        let msg1={};\n        msg1.payload = 3;\n\n        let msg99={};\n        msg99.payload = \"Operating mode changed to (3)DHW-Only\";\n        msg99.topic = 'DHW Boost';\n\n        var F_stored_next_operating_mode = global.get('F_stored_next_operating_mode', \"file\");\n        if (F_stored_next_operating_mode === undefined) { global.set('F_stored_next_operating_mode', TOP4_Operating_Mode_State, \"file\"); }\n\n        return [msg1, msg99]\n    }\n}\n\nif (msg.topic == 'Start_DHW_Run_SP2' && msg.payload == 0) {\n\n    var msg1 = {};      // new OM\n    var msg99 = {};     // to log\n        msg99.topic = 'DHW Boost';\n\n    var TOP4_Operating_Mode_State       = global.get('TOP4_Operating_Mode_State', \"file\");\n    var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode', \"file\");\n\n    if (F_stored_next_operating_mode === undefined) { \n        msg99.payload = 'No stored operating mode found. Not changing Operating Mode.'; \n        return [null, msg99]\n    }\n\n    if (F_stored_next_operating_mode != TOP4_Operating_Mode_State) {\n        msg1.payload = F_stored_next_operating_mode;\n        var OM_name; // empty variable\n            if (F_stored_next_operating_mode == 0) { OM_name = '(0) Heat-Only'; }\n            if (F_stored_next_operating_mode == 1) { OM_name = '(1) Cool-Only'; }\n            if (F_stored_next_operating_mode == 2) { OM_name = '(2) Auto'; }\n            if (F_stored_next_operating_mode == 4) { OM_name = '(4) Heat+DHW'; }\n            if (F_stored_next_operating_mode == 5) { OM_name = '(5) Cool+DHW'; }\n            if (F_stored_next_operating_mode == 6) { OM_name = '(6) Auto+DHW'; }\n        \n        msg99.payload = \"Operating mode changed to \" + OM_name;\n        global.set('F_stored_next_operating_mode', undefined, \"file\");\n        return [msg1, msg99]\n    }\n}\n\n\nvar TOP4_Operating_Mode_State = global.get('TOP4_Operating_Mode_State', \"file\");\n\nif (TOP4_Operating_Mode_State != msg.payload) { return msg; }\n\n// Operating mode (0=Heat only,     1=Cool only,    2=Auto(Heat),  3=DHW only,  4=Heat+DHW,     5=Cool+DHW,     6=Auto(Heat)+DHW,   7=Auto(Cool),   8=Auto(Cool)+DHW)\n// Operating mode (0=Heat only,     1=Cool only,    2=Auto,        3=DHW only,  4=Heat+DHW,     5=Cool+DHW,     6=Auto+DHW",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 780,
        "wires": [
            [
                "cc38651b04af8756"
            ],
            [
                "a5db2d3cd0084878"
            ],
            []
        ],
        "outputLabels": [
            "OperationMode out (mqtt)",
            "ToLog",
            "Pop-up"
        ]
    },
    {
        "id": "84bff5c3d4a4cede",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "link in 33",
        "links": [
            "b50ab0a4981f9d17"
        ],
        "x": 205,
        "y": 720,
        "wires": [
            [
                "adfcd4f481333501"
            ]
        ]
    },
    {
        "id": "c5e4882db5fea41f",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "Solar",
        "info": "",
        "x": 290,
        "y": 720,
        "wires": []
    },
    {
        "id": "73e10ff5ebe614ef",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "Scheduler",
        "info": "",
        "x": 300,
        "y": 760,
        "wires": []
    },
    {
        "id": "b9c4f0a59b3270ad",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "GUI",
        "info": "",
        "x": 290,
        "y": 800,
        "wires": []
    },
    {
        "id": "2a530d47b288e289",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "RTC function",
        "info": "",
        "x": 310,
        "y": 840,
        "wires": []
    },
    {
        "id": "e73d130bb1839444",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "link in 34",
        "links": [
            "c959ee1f94c31c45",
            "c6801a6c865543b3"
        ],
        "x": 205,
        "y": 760,
        "wires": [
            [
                "adfcd4f481333501"
            ]
        ]
    },
    {
        "id": "efa847198158ca2c",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "link in 35",
        "links": [
            "27d4716d98709ec9",
            "f651bed25831c6f4",
            "c0c20e2e3caa81e0"
        ],
        "x": 205,
        "y": 800,
        "wires": [
            [
                "adfcd4f481333501"
            ]
        ]
    },
    {
        "id": "f76db0ea91c39edd",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "link in 36",
        "links": [
            "b57cce7cc9fa92ea",
            "fab44b5501eca10e"
        ],
        "x": 205,
        "y": 840,
        "wires": [
            [
                "adfcd4f481333501"
            ]
        ]
    },
    {
        "id": "836082017500f9a9",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "To SET9",
        "mode": "link",
        "links": [
            "43464dca9fd194fa",
            "476134da722ea175",
            "c24406bef1e6355d"
        ],
        "x": 1405,
        "y": 740,
        "wires": []
    },
    {
        "id": "87f71902ec6b1541",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "Exit to mqtt SET9",
        "info": "",
        "x": 940,
        "y": 740,
        "wires": []
    },
    {
        "id": "8b4945ae5f3915e8",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "Exit to InputLOGS",
        "info": "",
        "x": 950,
        "y": 780,
        "wires": []
    },
    {
        "id": "4a4a891dece731a1",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "link out towards LOGs",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1405,
        "y": 780,
        "wires": []
    },
    {
        "id": "c82ec16fb6ba6769",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "link in 38",
        "links": [
            "e62a354ce682ea6f",
            "42734e97a85d5537"
        ],
        "x": 205,
        "y": 540,
        "wires": [
            [
                "35a1975644451093"
            ]
        ]
    },
    {
        "id": "6f29a5e5626945ea",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "Function (Solar)",
        "info": "",
        "x": 320,
        "y": 540,
        "wires": []
    },
    {
        "id": "65e47b8ca0c36fca",
        "type": "mqtt out",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "SP Ta corrected - SET5 SetZ1HeatRequest",
        "topic": "panasonic_heat_pump/commands/SetZ1HeatRequestTemperature",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2870,
        "y": 980,
        "wires": []
    },
    {
        "id": "7ddd3f5d8f76897e",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 1595,
        "y": 1100,
        "wires": []
    },
    {
        "id": "1b409e1ea72f94dd",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg99 = {}; // pin 2 - To Log\n    msg99.topic = \"SYSTEM\";\n    msg99.payload = \"MQTT-Commands are blocked, did not send MQTT - \" + msg.topic + \" \" + msg.payload;\n    global.set('MQTT_Source', undefined); // clear if blocked\n    return [null, msg99];\n    }\n\nif (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SP Calculation\"); }// only set when undefined\n\nreturn [msg, null]; //send SP",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1020,
        "wires": [
            [
                "65e47b8ca0c36fca"
            ],
            [
                "7ddd3f5d8f76897e"
            ]
        ]
    },
    {
        "id": "04af9373e9f7a428",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "Compare SP",
        "func": "var Heatpump_State = global.get(\"TOP0_Heatpump_State\", \"file\");\nif (Heatpump_State == 0 || Heatpump_State === undefined) { msg.payload = 99; return [msg, msg]; }\n\nvar SP_Final            = Math.round(global.get('SP_Final',\"file\"));\nvar SHIFT_Final         = Math.round(global.get('SHIFT_Final',\"file\"));\n\nvar current_sp          = global.get('TOP42_Z1_Water_Target_Temp', \"file\");  \nvar Operating_Mode      = global.get('TOP4_Operating_Mode_State', \"file\")\nvar TOP111_Z1_Sensor_Settings = global.get('TOP111_Z1_Sensor_Settings', \"file\");\n\n//*****************************************************************************\nif (isNaN(SHIFT_Final) === true) { node.warn('ShiftFinal is NaN detected'); global.set('SHIFT_Final',0,\"file\"); }\n\nif (TOP111_Z1_Sensor_Settings === undefined || SP_Final === undefined || current_sp === undefined || Operating_Mode === undefined || Operating_Mode == 1 || Operating_Mode == 3 || Operating_Mode == 5 || Operating_Mode == 7 || Operating_Mode == 8) { msg.payload = 99; return [msg, msg]; }\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\nvar TOP76_Heating_Mode = global.get('TOP76_Heating_Mode', \"file\");\nvar TOP20_ThreeWay_Valve_State = global.get('TOP20_ThreeWay_Valve_State');\nif (TOP20_ThreeWay_Valve_State === undefined || TOP20_ThreeWay_Valve_State == 1 || TOP76_Heating_Mode === undefined) { msg.payload = 99; return [msg, msg]; }\n\nlet msg1 = {};\nvar war_wt2     = global.get('war_wt2', \"file\");\nvar war_wt1     = global.get('war_wt1', \"file\");\nvar F_WAR_SP    = Math.round(global.get('F_WAR_SP'));\n\nswitch (TOP111_Z1_Sensor_Settings) {\n    case 0:\n        if (TOP76_Heating_Mode == 0) { \n            let current_sp = global.get('TOP27_Z1_Heat_Request_Temp');\n            if (current_sp == SHIFT_Final) { msg.payload = 99; return [msg, msg]; } \n            SET5_SHIFT() ;}\n        if (TOP76_Heating_Mode == 1) { \n            if (current_sp == SP_Final) { msg.payload = 99; return [msg, msg]; } \n            SET16_ABS_WATER_TEMP() ;}\n        break;\n\n    case 1:\n        if (TOP76_Heating_Mode == 0) { \n            if (current_sp == F_WAR_SP + SHIFT_Final) { msg.payload = 99; return [msg, msg]; } \n            SET16_SHIFT(); }\n        if (TOP76_Heating_Mode == 1) { \n            if (current_sp == SP_Final) { msg.payload = 99; return [msg, msg]; } \n            SET16_ABS_WATER_TEMP(); }\n        break;\n\n    case 2:\n        if (TOP76_Heating_Mode == 0) { \n            if (current_sp == F_WAR_SP + SHIFT_Final) { msg.payload = 99; return [msg, msg]; } \n            SET16_SHIFT(); }\n        if (TOP76_Heating_Mode == 1) { \n            if (current_sp == SP_Final) { msg.payload = 99; return [msg, msg]; } \n            SET16_ABS_WATER_TEMP(); }\n        break;\n\n    case 3:\n        if (TOP76_Heating_Mode == 0) { \n            if (current_sp == F_WAR_SP + SHIFT_Final) { msg.payload = 99; return [msg, msg]; } \n            SET16_SHIFT(); }\n        if (TOP76_Heating_Mode == 1) { \n            if (current_sp == SP_Final) { msg.payload = 99; return [msg, msg]; } \n            SET16_ABS_WATER_TEMP(); }\n\n}\n// pin 1 = to set5\n// pin 2 = to set16\n\n// FUNCTIONS /////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////////////////\n// shift CC curve manually via SET16\nfunction SET16_SHIFT() {\n    msg1.destination = 'SET16';\n    msg1.payload = {\n        \"zone1\": {\n            \"heat\": {\n                \"target\": {\n                    \"high\": war_wt2 + SHIFT_Final,\n                    \"low\": war_wt1 + SHIFT_Final\n                }\n            }\n        }\n    }\n    node.send([null, msg1]);\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////\n// shift curve via SET5\nfunction SET5_SHIFT() {\n    msg1.destination = 'SET5';\n    msg1.payload = SHIFT_Final;\n    node.send([msg1,null]);\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////\n// Set absolute watertemperature\nfunction SET16_ABS_WATER_TEMP() {\n    msg1.destination = 'SET16';\n    msg1.payload = {\n        \"zone1\": {\n            \"heat\": {\n                \"target\": {\n                    \"high\": SP_Final\n                }\n            }\n        }\n    }\n    node.send([null, msg1]);\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////\nreturn null;",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 1000,
        "wires": [
            [
                "5a4f06715dc2679e",
                "eb847ef562556312"
            ],
            [
                "c33331020f81138c",
                "eb847ef562556312"
            ],
            [
                "1a4fde738593db6a"
            ]
        ],
        "outputLabels": [
            "set5",
            "set16",
            ""
        ]
    },
    {
        "id": "5d0b7390e93f7e48",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "Water SP manager (SET5)",
        "links": [
            "76a161da01cebe9c"
        ],
        "x": 215,
        "y": 1100,
        "wires": [
            [
                "694768bd9f0a9a39"
            ]
        ]
    },
    {
        "id": "642356c6a779d7fa",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "Functions result",
        "info": "",
        "x": 320,
        "y": 1100,
        "wires": []
    },
    {
        "id": "694768bd9f0a9a39",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "HEAT SP Manager",
        "func": "// pin 1 - Output to SET5\n// pin 2 - to Log\n// pin 3 - Refresh SP to GUI\n// pin 4 - Output to SP functions, as trigger\n// pin 5 - Output to SP_DIRECT_virt \n////////////////////////////////////////////////////////////////////////////////\n//  Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\nvar OM = global.get('TOP4_Operating_Mode_State',\"file\");\nvar valve_position = global.get('TOP20_ThreeWay_Valve_State');\nif (valve_position === undefined) { return null; }\n\n////////////////// MQTT read\nif (msg.topic == 'TOP42_Z1_Water_Target_Temp' && OM != 1 && valve_position == 0 ){\n    var TOP20_ThreeWay_Valve_State = global.get('TOP20_ThreeWay_Valve_State');\n    var TOP69_Sterilization_State = global.get('TOP69_Sterilization_State',\"file\");\n    \n    if (TOP20_ThreeWay_Valve_State == 0){ // ROOM\n        msg.payload = global.get(\"TOP42_Z1_Water_Target_Temp\",\"file\");\n    }\n    if (TOP20_ThreeWay_Valve_State == 1){ // DHW\n        msg.payload = global.get('TOP9_DHW_Target_Temp',\"file\")\n        if (msg.payload === undefined) {return null}\n    }\n    if (TOP69_Sterilization_State == 1){\n        msg.payload = global.get('TOP70_Sterilization_Temp',\"file\");\n        if (msg.payload === undefined) {return null}\n    }\n\n    return [null,null,msg,null,null]\n    \n}\n\nif (valve_position == 1) { // DHW position\n    var TOP7_Main_Target_Temp = global.get('TOP7_Main_Target_Temp');\n    if (TOP7_Main_Target_Temp === undefined) { return null; }\n\n    let msg1={};\n    return [null, null, msg1, null, null]\n\n}\n\nif (msg.topic == 'Z1_Cool_Request_Temp' && OM == 1) {\n    return [null,null,msg,null,null]\n}\n\n\n////////////// GUI changes. Sent though to trigger function recalculations\nif (msg.payload == 'trigger') {\n    return [null,null,null,msg,null]\n}\nif (msg.topic == 'SP_DIRECT_virt') {\n    return [null,null,null,msg,null]\n}\n\n\n/////////////// Function results (SP Final - direct)\nif (msg.topic == 'SP_Final') {\n    return [msg,null,null,null]\n}\n\n/////////////// Function results (SP Shift - Compensation curve)\nif (msg.topic == \"Shift\") {\n    return [msg,null,null,null]\n}\n\n\nlet msg1={};\nlet msg2={};\n\n////////////////// SCHEDULER new setpoint\nif (msg.topic == 'Water setpoint (heat shift)') {\n    global.set('SP_DIRECT_virt',msg.payload,\"file\");\n    msg1.payload = msg.payload;\n    msg1.topic = msg.topic;\n    return [null,null,null,msg1,msg1]\n}\n\n////////////////// SCHEDULER new setpoint\nif (msg.topic == 'Water setpoint (direct)') {\n    global.set('SP_DIRECT_virt',msg.payload,\"file\");\n    msg1.payload = msg.payload;\n    msg1.topic = msg.topic;\n    return [null,null,null,msg1,msg1]\n}\n\n\nif (msg.topic = 'Correction_0_WAR_on_off') {\n    return [null, null, null, msg, null]\n}\nreturn null;",
        "outputs": 5,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1160,
        "wires": [
            [
                "0e04122d6f8a2033"
            ],
            [
                "a1ecb8084e0daf19"
            ],
            [
                "bc40f8b817aa9a3f"
            ],
            [
                "831ae2781ec40575"
            ],
            [
                "9c9e0c42f12befa6"
            ]
        ]
    },
    {
        "id": "02c7c088196cb575",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "Scheduler",
        "info": "",
        "x": 300,
        "y": 1140,
        "wires": []
    },
    {
        "id": "2d52ca9e08c7fb9a",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "link in 41",
        "links": [
            "3c7256b41577c8e5"
        ],
        "x": 215,
        "y": 1140,
        "wires": [
            [
                "694768bd9f0a9a39"
            ]
        ]
    },
    {
        "id": "d154cb2b92987925",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "GUI",
        "info": "",
        "x": 290,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ff40b3d6f1b996fe",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "link in 42",
        "links": [
            "a7ed974cef55c457"
        ],
        "x": 215,
        "y": 1180,
        "wires": [
            [
                "694768bd9f0a9a39"
            ]
        ]
    },
    {
        "id": "fc202bdb5486d9fe",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "Exit to InputLOGS",
        "info": "",
        "x": 870,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ecc3180f70a1af53",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "Exit to mqtt SET5",
        "info": "",
        "x": 860,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5d8b7981975b516e",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "To log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1595,
        "y": 1140,
        "wires": []
    },
    {
        "id": "7a2f0f42321d7256",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "GUI refresh",
        "info": "",
        "x": 850,
        "y": 1180,
        "wires": []
    },
    {
        "id": "61dfad40f76daac7",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "SET5 GUI refresh",
        "mode": "link",
        "links": [
            "024bef9dc12b8273",
            "1f4a153d2239272b"
        ],
        "x": 1595,
        "y": 1180,
        "wires": []
    },
    {
        "id": "fa2a77572981525d",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "Trigger functions",
        "info": "",
        "x": 860,
        "y": 1220,
        "wires": []
    },
    {
        "id": "ed2c73bf6b96d4a0",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "link out 45",
        "mode": "link",
        "links": [
            "c24406bef1e6355d"
        ],
        "x": 1595,
        "y": 1220,
        "wires": []
    },
    {
        "id": "fd2003d6bc939d36",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "SET27 mqtt read",
        "links": [
            "25633efa4485f375"
        ],
        "x": 215,
        "y": 1220,
        "wires": [
            [
                "694768bd9f0a9a39"
            ]
        ]
    },
    {
        "id": "909640f1caf950f8",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "MQTT read",
        "info": "",
        "x": 310,
        "y": 1220,
        "wires": []
    },
    {
        "id": "78cd6de319a6d061",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "Filter",
        "func": "var last_value      = context.get('last_value');\nvar last_msgid      = context.get('last_msgid');\n\n\n\nif (last_value === undefined || last_msgid === undefined){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    return null;\n}\n\nif (last_msgid == msg._msgid){\n    return null;\n}\n\nif (msg.payload != last_value){\n    context.set('last_value',msg.payload);\n    context.set('last_msgid',msg._msgid);\n    msg.topic = 'SP final';\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1100,
        "wires": [
            [
                "04af9373e9f7a428"
            ]
        ]
    },
    {
        "id": "a85d4f84f1b538d1",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "link out to SP_DIRECT_virt",
        "mode": "link",
        "links": [
            "97f8288d7402bc77"
        ],
        "x": 1595,
        "y": 1260,
        "wires": []
    },
    {
        "id": "3decf85e0dfd50ae",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "Exit to SP_DIRECT_virt (GUI)",
        "info": "",
        "x": 900,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9d678818ee4f7078",
        "type": "delay",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1470,
        "y": 1220,
        "wires": [
            [
                "ed2c73bf6b96d4a0"
            ]
        ]
    },
    {
        "id": "327f3ad0eae0d7d5",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "link in 56",
        "links": [
            "aa04e7be9348a071",
            "c0c20e2e3caa81e0",
            "092a9db0d9b923b3"
        ],
        "x": 205,
        "y": 580,
        "wires": [
            [
                "35a1975644451093"
            ]
        ]
    },
    {
        "id": "90505d69973e3970",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "GUI (DHW)",
        "info": "",
        "x": 310,
        "y": 580,
        "wires": []
    },
    {
        "id": "fb5aeb896e8acc76",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "link out 60",
        "mode": "link",
        "links": [
            "efe3dd019498a583",
            "3e5558127fc3402a"
        ],
        "x": 1415,
        "y": 560,
        "wires": []
    },
    {
        "id": "b3359bc3c036e439",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "Exit to Force DHW (Scheduler)",
        "info": "",
        "x": 890,
        "y": 560,
        "wires": []
    },
    {
        "id": "a333286329402b87",
        "type": "delay",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1130,
        "y": 560,
        "wires": [
            [
                "fb5aeb896e8acc76"
            ]
        ]
    },
    {
        "id": "4e1fa036d5ada897",
        "type": "link out",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "link out towards LOGs",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1415,
        "y": 600,
        "wires": []
    },
    {
        "id": "0770871389001bc5",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "Exit to InputLOGS",
        "info": "",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "ddcff50cd968534a",
        "type": "link in",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "link in 58",
        "links": [
            "25691ccde88f5530"
        ],
        "x": 215,
        "y": 1260,
        "wires": [
            [
                "694768bd9f0a9a39"
            ]
        ]
    },
    {
        "id": "ea22f152face3bf2",
        "type": "comment",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "Z1_Cool_Request_Temp",
        "info": "",
        "x": 350,
        "y": 1260,
        "wires": []
    },
    {
        "id": "b6ca22591212ef37",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "function 67",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 775,
        "y": 120,
        "wires": [
            [
                "5a1d6b18490ded1c"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "69d01a9ce5c2f74f",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "function 68",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 775,
        "y": 160,
        "wires": [
            [
                "2a72a0a50c226d0f"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "2257c7f00dc04133",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "function 69",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 775,
        "y": 200,
        "wires": [
            [
                "0ad5396b01ed9ce0",
                "2798e84309619975"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "76613b798744d288",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "eae83de4837abd07",
        "name": "function 70",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 775,
        "y": 240,
        "wires": [
            [
                "a44c9937f2ab3ee0",
                "4aeca25016f1790a"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "cc38651b04af8756",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "function 71",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 795,
        "y": 740,
        "wires": [
            [
                "836082017500f9a9"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "a5db2d3cd0084878",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "d9eb0a2937cbbc7b",
        "name": "function 72",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 795,
        "y": 780,
        "wires": [
            [
                "4a4a891dece731a1"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "3cdd0f73da377608",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "function 73",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 735,
        "y": 440,
        "wires": [
            [
                "c4cb07ae79c0bf65"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "e44b30546eb4ad2d",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "function 74",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 735,
        "y": 480,
        "wires": [
            [
                "609ccd0fd9799230"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "ded02fca7021c0c6",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "function 75",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 735,
        "y": 520,
        "wires": [
            [
                "b02fa3c8b43f5d62"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "3ef323f843b0f516",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "function 76",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 735,
        "y": 560,
        "wires": [
            [
                "a333286329402b87"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "290f1b5381842a42",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "424338733e4798c9",
        "name": "function 77",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 735,
        "y": 600,
        "wires": [
            [
                "4e1fa036d5ada897"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "0e04122d6f8a2033",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "function 78",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 1100,
        "wires": [
            [
                "78cd6de319a6d061"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "a1ecb8084e0daf19",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "function 79",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 1140,
        "wires": [
            [
                "5d8b7981975b516e"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "bc40f8b817aa9a3f",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "function 80",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 1180,
        "wires": [
            [
                "61dfad40f76daac7"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "831ae2781ec40575",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "function 81",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 1220,
        "wires": [
            [
                "9d678818ee4f7078"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "9c9e0c42f12befa6",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "8f85827475badab6",
        "name": "function 82",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 1260,
        "wires": [
            [
                "a85d4f84f1b538d1"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "d62a7aa18d066598",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "Block?",
        "func": "if (global.get('MQTT.block_active', \"file\") == 1) {\n    let msg99 = {}; // pin 2 - To Log\n    msg99.topic = \"SYSTEM\";\n    msg99.payload = \"MQTT-Commands are blocked, did not send MQTT - \" + msg.topic + \" \" + msg.payload;\n    global.set('MQTT_Source', undefined); // clear if blocked\n    return [null, msg99];\n    }\n\nif (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"SP Calculation\"); }// only set when undefined\n\nreturn [msg, null]; //send SP",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1060,
        "wires": [
            [
                "5b68f411defbf165"
            ],
            [
                "7ddd3f5d8f76897e"
            ]
        ]
    },
    {
        "id": "9c1e75a839561879",
        "type": "mqtt out",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "SET16 SetCurves",
        "topic": "panasonic_heat_pump/commands/SetCurves",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2950,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5b68f411defbf165",
        "type": "json",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 2750,
        "y": 1060,
        "wires": [
            [
                "9c1e75a839561879"
            ]
        ]
    },
    {
        "id": "c33331020f81138c",
        "type": "trigger",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "-30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "99",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2130,
        "y": 1060,
        "wires": [
            [
                "d62a7aa18d066598"
            ]
        ]
    },
    {
        "id": "d250abcc5143f815",
        "type": "inject",
        "z": "43c4ee3ee4757f3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2260,
        "y": 820,
        "wires": [
            [
                "3fe6c0cdb3ef63bb"
            ]
        ]
    },
    {
        "id": "5a4f06715dc2679e",
        "type": "trigger",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "-30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "99",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2130,
        "y": 1020,
        "wires": [
            [
                "1b409e1ea72f94dd"
            ]
        ]
    },
    {
        "id": "6f65651e620cf7e7",
        "type": "inject",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "MANUAL RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "99",
        "payloadType": "num",
        "x": 1900,
        "y": 940,
        "wires": [
            [
                "5a4f06715dc2679e",
                "c33331020f81138c"
            ]
        ]
    },
    {
        "id": "3fe6c0cdb3ef63bb",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "name": "reset",
        "func": "let msg1={};\nvar Heatpump_State = global.get(\"TOP0_Heatpump_State\", \"file\");\nif (Heatpump_State == 0 || Heatpump_State === undefined) { msg1.payload = 99; return msg1; }\n\n\nvar TOP76_Heating_Mode = global.get('TOP76_Heating_Mode', \"file\");\nvar SP_Final = global.get('SP_Final', \"file\");\nvar SHIFT_Final = global.get('SHIFT_Final', \"file\");\nvar TOP27_Z1_Heat_Request_Temp = global.get('TOP27_Z1_Heat_Request_Temp');\nvar TOP42_Z1_Water_Target_Temp = global.get('TOP42_Z1_Water_Target_Temp', \"file\");\n    // var Operating_Mode = global.get('TOP4_Operating_Mode_State', \"file\")\nvar TOP111_Z1_Sensor_Settings = global.get('TOP111_Z1_Sensor_Settings', \"file\");\nvar war_wt2 = global.get('war_wt2', \"file\");\nvar Z1_Heat_Curve_Target_High_Temp = global.get('Z1_Heat_Curve_Target_High_Temp');\n\n\n\n\n\n\nswitch (TOP111_Z1_Sensor_Settings) {\n    case 0:\n        if (TOP76_Heating_Mode == 0) { if (TOP27_Z1_Heat_Request_Temp == SHIFT_Final) { msg1.payload = 99 } } // CC >> working\n        if (TOP76_Heating_Mode == 1) { if (TOP42_Z1_Water_Target_Temp == SP_Final) { msg1.payload = 99 } } // direct >> working\n        break;\n\n    case 1:\n        if (TOP76_Heating_Mode == 0) { if ((war_wt2 + SHIFT_Final) == Z1_Heat_Curve_Target_High_Temp) { msg1.payload = 99 } } // CC >> working\n        if (TOP76_Heating_Mode == 1) { if (TOP42_Z1_Water_Target_Temp == SP_Final) { msg1.payload = 99 } } // direct >> working\n        break;\n\n    case 2:\n        if (TOP76_Heating_Mode == 0) { if ((war_wt2 + SHIFT_Final) == Z1_Heat_Curve_Target_High_Temp) { msg1.payload = 99 } } // CC >> working\n        if (TOP76_Heating_Mode == 1) { if (TOP42_Z1_Water_Target_Temp == SP_Final) { msg1.payload = 99 } } // direct >> working\n        break;\n\n    case 3:\n        if (TOP76_Heating_Mode == 0) { if ((war_wt2 + SHIFT_Final) == Z1_Heat_Curve_Target_High_Temp) { msg1.payload = 99 } } // CC >> working\n        if (TOP76_Heating_Mode == 1) { if (TOP42_Z1_Water_Target_Temp == SP_Final) { msg1.payload = 99 } } // direct >> working\n\n}\n\nif (msg1.payload === undefined) {return null;}\n\nreturn msg1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2430,
        "y": 820,
        "wires": [
            []
        ],
        "outputLabels": [
            "RESET"
        ]
    },
    {
        "id": "6c5c91b7b80ab8bd",
        "type": "function",
        "z": "43c4ee3ee4757f3c",
        "name": "MQTT messages_today",
        "func": "global.set('MQTT.messages_today',msg.payload,\"file\");\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "a53071e8960bdadf",
        "type": "inject",
        "z": "43c4ee3ee4757f3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "26",
        "payloadType": "num",
        "x": 2270,
        "y": 760,
        "wires": [
            [
                "6c5c91b7b80ab8bd"
            ]
        ]
    },
    {
        "id": "eb847ef562556312",
        "type": "trigger",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "RESET",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "28",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "99",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2100,
        "y": 960,
        "wires": [
            [
                "04af9373e9f7a428"
            ]
        ]
    },
    {
        "id": "1a4fde738593db6a",
        "type": "rbe",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1490,
        "y": 1120,
        "wires": [
            [
                "5d8b7981975b516e"
            ]
        ]
    },
    {
        "id": "d5711fa416b266f4",
        "type": "inject",
        "z": "43c4ee3ee4757f3c",
        "g": "7c9fc2b0c2d2a5dc",
        "name": "",
        "props": [
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1690,
        "y": 900,
        "wires": [
            [
                "04af9373e9f7a428"
            ]
        ]
    },
    {
        "id": "ed155b604642d354",
        "type": "tab",
        "label": "WP Degreedays",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1c223a510a8ec72d",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "Combined bar-chart",
        "style": {
            "label": true
        },
        "nodes": [
            "757d35eee93ec9e7",
            "2391637fadbbf190",
            "6472e1e423188a37",
            "41e8d01708c19225",
            "3ce36bc606018d50",
            "681a0775921a043e",
            "b2548a4bf37f2567",
            "6bb3b71758d24fd0",
            "42fb2dc4dec11e93",
            "fc68ffd1a284a6bd",
            "e598f3cca51f28d1",
            "898b02a132291b49"
        ],
        "x": 54,
        "y": 1119
    },
    {
        "id": "6a01f1b80ccf3218",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "Source information",
        "style": {
            "label": true
        },
        "nodes": [
            "fdb9e1be23998039",
            "bddac0d27a1343a8",
            "0c9b408b44a185a3",
            "a09512145dbf8d8a",
            "2064b5a11ffc43b3"
        ],
        "x": 54,
        "y": 39
    },
    {
        "id": "2b75a55bb8fb12c6",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "W to kWh usage conversion [HEAT]",
        "style": {
            "label": true
        },
        "nodes": [
            "6a7fa8b57f2d9800",
            "5792c915eb0eb380",
            "974b24f717fe8560"
        ],
        "x": 64,
        "y": 199
    },
    {
        "id": "5ffcc1056a276bf5",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "Combined bar-chart",
        "style": {
            "label": true
        },
        "nodes": [
            "10a3251239b22cd4",
            "b44fca625044b56c",
            "6db1485dd36081ec",
            "a9584fa0cadac44b",
            "5b9db86809583efd",
            "c0f559e2c7905a0e",
            "3a9d746ecf027578",
            "5f7678f15c215dc9",
            "16b0fcf56b6d17f8",
            "d734c640b789ff1e",
            "d44f1a1993a8a44f",
            "e68356272f1f529b"
        ],
        "x": 54,
        "y": 439
    },
    {
        "id": "27d590581cd92df1",
        "type": "group",
        "z": "ed155b604642d354",
        "name": "W to kWh usage conversion [DHW]",
        "style": {
            "label": true
        },
        "nodes": [
            "05c67c5f7508a04d",
            "cd16de04c8fa639a",
            "2cc9fde214b13621"
        ],
        "x": 54,
        "y": 299
    },
    {
        "id": "6472e1e423188a37",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Bucket 2 - Degree days calculation",
        "style": {
            "fill": "#00876C",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "cff31036dc296d8d",
            "7629b6d3d87712ff",
            "e9d6a960b09e05b8",
            "3043e3c17ff68920"
        ],
        "x": 84,
        "y": 1439
    },
    {
        "id": "3ce36bc606018d50",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Bucket 1 - kWh calculation",
        "style": {
            "fill": "#F59B56",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "550d61dd1ac867d3",
            "41bc927c7f5116b1",
            "dc13db3939bf2d7f",
            "61e1918ce41f34f7"
        ],
        "x": 84,
        "y": 1339
    },
    {
        "id": "6db1485dd36081ec",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Bucket 2 - Degree days calculation",
        "style": {
            "fill": "#00876C",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "d64accce0bd0c291",
            "7887aff049a582de",
            "95923454c02c9c72",
            "29a4cb237663e973"
        ],
        "x": 84,
        "y": 779
    },
    {
        "id": "5b9db86809583efd",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Bucket 1 - kWh calculation HEAT",
        "style": {
            "fill": "#F59B56",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "9a88d9c8f4a6c2a5",
            "38893966085dd228",
            "6988051cc52f2c86",
            "0ae4268d42429bac"
        ],
        "x": 84,
        "y": 679
    },
    {
        "id": "d734c640b789ff1e",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Bucket 2 - kWh calculation DHW",
        "style": {
            "fill": "#DE425B",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "65322aec4f8fd58e",
            "018e987e0d4672b6",
            "91840e451e332fa6",
            "935535fc205e470c"
        ],
        "x": 84,
        "y": 579
    },
    {
        "id": "fc68ffd1a284a6bd",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "",
        "style": {
            "fill": "#DE425B",
            "fill-opacity": "0.5",
            "label": true
        },
        "nodes": [
            "e800de9b472a5516",
            "1073d8f9d7a572a1",
            "e8a39538d051ed80",
            "868b4c6128111bb6"
        ],
        "x": 84,
        "y": 1239
    },
    {
        "id": "d44f1a1993a8a44f",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2ee679408e4ccc6f"
        ],
        "x": 1134,
        "y": 919
    },
    {
        "id": "e598f3cca51f28d1",
        "type": "group",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4eaa2cfa2749c551"
        ],
        "x": 1134,
        "y": 1579
    },
    {
        "id": "6a7fa8b57f2d9800",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "2b75a55bb8fb12c6",
        "name": "",
        "links": [
            "9de1bde370b68508"
        ],
        "x": 105,
        "y": 240,
        "wires": [
            [
                "5792c915eb0eb380"
            ]
        ]
    },
    {
        "id": "5792c915eb0eb380",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "2b75a55bb8fb12c6",
        "name": "Energy_Consumption_HEAT_kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit;\n\n    var LastMessage = msg.payload;\n    var LastTopic= msg.topic;\n    \n    if (PreviousTime === undefined) \n        {\n            context.set('PreviousTime',CurrentTime);\n            exit = true;\n        }\n        \n    else if (PreviousMessage === undefined) \n        {\n            context.set('PreviousMessage',msg.payload);\n            exit = true;\n        }\n    else if (PreviousTopic === undefined) \n        {\n            context.set('PreviousTopic',msg.topic);\n            exit = true;\n        }\n    \n    else {\n                \n            TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n            context.set('PreviousTime',CurrentTime);\n            context.set('PreviousMessage',msg.payload);\n            context.set('PreviousTopic',msg.topic);\n            msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n            msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n            \n            \n            msg1.payload = (TimeElapsed + \"  Seconds\");\n            temp = parseFloat(TimeElapsed.toFixed(0));\n            msg2.payload = temp;\n            msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n            msg5.payload = (PreviousMessage * ( temp / 3600000 ));   //  Calculation to Wh portion\n            Number(msg5.payload).toFixed(4);\n            msg5.topic = 'Energy_Consumption_HEAT_kWh';\n       }\n    if (exit === true)\n        {return null;}\n    else     \n        {return msg5;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 240,
        "wires": [
            [
                "974b24f717fe8560"
            ]
        ],
        "outputLabels": [
            "Energy_Consumption_HEAT_kWh"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "cff31036dc296d8d",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "6472e1e423188a37",
        "name": "bar-chart-data degreedays-31d",
        "x_interval": "days",
        "x_size": "31",
        "unit": "",
        "precision": "2",
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 850,
        "y": 1480,
        "wires": [
            [
                "e9d6a960b09e05b8"
            ]
        ]
    },
    {
        "id": "41bc927c7f5116b1",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "3ce36bc606018d50",
        "name": "Store information to kwh_HEAT_31d",
        "func": "var myArray4 = msg;\nglobal.set(\"kwh_HEAT_31d\", myArray4,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1380,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "757d35eee93ec9e7",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Once per 15minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 220,
        "y": 1620,
        "wires": [
            [
                "2391637fadbbf190"
            ]
        ]
    },
    {
        "id": "2391637fadbbf190",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Function - bucket 1 + 2 +3 combined",
        "func": "var myArray1 = global.get(\"kwh_HEAT_31d\",\"file\");\nvar myArray2 = global.get(\"degreedays_31d\",\"file\");\nvar myArray3 = global.get(\"kwh_DHW_31d\",\"file\");\nif (myArray1 === undefined || myArray2 === undefined || myArray3 === undefined)\n    {\n        return null;\n        \n    }\n\nelse\n    {\n        let msg1={}, msg2={}, msg3={};\n        \n        msg1 = myArray1;\n        msg2 = myArray2;\n        msg3 = myArray3;\n        \n        var varlabels           = msg1.payload[0].labels;\n        var varkwh_heat_data    = msg1.payload[0].data[0];\n        var vargraaddagen_data  = msg2.payload[0].data[0];\n        var varkwh_dhw_data     = msg3.payload[0].data[0];\n        \n        var m={};\n            m.labels    = varlabels;\n            m.series    = ['DegreeDays (°C)', 'Energy consumption HEAT (kWh)', 'Energy consumption DHW (kWh)'];\n            m.data      = [vargraaddagen_data, varkwh_heat_data, varkwh_dhw_data];\n        \n        return {payload:[m]};\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1620,
        "wires": [
            [
                "4eaa2cfa2749c551"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "7629b6d3d87712ff",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "6472e1e423188a37",
        "name": "",
        "links": [
            "2064b5a11ffc43b3"
        ],
        "x": 125,
        "y": 1480,
        "wires": [
            [
                "3043e3c17ff68920"
            ]
        ]
    },
    {
        "id": "e9d6a960b09e05b8",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "6472e1e423188a37",
        "name": "Store information to degreedays_31d",
        "func": "var myArray5 = msg;\nglobal.set(\"degreedays_31d\", myArray5,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1480,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "fdb9e1be23998039",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "Interval 5m",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "bddac0d27a1343a8",
                "0c9b408b44a185a3"
            ]
        ]
    },
    {
        "id": "bddac0d27a1343a8",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "T_outside",
        "func": "/////\n\n///////////////////////////// MSG = T_outside //////////////////////////////////\n\n\nvar T_outside = global.get('T_outside',\"file\");\nif (T_outside === undefined)\n    {   \n        return null;\n    }\n    \nelse\n    {\n\n        msg.payload = T_outside;\n        msg.topic = 'T_outside';\n        Number(msg.payload).toFixed(1);\n        return msg;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            [
                "a09512145dbf8d8a"
            ]
        ],
        "outputLabels": [
            "T_outside"
        ]
    },
    {
        "id": "0c9b408b44a185a3",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "graaddagen_calc",
        "func": "/////\n\n///////////////////////////// Calculate T_outside //////////////////////////////\n\n\nvar T_outside = global.get('T_outside',\"file\");\nif (T_outside === undefined)\n    {   \n        return null;\n    }\n    \nelse\n    {\n        \n////\n\n///////////////////////////// MSG = graaddagen_calc ////////////////////////////\n\n        let msg1={};\n\n        var graaddagen_calc = 18 - T_outside;\n        \n        if (graaddagen_calc < 0)    {graaddagen_calc = 0;}\n                \n        msg1.topic = 'graaddagen_calc';\n        msg1.payload = graaddagen_calc;\n        Number(msg1.payload).toFixed(1);\n        \n        global.set(\"graaddagen_calc\", msg1.payload, \"file\");\n\n        return msg1;\n    }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "2064b5a11ffc43b3"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "a09512145dbf8d8a",
        "type": "link out",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "T_outside",
        "mode": "link",
        "links": [],
        "x": 845,
        "y": 80,
        "wires": []
    },
    {
        "id": "2064b5a11ffc43b3",
        "type": "link out",
        "z": "ed155b604642d354",
        "g": "6a01f1b80ccf3218",
        "name": "graaddagen_calc",
        "mode": "link",
        "links": [
            "e64edede4c04268f",
            "1db4f55d0a2fdbcd",
            "7629b6d3d87712ff",
            "a555a16e72eecd16",
            "a123dbb3ab4abb67",
            "23bc7334d7c99f01",
            "e9d32f77223020a8",
            "458b037edd12c828",
            "b27f3362361c5e64",
            "978657d3c3a0f2cb",
            "7771da8a0a8b3592",
            "7887aff049a582de",
            "7c5168cdea10e6fd"
        ],
        "x": 845,
        "y": 120,
        "wires": []
    },
    {
        "id": "6bb3b71758d24fd0",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 170,
        "y": 1680,
        "wires": [
            [
                "4eaa2cfa2749c551"
            ]
        ]
    },
    {
        "id": "41e8d01708c19225",
        "type": "comment",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Bucket 1 + 2 + 3 combined to chart",
        "info": "",
        "x": 240,
        "y": 1580,
        "wires": []
    },
    {
        "id": "550d61dd1ac867d3",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "3ce36bc606018d50",
        "name": "bar-chart HEAT kwh-31d",
        "x_interval": "days",
        "x_size": "31",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 1380,
        "wires": [
            [
                "41bc927c7f5116b1"
            ]
        ]
    },
    {
        "id": "4eaa2cfa2749c551",
        "type": "ui_chart",
        "z": "ed155b604642d354",
        "g": "e598f3cca51f28d1",
        "name": "kWh + Degree Days (31d)",
        "group": "87be08e6a82ef6a0",
        "order": 2,
        "width": 15,
        "height": 8,
        "label": "Last 31 days",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00876c",
            "#de425b",
            "#f59b56",
            "#fff18f",
            "#89bf77",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "681a0775921a043e",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Load bar-chart data",
        "func": "var myArray1 = global.get(\"kwh_HEAT_31d\",\"file\");\nvar myArray2 = global.get(\"degreedays_31d\",\"file\");\nvar myArray3 = global.get(\"kwh_DHW_31d\",\"file\");\n\nlet msg1={}, msg2={}, msg3={};\nmsg1 = myArray1;\nmsg2 = myArray2;\nmsg3 = myArray3;\n\nreturn [msg1,msg2,msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1200,
        "wires": [
            [
                "550d61dd1ac867d3"
            ],
            [
                "cff31036dc296d8d"
            ],
            [
                "1073d8f9d7a572a1"
            ]
        ],
        "outputLabels": [
            "kwh_HEAT_31d",
            "degreedays_31d",
            "kwh_DHW_31d"
        ]
    },
    {
        "id": "b2548a4bf37f2567",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "Restore after boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "trigger",
        "x": 190,
        "y": 1200,
        "wires": [
            [
                "681a0775921a043e"
            ]
        ]
    },
    {
        "id": "3cfa3ed4419f2936",
        "type": "inject",
        "z": "ed155b604642d354",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 1250,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "974b24f717fe8560",
        "type": "link out",
        "z": "ed155b604642d354",
        "g": "2b75a55bb8fb12c6",
        "name": "kWh HEAT value (live)",
        "mode": "link",
        "links": [
            "6988051cc52f2c86",
            "dc13db3939bf2d7f",
            "ce5d0b3236face62"
        ],
        "x": 810,
        "y": 240,
        "wires": [],
        "inputLabels": [
            "kWh value (live)"
        ],
        "l": true
    },
    {
        "id": "dc13db3939bf2d7f",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "3ce36bc606018d50",
        "name": "",
        "links": [
            "974b24f717fe8560"
        ],
        "x": 125,
        "y": 1380,
        "wires": [
            [
                "61e1918ce41f34f7"
            ]
        ]
    },
    {
        "id": "61e1918ce41f34f7",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "3ce36bc606018d50",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 1380,
        "wires": [
            [
                "550d61dd1ac867d3"
            ]
        ]
    },
    {
        "id": "3043e3c17ff68920",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "6472e1e423188a37",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 1480,
        "wires": [
            [
                "cff31036dc296d8d"
            ]
        ]
    },
    {
        "id": "10a3251239b22cd4",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Once per 5minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 220,
        "y": 960,
        "wires": [
            [
                "b44fca625044b56c"
            ]
        ]
    },
    {
        "id": "b44fca625044b56c",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Function - bucket 1 + 2 + 3 combined",
        "func": "var myArray3 = global.get(\"kwh_HEAT_24h\",\"file\");\nvar myArray4 = global.get(\"degreedays_24h\",\"file\");\nvar myArray1 = global.get(\"kwh_DHW_24h\",\"file\");\nif (myArray3 === undefined || myArray4 === undefined || myArray1 === undefined)\n    {\n        return null;\n    }\n        \nelse\n    {\n        let msg1={}, msg2={}, msg3={};\n        msg1 = myArray3;\n        msg2 = myArray4;\n        msg3 = myArray1;\n        \n        var varlabels = msg1.payload[0].labels;\n        var varkwh_data_heat        = msg1.payload[0].data[0];\n        var varkwh_data_dhw         = msg3.payload[0].data[0];\n        var vargraaddagen_data      = msg2.payload[0].data[0];\n        var m={};\n            m.labels    = varlabels;\n            m.series    = ['DegreeDays (°C)', 'Energy consumption HEAT (kWh)',  'Energy consumption DHW (kWh)'];\n            m.data      = [vargraaddagen_data, varkwh_data_heat, varkwh_data_dhw];\n        \n        return {payload:[m]};\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 960,
        "wires": [
            [
                "2ee679408e4ccc6f"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "d64accce0bd0c291",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "6db1485dd36081ec",
        "name": "bar-chart-data degreedays-24h",
        "x_interval": "hours",
        "x_size": "24",
        "unit": "",
        "precision": "2",
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 850,
        "y": 820,
        "wires": [
            [
                "95923454c02c9c72"
            ]
        ]
    },
    {
        "id": "7887aff049a582de",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "6db1485dd36081ec",
        "name": "",
        "links": [
            "2064b5a11ffc43b3"
        ],
        "x": 125,
        "y": 820,
        "wires": [
            [
                "29a4cb237663e973"
            ]
        ]
    },
    {
        "id": "95923454c02c9c72",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "6db1485dd36081ec",
        "name": "Store information to degreedays_24h",
        "func": "var myArray5 = msg;\nglobal.set(\"degreedays_24h\", myArray5,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 820,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "29a4cb237663e973",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "6db1485dd36081ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 820,
        "wires": [
            [
                "d64accce0bd0c291"
            ]
        ]
    },
    {
        "id": "a9584fa0cadac44b",
        "type": "comment",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Bucket 1 + 2 + 3 combined to chart",
        "info": "",
        "x": 240,
        "y": 920,
        "wires": []
    },
    {
        "id": "2ee679408e4ccc6f",
        "type": "ui_chart",
        "z": "ed155b604642d354",
        "g": "d44f1a1993a8a44f",
        "name": "kWh + Degree Days (24h)",
        "group": "87be08e6a82ef6a0",
        "order": 4,
        "width": 15,
        "height": 8,
        "label": "Last 24 hours",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00876c",
            "#de425b",
            "#f59b56",
            "#fff18f",
            "#89bf77",
            "#ffa056",
            "#8dddd0",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "9a88d9c8f4a6c2a5",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "5b9db86809583efd",
        "name": "bar-chart HEAT kwh-24h",
        "x_interval": "hours",
        "x_size": "24",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 720,
        "wires": [
            [
                "38893966085dd228"
            ]
        ]
    },
    {
        "id": "38893966085dd228",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "5b9db86809583efd",
        "name": "Store information to kwh_HEAT_24h",
        "func": "var myArray4 = msg;\nglobal.set(\"kwh_HEAT_24h\", myArray4,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 720,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "6988051cc52f2c86",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "5b9db86809583efd",
        "name": "",
        "links": [
            "974b24f717fe8560"
        ],
        "x": 125,
        "y": 720,
        "wires": [
            [
                "0ae4268d42429bac"
            ]
        ]
    },
    {
        "id": "0ae4268d42429bac",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "5b9db86809583efd",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 720,
        "wires": [
            [
                "9a88d9c8f4a6c2a5"
            ]
        ]
    },
    {
        "id": "c0f559e2c7905a0e",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Load bar-chart data",
        "func": "var myArray3 = global.get(\"kwh_HEAT_24h\",\"file\");\nvar myArray4 = global.get(\"degreedays_24h\",\"file\");\nvar myArray1 = global.get(\"kwh_DHW_24h\",\"file\");\n\nlet msg1={}, msg2={}, msg3={};\nmsg1 = myArray3;\nmsg2 = myArray4;\nmsg3 = myArray1;\n\nreturn [msg1,msg2,msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 520,
        "wires": [
            [
                "9a88d9c8f4a6c2a5"
            ],
            [
                "d64accce0bd0c291"
            ],
            [
                "91840e451e332fa6"
            ]
        ],
        "outputLabels": [
            "kwh_31d",
            "degreedays_31d",
            ""
        ]
    },
    {
        "id": "3a9d746ecf027578",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "Restore after boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "trigger",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "c0f559e2c7905a0e"
            ]
        ]
    },
    {
        "id": "5f7678f15c215dc9",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "2ee679408e4ccc6f",
                "9a88d9c8f4a6c2a5",
                "91840e451e332fa6",
                "d64accce0bd0c291"
            ]
        ]
    },
    {
        "id": "a229a39b9973d011",
        "type": "inject",
        "z": "ed155b604642d354",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 1250,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "42fb2dc4dec11e93",
        "type": "comment",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "31 Days information",
        "info": "",
        "x": 170,
        "y": 1160,
        "wires": []
    },
    {
        "id": "16b0fcf56b6d17f8",
        "type": "comment",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "24 hours information",
        "info": "",
        "x": 170,
        "y": 480,
        "wires": []
    },
    {
        "id": "05c67c5f7508a04d",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "27d590581cd92df1",
        "name": "",
        "links": [
            "a3180920b08e8108"
        ],
        "x": 95,
        "y": 340,
        "wires": [
            [
                "cd16de04c8fa639a"
            ]
        ]
    },
    {
        "id": "cd16de04c8fa639a",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "27d590581cd92df1",
        "name": "Energy_Consumption_DHW_kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit;\n\n    var LastMessage = msg.payload;\n    var LastTopic= msg.topic;\n    \n    if (PreviousTime === undefined) \n        {\n            context.set('PreviousTime',CurrentTime);\n            exit = true;\n        }\n        \n    else if (PreviousMessage === undefined) \n        {\n            context.set('PreviousMessage',msg.payload);\n            exit = true;\n        }\n    else if (PreviousTopic === undefined) \n        {\n            context.set('PreviousTopic',msg.topic);\n            exit = true;\n        }\n    \n    else {\n                \n            TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n            context.set('PreviousTime',CurrentTime);\n            context.set('PreviousMessage',msg.payload);\n            context.set('PreviousTopic',msg.topic);\n            msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n            msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n            \n            \n            msg1.payload = (TimeElapsed + \"  Seconds\");\n            temp = parseFloat(TimeElapsed.toFixed(0));\n            msg2.payload = temp;\n            msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n            msg5.payload = (PreviousMessage * ( temp / 3600000 ));   //  Calculation to Wh portion\n            Number(msg5.payload).toFixed(4);\n            msg5.topic = 'Energy_Consumption_DHW_kWh';\n       }\n    if (exit === true)\n        {return null;}\n    else     \n        {return msg5;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "2cc9fde214b13621"
            ]
        ],
        "outputLabels": [
            "Energy_Consumption_HEAT_kWh"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "2cc9fde214b13621",
        "type": "link out",
        "z": "ed155b604642d354",
        "g": "27d590581cd92df1",
        "name": "kWh DHW value (live)",
        "mode": "link",
        "links": [
            "65322aec4f8fd58e",
            "868b4c6128111bb6",
            "22538d89f57d30fe"
        ],
        "x": 800,
        "y": 340,
        "wires": [],
        "inputLabels": [
            "kWh value (live)"
        ],
        "l": true
    },
    {
        "id": "91840e451e332fa6",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "d734c640b789ff1e",
        "name": "bar-chart DHW kwh-24h",
        "x_interval": "hours",
        "x_size": "24",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 620,
        "wires": [
            [
                "935535fc205e470c"
            ]
        ]
    },
    {
        "id": "935535fc205e470c",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "d734c640b789ff1e",
        "name": "Store information to kwh_DHW_24h",
        "func": "var myArray1 = msg;\nglobal.set(\"kwh_DHW_24h\", myArray1,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 620,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "65322aec4f8fd58e",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "d734c640b789ff1e",
        "name": "",
        "links": [
            "2cc9fde214b13621"
        ],
        "x": 125,
        "y": 620,
        "wires": [
            [
                "018e987e0d4672b6"
            ]
        ]
    },
    {
        "id": "018e987e0d4672b6",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "d734c640b789ff1e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 620,
        "wires": [
            [
                "91840e451e332fa6"
            ]
        ]
    },
    {
        "id": "868b4c6128111bb6",
        "type": "link in",
        "z": "ed155b604642d354",
        "g": "fc68ffd1a284a6bd",
        "name": "",
        "links": [
            "2cc9fde214b13621"
        ],
        "x": 125,
        "y": 1280,
        "wires": [
            [
                "e8a39538d051ed80"
            ]
        ]
    },
    {
        "id": "e8a39538d051ed80",
        "type": "delay",
        "z": "ed155b604642d354",
        "g": "fc68ffd1a284a6bd",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "1073d8f9d7a572a1"
            ]
        ]
    },
    {
        "id": "1073d8f9d7a572a1",
        "type": "bar-chart-data",
        "z": "ed155b604642d354",
        "g": "fc68ffd1a284a6bd",
        "name": "bar-chart DHW kwh-31d",
        "x_interval": "days",
        "x_size": "31",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 1280,
        "wires": [
            [
                "e800de9b472a5516"
            ]
        ]
    },
    {
        "id": "e800de9b472a5516",
        "type": "function",
        "z": "ed155b604642d354",
        "g": "fc68ffd1a284a6bd",
        "name": "Store information to kwh_DHW_31d",
        "func": "var myArray1 = msg;\nglobal.set(\"kwh_DHW_31d\", myArray1,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1280,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "e68356272f1f529b",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "5ffcc1056a276bf5",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 310,
        "y": 1020,
        "wires": [
            [
                "d64accce0bd0c291",
                "9a88d9c8f4a6c2a5",
                "91840e451e332fa6"
            ]
        ]
    },
    {
        "id": "898b02a132291b49",
        "type": "inject",
        "z": "ed155b604642d354",
        "g": "1c223a510a8ec72d",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 310,
        "y": 1680,
        "wires": [
            [
                "cff31036dc296d8d",
                "550d61dd1ac867d3",
                "1073d8f9d7a572a1"
            ]
        ]
    },
    {
        "id": "40b5ddfde5f28d99",
        "type": "ui_template",
        "z": "ed155b604642d354",
        "group": "87be08e6a82ef6a0",
        "name": "Line",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1590,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "67a8d20ae604a58e",
        "type": "ui_template",
        "z": "ed155b604642d354",
        "group": "87be08e6a82ef6a0",
        "name": "Line",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1590,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "966985d68ebb4990",
        "type": "tab",
        "label": "WP Solar",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bf2c1d5a22f56dd8",
        "type": "group",
        "z": "966985d68ebb4990",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "071320367f2b7a40",
            "e6e7a4c840499ff0",
            "2ab2c3aad0cba156",
            "c980bba812a20bc2",
            "39f8d3463d10ccfb",
            "2efa0af27c69d4d0",
            "9fca714df21ffac0",
            "edf195c89ff83486",
            "add57b730a3e769f",
            "af24696818983d4c",
            "26c4d827da98fd56",
            "f58197b3d1d9d1d0",
            "ce787867699a6a50",
            "a9efc23cf56dc231",
            "1c7292b507901827",
            "d31bb33a7ab5445e",
            "4aa1e7a1e212ad06",
            "8ba23174457c635d",
            "59e73e3a2c2985fa",
            "88ea0371f9cecd37",
            "d399a23f6936f23f",
            "d4627d98961f13e3",
            "4005ad2197c7fdc7"
        ],
        "x": 74,
        "y": 19
    },
    {
        "id": "81ff790f84afd46d",
        "type": "group",
        "z": "966985d68ebb4990",
        "name": "SOLAR functions",
        "style": {
            "label": true
        },
        "nodes": [
            "d10277056d1d02fe",
            "8e16d1ef3e972c95",
            "bd6e0b75ff712b33"
        ],
        "x": 8,
        "y": 1713
    },
    {
        "id": "6f4cdc97add442ff",
        "type": "group",
        "z": "966985d68ebb4990",
        "name": "Switching logic",
        "style": {
            "label": true
        },
        "nodes": [
            "2d6dc1388cdc2951",
            "e62a354ce682ea6f",
            "b50ab0a4981f9d17",
            "ee7e3fc1d241d09e",
            "37178acf2fda2d9d",
            "78507acac200e031",
            "9b92843d2d8873a3",
            "58f4dcb609fc506a",
            "7072144388b44dd3",
            "bd6a778d969a4013",
            "2f80407e5e31dd43",
            "c0586f3e8627e510",
            "ba8f8e1c71858357",
            "1b0aafd65d5593dd",
            "0edffe2f6a90c7de",
            "70753620fd42401f"
        ],
        "x": 114,
        "y": 2819
    },
    {
        "id": "3b5324e3d80d96a1",
        "type": "group",
        "z": "966985d68ebb4990",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "6c24c2f990c17968",
            "4896062be182fe15",
            "13a19fc3eda5bac1",
            "bc0aeeb8c2000e65",
            "b3e73f9e4ae539cb",
            "b85d6aca6a841215",
            "233708268636f815",
            "75c312c1494fea2e",
            "37aa061ab91471ec",
            "890a57ef3afcf284",
            "856711de93142cb9",
            "8aa8fe1b9cd61f3c",
            "7f9c4451a116b794",
            "e5a024baed5f8a58",
            "0b2d388baee905a4",
            "63bcc91caacdcf55",
            "a9994ef2e592aee1",
            "375bbd780529afe0",
            "d557c110dc040f11"
        ],
        "x": 74,
        "y": 779
    },
    {
        "id": "2efa0af27c69d4d0",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "This groups function: Calculate result of the day",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "c7ec48dc3c78df80",
            "4219518104b1ef5d",
            "aad8f63921d33903",
            "794528b156d90283",
            "42734e97a85d5537",
            "40abfbbe563b32ac"
        ],
        "x": 114,
        "y": 551.5
    },
    {
        "id": "9fca714df21ffac0",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "style": {
            "fill": "#ff0000",
            "fill-opacity": "0.55",
            "label": true
        },
        "nodes": [
            "5256af8b7309c113"
        ],
        "x": 314,
        "y": 399
    },
    {
        "id": "b85d6aca6a841215",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "style": {
            "fill": "#ff0000",
            "fill-opacity": "0.55",
            "label": true
        },
        "nodes": [
            "3ddc8ec4b5d75af2"
        ],
        "x": 274,
        "y": 1119
    },
    {
        "id": "233708268636f815",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8f12203bf931d988",
            "cf528e5358dce9df",
            "4d12c082bff0d9a8",
            "3bd892e72c39999a"
        ],
        "x": 154,
        "y": 1279
    },
    {
        "id": "bd6e0b75ff712b33",
        "type": "group",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "b84df04af23dbc5a",
            "bd079d704c31d5a7",
            "a8beed6bcea8ec08",
            "ac392c197fe09917",
            "5fb3c7be3b428b42",
            "460148df6a225d24",
            "5c90f480e0f6e8ac",
            "d4b0a313434a3fd9",
            "d6bf90086794b1ac",
            "c0ee68059878b294",
            "77e1377aea412936",
            "28c7a4a25703f3c5",
            "67fe5d78fed38255",
            "8f06615b7f974a19",
            "623dc28b8a4cccdd",
            "7bc1cea7963d95f8",
            "74d748cdb9ede767",
            "ccb17c1dab2540fd",
            "b866c59ce44f1281",
            "45de8d4b61f74361",
            "992b1344cc8fd4eb",
            "803505e9e8372578",
            "5f2ca6fd7cf3d5c5",
            "329a022ba526c218",
            "153d971fff0a3ed3",
            "9958b10ab396a735",
            "9765c40bf881d992",
            "5a4e594ff048795f",
            "bdd8cc1b7fb80f3f",
            "0a090bd1c44b08c6",
            "992ca6239bbe7308",
            "ce2634259bc8d6eb",
            "16fc69e4b9ff74fd",
            "608ac27952261ad4",
            "7ed70179e6faf792",
            "2e9d5424e80ef967",
            "f3f4f51165a33ae4",
            "bfade373dc6bae1e",
            "e5cb66afb46c891b",
            "2a4ffebda936e1bf",
            "39a4db5e9a226488",
            "200de001362093f8",
            "87da7c125b68ad72",
            "2b03f7e8408f5f56",
            "941e2e6b17a45171",
            "f61f7eaf6a10124a",
            "f6779270108c1106",
            "d2d71d4e69ee31d7",
            "cc71fabeef44a7fe",
            "19e1b78cc7d0e897",
            "c921d9cfc05712ec",
            "91df0ca5227134fa",
            "3170857651ba82cc",
            "d8210b71067cf6b6",
            "f41ea674b5e8c312",
            "2717d21023b674ad",
            "4ed5f3924acf26ff"
        ],
        "x": 34,
        "y": 1739
    },
    {
        "id": "ce2634259bc8d6eb",
        "type": "ui_dropdown",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "detection_method",
        "label": "Power detection method",
        "tooltip": "",
        "place": "Select option",
        "group": "b7f22c282fde0f86",
        "order": 10,
        "width": 9,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Power live (kW)",
                "value": "kW",
                "type": "str"
            },
            {
                "label": "Today's production (kWh)",
                "value": "kWh_prod",
                "type": "str"
            },
            {
                "label": "Today's result (kWh)",
                "value": "kWh_result",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "detection_method",
        "topicType": "str",
        "className": "",
        "x": 570,
        "y": 2080,
        "wires": [
            [
                "941e2e6b17a45171",
                "ccb17c1dab2540fd"
            ]
        ]
    },
    {
        "id": "16fc69e4b9ff74fd",
        "type": "ui_numeric",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "dhw_sp_high",
        "label": "DHW temperature setpoint - high",
        "tooltip": "This setpoint is active above the {{msg.threshold}} treshold",
        "group": "b7f22c282fde0f86",
        "order": 9,
        "width": 9,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "dhw_sp_high",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": 0,
        "max": "75",
        "step": 1,
        "className": "",
        "x": 550,
        "y": 2040,
        "wires": [
            [
                "ccb17c1dab2540fd",
                "f6779270108c1106"
            ]
        ]
    },
    {
        "id": "608ac27952261ad4",
        "type": "ui_numeric",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "threshold",
        "label": "Threshold",
        "tooltip": "",
        "group": "b7f22c282fde0f86",
        "order": 11,
        "width": 9,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "threshold",
        "topicType": "str",
        "format": "{{value}} {{detection_method}}",
        "min": "-30",
        "max": "-0.1",
        "step": "0.1",
        "className": "",
        "x": 540,
        "y": 2120,
        "wires": [
            [
                "7ed70179e6faf792",
                "ccb17c1dab2540fd"
            ]
        ]
    },
    {
        "id": "7ed70179e6faf792",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "threshold",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 2000,
        "wires": [
            [
                "16fc69e4b9ff74fd",
                "f61f7eaf6a10124a"
            ]
        ]
    },
    {
        "id": "2e9d5424e80ef967",
        "type": "ui_switch",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "fallback",
        "label": "Fallback to default DHW (SP) below 0 W?",
        "tooltip": "This will only apply for the power detection method Option 1: Power Live (kW)",
        "group": "b7f22c282fde0f86",
        "order": 13,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "fallback",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 540,
        "y": 2180,
        "wires": [
            [
                "ccb17c1dab2540fd"
            ]
        ]
    },
    {
        "id": "aad8f63921d33903",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "Function schedule export",
        "func": "//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\nvar start_today_export      = flow.get(\"start_today_export\",\"file\");            //\nvar total_kwh_export        = flow.get('total_kwh_export',\"file\");              //\nvar F_SOLAR                 = global.get('F_SOLAR',\"file\");                     //\nvar TOP9_DHW_Target_Temp    = global.get('TOP9_DHW_Target_Temp',\"file\");        //\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\nlet msg1={};                // pin 1: kwh\nlet msg2={};                // pin 2: SP_DHW\n    msg2.topic = 'Solar function';\nlet msg99={};               // pin 3: to log\n\nmsg99.topic = \"Function Solar\";\n\nif (total_kwh_export === undefined) {total_kwh_export = msg.payload;}\nif (total_kwh_export === undefined) {total_kwh_export = 0;}\n\nif (start_today_export === undefined)\n    {\n        start_today_export = total_kwh_export;\n        flow.set(\"start_today_export\",total_kwh_export,\"file\");\n    }   \n\nif (msg.topic == \"time\" && F_SOLAR.state == 0)                                                        // When @ midnight, reset start_today_export to 0.\n    {\n        global.set(\"F_SOLAR.function_active_state\",undefined,\"file\");        \n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        if (total_kwh_export !== undefined)\n            {\n                flow.set('start_today_export',total_kwh_export,\"file\");\n            }\n        return [msg,null,null];\n\n    }\nif (msg.topic == \"time\" && F_SOLAR.state == 1)                                                        // When @ midnight, reset start_today_export to 0.\n    {\n        global.set(\"F_SOLAR.function_active_state\",undefined,\"file\");        \n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        if (total_kwh_export !== undefined)\n            {\n                flow.set('start_today_export',total_kwh_export,\"file\");\n            }\n        if (TOP9_DHW_Target_Temp != F_SOLAR.dhw_sp_low)\n            {\n                msg2.payload = F_SOLAR.dhw_sp_low;\n                msg99.payload       = \"New day; Reset Solar function. Set DHW SP to \" + F_SOLAR.dhw_sp_low;\n                return [msg, msg2, msg99];\n            }\n        else \n            {\n                msg99.payload       = \"New day; Reset Solar function. DHW SP = \" + F_SOLAR.dhw_sp_low;\n                return [msg,null,msg99];\n            }\n    }\n\nelse if (msg.topic == \"start\")\n    {\n        msg1.payload = total_kwh_export - start_today_export;\n        msg1.payload = Number(msg1.payload).toFixed(2);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.topic = \"kWh\";\n        return [msg1,null,null];\n    }\nelse\n    {\n        var until_now       =   (msg.payload - start_today_export);            // calculate todays production in kWh\n        msg.payload = until_now;\n        msg.payload = Number(msg.payload).toFixed(2);\n        msg.payload = parseFloat(msg.payload);\n        msg.topic = \"kWh\";\n        return [msg,null,null];\n    }\n    ",
        "outputs": 3,
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 600,
        "wires": [
            [
                "39f8d3463d10ccfb"
            ],
            [
                "42734e97a85d5537"
            ],
            [
                "40abfbbe563b32ac"
            ]
        ],
        "outputLabels": [
            "kWh today",
            "DHW_SP_LOW",
            "to log"
        ]
    },
    {
        "id": "f3f4f51165a33ae4",
        "type": "ui_switch",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "state",
        "label": "Function: Solar²DHW",
        "tooltip": "",
        "group": "b7f22c282fde0f86",
        "order": 5,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 530,
        "y": 1900,
        "wires": [
            [
                "200de001362093f8"
            ]
        ]
    },
    {
        "id": "bfade373dc6bae1e",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "b7f22c282fde0f86",
        "name": "Line - Setup ",
        "order": 7,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "d10277056d1d02fe",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "Input - Current power",
        "links": [
            "071320367f2b7a40",
            "6c24c2f990c17968"
        ],
        "x": 135,
        "y": 2460,
        "wires": [
            [
                "5f2ca6fd7cf3d5c5",
                "329a022ba526c218"
            ]
        ]
    },
    {
        "id": "071320367f2b7a40",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "P1 Output - Power production (W)",
        "mode": "link",
        "links": [
            "4047483a87ea6ec9",
            "d10277056d1d02fe",
            "c193dd7c180a36de",
            "9b92843d2d8873a3"
        ],
        "x": 1200,
        "y": 260,
        "wires": [],
        "l": true
    },
    {
        "id": "e6e7a4c840499ff0",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "GRID PRODUCTION (EXPORT)",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "2ab2c3aad0cba156",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "Expected input is a value in Watt or kiloWatt.",
        "info": "",
        "x": 270,
        "y": 140,
        "wires": []
    },
    {
        "id": "794528b156d90283",
        "type": "no-op",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "IN",
        "x": 210,
        "y": 600,
        "wires": [
            [
                "aad8f63921d33903"
            ]
        ]
    },
    {
        "id": "5256af8b7309c113",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "9fca714df21ffac0",
        "name": "Correction function",
        "func": "var export_correction;\n\nif (msg.topic == \"correction\")\n    {\n        export_correction = msg.payload;\n        global.set('F_SOLAR.export_correction',export_correction,\"file\");\n        \n        return null;\n    }\nelse {\n        export_correction = global.get('F_SOLAR.export_correction',\"file\");   \n        if (export_correction === undefined) { export_correction = 1;}\n        \n        let msg1={};\n        msg1.payload = msg.payload;\n        \n        msg1.payload = Number(msg1.payload).toFixed(4);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.payload = Math.abs(msg1.payload);\n        \n        msg1.payload = msg1.payload * -1 * export_correction; \n        msg1.payload = Number(msg1.payload).toFixed(0);\n        msg1.topic = \"W\";\n        return msg1;\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 440,
        "wires": [
            [
                "071320367f2b7a40",
                "c980bba812a20bc2",
                "ce787867699a6a50"
            ]
        ]
    },
    {
        "id": "e5cb66afb46c891b",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "DASHBOARD",
        "info": "",
        "x": 550,
        "y": 1820,
        "wires": []
    },
    {
        "id": "c980bba812a20bc2",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "GRID power production W to kWh",
        "func": "let msg1 = {};\nlet msg2 = {};\nlet msg3 = {};\n//let msg4 = {};\nlet msg5 = {};\nlet msg6 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit = false;\n\n//  First run checks. If some variables are undefined, set current values and exit.\nif (PreviousTime === undefined) {context.set('PreviousTime',CurrentTime);       exit = true;}\nif (PreviousMessage === undefined) {context.set('PreviousMessage',msg.payload); exit = true;}\nif (PreviousTopic === undefined)  {context.set('PreviousTopic',msg.topic);    exit = true;}\n\nif (exit === true)              // IF 1\n    {   \n        return null;            // This output will automatically be skipped, next calculation will be ok.\n        \n    }\n\nelse                        // ELSE 2\n    {\n        var LastMessage = msg.payload;\n        var LastTopic= msg.topic;\n        \n        var TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n        context.set('PreviousTime',CurrentTime);\n        context.set('PreviousMessage',msg.payload);\n        context.set('PreviousTopic',msg.topic);\n        msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n        msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n        \n        \n        msg1.payload = (TimeElapsed + \"  Seconds\");\n        var temp = parseFloat(TimeElapsed.toFixed(0));\n        msg2.payload = temp;\n        msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n        msg5.payload = (PreviousMessage * ( temp / 3600000 ));                  //  Calculation to Wh portion\n        Number(msg5.payload).toFixed(4);\n        msg5.topic = 'GRID power production kWh';                               // msg5 = latest kWh part.\n    \n    \n        ///////////////////////////////////////////////////////////////////////////\n        // Calculation from kWh part > total kWh of today\n        var total_kwh_export = flow.get(\"total_kwh_export\",\"file\");\n        if (total_kwh_export === undefined)        {total_kwh_export = 0;}\n        \n        msg6.payload = msg5.payload + total_kwh_export;                                // msg6 = kWh total from the start of operation\n        msg6.topic = 'GRID power production kWh';\n        msg6.payload = Number(msg6.payload).toFixed(3);\n        msg6.payload = parseFloat(msg6.payload);\n        flow.set('total_kwh_export',msg6.payload,\"file\");\n       \n        ////////////////////////////////////////////////////////////////////////////\n        return [msg6];\n    \n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 440,
        "wires": [
            [
                "794528b156d90283",
                "edf195c89ff83486"
            ]
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "39f8d3463d10ccfb",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "P1 Output - Power production Today (kWh)",
        "mode": "link",
        "links": [
            "f2de7a857ebb62ca",
            "a27c417c537a6b65",
            "c193dd7c180a36de",
            "44925c267016b3f7"
        ],
        "x": 1170,
        "y": 580,
        "wires": [],
        "l": true
    },
    {
        "id": "b84df04af23dbc5a",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1880,
        "wires": [
            [
                "9958b10ab396a735"
            ]
        ]
    },
    {
        "id": "2d6dc1388cdc2951",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "kWh",
        "info": "",
        "x": 190,
        "y": 2860,
        "wires": []
    },
    {
        "id": "e62a354ce682ea6f",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "mode": "link",
        "links": [
            "c82ec16fb6ba6769",
            "d9b3ca8bfaa4c10a"
        ],
        "x": 1085,
        "y": 2860,
        "wires": []
    },
    {
        "id": "42734e97a85d5537",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "DHW_SP_LOW",
        "mode": "link",
        "links": [
            "c82ec16fb6ba6769"
        ],
        "x": 820,
        "y": 600,
        "wires": [],
        "l": true
    },
    {
        "id": "b50ab0a4981f9d17",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "linkout_solar trigger OM",
        "mode": "link",
        "links": [
            "84bff5c3d4a4cede"
        ],
        "x": 1085,
        "y": 2900,
        "wires": []
    },
    {
        "id": "c7ec48dc3c78df80",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "aad8f63921d33903"
            ]
        ]
    },
    {
        "id": "2a4ffebda936e1bf",
        "type": "ui_switch",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "power_override",
        "label": "Allow switch on heat pump",
        "tooltip": "Power on heat pump when power is above treshold",
        "group": "b7f22c282fde0f86",
        "order": 12,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "power_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 560,
        "y": 2220,
        "wires": [
            [
                "ccb17c1dab2540fd"
            ]
        ]
    },
    {
        "id": "ee7e3fc1d241d09e",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb"
        ],
        "x": 1085,
        "y": 2940,
        "wires": []
    },
    {
        "id": "4219518104b1ef5d",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "start",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "aad8f63921d33903"
            ]
        ]
    },
    {
        "id": "5a4e594ff048795f",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "b7f22c282fde0f86",
        "order": 17,
        "width": 9,
        "height": 1,
        "name": "DHW (SP)",
        "label": "DHW temperature setpoint",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 550,
        "y": 2380,
        "wires": []
    },
    {
        "id": "992b1344cc8fd4eb",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "links": [
            "d54ac3b979428b64"
        ],
        "x": 365,
        "y": 2340,
        "wires": [
            [
                "39a4db5e9a226488"
            ]
        ]
    },
    {
        "id": "bdd8cc1b7fb80f3f",
        "type": "ui_chart",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "group": "2bd11d2d909e2ba3",
        "order": 2,
        "width": 10,
        "height": 6,
        "label": "Power history (W)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Waiting for data ...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "2500",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#de425b",
            "#f59b56",
            "#7f8389",
            "#d62728",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 2460,
        "wires": [
            [
                "2717d21023b674ad"
            ]
        ]
    },
    {
        "id": "0a090bd1c44b08c6",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "b7f22c282fde0f86",
        "name": "Line - Current values",
        "order": 15,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\nResults",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "329a022ba526c218",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Draw chart",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nvar last = context.get('last') || 'under';\nvar threshold = 0;\nvar undermessage = {topic:'Production',payload:null};\nvar overmessage = {topic:'Consumption',payload:null};\nvar unsentmessage = null;\n\nif(msg.payload > threshold)\n    {\n        if(last == 'under')\n            {\n                undermessage.payload = threshold;\n                overmessage.payload = threshold;\n                unsentmessage = msg;\n            }\n        else\n            {\n                overmessage.payload = msg.payload;\n            }\n        last = 'over';\n    }\n\nelse\n    {\n        if(last == 'over')\n            {\n                overmessage.payload = threshold;\n                undermessage.payload = threshold;\n                unsentmessage = msg;\n            }\n        else\n            {\n                undermessage.payload = msg.payload;\n            }\n        last = 'under';\n    }\n\ncontext.set('last',last);\nvar F_SOLAR = global.get('F_SOLAR',\"file\");\n\nif (F_SOLAR.detection_method == 'kW' && F_SOLAR.threshold !== undefined) {\n    let msg1 ={};\n    msg1.topic = 'Threshold';\n    msg1.payload = F_SOLAR.threshold * 1000;    \n    return [[overmessage,undermessage,msg1],unsentmessage]\n}\n\nreturn [[overmessage,undermessage],unsentmessage]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2440,
        "wires": [
            [
                "f41ea674b5e8c312"
            ]
        ]
    },
    {
        "id": "992ca6239bbe7308",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 530,
        "y": 2500,
        "wires": [
            [
                "bdd8cc1b7fb80f3f"
            ]
        ]
    },
    {
        "id": "3ddc8ec4b5d75af2",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "b85d6aca6a841215",
        "name": "Correction function",
        "func": "var import_correction;\n\nif (msg.topic == \"correction\")\n    {\n        import_correction = msg.payload;\n        global.set('F_SOLAR.import_correction',import_correction,\"file\");\n        \n        return null;\n    }\nelse\n    {\n    import_correction = global.get('F_SOLAR.import_correction',\"file\");   \n        if (import_correction === undefined) { import_correction = 1;}\n        \n        let msg1={};\n        msg1.payload = msg.payload;\n        \n        msg1.payload = Number(msg1.payload).toFixed(4);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.payload = Math.abs(msg1.payload);\n        \n        msg1.payload = msg1.payload * import_correction; \n        msg1.payload = Number(msg1.payload).toFixed(0);\n        msg1.topic = \"W\";\n        return msg1;\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "4896062be182fe15",
                "6c24c2f990c17968",
                "890a57ef3afcf284"
            ]
        ]
    },
    {
        "id": "6c24c2f990c17968",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "P1 Output - Power consumption (W)",
        "mode": "link",
        "links": [
            "c193dd7c180a36de",
            "d10277056d1d02fe",
            "9b92843d2d8873a3"
        ],
        "x": 1230,
        "y": 1060,
        "wires": [],
        "l": true
    },
    {
        "id": "4896062be182fe15",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "GRID power consumption W to kWh",
        "func": "let msg1 = {};\nlet msg2 = {};\nlet msg3 = {};\nlet msg4 = {};\nlet msg5 = {};\nlet msg6 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit = false;\n\n//  First run checks. If some variables are undefined, set current values and exit.\nif (PreviousTime === undefined) {context.set('PreviousTime',CurrentTime);       exit = true;}\nif (PreviousMessage === undefined) {context.set('PreviousMessage',msg.payload); exit = true;}\nif (PreviousTopic === undefined)  {context.set('PreviousTopic',msg.topic);    exit = true;}\n\nif (exit === true)        \n    {    return null;            // This output will automatically be skipped, next calculation will be ok.\n        \n    }\n\nelse\n    {\n        var LastMessage = msg.payload;\n        var LastTopic= msg.topic;\n        \n        var TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n        context.set('PreviousTime',CurrentTime);\n        context.set('PreviousMessage',msg.payload);\n        context.set('PreviousTopic',msg.topic);\n        msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n        msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n        \n        \n        msg1.payload = (TimeElapsed + \"  Seconds\");\n        var temp = parseFloat(TimeElapsed.toFixed(0));\n        msg2.payload = temp;\n        msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n        msg5.payload = (PreviousMessage * ( temp / 3600000 ));                  //  Calculation to Wh portion\n        Number(msg5.payload).toFixed(4);\n        msg5.topic = 'GRID power consumption kWh';                               // msg5 = latest kWh part.\n    \n    \n    ///////////////////////////////////////////////////////////////////////////\n    // Calculation from kWh part > total kWh of today\n        var total_kwh_import = flow.get(\"total_kwh_import\",\"file\");\n        if (total_kwh_import === undefined)         {total_kwh_import = 0;}\n        \n        msg6.payload = msg5.payload + total_kwh_import;                                // msg6 = kWh total from the start of operation\n        msg6.topic = 'GRID power consumption kWh';\n        msg6.payload = Number(msg6.payload).toFixed(3);\n        msg6.payload = parseFloat(msg6.payload);    \n        flow.set('total_kwh_import',msg6.payload,\"file\");\n        \n    ////////////////////////////////////////////////////////////////////////////\n        return msg6;\n    \n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1160,
        "wires": [
            [
                "13a19fc3eda5bac1",
                "3bd892e72c39999a"
            ]
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "13a19fc3eda5bac1",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "P1 Output - Power consumption (kWh)",
        "mode": "link",
        "links": [],
        "x": 1230,
        "y": 1160,
        "wires": [],
        "l": true
    },
    {
        "id": "bc0aeeb8c2000e65",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "Expected input is a value in Watt or kiloWatt.",
        "info": "",
        "x": 310,
        "y": 880,
        "wires": []
    },
    {
        "id": "b3e73f9e4ae539cb",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "GRID CONSUMPTION IMPORT (OPTIONAL)",
        "info": "",
        "x": 310,
        "y": 840,
        "wires": []
    },
    {
        "id": "370731d4b4d4b62b",
        "type": "comment",
        "z": "966985d68ebb4990",
        "name": "Instruction",
        "info": "",
        "x": 1580,
        "y": 60,
        "wires": []
    },
    {
        "id": "39a4db5e9a226488",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "b7f22c282fde0f86",
        "order": 16,
        "width": 9,
        "height": 1,
        "name": "DHW (PV)",
        "label": "DHW temperature actual",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 550,
        "y": 2340,
        "wires": []
    },
    {
        "id": "28c7a4a25703f3c5",
        "type": "ui_switch",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Solar",
        "label": "",
        "tooltip": "",
        "group": "e3cc96332cd59f07",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 530,
        "y": 1860,
        "wires": [
            [
                "200de001362093f8"
            ]
        ]
    },
    {
        "id": "67fe5d78fed38255",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "e3cc96332cd59f07",
        "order": 11,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Solar²DHW",
        "format": "<font color= {{msg.color}} > {{msg.state}}  </font>",
        "layout": "row-spread",
        "className": "",
        "x": 690,
        "y": 1780,
        "wires": []
    },
    {
        "id": "200de001362093f8",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 750,
        "y": 1880,
        "wires": [
            [
                "28c7a4a25703f3c5",
                "f3f4f51165a33ae4",
                "7bc1cea7963d95f8",
                "b866c59ce44f1281"
            ]
        ]
    },
    {
        "id": "87da7c125b68ad72",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "detection_method",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 2080,
        "wires": [
            [
                "608ac27952261ad4"
            ]
        ]
    },
    {
        "id": "b463820910564b36",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "F_stored_next_operating_mode",
        "func": "if  (msg.payload == 99) \n    { global.set(\"F_stored_next_operating_mode\",undefined,\"file\"); }\nelse \n    { global.set(\"F_stored_next_operating_mode\",msg.payload,\"file\"); }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3080,
        "wires": [
            []
        ],
        "outputLabels": [
            "log"
        ]
    },
    {
        "id": "687eabbba19e80ad",
        "type": "delay",
        "z": "966985d68ebb4990",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 3080,
        "wires": [
            [
                "b463820910564b36"
            ]
        ]
    },
    {
        "id": "1d3c07584a88352f",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 3120,
        "wires": [
            [
                "44ebd91968d94cfe"
            ]
        ]
    },
    {
        "id": "86d4881128cac5a7",
        "type": "comment",
        "z": "966985d68ebb4990",
        "name": "Solar functie deactivate",
        "info": "",
        "x": 340,
        "y": 3040,
        "wires": []
    },
    {
        "id": "7bc1cea7963d95f8",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Function - Solar",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 1880,
        "wires": [
            [
                "8e16d1ef3e972c95",
                "74d748cdb9ede767"
            ]
        ]
    },
    {
        "id": "8e16d1ef3e972c95",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "81ff790f84afd46d",
        "name": "",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1265,
        "y": 1880,
        "wires": []
    },
    {
        "id": "1b0aafd65d5593dd",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "to log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1085,
        "y": 2980,
        "wires": []
    },
    {
        "id": "cd437e0a80c22bc0",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Function - Production - Consumption (kWh)",
        "func": "let msg1={};                    // pin 1 - todays_result            Chart 1\nlet msg2={};                    // pin 2 - export_result                Chart 2\nlet msg3={};                    // pin 3 - import_result                Chart 2\nlet msg4={};                    // pin 4 - todays_result                Chart 2\nlet msg5={};                    // power result threshold\nlet msg6={};                    // limits ui_control\n\n\n\n////////// EXPORT\nvar start_today_export = flow.get(\"start_today_export\",\"file\");\nif (start_today_export === undefined) {start_today_export = 0}\n\nvar total_kwh_export = flow.get(\"total_kwh_export\",\"file\");\nif (total_kwh_export === undefined) {total_kwh_export = 0}\n\nvar export_result = total_kwh_export - start_today_export;                      // negative value = export\n\n\n////////// IMPORT\nvar start_today_import = flow.get(\"start_today_import\",\"file\");\nif (start_today_import === undefined) {start_today_import = 0}\n\nvar total_kwh_import = flow.get(\"total_kwh_import\",\"file\");\nif (total_kwh_import === undefined) {total_kwh_import = 0}\n\nvar import_result =  total_kwh_import - start_today_import;                     // positive value = import\n\n\n////////// TODAY\nvar todays_result = import_result + export_result;                              // result\n\nif (todays_result <= 0 || todays_result > 0)\n    {\n        msg1.topic      = \"Result\";\n        msg1.payload    = todays_result;\n        msg1.payload    = Number(msg1.payload).toFixed(2);\n        msg1.payload    = parseFloat(msg1.payload);\n        \n        msg2.payload    = export_result;\n        msg2.payload    = Number(msg2.payload).toFixed(2);\n        msg2.payload    = parseFloat(msg2.payload);\n        msg2.topic      = \"Export\";\n        \n        msg3.payload    = import_result;\n        msg3.payload    = Number(msg3.payload).toFixed(2);\n        msg3.payload    = parseFloat(msg3.payload);\n        msg3.topic      = \"Import\";\n        \n        var F_SOLAR     = global.get('F_SOLAR',\"file\");\n        var array = flow.get('chart_solar_todays_result',\"file\")\n        \n        \n        if (array === undefined) { \n            return [[msg1,null],[msg2,msg3,msg1]];\n        }\n        if (array.payload[0] === undefined) { \n            return [[msg1,null],[msg2,msg3,msg1]];\n        }\n\n        else {\n            array = array.payload[0].data[0];\n            \n            if (F_SOLAR.detection_method == 'kWh_result'){\n                msg5.payload    = F_SOLAR.threshold;\n                msg5.payload    = Number(msg5.payload).toFixed(1);\n                msg5.payload    = parseFloat(msg5.payload);\n                msg5.topic      = 'Threshold';\n    \n                msg6 = {ui_control:{ymin:Math.floor(Math.min(msg5.payload, Math.floor(Math.min(...array.map(o => o.y)))))-1, ymax:Math.ceil(Math.max(...array.map(o => o.y))) +1}};\n                \n                return [[msg1,msg5,msg6],[msg2,msg3,msg1]];\n            }\n            \n            msg6 = {ui_control:{ymin:Math.floor(Math.floor(Math.min(...array.map(o => o.y))))-1, ymax:Math.ceil(Math.max(...array.map(o => o.y))) +1}};\n            \n            return [[msg1,msg6],[msg2,msg3,msg1]];\n        }\n    }\nelse {return null;}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1520,
        "wires": [
            [
                "88d0285e2915c5d9",
                "65b8f729748b5ecc"
            ],
            [
                "80ef562075a4181e",
                "1a198a8a916f8d78"
            ]
        ],
        "outputLabels": [
            "todays_result",
            "export_result"
        ]
    },
    {
        "id": "65b8f729748b5ecc",
        "type": "ui_chart",
        "z": "966985d68ebb4990",
        "name": "",
        "group": "2bd11d2d909e2ba3",
        "order": 8,
        "width": 10,
        "height": 7,
        "label": "Today's result (kWh)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Waiting for data ...  (will start at midnight) ",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#7f8389",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4",
            "#1f77b4"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 1520,
        "wires": [
            [
                "7dacecebd1d1ac1b"
            ]
        ]
    },
    {
        "id": "16bb5c2934ec3068",
        "type": "inject",
        "z": "966985d68ebb4990",
        "d": true,
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 1080,
        "y": 1560,
        "wires": [
            [
                "65b8f729748b5ecc"
            ]
        ]
    },
    {
        "id": "44925c267016b3f7",
        "type": "link in",
        "z": "966985d68ebb4990",
        "name": "",
        "links": [
            "39f8d3463d10ccfb",
            "75c312c1494fea2e"
        ],
        "x": 65,
        "y": 1560,
        "wires": [
            [
                "514fddfab201e633"
            ]
        ]
    },
    {
        "id": "8f12203bf931d988",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "233708268636f815",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "x": 250,
        "y": 1400,
        "wires": [
            [
                "4d12c082bff0d9a8"
            ]
        ]
    },
    {
        "id": "cf528e5358dce9df",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "233708268636f815",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "start",
        "x": 250,
        "y": 1360,
        "wires": [
            [
                "4d12c082bff0d9a8"
            ]
        ]
    },
    {
        "id": "4d12c082bff0d9a8",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "233708268636f815",
        "name": "Function schedule import",
        "func": "\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\nvar start_today_import  = flow.get(\"start_today_import\",\"file\");                //\nvar total_kwh_import    = flow.get('total_kwh_import',\"file\");                  //\nvar F_SOLAR             = global.get('F_SOLAR',\"file\");                         //\n\nif (total_kwh_import === undefined) {total_kwh_import = msg.payload;}\nif (total_kwh_import === undefined) {total_kwh_import = 0;}\n\n\n\nif (start_today_import === undefined)\n    {\n        start_today_import = total_kwh_import;\n        flow.set(\"start_today_import\",total_kwh_import,\"file\");\n    }   \nif (msg.topic == \"time\" && F_SOLAR.state == 0)                                                        // When @ midnight, reset start_today_import to 0.\n    {\n\n        global.set(\"F_SOLAR.function_active_state\",0,\"file\");        \n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        if (total_kwh_import !== undefined)\n            {\n                flow.set('start_today_import',total_kwh_import,\"file\");\n            }\n                return [msg,null,null];\n    }\nif (msg.topic == \"time\" && F_SOLAR.state == 1)                                                        // When @ midnight, reset start_today_import to 0.\n    {\n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        if (total_kwh_import !== undefined)\n            {\n                flow.set('start_today_import',total_kwh_import,\"file\");\n            }\n\n        else \n            {\n                return [msg];\n            }\n    }\n//if (msg.topic == \"start\" && F_SOLAR.state == 1)\nif (msg.topic == \"start\")\n    {\n        let msg1={};\n        \n        msg1.payload = total_kwh_import - start_today_import;\n        msg1.payload = Number(msg1.payload).toFixed(2);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.topic = \"kWh\";\n        return [msg1];\n    }\nelse\n    {\n        var until_now       =   (msg.payload - start_today_import);            // calculate todays production in kWh\n        msg.payload = until_now;\n        msg.payload = Number(msg.payload).toFixed(2);\n        msg.payload = parseFloat(msg.payload);\n        msg.topic = \"kWh\";\n        return [msg];\n    }\n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1320,
        "wires": [
            [
                "75c312c1494fea2e"
            ]
        ],
        "outputLabels": [
            "kWh today"
        ]
    },
    {
        "id": "3bd892e72c39999a",
        "type": "no-op",
        "z": "966985d68ebb4990",
        "g": "233708268636f815",
        "name": "IN",
        "x": 250,
        "y": 1320,
        "wires": [
            [
                "4d12c082bff0d9a8"
            ]
        ]
    },
    {
        "id": "2b03f7e8408f5f56",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "2bd11d2d909e2ba3",
        "name": "Line - Charts",
        "order": 6,
        "width": 14,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "75c312c1494fea2e",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "P1 Output - Power consumption Today (kWh)",
        "mode": "link",
        "links": [
            "44925c267016b3f7",
            "c193dd7c180a36de"
        ],
        "x": 1210,
        "y": 1320,
        "wires": [],
        "l": true
    },
    {
        "id": "edf195c89ff83486",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "P1 Output - Power production (kWh)",
        "mode": "link",
        "links": [],
        "x": 1190,
        "y": 440,
        "wires": [],
        "l": true
    },
    {
        "id": "40abfbbe563b32ac",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "2efa0af27c69d4d0",
        "name": "",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 885,
        "y": 640,
        "wires": [],
        "inputLabels": [
            "to log"
        ]
    },
    {
        "id": "4eef204ba842c2fa",
        "type": "comment",
        "z": "966985d68ebb4990",
        "name": "1 - connect your p1 power meter (production) to the grey node",
        "info": "",
        "x": 1720,
        "y": 120,
        "wires": []
    },
    {
        "id": "9765c40bf881d992",
        "type": "ui_gauge",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Live Gauge",
        "group": "2bd11d2d909e2ba3",
        "order": 1,
        "width": 4,
        "height": 5,
        "gtype": "gage",
        "title": "Power live",
        "label": "{{msg.topic}}",
        "format": "{{value}} W",
        "min": "-5000",
        "max": "4000",
        "colors": [
            "#f59b56",
            "#de425b",
            "#de425b"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 550,
        "y": 2540,
        "wires": []
    },
    {
        "id": "80ef562075a4181e",
        "type": "ui_chart",
        "z": "966985d68ebb4990",
        "name": "Bar Chart import_export_result",
        "group": "2bd11d2d909e2ba3",
        "order": 7,
        "width": 4,
        "height": 7,
        "label": "Today (kWh)",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for data ...  (will start at midnight) ",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f59b56",
            "#de425b",
            "#1f77b4",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 1620,
        "wires": [
            [
                "47d9da722231d15b"
            ]
        ]
    },
    {
        "id": "ecb6c9034ddc15d4",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 1080,
        "y": 1660,
        "wires": [
            [
                "80ef562075a4181e"
            ]
        ]
    },
    {
        "id": "9c0c527bd2fd1a7b",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "group": "b7f22c282fde0f86",
        "order": 18,
        "width": 9,
        "height": 1,
        "name": "Current status",
        "label": "Current status",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-spread",
        "className": "",
        "x": 880,
        "y": 3140,
        "wires": []
    },
    {
        "id": "cee35b0a1e2da0ea",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "",
        "func": "var F_SOLAR                         = global.get('F_SOLAR',\"file\");\n\n\nvar solar_function_status1          = flow.get('solar_function_status1',\"file\");\nvar solar_function_status2          = flow.get('solar_function_status2',\"file\");\n\nif (msg.payload == \"new_day\")\n    {\n        flow.set('solar_function_status1',undefined,\"file\");\n        flow.set('solar_function_status2',undefined,\"file\");\n        global.set ('F_SOLAR.function_active_state',0,\"file\");\n        return null;\n    }\nelse\n{\n    let msg1={};\n    if (F_SOLAR.function_active_state == 0 || F_SOLAR.function_active_state === undefined) \n        {\n            msg1.payload = \"Idle\";\n            msg1.topic = 'Solar function status';\n            msg1.color = \"\";\n            return [msg1];\n        }\n    if (F_SOLAR.function_active_state == 1)\n        {\n            if (solar_function_status1 !== undefined)\n                {\n                    msg1.payload = solar_function_status1;\n                }\n            if (solar_function_status1 === undefined)\n                {\n                    msg1.payload = \"ACTIVE (\" + msg.payload + \")\";\n                    flow.set('solar_function_status1',msg1.payload,\"file\");\n                }\n            msg1.topic = 'Solar function status';\n            msg1.color = \"gold\";\n            return [msg1];\n        }\n    if (F_SOLAR.function_active_state == 2)\n        {\n            if (solar_function_status2 !== undefined)\n                {\n                    msg1.payload = solar_function_status2;\n                }\n            if (solar_function_status2 === undefined)\n                {\n                    msg1.payload = \"Completed (\" + msg.payload + \")\";\n                    flow.set('solar_function_status2',msg1.payload,\"file\");\n                }\n            msg1.topic = 'Solar function status';\n            msg1.color = \"green\";\n            return [msg1];\n        }        \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 3140,
        "wires": [
            [
                "85461bac19f80e72"
            ]
        ]
    },
    {
        "id": "85461bac19f80e72",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 710,
        "y": 3140,
        "wires": [
            [
                "9c0c527bd2fd1a7b",
                "78f070a993f73c0c"
            ]
        ]
    },
    {
        "id": "44ebd91968d94cfe",
        "type": "moment",
        "z": "966985d68ebb4990",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 380,
        "y": 3120,
        "wires": [
            [
                "cee35b0a1e2da0ea"
            ]
        ]
    },
    {
        "id": "052d06709637dc81",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "new_day",
        "payloadType": "str",
        "x": 410,
        "y": 3160,
        "wires": [
            [
                "cee35b0a1e2da0ea"
            ]
        ]
    },
    {
        "id": "460148df6a225d24",
        "type": "smooth",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "property": "payload",
        "action": "max",
        "count": "10",
        "round": "0",
        "mult": "single",
        "reduce": true,
        "x": 660,
        "y": 2620,
        "wires": [
            [
                "5c90f480e0f6e8ac"
            ]
        ]
    },
    {
        "id": "5c90f480e0f6e8ac",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "func": "\nvar value = msg.payload;\nif (value < 0) {value = -1 * value;}        // get rid of a minus \nvalue = value + 600;                        // manipulate the rounding a bit\nvalue = Math.round(value/1000)*1000;        // the rounding itself\n\n\n\n\n\nvar current_gauge_limits = flow.get('solar_gauge_min_max_value');\nif (current_gauge_limits === undefined)\n    {\n        current_gauge_limits = flow.get('solar_gauge_min_max_value',\"file\");\n    }\n\nif (value > current_gauge_limits || current_gauge_limits === undefined)\n    {\n    flow.set('solar_gauge_min_max_value',value,\"file\");\n    flow.set('solar_gauge_min_max_value',value);\n    }\n\nlet msg1={};\nlet msg2={};\nlet msg3={};\nlet msg4={};\nlet msg5={};\n\n\nmsg1 = {ui_control:{max:current_gauge_limits}};\nmsg2 = {ui_control:{min:(-1 * current_gauge_limits)}};\nmsg3 = {ui_control:{seg1:0, seg2:0}};\nmsg4 = {ui_control:{ymin:(-1 * current_gauge_limits)}};\nmsg5 = {ui_control:{ymax:current_gauge_limits}};\n\n\n\nreturn [msg1,msg2,msg3,msg4,msg5];\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 2660,
        "wires": [
            [
                "d6bf90086794b1ac"
            ],
            [
                "d6bf90086794b1ac"
            ],
            [
                "d6bf90086794b1ac"
            ],
            [
                "77e1377aea412936"
            ],
            [
                "77e1377aea412936"
            ]
        ],
        "outputLabels": [
            "max",
            "min",
            "seg",
            "",
            ""
        ]
    },
    {
        "id": "d4b0a313434a3fd9",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "start",
        "payload": "50",
        "payloadType": "num",
        "x": 660,
        "y": 2660,
        "wires": [
            [
                "5c90f480e0f6e8ac"
            ]
        ]
    },
    {
        "id": "803505e9e8372578",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Chart - Live Gauge",
        "links": [
            "d6bf90086794b1ac"
        ],
        "x": 365,
        "y": 2580,
        "wires": [
            [
                "9765c40bf881d992"
            ]
        ]
    },
    {
        "id": "d6bf90086794b1ac",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "mode": "link",
        "links": [
            "803505e9e8372578"
        ],
        "x": 935,
        "y": 2640,
        "wires": []
    },
    {
        "id": "c0ee68059878b294",
        "type": "smooth",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "property": "payload",
        "action": "min",
        "count": "10",
        "round": "0",
        "mult": "single",
        "reduce": true,
        "x": 660,
        "y": 2700,
        "wires": [
            [
                "5c90f480e0f6e8ac"
            ]
        ]
    },
    {
        "id": "45de8d4b61f74361",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Chart Power history (W)",
        "links": [
            "77e1377aea412936",
            "c921d9cfc05712ec"
        ],
        "x": 375,
        "y": 2480,
        "wires": [
            [
                "bdd8cc1b7fb80f3f"
            ]
        ]
    },
    {
        "id": "77e1377aea412936",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "mode": "link",
        "links": [
            "45de8d4b61f74361"
        ],
        "x": 935,
        "y": 2680,
        "wires": []
    },
    {
        "id": "5f2ca6fd7cf3d5c5",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload < 0)\n{\n    msg.topic = 'Production'\n}\n\nif (msg.payload > 0)\n{\n    msg.topic = 'Consumption'\n}\nif (msg.payload === NaN)\n    {\n        return null;\n    }\nelse\n{\n    return msg;        \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2540,
        "wires": [
            [
                "9765c40bf881d992",
                "460148df6a225d24",
                "c0ee68059878b294"
            ]
        ]
    },
    {
        "id": "cb712c05b08bf433",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1130,
        "y": 3160,
        "wires": [
            [
                "b463820910564b36"
            ]
        ]
    },
    {
        "id": "623dc28b8a4cccdd",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "b7f22c282fde0f86",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "Spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 1820,
        "wires": []
    },
    {
        "id": "8f06615b7f974a19",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "b7f22c282fde0f86",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "Spacer 6",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 940,
        "y": 1820,
        "wires": []
    },
    {
        "id": "88d0285e2915c5d9",
        "type": "link out",
        "z": "966985d68ebb4990",
        "name": "kWh Result",
        "mode": "link",
        "links": [
            "c193dd7c180a36de"
        ],
        "x": 735,
        "y": 1500,
        "wires": []
    },
    {
        "id": "941e2e6b17a45171",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "kWh_prod",
                "fromt": "str",
                "to": "kWh",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "kWh_result",
                "fromt": "str",
                "to": "kWh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 2080,
        "wires": [
            [
                "87da7c125b68ad72"
            ]
        ]
    },
    {
        "id": "add57b730a3e769f",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "5256af8b7309c113"
            ]
        ]
    },
    {
        "id": "af24696818983d4c",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 420,
        "wires": [
            [
                "5256af8b7309c113"
            ]
        ]
    },
    {
        "id": "63bcc91caacdcf55",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "9",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "3ddc8ec4b5d75af2"
            ]
        ]
    },
    {
        "id": "0b2d388baee905a4",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 1140,
        "wires": [
            [
                "3ddc8ec4b5d75af2"
            ]
        ]
    },
    {
        "id": "37178acf2fda2d9d",
        "type": "delay",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 2900,
        "wires": [
            [
                "70753620fd42401f"
            ]
        ]
    },
    {
        "id": "78507acac200e031",
        "type": "delay",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 2860,
        "wires": [
            [
                "e62a354ce682ea6f"
            ]
        ]
    },
    {
        "id": "4f0d0fe30d09e055",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 1190,
        "y": 3200,
        "wires": [
            [
                "b463820910564b36"
            ]
        ]
    },
    {
        "id": "437ef6d2304bdd10",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1090,
        "y": 3120,
        "wires": [
            [
                "b463820910564b36"
            ]
        ]
    },
    {
        "id": "bd079d704c31d5a7",
        "type": "ui_button",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "group": "2bd11d2d909e2ba3",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset scale",
        "tooltip": "Press and wait 5 minutes for the chart to update. This RESET impactes Power Live and Power History chart only.",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 670,
        "y": 2740,
        "wires": [
            [
                "a8beed6bcea8ec08"
            ]
        ]
    },
    {
        "id": "a8beed6bcea8ec08",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "func": "flow.set('solar_gauge_min_max_value',undefined,\"file\");\nflow.set('solar_gauge_min_max_value',undefined);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 2740,
        "wires": []
    },
    {
        "id": "5fb3c7be3b428b42",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "2bd11d2d909e2ba3",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "Spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1000,
        "y": 2740,
        "wires": []
    },
    {
        "id": "ac392c197fe09917",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "group": "2bd11d2d909e2ba3",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "Spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 980,
        "y": 2720,
        "wires": []
    },
    {
        "id": "37aa061ab91471ec",
        "type": "ui_dropdown",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "dropdown import",
        "label": "",
        "tooltip": "Import correction",
        "place": "Select option",
        "group": "338420d1319e8350",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "1000",
                "value": 1000,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 390,
        "y": 1020,
        "wires": [
            [
                "8aa8fe1b9cd61f3c"
            ]
        ]
    },
    {
        "id": "890a57ef3afcf284",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "group": "338420d1319e8350",
        "order": 7,
        "width": 9,
        "height": 1,
        "name": "result import",
        "label": "Outcome after correction *",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 1060,
        "wires": []
    },
    {
        "id": "856711de93142cb9",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "group": "338420d1319e8350",
        "order": 4,
        "width": 9,
        "height": 1,
        "name": "raw value import",
        "label": "P1 raw consumption value",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 980,
        "wires": []
    },
    {
        "id": "8aa8fe1b9cd61f3c",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "correction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1020,
        "wires": [
            [
                "3ddc8ec4b5d75af2"
            ]
        ]
    },
    {
        "id": "7f9c4451a116b794",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "group": "338420d1319e8350",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "import correction txt",
        "label": "Correction factor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 190,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e5a024baed5f8a58",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "group": "338420d1319e8350",
        "name": "Line - Setup  import",
        "order": 3,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Consumption setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "26c4d827da98fd56",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "name": "Line - Setup export",
        "order": 8,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Production setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ce787867699a6a50",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "order": 12,
        "width": 9,
        "height": 1,
        "name": "result export",
        "label": "Outcome after correction **",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 470,
        "y": 280,
        "wires": []
    },
    {
        "id": "f58197b3d1d9d1d0",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "order": 9,
        "width": 9,
        "height": 1,
        "name": "raw value export",
        "label": "P1 raw production value",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 480,
        "y": 200,
        "wires": []
    },
    {
        "id": "d31bb33a7ab5445e",
        "type": "change",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "correction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 240,
        "wires": [
            [
                "5256af8b7309c113"
            ]
        ]
    },
    {
        "id": "1c7292b507901827",
        "type": "ui_dropdown",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "dropdown export",
        "label": "",
        "tooltip": "Export correction",
        "place": "Select option",
        "group": "338420d1319e8350",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "1000",
                "value": 1000,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 490,
        "y": 240,
        "wires": [
            [
                "d31bb33a7ab5445e"
            ]
        ]
    },
    {
        "id": "a9efc23cf56dc231",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "order": 10,
        "width": 7,
        "height": 1,
        "name": "export correction txt",
        "label": "Correction factor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 250,
        "y": 240,
        "wires": []
    },
    {
        "id": "f4563963b2c49d22",
        "type": "comment",
        "z": "966985d68ebb4990",
        "name": "2 - connect your p1 power meter (consumption) to the grey node. (this is optional)",
        "info": "",
        "x": 1780,
        "y": 160,
        "wires": []
    },
    {
        "id": "a9994ef2e592aee1",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.015",
        "payloadType": "num",
        "x": 690,
        "y": 820,
        "wires": [
            [
                "375bbd780529afe0"
            ]
        ]
    },
    {
        "id": "59e73e3a2c2985fa",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.015",
        "payloadType": "num",
        "x": 710,
        "y": 60,
        "wires": [
            [
                "88ea0371f9cecd37"
            ]
        ]
    },
    {
        "id": "375bbd780529afe0",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1230,
        "y": 860,
        "wires": [
            [
                "3ddc8ec4b5d75af2",
                "856711de93142cb9"
            ]
        ]
    },
    {
        "id": "88ea0371f9cecd37",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "f58197b3d1d9d1d0",
                "5256af8b7309c113"
            ]
        ]
    },
    {
        "id": "8ba23174457c635d",
        "type": "ui_template",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "name": "Line - Setup export",
        "order": 13,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Note:</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "4aa1e7a1e212ad06",
        "type": "ui_text",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "group": "338420d1319e8350",
        "order": 14,
        "width": 9,
        "height": 3,
        "name": "note text",
        "label": "Only live values are shown in \"P1 raw xx value\". You need to wait for consumption / production value to be received from P1 to know for sure what the result is.<br><br>*  Energy consumption is a positive value. <br>** Energy production is a negative value.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 220,
        "y": 360,
        "wires": []
    },
    {
        "id": "153d971fff0a3ed3",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Store chart",
        "func": "var myArray = msg;\nflow.set(\"chart_solar_power_history\", myArray,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "cc71fabeef44a7fe",
        "type": "inject",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 2680,
        "wires": [
            [
                "19e1b78cc7d0e897"
            ]
        ]
    },
    {
        "id": "19e1b78cc7d0e897",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Restore chart",
        "func": "let msg1={};\nmsg1 = flow.get(\"chart_solar_power_history\",\"file\");\n\nif (msg1 === undefined)\n    {\n        return null;\n    }\n    \nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2740,
        "wires": [
            [
                "c921d9cfc05712ec"
            ]
        ]
    },
    {
        "id": "c921d9cfc05712ec",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "45de8d4b61f74361"
        ],
        "x": 485,
        "y": 2740,
        "wires": []
    },
    {
        "id": "b9947e738c3857dd",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Restore chart",
        "func": "let msg1={};\nmsg1 = flow.get(\"chart_solar_todays_result\",\"file\");\nif (msg1 === undefined)\n    {return null;}\nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1620,
        "wires": [
            [
                "65b8f729748b5ecc"
            ]
        ]
    },
    {
        "id": "2590f42325cddaa0",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1620,
        "wires": [
            [
                "b9947e738c3857dd",
                "74c43f1541cb9220"
            ]
        ]
    },
    {
        "id": "241a32186671a626",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Store chart",
        "func": "var myArray = msg;\nflow.set(\"chart_solar_todays_result\", myArray,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "74c43f1541cb9220",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Restore chart",
        "func": "let msg1={};\nmsg1 = flow.get(\"chart_solar_import_export_result\",\"file\");\nif (msg1 === undefined)\n    {return null;}\nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1660,
        "wires": [
            [
                "80ef562075a4181e"
            ]
        ]
    },
    {
        "id": "67613761035e311d",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "Store chart",
        "func": "var myArray = msg;\nflow.set(\"chart_solar_import_export_result\", myArray,\"file\");",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "58f4dcb609fc506a",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "kWh triggers",
        "func": "var MQTT = global.get('MQTT', \"file\");\nif (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_solar == 1)) {\n\n    var F_SOLAR = global.get('F_SOLAR', \"file\");\n    if (F_SOLAR === undefined) { return null; }\n\n    if (F_SOLAR.state == 1) {\n        var TOP4_Operating_Mode_State = global.get('TOP4_Operating_Mode_State', \"file\");\n        var new_Operating_Mode_State;       // just create a variable, empty.\n        var old_Operating_Mode_State;       // just create a variable, empty.\n        var DHW_Current_SP = global.get('TOP9_DHW_Target_Temp', \"file\");\n        var TOP0_Heatpump_State = global.get('TOP0_Heatpump_State', \"file\");\n        var F_stored_next_operating_mode = global.get('F_stored_next_operating_mode', \"file\");\n        let msg1 = {};                                                                // pin 1 - output to DHW setpoint\n        msg1.topic = 'Solar function';                                          // This topic is required to alow the managers.\n        let msg2 = {};                                                                // pin 2 - output to Operation Mode\n        let msg3 = {};                                                                // pin 3 - output to turn on power to heatpump.\n        let msg99 = {};                                                               // pin 4 - output to log\n        msg99.topic = \"Function Solar\";\n        //  return [msg1,msg2,msg3,msg99]\n\n        // Check if all required states are available.\n        if (F_SOLAR.detection_method === undefined || F_SOLAR.threshold === undefined || F_SOLAR.fallback === undefined || F_SOLAR.dhw_sp_high === undefined || TOP4_Operating_Mode_State === undefined || F_SOLAR.power_override === undefined || TOP0_Heatpump_State === undefined) {\n            msg99.payload = \"ERROR: Not all settings in 'Function Solar' are programmed in GUI yet.\";\n            return [null, null, null, msg99];                                       // log output\n        }\n        if (global.get('Sterilization_active', \"file\") == 1) { return null; }\n\n        else {\n            //              msg.topic = \"W\";            < > nul\n            //              msg.topic = 'GRID power production kWh';\n            //              msg.topic = 'GRID power consumption kWh';\n            //              msg.topic = '(+) Import (-) Export';\n\n            //Threshold\n            //  kW\n            //  kWh_prod\n            //  kWh_result\n            //\n            // getting rid of all messages which are not related to the selected detection method.\n            //\n            if (F_SOLAR.detection_method == \"kW\" && msg.topic != 'W') { return null; }\n            if (F_SOLAR.detection_method == \"kWh_prod\" && msg.topic != 'Export') { return null; }\n            if (F_SOLAR.detection_method == \"kWh_result\" && msg.topic != 'Result') { return null; }\n            if (msg.payload == 0) { return null; }\n\n            //  convert the W signal to kW so that the value (threshold) are similar.\n            if (F_SOLAR.detection_method == \"kW\") { msg.payload = msg.payload / 1000; }\n\n\n\n\n            // ACTIONS WHEN THE SOLAR FUNCTION IS TRIGGERED FOR START-UP.\n            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n            //  Note: (F_SOLAR.threshold > (msg.payload) >>> msg.payload is negative number if energy production is high.\n            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n            //\n            if (F_SOLAR.threshold > (msg.payload) && F_SOLAR.function_active_state == 0) {\n                // Operating mode READ (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                // Operating mode SET (0=Heat only, 1=Cool only, 2=Auto, 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto+DHW\n\n                // new_Operating_Mode_State = 3; old_Operating_Mode_State = TOP4_Operating_Mode_State;\n\n                if (TOP4_Operating_Mode_State == 0) { new_Operating_Mode_State = 4; old_Operating_Mode_State = 0 } // add DHW modus\n                if (TOP4_Operating_Mode_State == 1) { new_Operating_Mode_State = 5; old_Operating_Mode_State = 1 } // add DHW modus\n                if (TOP4_Operating_Mode_State == 2) { new_Operating_Mode_State = 6; old_Operating_Mode_State = 2 } // add DHW modus\n                if (TOP4_Operating_Mode_State == 3) { new_Operating_Mode_State = 3; old_Operating_Mode_State = 3 } \n                if (TOP4_Operating_Mode_State == 4) { new_Operating_Mode_State = 4; old_Operating_Mode_State = 4 } \n                if (TOP4_Operating_Mode_State == 5) { new_Operating_Mode_State = 5; old_Operating_Mode_State = 5 } \n                if (TOP4_Operating_Mode_State == 6) { new_Operating_Mode_State = 6; old_Operating_Mode_State = 6 } \n                if (TOP4_Operating_Mode_State == 7) { new_Operating_Mode_State = 6; old_Operating_Mode_State = 2 } // add DHW modus\n                if (TOP4_Operating_Mode_State == 8) { new_Operating_Mode_State = 6; old_Operating_Mode_State = 6 } // prevent undefined new_Operating_Mode_State\n\n                var tag;    // declare variable for tag in log line.\n                if (F_SOLAR.detection_method == \"kW\") { tag = 'kW'; }\n                if (F_SOLAR.detection_method == \"kWh_prod\") { tag = \"Today's export (kWh)\"; }\n                if (F_SOLAR.detection_method == \"kWh_result\") { tag = \"kWh todays result\"; }\n\n                if (TOP0_Heatpump_State == 0 && F_SOLAR.power_override == 0) {\n                    msg99.payload = \"Solar threshold reached but no action fired! (Heat pump is off, 'Allow switch on heat pump' is disabled.)\";\n                    return ([null, null, null, msg99]);\n                }\n\n                if (F_stored_next_operating_mode === undefined) {\n                    global.set('F_stored_next_operating_mode', old_Operating_Mode_State, \"file\");\n                    msg99.payload = 'Stored next operating mode is set to ' + old_Operating_Mode_State ; node.send([null,null,null,msg99]); \n\n                }\n\n                // msg3///////////////////////////////////////////////////////////////////////////////////////////////////////\n                // Turn on heatpump in case it is off\n                if (TOP0_Heatpump_State == 0 && F_SOLAR.power_override == 1) {\n                    msg99.payload = \"Turn on Heatpump\";\n                    msg3.payload = 1; msg3.source = \"flow\";                                           // send 1 to turn on the heatpump\n                    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Solar\"); }\n                    node.send([null, null, msg3, null])\n                }\n\n\n\n                // msg1///////////////////////////////////////////////////////////////////////////////////////////////////////\n                // Set DHW setpoint to high\n                if (DHW_Current_SP != F_SOLAR.dhw_sp_high) {\n                    msg1.payload = F_SOLAR.dhw_sp_high;\n                    msg99.payload = \"triggered threshold (\" + tag + \"). DHW SP to \" + F_SOLAR.dhw_sp_high;\n                    node.send([msg1, null, null, msg99]);\n                }\n\n                // msg2///////////////////////////////////////////////////////////////////////////////////////////////////////\n                // Set Operation Mode\n                if (new_Operating_Mode_State != old_Operating_Mode_State && old_Operating_Mode_State !== undefined) {\n                    msg2.payload = new_Operating_Mode_State;\n                    msg99.payload = \"Operation mode changed from \" + old_Operating_Mode_State + \" to \" + new_Operating_Mode_State;\n                    node.send([null, msg2, null, msg99]);\n                }\n                global.set('F_RTC.automation_active', 0, \"file\");\n                if (F_SOLAR.function_active_state != 1) {\n                    global.set(\"F_SOLAR.function_active_state\", 1, \"file\");\n                    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Solar\"); }\n                    return null;\n                }\n            }\n\n\n\n\n            // ACTIONS WHEN THE SOLAR FUNCTION IS TRIGGERED FOR ENDING.\n            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n            //\n            if (msg.payload > 0 && F_SOLAR.detection_method == \"kW\" && DHW_Current_SP == F_SOLAR.dhw_sp_high && F_SOLAR.fallback == 1 && F_SOLAR.function_active_state == 1) {\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Solar\"); }\n                msg1.payload = F_SOLAR.dhw_sp_low;\n                msg99.payload = \"triggered threshold (\" + tag + \"). Above 0kWh threshold. DHW SP to \" + F_SOLAR.dhw_sp_low;\n                global.set(\"F_SOLAR.function_active_state\", 0, \"file\");\n                node.send([msg1, null, null, msg99]);\n                return null;\n            }\n\n            //TOP9_DHW_Target_Temp\n            // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\n            var TOP10_DHW_Temp = global.get('TOP10_DHW_Temp');\n            var TOP20_ThreeWay_Valve_State = global.get('TOP20_ThreeWay_Valve_State');       // threewayvalvue 1 = DHW, 0 = HEAT\n\n            if (TOP10_DHW_Temp >= F_SOLAR.dhw_sp_high && F_SOLAR.function_active_state == 1) {\n                /////////////////////////// \n\n                msg99.payload = \"DHW temperature has reached SP high\";\n                node.send([null, null, null, msg99])\n\n                let myTimeout = setTimeout(f_rollbackaction, F_SOLAR.delay_after_completion * 60 * 1000);                 // <<<<<<<<<<<<<<<<  DELAY \n                node.status({ fill: \"red\", shape: \"ring\", text: \"\" });\n\n                function f_rollbackaction() {\n                    var F_stored_next_operating_mode = global.get('F_stored_next_operating_mode', \"file\");\n\n                    var F_SOLAR = global.get('F_SOLAR', \"file\");\n                    var DHW_Current_SP = global.get('TOP9_DHW_Target_Temp', \"file\");\n                    if (F_SOLAR.function_active_state == 2) { return null; }\n\n                    global.set(\"F_SOLAR.function_active_state\", 2, \"file\");\n\n                    msg99.payload = \"Cooldown period (\" + F_SOLAR.delay_after_completion + \" minutes) has ended. Solar function done for today\";\n                    node.send([null, null, null, msg99]);\n                    ///////////////////////////////////////////////////\n                    if (F_stored_next_operating_mode !== undefined) {\n                        TOP4_Operating_Mode_State = global.get('TOP4_Operating_Mode_State', \"file\")\n                        if (TOP4_Operating_Mode_State != F_stored_next_operating_mode) {\n                            msg2.payload = F_stored_next_operating_mode;\n                            if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Solar\"); }\n                            msg99.payload = \"Restoring previous OperatingMode: \" + msg2.payload;\n                            node.send([null, msg2, null, msg99]);\n                        }\n                        global.set('F_stored_next_operating_mode', undefined, \"file\");\n                        msg99.payload = 'Stored next operating mode is removed'; node.send([null, null, null, msg99]); \n                    }\n                    if (DHW_Current_SP != F_SOLAR.dhw_sp_low) {\n                        msg1.payload = F_SOLAR.dhw_sp_low;\n                        msg99.payload = \"Restoring DHW setpoint to: \" + F_SOLAR.dhw_sp_low + \"°C\";\n                        if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Solar\"); }\n                        node.send([msg1, null, null, msg99]);\n                    }\n                    clearTimeout(myTimeout);\n                    node.status({});\n                }   ////////////// end of f_rollbackaction\n            }\n        }\n    }\n}\n\n\n\n\n////////////////////////////////////////////////\n\n/*\nsetTimeout(function () {\n    node.status({ fill: \"red\", shape: \"ring\", text: \"\" });\n\n    global.set(\"F_SOLAR.function_active_state\", 2, \"file\");\n    msg99.payload = \"End temperature detected\"\n    node.send([null, null, null, msg99])\n    if (F_stored_next_operating_mode !== undefined) {\n\n        if (TOP4_Operating_Mode_State != F_stored_next_operating_mode) {\n            msg1.payload = F_SOLAR.dhw_sp_low;\n            msg2.payload = F_stored_next_operating_mode;\n            if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Solar\"); }\n            msg99.payload = \"DHW temperature reached DHW SP High. Restored previous OperatingMode: \" + msg2.payload + \" and restoring DHW setpoint to: \" + F_SOLAR.dhw_sp_low + \"°C\";\n            node.send([msg1, msg2, null, msg99]);\n        }\n\n        global.set('F_stored_next_operating_mode', undefined, \"file\");\n        return null;\n    }\n\n    else {\n        msg99.payload = \"DHW temperature reached DHW SP High. Solar function ended for today\";\n        return [null, null, null, msg99];\n    }\n\n}, 30 * 60 * 1000);      // revert OM 30 minutes later....\n                        \n                    }\n            }\n            \n    }\n    \n}\n\n*/",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2920,
        "wires": [
            [
                "78507acac200e031"
            ],
            [
                "0edffe2f6a90c7de"
            ],
            [
                "ee7e3fc1d241d09e"
            ],
            [
                "ba8f8e1c71858357"
            ]
        ],
        "outputLabels": [
            "DHW_SP",
            "new_Operating_Mode_State",
            "solar_turn_on_heatpump",
            "log"
        ]
    },
    {
        "id": "9b92843d2d8873a3",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "link in 10",
        "links": [
            "6c24c2f990c17968",
            "071320367f2b7a40",
            "1a198a8a916f8d78"
        ],
        "x": 165,
        "y": 2920,
        "wires": [
            [
                "58f4dcb609fc506a"
            ]
        ]
    },
    {
        "id": "1a198a8a916f8d78",
        "type": "link out",
        "z": "966985d68ebb4990",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "9b92843d2d8873a3"
        ],
        "x": 735,
        "y": 1540,
        "wires": []
    },
    {
        "id": "74d748cdb9ede767",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "set back default",
        "func": "if (msg.payload == 0) {\n    var F_stored_next_operating_mode = global.get('F_stored_next_operating_mode',\"file\");\n    var F_RTC_automation_active = global.get('F_RTC.automation_active',\"file\");\n    \n    \n    if (F_stored_next_operating_mode === undefined) {\n        return null;\n    }\n    let msg1={};    // pin 1 - the restored operating mode\n    let msg99={};   // pin 2 - info to the log\n    // return [msg1,msg99]\n\n    if (F_RTC_automation_active == 0) {\n        msg1.payload = F_stored_next_operating_mode;\n        msg1.topic = 'Restoring new operating mode';\n        \n        msg99.topic = 'Function - Solar';\n        msg99.payload = 'Solar function turned off manually. Restoring operating mode';\n        \n        global.set('F_stored_next_operating_mode',undefined,\"file\");\n        \n        return [msg1,msg99];\n    }\n\n}\n\n\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 1880,
        "wires": [
            [
                "b50ab0a4981f9d17"
            ],
            [
                "8e16d1ef3e972c95"
            ]
        ]
    },
    {
        "id": "dd80b368fadb1f13",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1520,
        "wires": [
            [
                "cd437e0a80c22bc0"
            ]
        ]
    },
    {
        "id": "f61f7eaf6a10124a",
        "type": "ui_numeric",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "dhw_sp_low",
        "label": "DHW temperature setpoint - low",
        "tooltip": "This setpoint is active below the {{msg.threshold}} treshold",
        "group": "b7f22c282fde0f86",
        "order": 8,
        "width": 9,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "dhw_sp_low",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": 0,
        "max": "75",
        "step": 1,
        "className": "",
        "x": 550,
        "y": 2000,
        "wires": [
            [
                "ccb17c1dab2540fd",
                "f6779270108c1106"
            ]
        ]
    },
    {
        "id": "9958b10ab396a735",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Load on boot",
        "func": "var F_SOLAR     = global.get('F_SOLAR',\"file\");\nvar save = false;\nif(F_SOLAR === undefined)   { F_SOLAR = {}; }\n\nif (F_SOLAR.state === undefined)                    {F_SOLAR.state = 0; save = true;}\nif (F_SOLAR.dhw_sp_low === undefined)               {F_SOLAR.dhw_sp_low = global.get('TOP9_DHW_Target_Temp',\"file\"); save = true;}\nif (F_SOLAR.dhw_sp_low === undefined)               {return null;}\nif (F_SOLAR.dhw_sp_high === undefined)              {F_SOLAR.dhw_sp_high = F_SOLAR.dhw_sp_low; save = true;}\nif (F_SOLAR.detection_method === undefined)         {F_SOLAR.detection_method = 'kWh_result'; save = true;}\nif (F_SOLAR.threshold === undefined)                {F_SOLAR.threshold = 0; save = true;}\nif (F_SOLAR.fallback === undefined)                 {F_SOLAR.fallback = 0; save = true;}\nif (F_SOLAR.power_override === undefined)           {F_SOLAR.power_override = 0; save = true;}\nif (F_SOLAR.delay_after_completion === undefined)   {F_SOLAR.delay_after_completion = 15; save = true;}\n\n\nif (save === true)                                  {global.set('F_SOLAR',F_SOLAR,\"file\");}\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={};\n\nmsg1.payload = F_SOLAR.state; msg1.topic = 'state';\nmsg2.payload = F_SOLAR.dhw_sp_low;\nmsg3.payload = F_SOLAR.dhw_sp_high;\nmsg4.payload = F_SOLAR.detection_method;\nmsg5.payload = F_SOLAR.threshold;\nmsg6.payload = F_SOLAR.fallback;\nmsg7.payload = F_SOLAR.power_override;\nmsg8.payload = global.get('TOP9_DHW_Target_Temp',\"file\");\nmsg9.payload = F_SOLAR.delay_after_completion;\n\n\n\nreturn [msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8,msg9];",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1880,
        "wires": [
            [
                "f3f4f51165a33ae4",
                "28c7a4a25703f3c5"
            ],
            [
                "f61f7eaf6a10124a"
            ],
            [
                "16fc69e4b9ff74fd"
            ],
            [
                "ce2634259bc8d6eb"
            ],
            [
                "608ac27952261ad4"
            ],
            [
                "2e9d5424e80ef967"
            ],
            [
                "2a4ffebda936e1bf"
            ],
            [
                "5a4e594ff048795f"
            ],
            [
                "91df0ca5227134fa"
            ]
        ],
        "outputLabels": [
            "F_SOLAR.state",
            "F_SOLAR.dhw_sp_low",
            "F_SOLAR.dhw_sp_high",
            "F_SOLAR.detection_method",
            "F_SOLAR.threshold",
            "F_SOLAR.fallback",
            "F_SOLAR.power_override",
            "TOP9_DHW_Target_Temp",
            "F_SOLAR.delay_after_completion"
        ]
    },
    {
        "id": "ccb17c1dab2540fd",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 2000,
        "wires": [
            [
                "b866c59ce44f1281"
            ]
        ]
    },
    {
        "id": "b866c59ce44f1281",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Set msg.topic to variable",
        "func": "\nglobal.set('F_SOLAR.' + msg.topic, msg.payload, \"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "f6779270108c1106",
        "type": "link out",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "link out 41",
        "mode": "link",
        "links": [
            "dd5a385aad192c71"
        ],
        "x": 755,
        "y": 1960,
        "wires": []
    },
    {
        "id": "d2d71d4e69ee31d7",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "link in 32",
        "links": [
            "550d51c7fe788f9e"
        ],
        "x": 365,
        "y": 2380,
        "wires": [
            [
                "5a4e594ff048795f"
            ]
        ]
    },
    {
        "id": "ba8f8e1c71858357",
        "type": "rbe",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2980,
        "wires": [
            [
                "1b0aafd65d5593dd"
            ]
        ]
    },
    {
        "id": "7072144388b44dd3",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "DHW SP",
        "info": "",
        "x": 560,
        "y": 2860,
        "wires": []
    },
    {
        "id": "bd6a778d969a4013",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "OM",
        "info": "",
        "x": 550,
        "y": 2900,
        "wires": []
    },
    {
        "id": "2f80407e5e31dd43",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "Power",
        "info": "",
        "x": 550,
        "y": 2940,
        "wires": []
    },
    {
        "id": "c0586f3e8627e510",
        "type": "comment",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "Log",
        "info": "",
        "x": 550,
        "y": 2980,
        "wires": []
    },
    {
        "id": "0edffe2f6a90c7de",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "Filter",
        "func": "let msg1={};\nvar TOP4_Operating_Mode_State   = global.get('TOP4_Operating_Mode_State',\"file\");\n\nif (msg.payload != TOP4_Operating_Mode_State) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 2900,
        "wires": [
            [
                "37178acf2fda2d9d",
                "bc966cc007d8b9e7"
            ]
        ]
    },
    {
        "id": "91df0ca5227134fa",
        "type": "ui_numeric",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "delay_after_completion",
        "label": "Cooldown period after DHW run",
        "tooltip": "",
        "group": "b7f22c282fde0f86",
        "order": 14,
        "width": 9,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "delay_after_completion",
        "topicType": "str",
        "format": "{{value}} min",
        "min": 0,
        "max": "60",
        "step": 1,
        "className": "",
        "x": 590,
        "y": 2260,
        "wires": [
            [
                "ccb17c1dab2540fd"
            ]
        ]
    },
    {
        "id": "78f070a993f73c0c",
        "type": "link out",
        "z": "966985d68ebb4990",
        "name": "link out 53",
        "mode": "link",
        "links": [
            "3170857651ba82cc"
        ],
        "x": 835,
        "y": 3200,
        "wires": []
    },
    {
        "id": "3170857651ba82cc",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "link in 49",
        "links": [
            "78f070a993f73c0c"
        ],
        "x": 205,
        "y": 1780,
        "wires": [
            [
                "d8210b71067cf6b6"
            ]
        ]
    },
    {
        "id": "d8210b71067cf6b6",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "function 24",
        "func": "let msg1={};\n\nif (msg.color == \"\")        {msg1.state = \"\"; msg1.color = msg.color; } \nif (msg.color == \"gold\")    {msg1.state = \"Active\"; msg1.color = msg.color;} \nif (msg.color == \"green\")   {msg1.state = \"Done\"; msg1.color = msg.color;} \n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1780,
        "wires": [
            [
                "67fe5d78fed38255"
            ]
        ]
    },
    {
        "id": "70753620fd42401f",
        "type": "delay",
        "z": "966985d68ebb4990",
        "g": "6f4cdc97add442ff",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 970,
        "y": 2900,
        "wires": [
            [
                "b50ab0a4981f9d17"
            ]
        ]
    },
    {
        "id": "f41ea674b5e8c312",
        "type": "delay",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "rate",
        "pauseType": "timed",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 2440,
        "wires": [
            [
                "bdd8cc1b7fb80f3f"
            ]
        ]
    },
    {
        "id": "514fddfab201e633",
        "type": "delay",
        "z": "966985d68ebb4990",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 170,
        "y": 1560,
        "wires": [
            [
                "cd437e0a80c22bc0"
            ]
        ]
    },
    {
        "id": "7dacecebd1d1ac1b",
        "type": "delay",
        "z": "966985d68ebb4990",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1370,
        "y": 1520,
        "wires": [
            [
                "241a32186671a626"
            ]
        ]
    },
    {
        "id": "47d9da722231d15b",
        "type": "delay",
        "z": "966985d68ebb4990",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1370,
        "y": 1620,
        "wires": [
            [
                "67613761035e311d"
            ]
        ]
    },
    {
        "id": "2717d21023b674ad",
        "type": "delay",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "rate",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 790,
        "y": 2460,
        "wires": [
            [
                "153d971fff0a3ed3"
            ]
        ]
    },
    {
        "id": "b71c2a60abf302a0",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "99",
        "payloadType": "num",
        "x": 1210,
        "y": 3260,
        "wires": [
            [
                "b463820910564b36"
            ]
        ]
    },
    {
        "id": "cdfda8a3de0b8627",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 370,
        "y": 3340,
        "wires": [
            [
                "52793ff25612a2d3"
            ]
        ]
    },
    {
        "id": "52793ff25612a2d3",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "function 28",
        "func": "global.set('F_SOLAR.function_active_state',msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 3340,
        "wires": [
            [
                "98f9e356d626ae30"
            ]
        ]
    },
    {
        "id": "23c8afa8409335b2",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 390,
        "y": 3380,
        "wires": [
            [
                "52793ff25612a2d3"
            ]
        ]
    },
    {
        "id": "bc966cc007d8b9e7",
        "type": "debug",
        "z": "966985d68ebb4990",
        "name": "debug 183",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 3060,
        "wires": []
    },
    {
        "id": "98f9e356d626ae30",
        "type": "debug",
        "z": "966985d68ebb4990",
        "name": "debug 184",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 3340,
        "wires": []
    },
    {
        "id": "d399a23f6936f23f",
        "type": "function",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "function 29",
        "func": "var F_SOLAR = global.get('F_SOLAR',\"file\");\nif (F_SOLAR === undefined) {return null}\n\nlet msg1={}; // import correction\nlet msg2={}; // export correction\n\nmsg1.payload = F_SOLAR.import_correction;\nmsg2.payload = F_SOLAR.export_correction;\n\nif (msg1.payload !== undefined) {node.send([msg1,null]);}\nif (msg2.payload !== undefined) {node.send([null,msg2]);}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 300,
        "wires": [
            [
                "37aa061ab91471ec"
            ],
            [
                "1c7292b507901827"
            ]
        ],
        "outputLabels": [
            "import correction",
            "export correction"
        ]
    },
    {
        "id": "d4627d98961f13e3",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "link in 61",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 135,
        "y": 300,
        "wires": [
            [
                "d399a23f6936f23f"
            ]
        ]
    },
    {
        "id": "4ed5f3924acf26ff",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "bd6e0b75ff712b33",
        "name": "Solar2DHW toggle on/off",
        "links": [
            "cd1b20e317c3d446",
            "91c75ca9f3471bd5"
        ],
        "x": 155,
        "y": 1840,
        "wires": [
            [
                "28c7a4a25703f3c5"
            ]
        ]
    },
    {
        "id": "4005ad2197c7fdc7",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "bf2c1d5a22f56dd8",
        "name": "P1 power production",
        "links": [
            "426ef80beb8421b0"
        ],
        "x": 745,
        "y": 100,
        "wires": [
            [
                "88ea0371f9cecd37"
            ]
        ]
    },
    {
        "id": "d557c110dc040f11",
        "type": "link in",
        "z": "966985d68ebb4990",
        "g": "3b5324e3d80d96a1",
        "name": "P1 power consumption",
        "links": [
            "cbd9f65956ab693b"
        ],
        "x": 725,
        "y": 860,
        "wires": [
            [
                "375bbd780529afe0"
            ]
        ]
    },
    {
        "id": "4eafe52d3d202981",
        "type": "function",
        "z": "966985d68ebb4990",
        "name": "function 64",
        "func": "{\n    /////////////////////////// \nlet msg99={}\nlet msg2={};\nlet msg1={};\n\n\n//    msg99.payload = \"DHW temperature has reached SP high\";\n//    node.send([null, null, null, msg99])\n\n    let myTimeout = setTimeout(f_rollbackaction, 5 * 1000);                 // <<<<<<<<<<<<<<<<  DELAY \n    node.status({ fill: \"red\", shape: \"ring\", text: \"\" });\n\n    function f_rollbackaction() {                           // ignore error. it is fine here.\n        \n        var F_SOLAR = global.get('F_SOLAR', \"file\");\n        if (F_SOLAR.function_active_state == 2) { return null; }\n        var F_stored_next_operating_mode = global.get('F_stored_next_operating_mode', \"file\");\n        var DHW_Current_SP = global.get('TOP9_DHW_Target_Temp', \"file\");\n        \n        global.set(\"F_SOLAR.function_active_state\", 2, \"file\");\n\n        msg99.payload = \"Cooldown period (\" + F_SOLAR.delay_after_completion + \" minutes) has ended. Solar function done for today\";\n        node.send([null, null, null, msg99]);\n        ///////////////////////////////////////////////////\n        if (F_stored_next_operating_mode !== undefined) {\n            var TOP4_Operating_Mode_State = global.get('TOP4_Operating_Mode_State', \"file\")\n            if (TOP4_Operating_Mode_State != F_stored_next_operating_mode) {\n                msg2.payload = F_stored_next_operating_mode;\n                if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Solar\"); }\n                msg99.payload = \"Restoring previous OperatingMode: \" + msg2.payload;\n                node.send([null, msg2, null, msg99]);\n            }\n            global.set('F_stored_next_operating_mode', undefined, \"file\");\n        }\n        if (DHW_Current_SP != F_SOLAR.dhw_sp_low) {\n            msg1.payload = F_SOLAR.dhw_sp_low;\n            msg99.payload = \"Restoring DHW setpoint to: \" + F_SOLAR.dhw_sp_low + \"°C\";\n            if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Solar\"); }\n            node.send([msg1, null, null, msg99]);\n        }\n        \n        node.warn('ping')\n        //clearTimeout(myTimeout);\n        node.status({});\n    }   ////////////// end of f_rollbackaction\n}\n",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 3560,
        "wires": [
            [
                "a4aa6d6a27db76cd"
            ],
            [
                "a4aa6d6a27db76cd"
            ],
            [
                "a4aa6d6a27db76cd"
            ],
            [
                "a4aa6d6a27db76cd"
            ]
        ]
    },
    {
        "id": "05e20bf24c5f596b",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 3560,
        "wires": [
            [
                "4eafe52d3d202981"
            ]
        ]
    },
    {
        "id": "a4aa6d6a27db76cd",
        "type": "debug",
        "z": "966985d68ebb4990",
        "name": "debug 211",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 3560,
        "wires": []
    },
    {
        "id": "a4978bac5e26345c",
        "type": "inject",
        "z": "966985d68ebb4990",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 410,
        "y": 3420,
        "wires": [
            [
                "52793ff25612a2d3"
            ]
        ]
    },
    {
        "id": "72f2748729e53ad1",
        "type": "tab",
        "label": "WP Help",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fca08ea5bf5103fd",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "Solar HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "abdc4499891c6871",
            "739eb34ff6d8c742",
            "6eb23418ea8d86a1",
            "740159707b77305c",
            "e487a445e58768f0",
            "01a4ac4ad26a6b09",
            "468d1cde1e2b4ff3",
            "3b5ab802c150fd86",
            "dc156fecfc1bc1e8",
            "c4295ed66d438dd7",
            "0bc6f2130b8acb9d"
        ],
        "x": 134,
        "y": 99
    },
    {
        "id": "5505432507101e93",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "WAR HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "be48f3104249b8a0",
            "b33b45b8a4e1398b",
            "184850f4f96ed36c",
            "da5eda62cc98aecc",
            "43be81558a98b102",
            "c2935eeb2b0919cf"
        ],
        "x": 134,
        "y": 499
    },
    {
        "id": "b5e32619ad0c206e",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "RTC HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "ad4e277358b19235",
            "56f59b7df09abbf3",
            "d00691f660be457b",
            "5f6574f97f240326",
            "8982c1e161d9d215",
            "3c3c8472da1fb85a"
        ],
        "x": 794,
        "y": 79
    },
    {
        "id": "c77aed9e30c539d5",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "Scheduler HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "f9144fc6ad3350af",
            "ecf4984d100b1353",
            "4770fc4ef0f643b3",
            "973d8234e83e6744",
            "c38f069ac9641f6a",
            "00752e5f6b14036b",
            "d0bc87893510d46f",
            "347b614526bf4814",
            "8090bc95e8512738",
            "7ca958b4b94243f8"
        ],
        "x": 794,
        "y": 319
    },
    {
        "id": "fde5dafe04d72e23",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "SoftStart HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "75571074f2ac434c",
            "c652e74baa241047",
            "088968fcdf03a215",
            "284c3282438b7e4c",
            "c54eb9703d5f9272",
            "e16790ec4eb50d6c",
            "e043e3c485777375",
            "8d47d305edaedefa",
            "8b7c9a76f8ddca81",
            "c96821120dd58acc",
            "8849a0faf2ae88ef"
        ],
        "x": 794,
        "y": 619
    },
    {
        "id": "17c379c76892162f",
        "type": "group",
        "z": "72f2748729e53ad1",
        "name": "COOL HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "b445415377a62384",
            "d8661c018a09abd2",
            "c63ac699b2d80d96",
            "a2b3dab1e41c9373",
            "53c5c87f7c903f13",
            "d2a7400a8f949e59",
            "22f7cfa8245c94ae"
        ],
        "x": 134,
        "y": 919
    },
    {
        "id": "be48f3104249b8a0",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "name": "",
        "group": "052caff3b2365345",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"WAR_Help\"],\"hide\":[\"WAR_Graph\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 580,
        "wires": [
            [
                "da5eda62cc98aecc"
            ]
        ]
    },
    {
        "id": "32e18af8aea0be90",
        "type": "link in",
        "z": "72f2748729e53ad1",
        "name": "UI Control",
        "links": [
            "12bf7fcc7f4c6696",
            "e6aa4e32e33f71c3",
            "3f57a73354e16fc8",
            "cfdf5af6d5f2d693",
            "da5eda62cc98aecc",
            "3b5ab802c150fd86",
            "5f6574f97f240326",
            "973d8234e83e6744",
            "284c3282438b7e4c",
            "a2b3dab1e41c9373"
        ],
        "x": 205,
        "y": 60,
        "wires": [
            [
                "f5eb45ad3e78471c"
            ]
        ]
    },
    {
        "id": "b33b45b8a4e1398b",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "name": "",
        "group": "79eed3b289871944",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"WAR_Help\"],\"show\":[\"WAR_Graph\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 370,
        "y": 620,
        "wires": [
            [
                "da5eda62cc98aecc"
            ]
        ]
    },
    {
        "id": "f5eb45ad3e78471c",
        "type": "ui_ui_control",
        "z": "72f2748729e53ad1",
        "name": "",
        "events": "all",
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "184850f4f96ed36c",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "group": "79eed3b289871944",
        "order": 1,
        "width": 11,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 240,
        "y": 620,
        "wires": []
    },
    {
        "id": "da5eda62cc98aecc",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 715,
        "y": 540,
        "wires": []
    },
    {
        "id": "abdc4499891c6871",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "group": "b7f22c282fde0f86",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Solar²DHW_Help\"],\"hide\":[\"Solar²DHW_P1_setup\",\"Solar²DHW_Charts\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "739eb34ff6d8c742",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "d": true,
        "g": "fca08ea5bf5103fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Solar_P1_setup\",\"Solar_Help\"],\"show\":[\"Solar_Charts\",\"Solar_Setup\"]}}",
        "payloadType": "json",
        "x": 230,
        "y": 180,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "6eb23418ea8d86a1",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "name": "Line - Instructions text",
        "order": 3,
        "width": 14,
        "height": 23,
        "format": "<h3>Solar</h3></br>\n<h3>What can this function do for you?</h3>\nThe aim of this function is to increase efficiency (and save cost) by utilize your own produced solar energy as much as\npossible. When there is solar energy in abundance, you can use that energy to heat up your DHW. To determine if there is\nenough solar energy, you need a power measurement. This can be a P1 power meter or you\ncan use the output from your inverter.\n</br></br><h3>How to setup?</h3>\nFirst go to the Solar page and click P1 SETUP, there you have to set the Correction factor. This can either be 1 or\n1000, depending if your source feeds watts or Kilowatts. Set this for Consumption and Production. You will see the corrected\nresult straight away, but of course, it needs to be sunny for the production values to show, as these are realtime\nvalues. Also be aware that in general, power consumption is always a positive value, and power production is a negative value.</br>\n</br>\nSecondly, you need to set the DHW setpoints.</br>\n</br><u>DHW temperature setpoint</u>\nThese are the target temperatures for the water in DHW tank. \nDHW temperature setpoint - high will be used when power measurement dropped below the threshold.\nDHW temperature setpoint - low will be used after the DHW tank has reached its target temperature high.\n</br></br><u>Power detection method</u>\nThere are three options available.</br></br>\n<i>Option 1: Power Live (kW)</br></i>\nLive energy production in watt. See (1) in image below.</br></br>\n<i>Option 2: Today's production (kWh)</i>\nTodays energy production, expressed in kWh. Energy consumption will NOT be added to this value, it will only\ndecrease. See (2) in image below.</br></br>\n<i>Option 3: Today's result (kWh)</i>\nTodays result, which is the sum of production and consumption. See (3) in image below.</br>\n</br><u>Threshold</u>\nThis is the threshold for the power readming. When the measured value drops below threshold, the DHW temperature setpoint - high will be set as the new target value.</br>\n</br><u>Allow switch on heat pump</u>\nWhen the pump is off, and the threshold is reached, enabling this will turn on the heat pump. If this toggle is disabled, the pump will remain off.\n<br></br><u>Fallback to default DHW (SP) below 0 W?</u>\nApplies only when threshold \"Power live (kW)\" option 1 is used. By default, once DHW temperature setpoint - high is being used, it will NOT switch back to DHW SP low until the temperature is reached. If you do want to fall back to DHW SP low when power production drops below zero watt, enable Fallback to DHW (SP) below 0 W?</br></br>\n<u>Cooldown period after DHW run</u>\nWhen the high DHW target temperature has been reached, the heatpump will stay in DHW mode for a set amount of time. This could help to prevent too hot water going through the HEAT system. \n</br></br><h3>Notes:</h3></br>\n- Power option 1 can cause power cycling",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "740159707b77305c",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "name": "",
        "order": 4,
        "width": 14,
        "height": 14,
        "format": "<div height=\"300\" style=\"height: 300px;\">\n<img src=\"https://raw.githubusercontent.com/edterbak/NodeRed_Heishamon_control/main/images/2023-04-15%2018_59_44-Node-RED%20Dashboard.png\" width=700px><br/>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e487a445e58768f0",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "group": "55fef8703465841e",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Solar²DHW_P1_setup\",\"Solar²DHW_Help\"],\"show\":[\"Solar²DHW_Charts\",\"Solar²DHW_Setup\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 530,
        "y": 220,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "01a4ac4ad26a6b09",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "order": 5,
        "width": 14,
        "height": 1,
        "name": "spacer 14",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 440,
        "wires": []
    },
    {
        "id": "468d1cde1e2b4ff3",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "55fef8703465841e",
        "order": 1,
        "width": 13,
        "height": 1,
        "name": "spacer 11",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 220,
        "wires": []
    },
    {
        "id": "3b5ab802c150fd86",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 525,
        "y": 140,
        "wires": []
    },
    {
        "id": "43be81558a98b102",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "5505432507101e93",
        "group": "79eed3b289871944",
        "name": "Line - Instructions text",
        "order": 3,
        "width": 12,
        "height": 18,
        "format": "<h3>WAR - Weather Adaptable Regulation</h3>\n<br/>\n<h3>What can this function do for you?</h3>\nThe aim of this function is to dynamically change the water temperature used for heating, compensating for the outside\nweather. If it is very cold outside, you require more heat compared to when it is warmer outside to end up with a\ncomfortable house. This function will thuss compensate the increasing heat loss the colder it get outside.\n<br/>\nThis will allow the heat pump to run at a lower, more efficient rate saving you energy. This will reduce cycling of the\ncompressor to increase its lifetime.\n<br/><br/>\n<h3>How to setup?</h3>\n<br/><u>Temperature profile</u>\nHere you can program three points, where you give the outside temperature and the corresponding target water\ntemperatures.\n<br/>\nThe first (top) point is the highest outside temperature, by default this one is set to 15 °C. This corresponds to the\nmaximum outside temperature the Panasonic accepts.\nThe last (bottom) point should be the lowest outside temperature you will realistically experience in you situation.\n<br/>\nWith the center point you can adjust the curve more to your liking. This will give you the ability to give you a bit\nmore heat when freezing for example.\nThis will give you the WAR temperature profile graph.\nDefault values: xxx\n<br/><br/><u>Result</u>\nThe actual outside temperature is used to find the corresponding water temperature according to your given settings. The\nresult will be rounded to whole degrees celcius and shown at Calculated temp..\n<br/><br/><u>Advanced</u>\nIf you want to use the WAR functionality of the Panasonic itself instead of this flow, you can export the Temperature\nprofile to your HeishaMon / Panasonic.\n<br/><br/>\n<h3>Notes:</h3>\n- The Panasonic has its own outside thermometer, this is typically located in the little black rubber tube on the back\nof the device. It’s quite inaccurate, especially if the sun is allowed to reach it, it is strongly recommended to use a\nproper outside sensor<br/>\n- Outside temperature range: -20°C - 15°C<br/>\n- Water temperature range: 20°C - 60°C<br/>\n- The Panasonic internally works with 2 points, instead of the 3 in this flow<br/>\n- If you do not require three points, use 2 identical Water temperatures but unique Outside temperatures<br/>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 280,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c2935eeb2b0919cf",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "d": true,
        "g": "5505432507101e93",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"WAR_Help\"]}}",
        "payloadType": "json",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "da5eda62cc98aecc"
            ]
        ]
    },
    {
        "id": "ad4e277358b19235",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "name": "",
        "group": "e27cfec311892d88",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"RTC_Help\"],\"hide\":[\"RTC_RTC_Graphics\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 890,
        "y": 160,
        "wires": [
            [
                "5f6574f97f240326"
            ]
        ]
    },
    {
        "id": "56f59b7df09abbf3",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "name": "",
        "group": "ae6c2168304beda0",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"RTC_Help\"],\"show\":[\"RTC_RTC_Graphics\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "5f6574f97f240326"
            ]
        ]
    },
    {
        "id": "d00691f660be457b",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "group": "ae6c2168304beda0",
        "order": 1,
        "width": 11,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 900,
        "y": 200,
        "wires": []
    },
    {
        "id": "5f6574f97f240326",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 1335,
        "y": 120,
        "wires": []
    },
    {
        "id": "8982c1e161d9d215",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "b5e32619ad0c206e",
        "group": "ae6c2168304beda0",
        "name": "Line - Instructions text",
        "order": 3,
        "width": 12,
        "height": 26,
        "format": "<h3>RTC - Room Temperature Correction</h3>\n<br/>\n<h3>What can this function do for you?</h3>\nThis function corrects the water temperature (HEAT) based on the actual room temperature. This function is for example useful when direct sunlight warms up the room. The setpoint is automatically lowered.\n<br/><br/>\nThe source for the correction is the temperature difference between [Room actual] and [Room setpoint]. <br/>\n<br/>\nThe temperature difference is devided in ranges. You can set them under the [Difference] column.\nWhen the room is too warm, the water temperature is corrected with the negative correction value.<br/>\nWhen the room is too cold, the water temperature is corrected with the positive correction value.<br/>\nWithin a T diff range, the correction stays constant<br/>\n<br/>\nWhen this function is properly configured, it will result in a more stable (comfortable) room temperature. On the other hand, when not correctly\nconfigured it can result in more variations in the room temperature. This last scenario can causing additional wear and increased energy costs. So please take your\ntime to set it up right for your situation.\n<br/><br/>\n\n<h3>Configuration</h3>\nFirst enter a desired temperature at [Room setpoint].\n<br/>\nSecondly you need to enter at which point the water temperature will be changed by 1, 2 or 3 degrees celcius. This will\ntake a bit of experimenting. For example if you use floor heating smaller deltas (0.1) work better because by its nature it is\nslow to respond. When using radiators you can increase the deltas (0.5). Try to make small changes at a time and observe the result for\nat least 1 or 2 days.<br>\nLastly, enable the toggle [RTC] on the top left of the dashboard.\n<br/><br/>\n\nDefault values:<br/>\n+/-0,5 degree difference results in a correction of +/-1 degree. <br>\n+/-1,0 degree difference results in a correction of +/-2 degrees. <br>\n+/-1,5 degree difference results in a correction of +/-3 degrees. <br>\n<br>\n<h3>Requirements:</h3>\nThe Panasonic has a themperature sensor in the wall mounted Remote Controller. But... It is inaccurate and really not\nsuitable to use for this RTC function. Please use a custom indoor sensor with an accuracy of 0,1°C.\nFor example a BMP280 or BME280. Be sure to place it somewhere out of direct sunlight or a cold draft.<br/> The measurements need to be available in this Node Red flow.<br>\n<br/>\n-----------------------------------\n<br/>\n<u>Calculate linear correction</u>\nBy default, as a result of the temperature differece setpoint vs room temperature, the correction on the water temperature is a step-change. Between the last two  <br/>\nWhen enabled, the setpoints (water temperatures) will be incrementally calculated in steps of 1°C. This applies only between the +3 and +custom temperature ranges.<br/>\n<br/>\n<u>Automations:</u>\nTo make use of the automation, you need to set two temperatures (dT's). <br/>\n[Trigger action above dT]: When the room temperature is above this line, the selected action(s) will be executed.<br/>\n[Revert action below dT]: When the room temperature drops below this line, the reverse action(s) will be executed.<br/>\nBoth the above/below dT temperatures are relative to the setpoint.<br/>\n<br/>\nAction: Change operating mode<br/>\nIf the room temperature is above dT, the current operating mode will have HEAT mode removed from it.<br/>\nIf the room temperature is below dT, the current operating mode will have HEAT mode added to it.<br/>\n<br/>\nAction: Turn off/on power<br/>\nIf the room temperature is above dT, the heatpump will be turned off. (condition: Operating Mode must be Heat-only or Auto(Heat))<br/>\nIf the room temperature is below dT, the heatpump will be turned on again.<br/>\n<br/>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 940,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3c3c8472da1fb85a",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "d": true,
        "g": "b5e32619ad0c206e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"RTC_Help\"]}}",
        "payloadType": "json",
        "x": 890,
        "y": 120,
        "wires": [
            [
                "5f6574f97f240326"
            ]
        ]
    },
    {
        "id": "f9144fc6ad3350af",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "name": "",
        "group": "2b0c8e162d47abbb",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Scheduler_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1030,
        "y": 400,
        "wires": [
            [
                "973d8234e83e6744"
            ]
        ]
    },
    {
        "id": "ecf4984d100b1353",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "name": "",
        "group": "a606e01fab1bbd66",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Scheduler_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "973d8234e83e6744"
            ]
        ]
    },
    {
        "id": "4770fc4ef0f643b3",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "a606e01fab1bbd66",
        "order": 1,
        "width": 14,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 900,
        "y": 500,
        "wires": []
    },
    {
        "id": "973d8234e83e6744",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 1335,
        "y": 360,
        "wires": []
    },
    {
        "id": "c38f069ac9641f6a",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "a606e01fab1bbd66",
        "name": "Line - Instructions text",
        "order": 3,
        "width": 15,
        "height": 32,
        "format": "<h3>Scheduler instructions</h3>\n<br/>\n<h3>What can the scheduler do for you?</h3>\nYou can program certain tasks to be started at the specified time and day.<br/>\n<br/>\n<h3>What is the main difference between this scheduler and the native Panasonic one?</h3>\nThe Panasonic scheduler always swtiches on the heat pump when a task is due. This scheduler offers you control over this\nbehavior.\n\nThe native Panasonic scheduler can be operational simultaneously with this scheduler. This can be convenient for some\nvery specific tasks, but it is strongly recommended to only use one scheduler to avoid conflicting tasks and unexpected\nbehavior. Both schedulers do not communicate.\n\n<br/><br/>\n<u>Enable</u>\nThis simply enables or disables the task.\n\n<br/><br/>\n<u>Name</u>\nGive your personal short name or description to the task.\n<br/><br/>\n<u>Action</u>\nSelect the action you want to perform.<br>\n\n<i>Force DHW</i><br/>\nThis action will do several things:<br/>\n1 - Add DHW to the current operating mode if missing<br/>\n2 - Turn on [Force DHW mode]<br/>\n3 - Execute the DHW run to the target temperature<br/>\n4 - Turn off [Force DHW mode]<br/>\n5 - Remove DHW from Operating mode again if it was missing at step 1<br/>\n<br/>\nAttention: The Force DHW run will not start if the current DHW temperature is above the set temperature in [Force DHW -\nAllow only below] in the 'related settings' section. If you do not want this, set this temperature very high (eg. 100\ndegree C). The Panasonic internal rules (minimum dT) will always be followed.\n<br/><br/>\nThe scheduled Force DHW action is fundamentally different compared to the switch Force DHW under settings or on the controller. They requires certain conditions.\n<br/><br/>\n<i>- Force Sterilization</i>\nThis action will do several things:<br/>\n1 - Add DHW to the current operating mode if missing<br/>\n2 - Turn on [Force DHW mode] + Turn on [Force Sterilization]<br/>\n3 - Execute the Sterilization run to the target temperature<br/>\n4 - Turn off [Force Sterilization mode] + Turn off [Force DHW mode]<br/>\n5 - Remove DHW from Operating mode again<br/>\n<br/>\n<i>- Quiet Mode</i>\nThis will set the quiet mode to the specified level.\n<br/><br/>\n<i>- Operation Mode</i>\nThis will set the operation mode as specified.\n<br><br>\n<i>- Nightreduction water temperature on/off</i>\nThis wil add a negative correction to the water temperature, which will result in a lower Final water temperature (but\nnever lower then 20 °C).\n<br/><br/>\n<i>- Nightreduction room temperature on/off</i>\nWhen on this will reduce the RTC room setpoint to the setpoint-low value set on the right.<br/>\nWhen off this will restore the RTC room setpoint to the setpoint-Normal value set on the right.<br/>\nDefaults: ON = 18 °C , OFF = 21 °C , RANGE 0 °C - 30 °C<br/>\n<br/>\n<u>Power on</u>\nBy default a task will not run if the heat pump is powered off. If you want the heat pump to be powered on and execute the task, enable the power on toggle.\n<br/><br/>\n<u>Heat water temperature limits</u>\nHere you can program the absolut upper and lower limits you never want HEAT to go over/under. This can be used to\nprevent oscillating behaviour, make compressor runs longer and the HP more efficient.</br>\n<u>Nightreduction Room setpoint</u><br/>\nHere you can set the room setpoint LOW and NORMAL when using task Nightreduction room setpoint.<br>\n<br>\n<u>Condition</u>\nEach line in the scheduler can be linked to one condition. When selecting a condition, the settings screen for that appears, with instructions.<br>\nNote that you can select multiple scheduled actions to one and the same condition. (flexible)<br><br>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 940,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "00752e5f6b14036b",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Scheduler_Help\"]}}",
        "payloadType": "json",
        "x": 890,
        "y": 360,
        "wires": [
            [
                "973d8234e83e6744"
            ]
        ]
    },
    {
        "id": "347b614526bf4814",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "2b0c8e162d47abbb",
        "order": 1,
        "width": 20,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 900,
        "y": 400,
        "wires": []
    },
    {
        "id": "d0bc87893510d46f",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "2b0c8e162d47abbb",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 400,
        "wires": []
    },
    {
        "id": "8090bc95e8512738",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "9aec7afe54746c39",
        "name": "Line - Setup ",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Nightreduction water temperature</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1070,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "7ca958b4b94243f8",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "c77aed9e30c539d5",
        "group": "9aec7afe54746c39",
        "name": "Line - Setup ",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Nightreduction room temperature</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1230,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "75571074f2ac434c",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "name": "",
        "group": "c2a0123d2e2c91f0",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"SoftStart_Help\"],\"hide\":[\"SoftStart_SS_Graphics\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1030,
        "y": 700,
        "wires": [
            [
                "284c3282438b7e4c"
            ]
        ]
    },
    {
        "id": "c652e74baa241047",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "name": "",
        "group": "3226b17db86f4510",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"SoftStart_Help\"],\"show\":[\"SoftStart_SS_Graphics\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1030,
        "y": 800,
        "wires": [
            [
                "284c3282438b7e4c"
            ]
        ]
    },
    {
        "id": "088968fcdf03a215",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "3226b17db86f4510",
        "order": 1,
        "width": 13,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 900,
        "y": 800,
        "wires": []
    },
    {
        "id": "284c3282438b7e4c",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 1335,
        "y": 660,
        "wires": []
    },
    {
        "id": "c54eb9703d5f9272",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "3226b17db86f4510",
        "name": "Line - Instructions text pt1",
        "order": 3,
        "width": 14,
        "height": 8,
        "format": "<h3>SoftStart</h3>\n<br/>\n<h3>What can the SoftStart function do for you?</h3>\nDefault behaviour of the heatpump when the compressor starts for a HEAT run, is that the frequency (Hz) will go to medium / high level. The frequency stays high until the returning water temperature (See Temp. inlet (PV) at the Home screen) approaches the setpoint. Only then the compressor ramps down.\n</br></br>\nThe primary goal of this function is to quickly lower the compressor frequency after starting a HEAT run. The heatpump will more quickly be in a stable / low power operating windows. As a result of that the length of the run might increase, it consumes less energy and generating less noise. A downside of this could be that heating is slower.\n<br/><br/>\nA secondairy goal of this function is to increase compressor runtime by slowly increasing the water setpoint. The setpoint will contineously be moved just outside the window where it will stop a heating run. By allowing the setpont to slide up along with the returning water (Tinlet), the run length will not be terminated. A possible downside of this could be the room temperature getting too high. \n<br/>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "e16790ec4eb50d6c",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "d": true,
        "g": "fde5dafe04d72e23",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"SoftStart_Help\"]}}",
        "payloadType": "json",
        "x": 890,
        "y": 660,
        "wires": [
            [
                "284c3282438b7e4c"
            ]
        ]
    },
    {
        "id": "e043e3c485777375",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "c2a0123d2e2c91f0",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 900,
        "y": 700,
        "wires": []
    },
    {
        "id": "8d47d305edaedefa",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "4551542d51501ce1",
        "name": "Line - Setup ",
        "order": 12,
        "width": 23,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1110,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "dc156fecfc1bc1e8",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "group": "b7f22c282fde0f86",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "P1 setup",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "settings",
        "payload": "{\"group\":{\"show\":[\"Solar²DHW_P1_setup\"],\"hide\":[\"Solar²DHW_Charts\",\"Solar²DHW_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 240,
        "y": 260,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "c4295ed66d438dd7",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "name": "",
        "group": "338420d1319e8350",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Solar²DHW_P1_setup\",\"Solar²DHW_Help\"],\"show\":[\"Solar²DHW_Charts\",\"Solar²DHW_Setup\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "3b5ab802c150fd86"
            ]
        ]
    },
    {
        "id": "0bc6f2130b8acb9d",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "fca08ea5bf5103fd",
        "group": "338420d1319e8350",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "spacer 11",
        "label": "P1 setup",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 260,
        "wires": []
    },
    {
        "id": "8b7c9a76f8ddca81",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "3226b17db86f4510",
        "name": "",
        "order": 4,
        "width": 14,
        "height": 9,
        "format": "<div height=\"300\" style=\"height: 300px;\">\n\n<img src=\"https://raw.githubusercontent.com/edterbak/NodeRed_Heishamon_control/main/images/SoftStart_graph2.png\" width=700px><br/>\n\n</div>\nImage 1: kW Production now",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "c96821120dd58acc",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "fde5dafe04d72e23",
        "group": "3226b17db86f4510",
        "name": "Line - Instructions text pt2",
        "order": 5,
        "width": 14,
        "height": 20,
        "format": "<h3>How it works</h3>\nIn the graph above, shown is the compressor frequency (Hz) vs time (minutes).<br/>\n<br/>\n<h3>Primary goal - Reduce frequency ASAP</h3>\n<u>(1) Runtime</u>\nSet the duration this function to be active from the start. After this time, the correction on the water setpoint will be set to 0 (zero ) again. <i>Default: 15 minutes</i>\n<br/>\n<u>(2) Max. setpoint increase</u>\nThis will set the maximum setpoint increase for the water temperature. This is relative to the normally calculated water temperature. The higher\nincrease allowed, the longer the compressor will run. But of course, the higher the overshoot in room temperature could be. <i>Default: 1 °C</i><br/>\n<h4>Additional settings.</h4>\n<u>(3) QuietMode (Optional)</u>\nQuietMode 1, 2 and 3 have an effect on the maximum allowed compressor frequency and fan speed. QuietMode 3 will limit compressor and fan speed the most.</br> \nEnable / disable the use of QuietMode by the softstart function. </br>\n<i>Default: Disabled</i></bt></br>\nSet the duration for it to be active from the start of a HEAT run.<br/>\n<br/>\n<u>Reset after defrost</u>\nWhen enabled, the softstart function will be reset during a defrost. This will result in 'catching' the high compressor frequencies each time.\nWhen disabled, the counter will continue after a defrost. As a result of this, the softstart function can reach the 'end'-pont sooner. \n<br/><i>Default: Disabled</i>\n</br><br/>\n\n<h3>Secondary goal - Prevent short HEAT runs</h3>\n<u>(1) Runtime</u>\nUp to the user. Typically in the range of 1 - 24 hour(s).\n<br/><br/>\n<u>(2) Max. setpoint increase</u>\nUp to the user. Typically in the range of 2°C - 3°C degrees.\n<br/><br/>\n<br/>\nNote: When softstart function is enabled, it does not guarantee the compressor won't turn off within this time period. Normal internal logic of the Panasonic still applies, so when the water is warm enough the compressor stops.\n</br></br>\nNote 2: There are multiple types of heatpumps. Split units, monoblock, T-CAP. Not all types respond in the same way during a heat run. Example, the T-CAP can be slow to reduce the compressor frequency after start. ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1110,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "8eceea67c56affae",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "d": true,
        "group": "3226b17db86f4510",
        "name": "Line - Instructions text pt2",
        "order": 6,
        "width": 14,
        "height": 20,
        "format": "<h3>How it works</h3>\nIn the graph above, shown is the compressor frequency (Hz) vs time (minutes).<br/>\n<br/>\n<h3>Primary goal - Reduce frequency ASAP</h3>\n<u>(1) Runtime</u>\nSet the duration this function to be active from the start. After this time, the correction on the water setpoint will be set to 0 (zero ) again. <i>Default: 15 minutes</i>\n<br/>\n<u>(2) Max. setpoint increase</u>\nThis will set the maximum setpoint increase for the water temperature. This is relative to the normally calculated water temperature. The higher\nincrease allowed, the longer the compressor will run. But of course, the higher the overshoot in room temperature could be. <i>Default: 1 °C</i><br/>\n<h4>Additional settings.</h4>\n<u>(3) QuietMode (Optional)</u>\nQuietMode 1, 2 and 3 have an effect on the maximum allowed compressor frequency and fan speed. QuietMode 3 will limit compressor and fan speed the most.</br> \nEnable / disable the use of QuietMode by the softstart function. </br>\n<i>Default: Disabled</i></bt></br>\nSet the duration for it to be active from the start of a HEAT run.<br/>\n<br/>\n<u>Reset after defrost</u>\nWhen enabled, the softstart function will be reset during a defrost. This will result in 'catching' the high compressor frequencies each time.\nWhen disabled, the counter will continue after a defrost. As a result of this, the softstart function can reach the 'end'-pont sooner. \n<br/><i>Default: Disabled</i>\n</br><br/>\n\n<h3>Secondary goal - Prevent short HEAT runs</h3>\n<u>(1) Runtime</u>\nUp to the user. Typically in the range of 1 - 24 hour(s).\n<br/><br/>\n<u>(2) Max. setpoint increase</u>\nUp to the user. Typically in the range of 2°C - 3°C degrees.\n<br/><br/>\n<br/>\nNote: When softstart function is enabled, it does not guarantee the compressor won't turn off within this time period. Normal internal logic of the Panasonic still applies, so when the water is warm enough the compressor stops.\n</br></br>\nNote 2: There are multiple types of heatpumps. Split units, monoblock, T-CAP. Not all types respond in the same way during a heat run. Example, the T-CAP can be slow to reduce the compressor frequency after start. ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1570,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "8849a0faf2ae88ef",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "d": true,
        "g": "fde5dafe04d72e23",
        "name": "",
        "group": "3226b17db86f4510",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button help 1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "</br>   MQTT commands are being blocked. </br></br> Resume normal operation? </br> </br> _____________________________________________________ ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1250,
        "y": 820,
        "wires": [
            [
                "9a90f895a332472c"
            ]
        ]
    },
    {
        "id": "9a90f895a332472c",
        "type": "ui_toast",
        "z": "72f2748729e53ad1",
        "d": true,
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1610,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "2c79bd3e2dc678e7",
        "type": "link in",
        "z": "72f2748729e53ad1",
        "name": "link in 52",
        "links": [
            "47cb7500b0321fc1",
            "ef9614c64c2b1966"
        ],
        "x": 255,
        "y": 840,
        "wires": [
            [
                "e487a445e58768f0",
                "b33b45b8a4e1398b",
                "56f59b7df09abbf3",
                "ecf4984d100b1353",
                "c652e74baa241047"
            ]
        ]
    },
    {
        "id": "b445415377a62384",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "17c379c76892162f",
        "name": "",
        "group": "830a81a1c54c6ef5",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Cool_Help\"],\"hide\":[\"Cool_Chart\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 1000,
        "wires": [
            [
                "a2b3dab1e41c9373"
            ]
        ]
    },
    {
        "id": "d8661c018a09abd2",
        "type": "ui_button",
        "z": "72f2748729e53ad1",
        "g": "17c379c76892162f",
        "name": "",
        "group": "1110c1df5a310684",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Cool_Help\"],\"show\":[\"Cool_Chart\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 370,
        "y": 1040,
        "wires": [
            [
                "a2b3dab1e41c9373"
            ]
        ]
    },
    {
        "id": "c63ac699b2d80d96",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "17c379c76892162f",
        "group": "1110c1df5a310684",
        "order": 1,
        "width": 9,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 240,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a2b3dab1e41c9373",
        "type": "link out",
        "z": "72f2748729e53ad1",
        "g": "17c379c76892162f",
        "name": "",
        "mode": "link",
        "links": [
            "32e18af8aea0be90"
        ],
        "x": 715,
        "y": 960,
        "wires": []
    },
    {
        "id": "53c5c87f7c903f13",
        "type": "ui_template",
        "z": "72f2748729e53ad1",
        "g": "17c379c76892162f",
        "group": "1110c1df5a310684",
        "name": "Line - Instructions text",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<h3>COOL function</h3>\n<br/>\n<h3>Requirements</h3>\nIf you want to use the function, you require a good temperature and humidity sensor in the target area.<br>\nWith this information the dew point is calculated. \nThe requested cool setpoint temperature will be automatically be corrected to be above the dew point.<br><br>\n<h3>What is a dew point?</h3>\nAir in a room contains a certain amount of water / humidity. This water is gaseous / vapour. When the air temperature lowers, the amount of humidity that is able to 'fit' in gaseous form, lowers as well. At a certain temperature it is at its maximum (100% humidity). Below this temperature, water vapour starts to condensate onto cold objects. <br>\nThe temperature where water in the air starts to condensate, is called the dew-point.\n<br/><br/>\n<h3>Why is calculating a dew point important?</h3>\nWhen the temperature of the cooling water is below the dew point, water will condensate on the radiators or your floor heating system. Water ends up on the floor. Combine this with a good ventilation system (read: endless supply of fresh air ... and gaseous water) this could become a big wet problem if you have a wooden floor.<br/><br/>\n<h3>I do not have a humidity sensor. Can I still cool?</h3>\nYes. Of course. <br>\nBut the responsibility of not setting a too low target temperature is your own.<br/><br/>\n<h3>Settings</h3>\n<u>Setpoint requested</u>\nSet the desired setpoint temperature of the cooling water.\n<br><br>\n<U>Safety margin:</U>\nThis value is added to the calculated dew point temperature. The minimum and default is 1.5 °C. \n<br><br>\n<u>Lower limit (man):</u>\nYou can manually set a fixed lower limit of the cooling set point.\n<br><br>\n<u>Lower limit (calc):</u>\nThis is the calculated lower limit of the setpoint. <br>\n[Value] = [dew point temperature] + [Safety margin] <br>\nThis value is not rounded.\n<br><br>\n<u>final setpoint:</u>\nThe final setpoint value is the [Lower limit (calc)] value but always rounded up. So a calculated value of 15.01 will result in a [Setpoint final] temperature of 16°C.\n<br><br>\n<u>Conditions:</u>\nThere are conditions for the function to allow sending a new final setpoint to the heat pump.<br>\nWhen the heatpump is turned OFF, the new setpoint wil NOT be sent. <br>\nWhen current operating mode is (0) Heat Only, (2) Auto(Heat), (3) DHW Only or (4) Heat+DHW, a new setpoint will NOT be sent<br>\n\nIn these cases, the calculated setpoint shown in the graph and settings will be incorrect or not updated.  \n\n\n<br><br><br>\nFor reference:<br>\nT dew point = 243.12 * A / (17.62 - A)<br>\nA = Math.log( RH / 100) / Math.log(2.718282) + 17.62 * Temperature / (243.12 + Temperature)\n<br><br>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 280,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "d2a7400a8f949e59",
        "type": "inject",
        "z": "72f2748729e53ad1",
        "d": true,
        "g": "17c379c76892162f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"COOL_Help\"]}}",
        "payloadType": "json",
        "x": 230,
        "y": 960,
        "wires": [
            [
                "a2b3dab1e41c9373"
            ]
        ]
    },
    {
        "id": "22f7cfa8245c94ae",
        "type": "ui_text",
        "z": "72f2748729e53ad1",
        "g": "17c379c76892162f",
        "group": "830a81a1c54c6ef5",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 540,
        "y": 1060,
        "wires": []
    },
    {
        "id": "35d210f042827344",
        "type": "tab",
        "label": "WP Scheduler",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b63004182c33d3b9",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "dce5daf12297877f",
            "56d4bfa341d3eded",
            "4f62466c41bb3667",
            "52fea7493d509740",
            "259ee5343901c67c",
            "c959ee1f94c31c45",
            "207821d9fd0df31e",
            "cd34d205525225ef",
            "27ad7f4523c5ac06",
            "07c12775c5faacae",
            "284a4b5256066615",
            "1d18cc8f09cfbdbc",
            "8c00f7e622b82f63",
            "ef28d0205d50cb26",
            "d0fda364deccc7f0",
            "47fe4c3f4736bcc8",
            "4ca97fe11f8196e4",
            "7a27b2c8c4721ed9",
            "55ed50ca78ad2e8e",
            "9b6adfc4b5fe33d9",
            "3e6fc746e7597b72",
            "572ff3b3b8a1d185",
            "68f4601da2aa107a",
            "aa04e7be9348a071",
            "8f7d82299e5dcf8a",
            "6021a18a5e9c23cb",
            "af9178426366861c",
            "ebc9b8c270d7c636",
            "e33b5a24cd58c8d2"
        ],
        "x": 2334,
        "y": 2299
    },
    {
        "id": "92293ba8ccc5db0f",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "af36a209861f34c9",
            "977bf5eb11dcbcae",
            "4be14d43ed11df9e",
            "66751dfee126dd36",
            "ac07aae6820d664d",
            "20267081e902cf8f",
            "0e56417c81c6b1be",
            "50a7d35eec5ebb92",
            "620d3faff0a26d37",
            "b98e3d3337c01053",
            "827d25a8ccb91857",
            "3a71aada556a2950",
            "0a2fca7dbded32e0",
            "ddf3715aaea9672b",
            "6e79eaf44bdd252f",
            "05344a8f5a84a598",
            "ce6d6e5627ec1fa2",
            "1911fbfbf89866a8",
            "55a0fb67fbe206cf",
            "9c13f29571c31128"
        ],
        "x": 74,
        "y": 3039
    },
    {
        "id": "8387b4df126e002c",
        "type": "group",
        "z": "35d210f042827344",
        "name": "Setpoints popups",
        "style": {
            "label": true
        },
        "nodes": [
            "149593cb5a59bfc2",
            "7c42986702362e7e",
            "d76b2de1985f09bb",
            "b6f2cfb3efd983c4",
            "a14f9aee7a90cce0",
            "b33abbe2fee043fb",
            "d0bd2ba9d6d4fa4f",
            "2fee17012ab3bcf3",
            "13f54518d82c8796",
            "6a6e0e79315f1423",
            "1e2795a950379445",
            "aacf8eb6a239e142",
            "1c76ec837c811a63",
            "e9afc0729467ae1d",
            "525e9bfc80e7f5e5",
            "19cb9e9d4bfea67d",
            "c0d182e336a34912",
            "dfd6d3ff02d1dcbd",
            "9c75cdabfee5ec0f"
        ],
        "x": 2614,
        "y": 1819
    },
    {
        "id": "af1f780bbdddde83",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "04d51dd3d6706289",
            "41e3d65e44f729b3",
            "64b63afc5d83d929",
            "aa67113ad3088493",
            "83791dcc23be38a9",
            "5ab7ad5b040ca231",
            "d71671801e83ccd8",
            "e95b104ec4b5b889",
            "23cce10c04b0a251",
            "d63e1d5671ed9af1",
            "cf6dfeda59a5ed1d",
            "8596a9f652603dac",
            "2d4eefbf9dcc6e9f",
            "7250ce16a456d262",
            "8b33ff42888d0c3b",
            "c0fdc0126f7d69c7"
        ],
        "x": 1874,
        "y": 1859
    },
    {
        "id": "40f0401e20235a07",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 20,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 180,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "243fa1e4e8cef5d0",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 19,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 180,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "ae1eb94c798ce73b",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Day",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1670,
        "y": 120,
        "wires": []
    },
    {
        "id": "d1266a8821d5f723",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Hour",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1950,
        "y": 120,
        "wires": []
    },
    {
        "id": "24c5c19b07f97e99",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Minutes",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2240,
        "y": 120,
        "wires": []
    },
    {
        "id": "98499b42fe5f6688",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 21,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 180,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "e3d4b9d611e649e0",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch1",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 17,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_1_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "8fbe0ef4995f8e6a",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input1",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 18,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_1_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 180,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "e7b504fa96e19b50",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 8,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Name",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1350,
        "y": 120,
        "wires": []
    },
    {
        "id": "d6b1a6d8ba28fbb0",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 12,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Action",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2510,
        "y": 120,
        "wires": []
    },
    {
        "id": "57dddda65db516a2",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action1",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 22,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 180,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "d3cb14cbe16aae48",
        "type": "inject",
        "z": "35d210f042827344",
        "name": "1 Trigger / 60 seconds",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2560,
        "wires": [
            [
                "d7661361dc45a227",
                "5bada2ca15c02a60",
                "1b3cfb0717b453f9"
            ]
        ]
    },
    {
        "id": "d7661361dc45a227",
        "type": "moment",
        "z": "35d210f042827344",
        "name": "",
        "topic": "DayOfTheWeek",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "dddd",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 440,
        "y": 2520,
        "wires": [
            [
                "aee82d7ed5267326"
            ]
        ]
    },
    {
        "id": "5bada2ca15c02a60",
        "type": "moment",
        "z": "35d210f042827344",
        "name": "",
        "topic": "Hour",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 410,
        "y": 2560,
        "wires": [
            [
                "aee82d7ed5267326"
            ]
        ]
    },
    {
        "id": "1b3cfb0717b453f9",
        "type": "moment",
        "z": "35d210f042827344",
        "name": "",
        "topic": "Minute",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "mm",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 410,
        "y": 2600,
        "wires": [
            [
                "aee82d7ed5267326"
            ]
        ]
    },
    {
        "id": "aee82d7ed5267326",
        "type": "join",
        "z": "35d210f042827344",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 630,
        "y": 2560,
        "wires": [
            [
                "4d90f21594adec55"
            ]
        ]
    },
    {
        "id": "826c4b608a4e5bf1",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1860,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "317942154b6d1cb3",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "",
        "mode": "link",
        "links": [
            "d9b3ca8bfaa4c10a",
            "ef28d0205d50cb26"
        ],
        "x": 2025,
        "y": 2520,
        "wires": []
    },
    {
        "id": "92b636a9597d91b2",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "",
        "mode": "link",
        "links": [
            "d0fda364deccc7f0",
            "d9b3ca8bfaa4c10a"
        ],
        "x": 2025,
        "y": 2560,
        "wires": []
    },
    {
        "id": "52b8feb14590a2b0",
        "type": "inject",
        "z": "35d210f042827344",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "f5602874161743c8"
            ]
        ]
    },
    {
        "id": "14327004637e05c7",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "QM Scheduler to manager",
        "mode": "link",
        "links": [
            "74ccc8947e89976a"
        ],
        "x": 2025,
        "y": 2600,
        "wires": []
    },
    {
        "id": "c6801a6c865543b3",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "OperationMode Planning",
        "mode": "link",
        "links": [
            "d9b3ca8bfaa4c10a",
            "e73d130bb1839444"
        ],
        "x": 2025,
        "y": 2640,
        "wires": []
    },
    {
        "id": "be684538aa9a988e",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to Quiet Mode (Direct)",
        "info": "",
        "x": 2170,
        "y": 2600,
        "wires": []
    },
    {
        "id": "3155317a644ba5c6",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to Operation Mode (Direct)",
        "info": "",
        "x": 2310,
        "y": 2640,
        "wires": []
    },
    {
        "id": "dce5daf12297877f",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Schedule execution",
        "func": "// >> trigger 1\n// DHW / Sterilisation? This is defined in the topic\n// Topic: DHW or topic: Sterilization\n// payload 1 > initiate sequence. \n\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\n// Declaration of the variables. \nvar msg1 = {}, msg2 = {}, msg3 = {}, msg4 = {}, msg99 = {}; \nmsg99.topic = 'Scheduler'; \n// msg1     Output towards Operation mode\n// msg2     Output towards Force DHW mode on/off\n// msg3     output towards Force Sterilization on/off\n// msg4     empty\n\n//var TOP20_ThreeWay_Valve_State  =global.get('TOP20_ThreeWay_Valve_State');          // valvue position\nvar TOP10_DHW_Temp              =global.get('TOP10_DHW_Temp');                      // Current temperature of DHW vessel. \nvar TOP9_DHW_Target_Temp        =global.get('TOP9_DHW_Target_Temp',\"file\");         // Programmed DHW target temperature\n\nvar TOP2_Force_DHW_State        =global.get('TOP2_Force_DHW_State');                // Current DHW state (on / off). \nif (TOP2_Force_DHW_State === undefined) { return null; }\n\nvar TOP4_Operating_Mode_State   =global.get('TOP4_Operating_Mode_State',\"file\");    // get Current OperationMode\n\nvar TOP69_Sterilization_State   =global.get('TOP69_Sterilization_State',\"file\");    // Current sterilization state (on / off)\nif (TOP69_Sterilization_State === undefined) { return null; }\n\n// var TOP70_Sterilization_Temp    =global.get('TOP70_Sterilization_Temp',\"file\");     // Programmed sterilization target temperature\nvar DHW_threshold_upper         =global.get('DHW_threshold_upper',\"file\");          // Programmed treshold DHW tank temperature set from GUI\nvar DHW_boost_state             =global.get('DHW_boost_state',\"file\");\nvar F_stored_next_operating_mode=global.get('F_stored_next_operating_mode',\"file\");\nvar F_SOLAR                     = global.get('F_SOLAR',\"file\");\n\nvar Sterilization_active        = global.get('Sterilization_active', \"file\");\nvar Force_DHW_active            = global.get('Force_DHW_active', \"file\");\n\nvar old_OM;                                                                         // create empty variable.\nvar new_OM;                                                                         // create empty variable.\n\nif (TOP4_Operating_Mode_State === undefined || F_SOLAR === undefined || F_SOLAR.function_active_state === undefined || TOP10_DHW_Temp === undefined ) { return null; }\n\n\n/*\nInformation\nDefault Panasonic behaviour:\nOn remote controller:\n////////////////////\n// Press ForceDHW //\n////////////////////\n1 - Current OperatingMode is stored.\n2 - Pump goes to DHW-Only\n3 - Threewayvalve to position DHW\n4 - Compressor on\n\n*** DHW Run ***\n\nWhen the target temperature is reached, then:\n5 - Pump OperatingMode goes back to stored mode\n6 - Threeway valve to position HEAT\n7 - ForceDHW is disabled (automatically)\n8 - Continue normal operation in HEAT.\n\nWhen setting ForceDHW through MQTT/Heishamon, step 1, 2 and 5 are not done. This needs to be done manually.\nBut step 7 is done. For the end of the ForceDHW run, listening to the state change of ForceDHW from 1 to 0 is working.\n\nSame for Sterelization run\n\nWhen the compressor stops, the ell element continues to to heat up water to the target.\nWhen temperature reached: \nThe Threeway valve goes to HEAT mode, \nThe water flow stops. \nWhen the temperature drops low enough, the Sterelization run toggle is set to 0.\n\n*/\n////////////////////////////////////////////////////////////////////////////////\n//                           START OF THE CYCLE                               //\n////////////////////////////////////////////////////////////////////////////////\n// START Force DHW cycle\nif (msg.topic == 'DHW' && msg.payload == 1 && TOP10_DHW_Temp < DHW_threshold_upper && F_SOLAR.function_active_state != 1) {         // There is a temperature condition to start DHW heating or not. Change to your own desire.\n    // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    \n    global.set('TOP2_Force_DHW_State', undefined, \"file\"); // To prevent early DHW-END trigger\n    \n    old_OM = TOP4_Operating_Mode_State;\n        if (TOP4_Operating_Mode_State == 7) { old_OM = 2; }\n        if (TOP4_Operating_Mode_State == 8) { old_OM = 6; }\n    if (F_stored_next_operating_mode === undefined) { global.set('F_stored_next_operating_mode', old_OM, \"file\"); msg99.payload = 'Stored next operating mode is set to ' + old_OM; node.send([null, null, null, null, msg99]); }\n\n    setTimeout(function() { // Operation mode change\n        msg1.payload = 3;\n        if (TOP4_Operating_Mode_State == 3) { msg99.payload = 'Operation mode already (3)DHW-Only'; }\n        if (TOP4_Operating_Mode_State != 3) { msg99.payload = 'Operation mode change to (3)DHW-Only';  }\n        node.send([null, null, null, null, msg99]);  // send new_OM\n        if (TOP4_Operating_Mode_State != 3) { node.send([msg1,null]); }\n    }, 2500);\n\n    setTimeout(function () { // Set ForceDHW\n        msg2.payload = 1;\n            global.set('Force_DHW_active', 1, \"file\");\n            global.set('F_RTC.automation_active', 0, \"file\");\n        msg99.payload = 'Enable ForceDHW';\n        node.send([null, msg2, null, null, msg99]);\n    }, 12500);\n    return null;\n}\n\n// START Force Sterilization cycle\nif (msg.topic == 'Sterilization' && msg.payload == 1  && F_SOLAR.function_active_state != 1) {\n        // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    \n    global.set('TOP69_Sterilization_State', undefined, \"file\"); // To prevent early Sterelization-End trigger\n\n    old_OM = TOP4_Operating_Mode_State;\n    if (TOP4_Operating_Mode_State == 7) { old_OM = 2; }\n    if (TOP4_Operating_Mode_State == 8) { old_OM = 6; }\n    if (F_stored_next_operating_mode === undefined) { global.set('F_stored_next_operating_mode', old_OM, \"file\"); msg99.payload = 'Stored next operating mode is set to ' + old_OM; node.send([null, null, null, null, msg99]); }\n\n    setTimeout(function () { // Operation mode change\n        msg1.payload = 3;\n        if (TOP4_Operating_Mode_State == 3) { msg99.payload = 'Operation mode already (3)DHW-Only'; }\n        if (TOP4_Operating_Mode_State != 3) { msg99.payload = 'Operation mode change to (3)DHW-Only'; }\n        node.send([null, null, null, null, msg99]);  // send new_OM\n        if (TOP4_Operating_Mode_State != 3) { node.send([msg1, null]); }\n    }, 2500);\n\n    setTimeout(function () { // Set ForceSterilization\n        msg2.payload = 1; msg2.topic = 'Sterilization';\n        global.set('Sterilization_active', 1, \"file\");\n        global.set('F_RTC.automation_active', 0, \"file\");\n        msg99.payload = 'Enable ForceSterilization';\n        node.send([null, null, msg2, null, msg99]);\n    }, 12500);\n    return null;\n\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//                      END OF THE CYCLE                                      //\n////////////////////////////////////////////////////////////////////////////////\n\n// END FORCE DHW cycle\n//////////////////////\nif (Force_DHW_active == 1 && (TOP2_Force_DHW_State == 0 || (msg.topic == 'DHW' && msg.payload == 0))) {\n    // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    \n    new_OM = F_stored_next_operating_mode;\n    global.set('Force_DHW_active', 0, \"file\");\n    var delay = 1000*60*15; // 15 minutes delay\n    \n    if (TOP2_Force_DHW_State == 1) { // This means that the user disabled ForceDHW via GUI.. Should react fast instead of timely.\n        msg2.payload = 0;\n        msg99.payload = 'Disabled ForceDHW. Reverting Operating Mode in 10 seconds'; \n        node.send([null, msg2, null, null, msg99]);\n        delay = 1000*10; // 10 seconds\n    }\n    else { msg99.payload = 'End ForceDHW cycle detected. Reverting Operating Mode in 15 minutes...'; node.send([null, null, null, null, msg99]);     }\n\n    setTimeout(function() { // Revert Operating Mode\n        msg1.payload = new_OM;\n        global.set('F_stored_next_operating_mode', undefined, \"file\");\n        msg99.payload = 'Revert to previous operating mode: ' + new_OM;\n        node.send([msg1, null, null, null, msg99]);\n    }, delay);\n    return null;\n}\n\n// END Sterilization cycle (Automatic)\n//////////////////////////////////////\nif (Sterilization_active == 1 && (TOP69_Sterilization_State == 0 || (msg.payload == 0 && msg.topic == 'Sterilization'))) {\n    // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    \n    new_OM = F_stored_next_operating_mode;\n    global.set('Sterilization_active', 0, \"file\");\n    var delay = 1000 * 10; // 10 seconds delay\n\n    if (TOP69_Sterilization_State == 1) { // This means that the user disabled ForceSterilization via GUI.. Should react fast instead of timely.\n        msg2.payload = 0;\n        msg99.payload = 'Disabled ForceSterilization. Reverting Operating Mode in 10 seconds';\n        node.send([null, null, msg2, null, msg99]);\n    }\n    else { msg99.payload = 'End ForceSterilization cycle detected. Reverting Operating Mode in 10 seconds...'; node.send([null, null, null, null, msg99]); }\n\n    setTimeout(function () { // Revert Operating Mode\n        msg1.payload = new_OM;\n        global.set('F_stored_next_operating_mode', undefined, \"file\");\n        msg99.payload = 'Revert to previous operating mode: ' + new_OM;\n        node.send([msg1, null, null, null, msg99]);\n    }, delay);\n    return null;\n}\n\n\nvar TOP9_DHW_Target_Temp_Secondairy = global.get('TOP9_DHW_Target_Temp_Secondairy', \"file\");\nvar DHW_boost_state = global.get('DHW_boost_state', \"file\");\n\n// END DHW_boost_state cycle (Automatic)\nif (DHW_boost_state == 1 && Force_DHW_active == 1) {\n    if ((TOP2_Force_DHW_State == 0) || (msg.topic == 'DHW' && msg.payload == 0)) {\n        new_OM = F_stored_next_operating_mode;\n        \n        // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\n        if (TOP4_Operating_Mode_State != F_stored_next_operating_mode && F_stored_next_operating_mode !== undefined)\n            {setTimeout(function(){\n                msg1.payload = new_OM;                                      // set operationmode to remove DHW\n                node.send([msg1,null,null,null]);                           // send msg1 only, other outputs are null\n            }, 5000);}\n        global.set('Force_DHW_active',0,\"file\");\n        global.set('F_stored_next_operating_mode',undefined,\"file\");\n        msg99.payload = 'Stored next operating mode is removed'; node.send([null, null, null, null, msg99]);\n        msg2.payload = 0;                                               // Turn off Force DHW mode\n        msg2.topic = 'DHW End';\n        \n        var dhw_sp_low = global.get('F_SOLAR.dhw_sp_low',\"file\");\n        if (dhw_sp_low === undefined){ dhw_sp_low = null;}\n        \n        msg4.payload = dhw_sp_low;  msg4.topic = 'dhw_sp'\n        \n        return [null, msg2,null,msg4];\n    }\n}",
        "outputs": 5,
        "timeout": "0",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3050,
        "y": 2540,
        "wires": [
            [
                "6021a18a5e9c23cb"
            ],
            [
                "56d4bfa341d3eded",
                "84e59fd6bd8697ab"
            ],
            [
                "4f62466c41bb3667",
                "c39da0815cb8bf48"
            ],
            [
                "af9178426366861c"
            ],
            [
                "9815e18a26e4cd85"
            ]
        ],
        "outputLabels": [
            "Operation mode",
            "Force DHW",
            "Force Sterilization",
            "DHW SP Manager",
            "to log"
        ]
    },
    {
        "id": "56d4bfa341d3eded",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "ForceDHW_Scheduler",
        "mode": "link",
        "links": [
            "2ef668070522b01d",
            "5a3e1810b8f2135a"
        ],
        "x": 3415,
        "y": 2420,
        "wires": []
    },
    {
        "id": "4f62466c41bb3667",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "FoceSterilization_Scheduler",
        "mode": "link",
        "links": [
            "20e2544a8277d8c2"
        ],
        "x": 3415,
        "y": 2580,
        "wires": []
    },
    {
        "id": "52fea7493d509740",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to Force DHW mode",
        "info": "",
        "x": 3590,
        "y": 2520,
        "wires": []
    },
    {
        "id": "259ee5343901c67c",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to Sterilization Mode",
        "info": "",
        "x": 3590,
        "y": 2560,
        "wires": []
    },
    {
        "id": "c959ee1f94c31c45",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "OperationMode_Scheduler",
        "mode": "link",
        "links": [
            "e73d130bb1839444"
        ],
        "x": 3205,
        "y": 2400,
        "wires": []
    },
    {
        "id": "207821d9fd0df31e",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to Operation Mode",
        "info": "",
        "x": 3580,
        "y": 2480,
        "wires": []
    },
    {
        "id": "cd34d205525225ef",
        "type": "inject",
        "z": "35d210f042827344",
        "d": true,
        "g": "b63004182c33d3b9",
        "name": "Check each minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "trigger",
        "payload": "1",
        "payloadType": "num",
        "x": 2820,
        "y": 2480,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "27ad7f4523c5ac06",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning for forced DHW runs",
        "info": "",
        "x": 2560,
        "y": 2520,
        "wires": []
    },
    {
        "id": "07c12775c5faacae",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Function for execution of plan",
        "info": "",
        "x": 3080,
        "y": 2480,
        "wires": []
    },
    {
        "id": "284a4b5256066615",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning for Forced Sterilization runs",
        "info": "",
        "x": 2580,
        "y": 2560,
        "wires": []
    },
    {
        "id": "1d18cc8f09cfbdbc",
        "type": "change",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Topic Sterilization",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Sterilization",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2830,
        "y": 2560,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "8c00f7e622b82f63",
        "type": "change",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Topic DHW",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2810,
        "y": 2520,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "ef28d0205d50cb26",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning_ForceDHW_topic",
        "links": [
            "317942154b6d1cb3",
            "894b093e7020e766"
        ],
        "x": 2385,
        "y": 2520,
        "wires": [
            [
                "8c00f7e622b82f63"
            ]
        ]
    },
    {
        "id": "d0fda364deccc7f0",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning_ForceSterilization_topic",
        "links": [
            "92b636a9597d91b2",
            "0a683587ca4fc25c",
            "6cf298fc9c936de6"
        ],
        "x": 2385,
        "y": 2560,
        "wires": [
            [
                "1d18cc8f09cfbdbc"
            ]
        ]
    },
    {
        "id": "47fe4c3f4736bcc8",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "There is more logic required to execute Force DHW / sterilization runs. Multiple items switches",
        "info": "",
        "x": 2680,
        "y": 2400,
        "wires": []
    },
    {
        "id": "845e5ae092891549",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "This Block retreives the GUI input and pushes it to variables",
        "info": "",
        "x": 280,
        "y": 80,
        "wires": []
    },
    {
        "id": "016f1f556139c597",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Evaluate each timestamp",
        "info": "",
        "x": 1310,
        "y": 2460,
        "wires": []
    },
    {
        "id": "67b90bdf1dc732d0",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "If timestamp matches >> output ",
        "info": "",
        "x": 1810,
        "y": 2440,
        "wires": []
    },
    {
        "id": "73c1eabffdfe4783",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Enable",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1080,
        "y": 120,
        "wires": []
    },
    {
        "id": "f5602874161743c8",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Schedule_xx topics",
        "func": "// variables to load on boot and periodically for dasboard\n\nvar var1 = \"Schedule_1\"\nvar var2 = \"Schedule_2\"\nvar var3 = \"Schedule_3\"\nvar var4 = \"Schedule_4\"\nvar var5 = \"Schedule_5\"\nvar var6 = \"Schedule_6\"\nvar var7 = \"Schedule_7\"\nvar var8 = \"Schedule_8\"\nvar var9 = \"Schedule_9\"\nvar var10= \"Schedule_10\"\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={};\n\n\nmsg1.payload = var1; msg2.payload = var2; msg3.payload = var3; msg4.payload = var4; msg5.payload = var5; msg6.payload = var6;\nmsg7.payload = var7; msg8.payload = var8; msg9.payload = var9; msg10.payload = var10;\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 180,
        "wires": [
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ],
            [
                "698336312f37f38e"
            ]
        ],
        "outputLabels": [
            "Schedule_1_Description",
            "Schedule_1_day",
            "Schedule_1_hour",
            "Schedule_1_minutes",
            "Schedule_1_state",
            "Schedule_1_topic",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "698336312f37f38e",
        "type": "function",
        "z": "35d210f042827344",
        "name": "GET global / topics",
        "func": "// variables to load on boot for dasboard\n\nvar schedule_topic = msg.payload;\n\nvar msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={};//, msg9={}, msg10={};\n\n\nmsg1.payload = global.get(schedule_topic+'_Description',\"file\");\nmsg2.payload = global.get(schedule_topic+'_day',\"file\");\nmsg3.payload = global.get(schedule_topic+'_hour',\"file\");\nmsg4.payload = global.get(schedule_topic+'_minutes',\"file\");\nmsg5.payload = global.get(schedule_topic+'_state',\"file\");\nmsg6.payload = global.get(schedule_topic+'_action',\"file\");\nmsg7.payload = global.get(schedule_topic+'_override',\"file\");\nmsg8.payload = global.get(schedule_topic+'_condition',\"file\");\nmsg6.tooltip = '';\nif (msg6.payload == 'Room setpoint RTC' || msg6.payload == 'Water setpoint (heat shift)' || msg6.payload == 'Water setpoint (direct)' || msg6.payload == 'Room setpoint RTC') {\n    msg6.tooltip = global.get(schedule_topic+'_setpoint',\"file\");\n    msg6.tooltip = '<font size = 4px> Target is: ' + msg6.tooltip + ' °C</font>'\n}\nif (msg6.payload == 'toggle item') {\n    var items = global.get(schedule_topic + '_toggle_item', \"file\");\n    \n    if (items !== undefined) {\n        var state = items.State;\n        if (state === false) {state = 'off'}\n        if (state === true) { state = 'on' }\n        var list;\n        if (items.WAR === true)         {list = 'WAR'}\n        if (items.RTC === true)         { if (list !== undefined) { list += ', RTC' } else { list = 'RTC' } }\n        if (items.SoftStart === true)   { if (list !== undefined) { list += ', SoftStart' } else { list = 'SoftStart' } }\n        if (items.SolarDHW === true)    { if (list !== undefined) { list += ', Solar²DHW' } else { list = 'Solar²DHW' } }\n            \n        msg6.tooltip = 'Turn ' + state + ': ' + list;\n    }\n    if (items === undefined) { msg6.payload = '' }\n}\n\n\n\n\n\nmsg1.topic = schedule_topic+'_Description';\nmsg2.topic = schedule_topic+'_day';\nmsg3.topic = schedule_topic+'_hour';\nmsg4.topic = schedule_topic+'_minutes';\nmsg5.topic = schedule_topic+'_state';\nmsg6.topic = schedule_topic+'_action';\nmsg7.topic = schedule_topic+'_override';\nmsg8.topic = schedule_topic+'_condition';\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8]; ",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ],
            [
                "58449f97376b98d9"
            ]
        ],
        "outputLabels": [
            "Schedule_x_Description",
            "Schedule_x_day",
            "Schedule_x_hour",
            "Schedule_x_minutes",
            "Schedule_x_state",
            "Schedule_x_topic",
            "Schedule_x_override",
            "Schedule_x_condition"
        ]
    },
    {
        "id": "79c82c463c263553",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_1_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_1_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 180,
        "wires": [
            [
                "e3d4b9d611e649e0"
            ],
            [
                "8fbe0ef4995f8e6a"
            ],
            [
                "243fa1e4e8cef5d0"
            ],
            [
                "40f0401e20235a07"
            ],
            [
                "98499b42fe5f6688"
            ],
            [
                "57dddda65db516a2"
            ],
            [
                "1372ccca982b4f0a"
            ],
            [
                "f6acd15f36324736"
            ]
        ]
    },
    {
        "id": "58449f97376b98d9",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "Scheduler_Load on boot",
        "mode": "link",
        "links": [
            "2bde70f7ec8740ee",
            "abafb2efcd2f804a",
            "8e1f89a719096934",
            "750f2ca3ae772d5f",
            "598c7fd8d6681c1a",
            "ad4ce3a792ad76a6",
            "82508e256cc50ce7",
            "d73b8b0113a830fe",
            "357e2ed012a9bb42",
            "df58bbc82c06fc25",
            "fe86b16e9cc37804"
        ],
        "x": 615,
        "y": 180,
        "wires": []
    },
    {
        "id": "2bde70f7ec8740ee",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 180,
        "wires": [
            [
                "79c82c463c263553"
            ]
        ]
    },
    {
        "id": "1372ccca982b4f0a",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override1",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_1_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 180,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "86fe7a6080854779",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 13,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Power on",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 2780,
        "y": 120,
        "wires": []
    },
    {
        "id": "d8e5ca53b22c577d",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 29,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 340,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "e411cdb2b3617a7e",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 28,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 340,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "0fcdf0e74a334edb",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 30,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 340,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "ce3b0c94ff7a8500",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch2",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 26,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_2_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 340,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "bbc0fc2f4315d9a0",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input2",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 27,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_2_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 340,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "bc2393868b4f66ed",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action2",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 31,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 340,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "9cf59f59ab99f77f",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_2_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_2_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 340,
        "wires": [
            [
                "ce3b0c94ff7a8500"
            ],
            [
                "bbc0fc2f4315d9a0"
            ],
            [
                "e411cdb2b3617a7e"
            ],
            [
                "d8e5ca53b22c577d"
            ],
            [
                "0fcdf0e74a334edb"
            ],
            [
                "bc2393868b4f66ed"
            ],
            [
                "479965c26a5f5d15"
            ],
            [
                "c904ad7bb0b016d8"
            ]
        ]
    },
    {
        "id": "8e1f89a719096934",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 340,
        "wires": [
            [
                "9cf59f59ab99f77f"
            ]
        ]
    },
    {
        "id": "479965c26a5f5d15",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override2",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 32,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_2_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 340,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "1f3a2d4f54594807",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\n\n\nif (msg.topic == 'Schedule_1_state')  { node.send([msg, null, null, null, null, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_2_state')  { node.send([null, msg, null, null, null, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_3_state')  { node.send([null, null, msg, null, null, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_4_state')  { node.send([null, null, null, msg, null, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_5_state')  { node.send([null, null, null, null, msg, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_6_state')  { node.send([null, null, null, null, null, msg, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_7_state')  { node.send([null, null, null, null, null, null, msg, null, null, null]) ;}\nif (msg.topic == 'Schedule_8_state')  { node.send([null, null, null, null, null, null, null, msg, null, null]) ;}\nif (msg.topic == 'Schedule_9_state')  { node.send([null, null, null, null, null, null, null, null, msg, null]) ;}\nif (msg.topic == 'Schedule_10_state') { node.send([null, null, null, null, null, null, null, null, null, msg]) ;}\n",
        "outputs": 10,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1215,
        "y": 1740,
        "wires": [
            [
                "e3d4b9d611e649e0"
            ],
            [
                "ce3b0c94ff7a8500"
            ],
            [
                "1a27db997a27a1dd"
            ],
            [
                "b01c2ff9f7469f79"
            ],
            [
                "5bd339d22882aa07"
            ],
            [
                "67c2c134c50ed462"
            ],
            [
                "87241aa5e6a2ccf7"
            ],
            [
                "62e00829c19bec7c"
            ],
            [
                "5a75949723c259df"
            ],
            [
                "bc8c769ccc26fa5d"
            ]
        ],
        "outputLabels": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10"
        ],
        "l": false
    },
    {
        "id": "b4ab0c39c255e049",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_Description",
        "func": "global.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "a2cff14086311a49",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_day",
        "func": "\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "c7cfdf9552b03480",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "6e09f0a29207d5c9",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "f5c4b9e33c243507",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_action",
        "func": "global.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "4fc691a1b1204c01",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_override",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic, msg.payload, \"file\");\n\nif (msg.topic == 'Schedule_1_override') { node.send([msg, null, null, null, null, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_2_override') { node.send([null, msg, null, null, null, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_3_override') { node.send([null, null, msg, null, null, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_4_override') { node.send([null, null, null, msg, null, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_5_override') { node.send([null, null, null, null, msg, null, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_6_override') { node.send([null, null, null, null, null, msg, null, null, null, null]) ;}\nif (msg.topic == 'Schedule_7_override') { node.send([null, null, null, null, null, null, msg, null, null, null]) ;}\nif (msg.topic == 'Schedule_8_override') { node.send([null, null, null, null, null, null, null, msg, null, null]) ;}\nif (msg.topic == 'Schedule_9_override') { node.send([null, null, null, null, null, null, null, null, msg, null]) ;}\nif (msg.topic == 'Schedule_10_override') { node.send([null, null, null, null, null, null, null, null, null, msg]) ;}\n",
        "outputs": 10,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2925,
        "y": 1740,
        "wires": [
            [
                "1372ccca982b4f0a"
            ],
            [
                "479965c26a5f5d15"
            ],
            [
                "57520972cf8f3282"
            ],
            [
                "73e5b776ee37e929"
            ],
            [
                "fd75ca33fe4a9589"
            ],
            [
                "4470d0d9384e5146"
            ],
            [
                "0a155882d5693fda"
            ],
            [
                "fe24caf7cb4e92d3"
            ],
            [
                "611bf69e3ab85546"
            ],
            [
                "a477e5b86fe9c792"
            ]
        ],
        "outputLabels": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10"
        ],
        "l": false
    },
    {
        "id": "7a42e5778bf41519",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 38,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 500,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "d73541639351e613",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 37,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 500,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "871d8f6de9ad1a98",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 39,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 500,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "1a27db997a27a1dd",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch3",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 35,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_3_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 500,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "8a47deae609a4257",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input3",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 36,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_3_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 500,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "d15b2d0e98e01f65",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action3",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 40,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 500,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "cf847f1078676d93",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_3_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_3_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 500,
        "wires": [
            [
                "1a27db997a27a1dd"
            ],
            [
                "8a47deae609a4257"
            ],
            [
                "d73541639351e613"
            ],
            [
                "7a42e5778bf41519"
            ],
            [
                "871d8f6de9ad1a98"
            ],
            [
                "d15b2d0e98e01f65"
            ],
            [
                "57520972cf8f3282"
            ],
            [
                "b24f970c2d6262f9"
            ]
        ]
    },
    {
        "id": "750f2ca3ae772d5f",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 500,
        "wires": [
            [
                "cf847f1078676d93"
            ]
        ]
    },
    {
        "id": "57520972cf8f3282",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override3",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 41,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_3_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 500,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "5f74425ca9610401",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 47,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 660,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "612ac224e061cc79",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 46,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 660,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "0710a190d551707c",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 48,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 660,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "b01c2ff9f7469f79",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch4",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 44,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_4_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 660,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "9f04561329aa26f4",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input4",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 45,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_4_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 660,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "2a7fb72a1781fe14",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action4",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 49,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 660,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "a484cb58a507c3f2",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_4_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_4_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 660,
        "wires": [
            [
                "b01c2ff9f7469f79"
            ],
            [
                "9f04561329aa26f4"
            ],
            [
                "612ac224e061cc79"
            ],
            [
                "5f74425ca9610401"
            ],
            [
                "0710a190d551707c"
            ],
            [
                "2a7fb72a1781fe14"
            ],
            [
                "73e5b776ee37e929"
            ],
            [
                "e90e53734d73b6da"
            ]
        ]
    },
    {
        "id": "598c7fd8d6681c1a",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 660,
        "wires": [
            [
                "a484cb58a507c3f2"
            ]
        ]
    },
    {
        "id": "73e5b776ee37e929",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override4",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 50,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_4_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 660,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "a5c85f0332e4746d",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 56,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 820,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "53c6208ebe18f176",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 55,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 820,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "c649a3a840183e86",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 57,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 820,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "5bd339d22882aa07",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch5",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 53,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_5_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 820,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "cdd91f4f0777b0fc",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input5",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 54,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_5_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 820,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "9de114ee921577b7",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action5",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 58,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 820,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "c2dfc46bffb56c5f",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_5_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_5_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 820,
        "wires": [
            [
                "5bd339d22882aa07"
            ],
            [
                "cdd91f4f0777b0fc"
            ],
            [
                "53c6208ebe18f176"
            ],
            [
                "a5c85f0332e4746d"
            ],
            [
                "c649a3a840183e86"
            ],
            [
                "9de114ee921577b7"
            ],
            [
                "fd75ca33fe4a9589"
            ],
            [
                "82d6f38bd9764a93"
            ]
        ]
    },
    {
        "id": "ad4ce3a792ad76a6",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 820,
        "wires": [
            [
                "c2dfc46bffb56c5f"
            ]
        ]
    },
    {
        "id": "fd75ca33fe4a9589",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override5",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 59,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_5_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 820,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "3103abf9a680a9ea",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 65,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 980,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "a1866018a9f27226",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 64,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 980,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "51e9aad82e544c85",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 66,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 980,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "67c2c134c50ed462",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch6",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 62,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_6_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 980,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "1e30fa210ee856be",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input6",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 63,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_6_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 980,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "e72e318e1a456090",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action6",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 67,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 980,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "ab40d0b571d81193",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_6_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_6_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 980,
        "wires": [
            [
                "67c2c134c50ed462"
            ],
            [
                "1e30fa210ee856be"
            ],
            [
                "a1866018a9f27226"
            ],
            [
                "3103abf9a680a9ea"
            ],
            [
                "51e9aad82e544c85"
            ],
            [
                "e72e318e1a456090"
            ],
            [
                "4470d0d9384e5146"
            ],
            [
                "773eba4d817b8b93"
            ]
        ]
    },
    {
        "id": "82508e256cc50ce7",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 980,
        "wires": [
            [
                "ab40d0b571d81193"
            ]
        ]
    },
    {
        "id": "4470d0d9384e5146",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override6",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 68,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_6_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 980,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "f95cadbe3c3cd2f4",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 74,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 1140,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "fcf03506100353c9",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 73,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1140,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "9fc9947dc30386f3",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 75,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 1140,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "87241aa5e6a2ccf7",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch7",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 71,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_7_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1140,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "0a54cb095adcb787",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input7",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 72,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_7_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1140,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "436b41690b969348",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action7",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 76,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 1140,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "a4e2c87bf04e065d",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_7_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_7_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1140,
        "wires": [
            [
                "87241aa5e6a2ccf7"
            ],
            [
                "0a54cb095adcb787"
            ],
            [
                "fcf03506100353c9"
            ],
            [
                "f95cadbe3c3cd2f4"
            ],
            [
                "9fc9947dc30386f3"
            ],
            [
                "436b41690b969348"
            ],
            [
                "0a155882d5693fda"
            ],
            [
                "f314a9b676182c11"
            ]
        ]
    },
    {
        "id": "d73b8b0113a830fe",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 1140,
        "wires": [
            [
                "a4e2c87bf04e065d"
            ]
        ]
    },
    {
        "id": "0a155882d5693fda",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override7",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 77,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_7_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 1140,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "f93699165fe750ce",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 83,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 1300,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "b1956b6593a4a597",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 82,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1300,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "0b60ef37733490bf",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 84,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 1300,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "62e00829c19bec7c",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch8",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 80,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_8_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1300,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "32e23a19047b877e",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input8",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 81,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_8_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1300,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "f511b9d4cedb0977",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action8",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 85,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 1300,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "e2a02a4bdcbb0432",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_8_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_8_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "62e00829c19bec7c"
            ],
            [
                "32e23a19047b877e"
            ],
            [
                "b1956b6593a4a597"
            ],
            [
                "f93699165fe750ce"
            ],
            [
                "0b60ef37733490bf"
            ],
            [
                "f511b9d4cedb0977"
            ],
            [
                "fe24caf7cb4e92d3"
            ],
            [
                "c8f137bcff651fba"
            ]
        ]
    },
    {
        "id": "357e2ed012a9bb42",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 1300,
        "wires": [
            [
                "e2a02a4bdcbb0432"
            ]
        ]
    },
    {
        "id": "fe24caf7cb4e92d3",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override8",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 86,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_8_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 1300,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "5b138a18f47114e3",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 92,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 1460,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "37d57c847d1b5ff8",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 91,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1460,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "663c8cf477dc16cb",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 93,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 1460,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "5a75949723c259df",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch9",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 89,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_9_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1460,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "d77c206846bfe16d",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input9",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 90,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_9_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1460,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "11958cca6fba73cb",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action9",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 94,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 1460,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "848ddfb953511b13",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_9_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_9_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1460,
        "wires": [
            [
                "5a75949723c259df"
            ],
            [
                "d77c206846bfe16d"
            ],
            [
                "37d57c847d1b5ff8"
            ],
            [
                "5b138a18f47114e3"
            ],
            [
                "663c8cf477dc16cb"
            ],
            [
                "11958cca6fba73cb"
            ],
            [
                "611bf69e3ab85546"
            ],
            [
                "a147fe89247aa73b"
            ]
        ]
    },
    {
        "id": "df58bbc82c06fc25",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 1460,
        "wires": [
            [
                "848ddfb953511b13"
            ]
        ]
    },
    {
        "id": "611bf69e3ab85546",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override9",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 95,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_9_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 1460,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "e20f0e179a77b100",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Hour10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 101,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_hour",
        "topicType": "str",
        "className": "",
        "x": 1960,
        "y": 1620,
        "wires": [
            [
                "c7cfdf9552b03480"
            ]
        ]
    },
    {
        "id": "88872f26b2ce5e9b",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Day10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 100,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1620,
        "wires": [
            [
                "a2cff14086311a49"
            ]
        ]
    },
    {
        "id": "1759cf2fcc472812",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Minutes10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 102,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_minutes",
        "topicType": "str",
        "className": "",
        "x": 2250,
        "y": 1620,
        "wires": [
            [
                "6e09f0a29207d5c9"
            ]
        ]
    },
    {
        "id": "bc8c769ccc26fa5d",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "switch10",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 98,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_10_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1620,
        "wires": [
            [
                "1f3a2d4f54594807"
            ]
        ]
    },
    {
        "id": "99bf0b7454b3b5c0",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input10",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 99,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_10_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1620,
        "wires": [
            [
                "b4ab0c39c255e049"
            ]
        ]
    },
    {
        "id": "219fcc0259998439",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Action10",
        "label": "",
        "tooltip": "{{msg.tooltip}}",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 103,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Heat pump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "Heat pump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp on",
                "value": "NightReductionWaterTempOn",
                "type": "str"
            },
            {
                "label": "Nightreduction water temp off",
                "value": "NightReductionWaterTempOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "Z",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint on",
                "value": "NightReductionRoomSetpointOn",
                "type": "str"
            },
            {
                "label": "Nightreduction room setpoint off",
                "value": "NightReductionRoomSetpointOff",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "XX",
                "type": "str"
            },
            {
                "label": "Set room setpoint (RTC)",
                "value": "Room setpoint RTC",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat shift)",
                "value": "Water setpoint (heat shift)",
                "type": "str"
            },
            {
                "label": "Set water setpoint (heat direct)",
                "value": "Water setpoint (direct)",
                "type": "str"
            },
            {
                "label": "Set DHW setpoint",
                "value": "DHW setpoint",
                "type": "str"
            },
            {
                "label": "Toggle a function",
                "value": "toggle item",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 1620,
        "wires": [
            [
                "f5c4b9e33c243507",
                "525e9bfc80e7f5e5",
                "41e3d65e44f729b3"
            ]
        ]
    },
    {
        "id": "a43e0949567dc0ef",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "Schedule_10_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_10_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_override",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_condition",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 880,
        "y": 1620,
        "wires": [
            [
                "bc8c769ccc26fa5d"
            ],
            [
                "99bf0b7454b3b5c0"
            ],
            [
                "88872f26b2ce5e9b"
            ],
            [
                "e20f0e179a77b100"
            ],
            [
                "1759cf2fcc472812"
            ],
            [
                "219fcc0259998439"
            ],
            [
                "a477e5b86fe9c792"
            ],
            [
                "8e3cfd35030617d7"
            ]
        ]
    },
    {
        "id": "fe86b16e9cc37804",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "58449f97376b98d9"
        ],
        "x": 755,
        "y": 1620,
        "wires": [
            [
                "a43e0949567dc0ef"
            ]
        ]
    },
    {
        "id": "a477e5b86fe9c792",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "name": "Override10",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "2b0c8e162d47abbb",
        "order": 104,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "Schedule_10_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2790,
        "y": 1620,
        "wires": [
            [
                "4fc691a1b1204c01"
            ]
        ]
    },
    {
        "id": "4d90f21594adec55",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Schedule_xx topics",
        "func": "// variables to load on boot and periodically for dasboard\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={};\n\nmsg1.topic = \"Schedule_1\"\nmsg2.topic = \"Schedule_2\"\nmsg3.topic = \"Schedule_3\"\nmsg4.topic = \"Schedule_4\"\nmsg5.topic = \"Schedule_5\"\nmsg6.topic = \"Schedule_6\"\nmsg7.topic = \"Schedule_7\"\nmsg8.topic = \"Schedule_8\"\nmsg9.topic = \"Schedule_9\"\nmsg10.topic= \"Schedule_10\"\n\nmsg1.payload = msg.payload;\nmsg2.payload = msg.payload;\nmsg3.payload = msg.payload;\nmsg4.payload = msg.payload;\nmsg5.payload = msg.payload;\nmsg6.payload = msg.payload;\nmsg7.payload = msg.payload;\nmsg8.payload = msg.payload;\nmsg9.payload = msg.payload;\nmsg10.payload = msg.payload;\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];\n",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 2560,
        "wires": [
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ],
            [
                "372a2d9c5310236a"
            ]
        ],
        "outputLabels": [
            "Schedule_1_Description",
            "Schedule_1_day",
            "Schedule_1_hour",
            "Schedule_1_minutes",
            "Schedule_1_state",
            "Schedule_1_topic",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "d69f1fa0c38f85ab",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Scheduler in Dashboard",
        "info": "",
        "x": 820,
        "y": 60,
        "wires": []
    },
    {
        "id": "372a2d9c5310236a",
        "type": "no-op",
        "z": "35d210f042827344",
        "name": "",
        "x": 945,
        "y": 2560,
        "wires": [
            [
                "6a48a1a61f8fc344"
            ]
        ],
        "l": false
    },
    {
        "id": "f217f942f56cbfa9",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "Power on Planning",
        "mode": "link",
        "links": [
            "071ac5a0f08a8fdb",
            "d9b3ca8bfaa4c10a"
        ],
        "x": 2025,
        "y": 2480,
        "wires": []
    },
    {
        "id": "e168945122de5aa2",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule",
        "func": "var topic = msg.topic;\nvar state = global.get(topic + '_state', \"file\") || 0;                               // Get state of the agenda item. \nvar F_RTC_automation_active = global.get('F_RTC.automation_active', \"file\");\nvar HP_state = global.get('TOP0_Heatpump_State', \"file\");                          // get the current state of the heatpump. Is it on or off.\n\n\nif (msg.force == 1 && msg.payload == 1 && msg.topic == 'DHW') {\n    if (HP_state == 0) {\n        if (F_RTC_automation_active == 1) { global.set('F_RTC.automation_active', 0, \"file\"); }\n        let msg1 = {}; msg1 = { payload: 1, topic: \"override\" }; node.send([msg1, null]);\n    }\n    let msg2 = {}; msg2 = { payload: 1, topic: \"DHW\" };\n    node.send([null, msg2]);\n}\n\nif (msg.force == 1 && msg.payload == 0 && msg.topic == 'DHW') {\n    let msg2 = {}; msg2 = { payload: 0, topic: \"DHW\" };\n    node.send([null, msg2]);\n}\n\nif (msg.topic == 'Autostart DHW' && msg.payload == 1) {\n    if (HP_state == 0) {\n        let msg1 = {}; msg1 = { payload: 1, topic: \"override\" }; node.send([msg1, null]);\n    }\n    var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode', \"file\");\n    var TOP4_Operating_Mode_State       = global.get('TOP4_Operating_Mode_State', \"file\");\n    var TOP20_ThreeWay_Valve_State      = global.get('TOP20_ThreeWay_Valve_State');\n        if (TOP20_ThreeWay_Valve_State == 1) { return null; } // exit if the 3way valve is already in DHW position...\n    global.set('F_RTC.automation_active', 0, \"file\"); \n    if (F_stored_next_operating_mode === undefined) { global.set('F_stored_next_operating_mode', TOP4_Operating_Mode_State,\"file\"); }\n    let msg5={}; msg5.payload = 3;  // DHW-Only\n    node.send([null,null,null,null,msg5]);\n    global.set('DHW_automation_active', 1, \"file\");\n    return null;\n}\n\nif (msg.topic == 'GUI_DHW_automation_state' && msg.payload == 0) {\n    var TOP20_ThreeWay_Valve_State = global.get('TOP20_ThreeWay_Valve_State');\n        if (TOP20_ThreeWay_Valve_State == 0) { return null; } // exit if the 3way valve is in ROOM position....\n    var F_stored_next_operating_mode = global.get('F_stored_next_operating_mode', \"file\");\n    if (F_stored_next_operating_mode !== undefined) {\n        let msg5 = {};\n        msg5.payload = F_stored_next_operating_mode;\n        node.send([null, null, null, null, msg5]);\n        global.set('DHW_automation_active', 0, \"file\");\n    }\n    return null;\n}\n\n\n\nif (state == 0)                                                            // Is it disabled? \n{ return null; }                                                           // output null to all pins and exit. else to continue.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse {                                                                       // if not, continue...\n    var day_check = global.get(topic + '_day', \"file\");                   // get schedule variables.\n    var hour_check = global.get(topic + '_hour', \"file\");                  // get schedule variables.\n    var minutes_check = global.get(topic + '_minutes', \"file\");               // get schedule variables.\n\n    var solar_block_scheduler = global.get('solar_block_scheduler', \"file\");\n    var F_SOLAR = global.get('F_SOLAR', \"file\");\n\n    var F_stored_next_operating_mode = global.get('F_stored_next_operating_mode', \"file\");\n\n\n    var block_it = false;\n    if (solar_block_scheduler == true && F_SOLAR.function_active_state == 1) {\n        block_it = true;\n\n    }\n\n\n\n    // Check the programmed day compared current day.\n    if (day_check.includes(msg.payload[0])) { day_check = { payload: 1, topic: \"DayOfTheWeek\" }; }\n    else { day_check = { payload: 0, topic: \"DayOfTheWeek\" }; }\n\n    ////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n\n    // Check the programmed hour compared current hour.        \n    if (msg.payload[1] == hour_check) { hour_check = { payload: 1, topic: \"Hour\" }; }\n    else { hour_check = { payload: 0, topic: \"Hour\" }; }\n\n    ////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n\n    // Check the programmed minutes compared current minutes.\n    if (msg.payload[2] == minutes_check) { minutes_check = { payload: 1, topic: \"Minutes\" }; }\n    else { minutes_check = { payload: 0, topic: \"Minutes\" }; }\n\n    ////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n\n    if (day_check.payload == 1 && hour_check.payload == 1 && minutes_check.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n    {\n        var CurrentTime = new Date().getTime();\n        let msg1 = {}, msg2 = {}, msg3 = {}, msg4 = {}, msg5 = {}, msg6 = {}, msg7 = {}, msg8 = {};\n        msg1.payload = 99; msg2.payload = 99; msg3.payload = 99; msg4.payload = 99; msg5.payload = 99; msg6.payload = 99; msg7.payload = 99;\n        //\n        //\n        //\n        ////////////////////////////////////////////////////////////////\n        //  Override the current powerstate of heat pump? //////////////\n        //\n        var override = global.get(topic + '_override', \"file\");         // get the current override state.\n        var NightReductionRoomSetpoint_state = global.get('NightReductionRoomSetpoint.state', \"file\");\n        ////////////////////////////////////////////////////////////////\n\n        var CurrentDHW = global.get('TOP10_DHW_Temp');\n\n        // ########## CONDITIONS #######################################\n        var msg99={};\n        var condition = global.get(msg.topic + '_condition', \"file\");\n        if (condition !== undefined) {\n            for (const value of condition) {\n                var Schedule_conditions_condition_xx = global.get('Schedule_conditions.' + value, \"file\");\n                if (Schedule_conditions_condition_xx === undefined) { Schedule_conditions_condition_xx = {}; }\n                if (Schedule_conditions_condition_xx.value === undefined || Schedule_conditions_condition_xx.value === null) { Schedule_conditions_condition_xx.value = 100000; }\n\n                if (condition !== undefined) { msg99.topic = 'Scheduler condition'; }\n\n                // DHW_temperature\n                if (Schedule_conditions_condition_xx.type == 'DHW_temperature') {\n                    if (Schedule_conditions_condition_xx.value !== undefined && CurrentDHW > Schedule_conditions_condition_xx.value) { msg99.payload = 'DHW temperature: ' + CurrentDHW + '. Condition: ' + Schedule_conditions_condition_xx.value + '°C. Scheduled action blocked'; node.send([null, null, null, null, null, null, null, null, msg99]); return null; }\n                    //msg99.payload = 'Pass';\n\n                    //node.send([null,null,null,null,null,null,null,null,msg99])\n                }\n\n                // ELAPSED_TIME (time since last sterelization is less than)\n                if (Schedule_conditions_condition_xx.type == 'ELAPSED_TIME') {\n                    let last_run = global.get('Schedule_conditions.DHW_last_at_60C', \"file\");\n                    let CurrentTime = new Date().getTime();\n                    if (Schedule_conditions_condition_xx.value !== undefined && (CurrentTime - last_run) < Schedule_conditions_condition_xx.value * 60 * 60 * 1000 && last_run !== undefined) { msg99.payload = 'Time since last above 60°C: ' + ((CurrentTime - last_run) / 3600000).toFixed(2) + ' hours. Condition: ' + Schedule_conditions_condition_xx.value + ' hours. Scheduled action blocked'; node.send([null, null, null, null, null, null, null, null, msg99]); return null; }\n                    //msg99.payload = 'Pass';\n\n                    //node.send([null,null,null,null,null,null,null,null,msg99])\n                }\n\n                // ELAPSED_TIME2 (time since DHW temp was on target temperature is less than)\n                if (Schedule_conditions_condition_xx.type == 'ELAPSED_TIME2') {\n                    let last_run = global.get('Schedule_conditions.DHW_last_at_target_temperature', \"file\");\n                    let CurrentTime = new Date().getTime();\n                    if (Schedule_conditions_condition_xx.value !== undefined && (CurrentTime - last_run) < Schedule_conditions_condition_xx.value * 60 * 60 * 1000 && last_run !== undefined) { msg99.payload = 'Time since last at DHW target: ' + ((CurrentTime - last_run) / 3600000).toFixed(2) + ' hours. Condition: ' + Schedule_conditions_condition_xx.value + ' hours. Scheduled action blocked'; node.send([null, null, null, null, null, null, null, null, msg99]); return null; }\n                    //msg99.payload = 'Pass';\n\n                    //node.send([null,null,null,null,null,null,null,null,msg99])\n                }\n\n                // ELAPSED_TIME3 (time since previous trigger of this scheduled action is less than)\n                if (Schedule_conditions_condition_xx.type == 'ELAPSED_TIME3') {\n                    let last_run = global.get(msg.topic + '_last_run', \"file\");\n                    let CurrentTime = new Date().getTime();\n                    if (Schedule_conditions_condition_xx.value !== undefined && (CurrentTime - last_run) < Schedule_conditions_condition_xx.value * 60 * 60 * 1000 && last_run !== undefined) { msg99.payload = 'Time since last run: ' + ((CurrentTime - last_run) / 3600000).toFixed(2) + ' hours. Condition: ' + Schedule_conditions_condition_xx.value + ' hours. Scheduled action blocked'; node.send([null, null, null, null, null, null, null, null, msg99]); return null; }\n                    //msg99.payload = 'Pass';\n\n                    //node.send([null,null,null,null,null,null,null,null,msg99])\n                }\n            }\n        }\n        // #############################################################\n\n        if ((override == 1 && HP_state == 0) || msg.force == 1)                            // check if the override state is enabled, AND currently heatpump state is off \n        {\n            msg1 = { payload: 1, topic: \"override\" };\n        }\n        ////////////////////////////////////////////////////////////////\n        //\n        //\n        //\n\n        var CurrentHEAT = global.get('TOP5_Main_Inlet_Temp');\n        //\n        //\n        var action = global.get(topic + '_action', \"file\");             // get the action\n        ////////////////////////////////////////////////////////////////\n\n        if (action == \"HP_turn_on\" && HP_state == 0)                   // check the action\n        {\n            msg1 = { source: \"flow\", payload: 1, topic: \"Turn ON HeatPump\" };       // Operation Mode action? >> to Operation MOde output pin 1\n            global.set('F_RTC.automation_active', 0, \"file\");\n        }\n        if (action == \"HP_turn_off\" && HP_state == 1 && block_it == false)                                   // check the action\n        {\n            msg1 = { source: \"flow\", payload: 0, topic: \"Turn OFF HeatPump\" };      // Operation Mode action? >> to Operation MOde output pin 1\n        }\n        ////////////////////////////////////////////////////////////////\n        //\n        //\n        //\n        ////////////////////////////////////////////////////////////////\n        if (action == \"DHW\")                                           // check the action if DHW (=Force DHW)\n        {\n            msg2 = { payload: 1, topic: \"DHW\" };                     // DHW action? >> to DHW output pin 2\n        }\n        ////////////////////////////////////////////////////////////////\n        //\n        //\n        //\n        //\n        ////////////////////////////////////////////////////////////////\n        if (action == \"Sterilization\" && block_it === false)                                 // check the action\n        {\n            msg3 = { payload: 1, topic: \"Sterilization\" };         // Sterilization action? >> to Sterilization output pin 3\n        }\n        ////////////////////////////////////////////////////////////////\n        //\n        //\n        //\n        //\n        //\n        ////////////////////////////////////////////////////////////////                \n        if (action == \"QM_0\")                                          // check the action\n        {\n            msg4 = { payload: 0, topic: \"Set QuietMode to\" };           // QuietMode action? >> to Quiet MOde output pin 4\n            msg4.source = \"scheduler\";\n        }\n        if (action == \"QM_1\")                                          // check the action\n        {\n            msg4 = { payload: 1, topic: \"Set QuietMode to\" };           // QuietMode action? >> to Quiet MOde output pin 4\n            msg4.source = \"scheduler\";\n        }\n        if (action == \"QM_2\")                                          // check the action\n        {\n            msg4 = { payload: 2, topic: \"Set QuietMode to\" };           // QuietMode action? >> to Quiet MOde output pin 4\n            msg4.source = \"scheduler\";\n        }\n        if (action == \"QM_3\")                                          // check the action\n        {\n            msg4 = { payload: 3, topic: \"Set QuietMode to\" };           // QuietMode action? >> to Quiet MOde output pin 4\n            msg4.source = \"scheduler\";\n        }\n        ////////////////////////////////////////////////////////////////\n        //\n        //\n        // Scheduler - Operation Mode\n        //\n        ////////////////////////////////////////////////////////////////\n        // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n        // Operating mode (0=Heat only, 2=Auto(Heat), 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n        if (action == \"OperationMode0\")                                // check the action\n        {\n            if (F_stored_next_operating_mode === undefined) { msg5 = { payload: 0, topic: \"Scheduler - Set Operation Mode (Tinlet: \" + CurrentHEAT + \"°C)\" }; }       // Operation Mode action? >> to Operation MOde output pin 5\n            if (F_SOLAR.function_active_state == 1) { global.set('F_stored_next_operating_mode', 0, \"file\"); msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is 0'; node.send([null, null, null, null, null, null, null, null,msg99]) ;}\n            if (F_RTC_automation_active == 1) {\n                global.set('F_stored_next_operating_mode', undefined, \"file\"); \n                    msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is removed'; node.send([null, null, null, null, null, null, null, null, msg99]);\n                msg5 = { payload: 0, topic: \"Scheduler - Set Operation Mode (Tinlet: \" + CurrentHEAT + \"°C)\" };\n                if (override == 1) { global.set('F_RTC.automation_active', 0, \"file\"); }\n            }\n            if (global.get('Force_DHW_active', \"file\") == 1) { global.set('Force_DHW_active', 0, \"file\"); }\n        }\n        if (action == \"OperationMode1\")                                // check the action\n        {\n            if (F_stored_next_operating_mode === undefined) { msg5 = { payload: 1, topic: \"Scheduler - Set Operation Mode (Tinlet: \" + CurrentHEAT + \"°C)\" }; }       // Operation Mode action? >> to Operation MOde output pin 5\n            if (F_SOLAR.function_active_state == 1 || F_stored_next_operating_mode !== undefined) { global.set('F_stored_next_operating_mode', 1, \"file\"); msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is 1'; node.send([null, null, null, null, null, null, null, null, msg99]); }\n            if (F_RTC_automation_active == 1) {\n                global.set('F_stored_next_operating_mode', undefined, \"file\");\n                    msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is removed'; node.send([null, null, null, null, null, null, null, null, msg99]);\n                msg5 = { payload: 1, topic: \"Scheduler - Set Operation Mode (Tinlet: \" + CurrentHEAT + \"°C)\" };\n                if (override == 1) { global.set('F_RTC.automation_active', 0, \"file\"); }\n            }\n            if (global.get('Force_DHW_active', \"file\") == 1) { global.set('Force_DHW_active', 0, \"file\"); }\n        }\n        if (action == \"OperationMode2\")                                // check the action\n        {\n            if (F_stored_next_operating_mode === undefined) { msg5 = { payload: 2, topic: \"Scheduler - Set Operation Mode (Tinlet: \" + CurrentHEAT + \"°C)\" }; }       // Operation Mode action? >> to Operation MOde output pin 5\n            if (F_SOLAR.function_active_state == 1 || F_stored_next_operating_mode !== undefined) { global.set('F_stored_next_operating_mode', 2, \"file\"); msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is 2'; node.send([null, null, null, null, null, null, null, null, msg99]); }\n            if (F_RTC_automation_active == 1) {\n                global.set('F_stored_next_operating_mode', undefined, \"file\");\n                    msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is removed'; node.send([null, null, null, null, null, null, null, null, msg99]);\n                msg5 = { payload: 2, topic: \"Scheduler - Set Operation Mode (Tinlet: \" + CurrentHEAT + \"°C)\" };\n                global.set('F_RTC.automation_active', 0, \"file\");\n                if (override == 1) { global.set('F_RTC.automation_active', 0, \"file\"); }\n            }\n            if (global.get('Force_DHW_active', \"file\") == 1) { global.set('Force_DHW_active', 0, \"file\"); }\n        }\n        if (action == \"OperationMode3\")                                // check the action\n        {\n            if (F_stored_next_operating_mode === undefined) { msg5 = { payload: 3, topic: \"Scheduler - Set Operation Mode (DHW temp: \" + CurrentDHW + \"°C)\" }; }       // Operation Mode action? >> to Operation MOde output pin 5\n            if (F_SOLAR.function_active_state == 1 || F_stored_next_operating_mode !== undefined) { global.set('F_stored_next_operating_mode', 3, \"file\"); msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is 3'; node.send([null, null, null, null, null, null, null, null, msg99]); }\n            if (F_RTC_automation_active == 1) {\n                global.set('F_stored_next_operating_mode', undefined, \"file\");\n                    msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is removed'; node.send([null, null, null, null, null, null, null, null, msg99]);\n                msg5 = { payload: 3, topic: \"Scheduler - Set Operation Mode (DHW temp: \" + CurrentDHW + \"°C)\" };\n                if (override == 1) { global.set('F_RTC.automation_active', 0, \"file\"); }\n            }\n        }\n        if (action == \"OperationMode4\")                                // check the action\n        {\n            if (F_stored_next_operating_mode === undefined) { msg5 = { payload: 4, topic: \"Scheduler - Set Operation Mode (Tinlet/DHW temp: \" + CurrentHEAT + \"/\" + CurrentDHW + \"°C)\" }; }       // Operation Mode action? >> to Operation MOde output pin 5\n            if (F_SOLAR.function_active_state == 1 || F_stored_next_operating_mode !== undefined) { global.set('F_stored_next_operating_mode', 4, \"file\"); msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is 4'; node.send([null, null, null, null, null, null, null, null, msg99]); }\n            if (F_RTC_automation_active == 1) {\n                global.set('F_stored_next_operating_mode', undefined, \"file\");\n                msg5 = { payload: 4, topic: \"Scheduler - Set Operation Mode (Tinlet/DHW temp: \" + CurrentHEAT + \"/\" + CurrentDHW + \"°C)\" };\n                if (override == 1) { global.set('F_RTC.automation_active', 0, \"file\"); }\n            }\n        }\n        if (action == \"OperationMode5\")                                // check the action\n        {\n            if (F_stored_next_operating_mode === undefined) { msg5 = { payload: 5, topic: \"Scheduler - Set Operation Mode (Tinlet/DHW temp: \" + CurrentHEAT + \"/\" + CurrentDHW + \"°C)\" }; }       // Operation Mode action? >> to Operation MOde output pin 5\n            if (F_SOLAR.function_active_state == 1 || F_stored_next_operating_mode !== undefined) { global.set('F_stored_next_operating_mode', 5, \"file\"); msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is 5'; node.send([null, null, null, null, null, null, null, null, msg99]); }\n            if (F_RTC_automation_active == 1) {\n                global.set('F_stored_next_operating_mode', undefined, \"file\");\n                    msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is removed'; node.send([null, null, null, null, null, null, null, null, msg99]);\n                msg5 = { payload: 5, topic: \"Scheduler - Set Operation Mode (Tinlet/DHW temp: \" + CurrentHEAT + \"/\" + CurrentDHW + \"°C)\" };\n                if (override == 1) { global.set('F_RTC.automation_active', 0, \"file\"); }\n            }\n        }\n        if (action == \"OperationMode6\")                                // check the action\n        {\n            if (F_stored_next_operating_mode === undefined) { msg5 = { payload: 6, topic: \"Scheduler - Set Operation Mode (Tinlet/DHW temp: \" + CurrentHEAT + \"/\" + CurrentDHW + \"°C)\" }; }       // Operation Mode action? >> to Operation MOde output pin 5\n            if (F_SOLAR.function_active_state == 1 || F_stored_next_operating_mode !== undefined) { global.set('F_stored_next_operating_mode', 6, \"file\"); msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is 6'; node.send([null, null, null, null, null, null, null, null, msg99]); }\n            if (F_RTC_automation_active == 1) {\n                global.set('F_stored_next_operating_mode', undefined, \"file\");\n                    msg99.topic = 'Scheduler'; msg99.payload = 'Stored next operating mode is removed'; node.send([null, null, null, null, null, null, null, null, msg99]);\n                msg5 = { payload: 6, topic: \"Scheduler - Set Operation Mode (Tinlet/DHW temp: \" + CurrentHEAT + \"/\" + CurrentDHW + \"°C)\" };\n                if (override == 1) { global.set('F_RTC.automation_active', 0, \"file\"); }\n            }\n        }\n\n\n        ////////////////////////////////////////////////////////////////\n        //\n        ////////////////////////////////////////////////////////////////\n        if (action == \"NightReductionWaterTempOn\")                              // check the action\n        {\n            var correction = global.get(\"NightReductionWaterTemp.correction\", \"file\");           // get the nightreduction correction.\n            global.set(\"NightReductionWaterTemp.current_value\", correction, \"file\");\n            global.set(\"NightReductionWaterTemp.state\", 1, \"file\");\n            msg6 = { payload: correction, topic: \"Nightreduction\" };\n        }\n        if (action == \"NightReductionWaterTempOff\")                             // check the action\n        {\n            global.set(\"NightReductionWaterTemp.current_value\", 0, \"file\");\n            global.set(\"NightReductionWaterTemp.state\", 0, \"file\");\n            msg6 = { payload: 0, topic: \"Nightreduction\" };\n        }\n        ////////////////////////////////////////////////////////////////\n        if (action == \"NightReductionRoomSetpointOn\")                 // check the action\n        {\n            if (NightReductionRoomSetpoint_state === undefined || NightReductionRoomSetpoint_state == 0)          //only when not set\n            {\n                global.set(\"NightReductionRoomSetpoint.state\", 1, \"file\");\n                msg7 = { payload: 1, topic: \"NightReductionRoomSetpoint.state\" };\n            }\n        }\n\n        if (action == \"NightReductionRoomSetpointOff\")                 // check the action\n        {\n            if (NightReductionRoomSetpoint_state === undefined) { NightReductionRoomSetpoint_state = 0; }\n            if (NightReductionRoomSetpoint_state == 1) //only change when set\n            {\n                global.set(\"NightReductionRoomSetpoint.state\", 0, \"file\");\n                msg7 = { payload: 0, topic: \"NightReductionRoomSetpoint.state\" };\n            }\n        }\n        ////////////////////////////////////////////////////////////////\n        //\n        //\n        //\n        //\n        if (action == \"Water setpoint (heat shift)\")                 // check the action\n        {\n            msg8.payload = global.get(msg.topic + '_setpoint', \"file\");\n            msg8.topic = action;\n            node.send([null, null, null, null, null, null, null, msg8]);\n        }\n        if (action == \"Water setpoint (direct)\")                 // check the action\n        {\n            msg8.payload = global.get(msg.topic + '_setpoint', \"file\");\n            msg8.topic = action;\n            node.send([null, null, null, null, null, null, null, msg8]);\n        }\n        if (action == \"Room setpoint RTC\")                 // check the action\n        {\n            msg8.payload = global.get(msg.topic + '_setpoint', \"file\");\n            msg8.topic = action;\n            node.send([null, null, null, null, null, null, null, msg8]);\n        }\n        if (action == \"DHW setpoint\")                 // check the action\n        {\n            msg8.payload = global.get(msg.topic + '_setpoint', \"file\");\n            msg8.topic = action;\n            node.send([null, null, null, null, null, null, null, msg8]);\n        }\n        if (action == \"toggle item\")                 // check the action\n        {\n            msg8.topic = action;\n            msg8.payload = global.get(msg.topic + '_toggle_item', \"file\");\n            node.send([null, null, null, null, null, null, null, msg8]);\n        }\n\n        global.set(topic + '_last_run', CurrentTime, \"file\");\n        return [msg1, msg2, msg3, msg4, msg5, msg6, msg7];\n\n    }\n    else {\n        return [null, null, null, null, null, null, null];\n    }\n\n\n}",
        "outputs": 9,
        "timeout": "",
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2560,
        "wires": [
            [
                "dc5991432f2fa36b"
            ],
            [
                "880faf9e562e2cf3"
            ],
            [
                "b26465510d1a2c16"
            ],
            [
                "e2654cbcd4e962c6"
            ],
            [
                "2559d6cd0bf05751"
            ],
            [
                "6f97b5d7ea5da767"
            ],
            [
                "8a9735b101f0cf03"
            ],
            [
                "dd36095ad4abca5a"
            ],
            [
                "acea208050889a80"
            ]
        ],
        "outputLabels": [
            "override / power on/off",
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode",
            "NightReduction Water",
            "NightReduction Room",
            "ActionSetpoint",
            "to log"
        ]
    },
    {
        "id": "b91f0b27e28d647b",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "NightReduction Scheduler",
        "mode": "link",
        "links": [
            "73ee925b927ed0c6",
            "3ab7a10b46379da2",
            "44d83d4e58d63689"
        ],
        "x": 2025,
        "y": 2680,
        "wires": []
    },
    {
        "id": "4cbcfd45e4da8347",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to power on/off (override)",
        "info": "",
        "x": 2180,
        "y": 2480,
        "wires": []
    },
    {
        "id": "b9c4d8c5804b1549",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to Nightreduction (Direct)",
        "info": "",
        "x": 2180,
        "y": 2680,
        "wires": []
    },
    {
        "id": "b14565589916f129",
        "type": "comment",
        "z": "35d210f042827344",
        "name": ">>>>>>>>>>>>>>>>>>>>>>",
        "info": "",
        "x": 2180,
        "y": 2560,
        "wires": []
    },
    {
        "id": "9bc7c5fbeb1d1f6d",
        "type": "comment",
        "z": "35d210f042827344",
        "name": ">>>>>>>>>>>>>>>>>>>>>>",
        "info": "",
        "x": 2180,
        "y": 2520,
        "wires": []
    },
    {
        "id": "1bfb33b6618cd222",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Power",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2440,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "f0045be5a90c957f",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Set QuietMode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2600,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "a040c5a397316aa6",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - NightReduction water temp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2680,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "9815e18a26e4cd85",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "",
        "mode": "link",
        "links": [
            "47e2a8d99d332229",
            "873ab80499b9156b",
            "ef1f42fcf697a0b6",
            "662bb3cfb11c3c63",
            "031e62b0bf3df7d7",
            "c3fc3dd0823391e4",
            "6b34f737dac1d48f",
            "b08c84a2e3145411",
            "91641c3ebfbec364"
        ],
        "x": 4065,
        "y": 2540,
        "wires": []
    },
    {
        "id": "84e59fd6bd8697ab",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Force DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2520,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "c39da0815cb8bf48",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Force Sterilization",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2560,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "d9b9cfbe76f8a7aa",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Operation Mode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2480,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "dc5991432f2fa36b",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    return msg;\n}\nelse {\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2480,
        "wires": [
            [
                "f217f942f56cbfa9",
                "1bfb33b6618cd222"
            ]
        ]
    },
    {
        "id": "880faf9e562e2cf3",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    return msg;\n}\nelse { return null }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2520,
        "wires": [
            [
                "6e6b758f54cd9b22"
            ]
        ]
    },
    {
        "id": "b26465510d1a2c16",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    return msg;\n}\nelse { return null }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2560,
        "wires": [
            [
                "1a571f9216756e5e"
            ]
        ]
    },
    {
        "id": "e2654cbcd4e962c6",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    msg.source = \"scheduler\";\n    if (global.get('MQTT_Source') === undefined) { global.set('MQTT_Source', \"Scheduler\"); }\n    return msg;\n}\nelse { return null }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2600,
        "wires": [
            [
                "9a097e6d95e1ca6e"
            ]
        ]
    },
    {
        "id": "2559d6cd0bf05751",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif ( msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1) ) )   {\n    global.set('MQTT_Source', \"scheduler\");\n    return msg;\n}\nelse { return null }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2640,
        "wires": [
            [
                "12c1fd3169e6c639"
            ]
        ]
    },
    {
        "id": "6f97b5d7ea5da767",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / block",
        "func": "var MQTT = global.get('MQTT',\"file\");\n\n// only pass the message when:\n// payload is not 99\n// MQTT is not activated >>>>  OR MQTT is activated AND blockmode = 2 AND scheduler is allowed\n\nif (msg.payload != 99 && (MQTT.block_active == 0 || (MQTT.block_active == 1 && MQTT.block_mode == 2 && MQTT.allow_scheduler == 1)))   {\n    return msg;\n}\nelse { return null }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2680,
        "wires": [
            [
                "c616ab1245360ad1"
            ]
        ]
    },
    {
        "id": "b9e99ae19c354ecc",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "To LOGS",
        "info": "",
        "x": 4120,
        "y": 2500,
        "wires": []
    },
    {
        "id": "af36a209861f34c9",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Dashboard",
        "info": "",
        "x": 580,
        "y": 3120,
        "wires": []
    },
    {
        "id": "4ca97fe11f8196e4",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Check Nightreduction room status",
        "func": "let msg99={};   // pin 1 - ToLog\nlet msg2={};    // pin 2 - SP Room\n\nmsg99.topic = msg.topic;\n\nvar NightReductionRoomSetpoint = global.get('NightReductionRoomSetpoint',\"file\");\n    var SetpointLOW     = NightReductionRoomSetpoint.LOW;\n    var SetpointNORMAL  = NightReductionRoomSetpoint.NORMAL;\n    var NightReductionRoomSetpoint_state = NightReductionRoomSetpoint.state;\n\nif (NightReductionRoomSetpoint_state === undefined) \n    {\n        global.set(\"NightReductionRoomSetpoint.state\",0,\"file\");\n        NightReductionRoomSetpoint_state = 0;\n        return null;\n    }\n\nvar RoomSP;\n\nif (NightReductionRoomSetpoint_state == 1) \n    {\n        //retrieve value from dashboard\n        RoomSP = SetpointLOW;\n        global.set(\"WoonkamerSP\", RoomSP, \"file\");\n        msg99.payload = \"ON, Room setpoint: \" + RoomSP + \" °C\";\n        msg2.payload = RoomSP;\n        msg2.currentstatus = 'Active';\n        \n        return [msg99, msg2]; //Pin 1 to log. Pin2 to write Room SP\n    }\n\nif (NightReductionRoomSetpoint_state == 0) \n    {\n        //retrieve value from dashboard\n        RoomSP = SetpointNORMAL;\n        global.set(\"WoonkamerSP\", RoomSP, \"file\");\n        msg99.payload = \"OFF, Room setpoint: \" + RoomSP + \" °C\";\n        msg2.payload = RoomSP;\n        msg2.currentstatus = 'Inactive';\n        \n        return [msg99, msg2]; //Pin 1 to log. Pin2 to write Room SP\n    }\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 2720,
        "wires": [
            [
                "a0090b3fd8c64e10",
                "68f4601da2aa107a"
            ],
            [
                "ebc9b8c270d7c636"
            ]
        ],
        "outputLabels": [
            "ToLog",
            "RoomSP"
        ]
    },
    {
        "id": "7a27b2c8c4721ed9",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "9a106cdefc873348",
            "ddf3715aaea9672b"
        ],
        "x": 3415,
        "y": 2760,
        "wires": []
    },
    {
        "id": "55ed50ca78ad2e8e",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "link out 16",
        "mode": "link",
        "links": [],
        "x": 3415,
        "y": 2800,
        "wires": []
    },
    {
        "id": "9b6adfc4b5fe33d9",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit SP to HA climate (optional)",
        "info": "",
        "x": 3610,
        "y": 2800,
        "wires": []
    },
    {
        "id": "3e6fc746e7597b72",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit SP to Dash",
        "info": "",
        "x": 3560,
        "y": 2760,
        "wires": []
    },
    {
        "id": "572ff3b3b8a1d185",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to write RoomSP",
        "info": "",
        "x": 3580,
        "y": 2720,
        "wires": []
    },
    {
        "id": "977bf5eb11dcbcae",
        "type": "ui_numeric",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Nightreduction room setpoint low",
        "label": "Setpoint low",
        "tooltip": "",
        "group": "9aec7afe54746c39",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 660,
        "y": 3200,
        "wires": [
            [
                "20267081e902cf8f"
            ]
        ]
    },
    {
        "id": "4be14d43ed11df9e",
        "type": "ui_numeric",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Nightreduction room setpoint normal",
        "label": "Setpoint normal",
        "tooltip": "",
        "group": "9aec7afe54746c39",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 670,
        "y": 3260,
        "wires": [
            [
                "50a7d35eec5ebb92"
            ]
        ]
    },
    {
        "id": "66751dfee126dd36",
        "type": "ui_template",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "group": "9aec7afe54746c39",
        "name": "Line - Setup ",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "ac07aae6820d664d",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "set NightReductionRoomSetpoint.LOW",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"NightReductionRoomSetpoint.LOW\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3200,
        "wires": [
            []
        ]
    },
    {
        "id": "20267081e902cf8f",
        "type": "rbe",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 3200,
        "wires": [
            [
                "ac07aae6820d664d"
            ]
        ]
    },
    {
        "id": "0e56417c81c6b1be",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "set NightReductionRoomSetpoint.NORMAL",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"NightReductionRoomSetpoint.NORMAL\",msg.payload,\"file\");\n\n//koppeling naar RTC room setpoint (WoonkamerSP) alleen indien handmatig aangepast:\n//check of Night reduction room setpoint is niet actief:\n\nif ( global.get(\"NightReductionRoomSetpoint.state\", \"file\") == 0 ) {\n    let msg1 ={};                   //pin1 ---> link-out to WoonkamerSP on dashboard RTC\n    msg1.payload = msg.payload;     //NightReductionRoomSetpoint.NORMAL \n    if (global.get('WoonkamerSP', \"file\") == msg.payload ) { return null;} //only send when different\n    \n    global.set(\"WoonkamerSP\", msg.payload, \"file\");\n    return msg1;\n}\n\nreturn null; //default send nothing\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3260,
        "wires": [
            [
                "1911fbfbf89866a8"
            ]
        ]
    },
    {
        "id": "50a7d35eec5ebb92",
        "type": "rbe",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 3260,
        "wires": [
            [
                "0e56417c81c6b1be"
            ]
        ]
    },
    {
        "id": "620d3faff0a26d37",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Default values (first start)",
        "info": "",
        "x": 230,
        "y": 3180,
        "wires": []
    },
    {
        "id": "b98e3d3337c01053",
        "type": "inject",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Startup",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "x": 180,
        "y": 3220,
        "wires": [
            [
                "827d25a8ccb91857"
            ]
        ]
    },
    {
        "id": "827d25a8ccb91857",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Load on boot",
        "func": "var NightReductionRoomSetpoint = global.get('NightReductionRoomSetpoint',\"file\");\n\nif (NightReductionRoomSetpoint === undefined){\n    global.set('NightReductionRoomSetpoint',{},\"file\")\n    return [null,null,null,msg];\n}\n\n    var SetpointLOW     = NightReductionRoomSetpoint.LOW;\n    var SetpointNORMAL  = NightReductionRoomSetpoint.NORMAL;\n    var NightReductionRoomSetpoint_state = NightReductionRoomSetpoint.state;\n\n    \nif (SetpointLOW === undefined)  {\n    SetpointLOW = 18;\n    global.set('NightReductionRoomSetpoint.LOW',18,\"file\");\n}\n    \n\nif (SetpointNORMAL === undefined) {\n    SetpointNORMAL = global.get('WoonkamerSP',\"file\");\n    if  (SetpointNORMAL !== undefined)   {\n        global.set('NightReductionRoomSetpoint.NORMAL',SetpointNORMAL,\"file\");\n    }\n    else {return null;}     // prevent setting a default room SP due to timing issue. This is done elsewhere. Just exit and wait for it to populate with next passes.\n}\n\n\nif (NightReductionRoomSetpoint_state === undefined)   {\n    global.set('NightReductionRoomSetpoint.state',0,\"file\");\n    NightReductionRoomSetpoint_state = 0;\n}\n\n\nlet msg1 = {};    //  NightReductionRoomSetpoint.LOW\nlet msg2 = {};    //  NightReductionRoomSetpoint.NORMAL\nlet msg3 = {};  //  NightReductionRoomSetpoint_state.state\n\nmsg1.payload = SetpointLOW;\nmsg2.payload = SetpointNORMAL;\nmsg3.payload = NightReductionRoomSetpoint_state;\n\nreturn [msg1, msg2, msg3];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3220,
        "wires": [
            [
                "977bf5eb11dcbcae"
            ],
            [
                "4be14d43ed11df9e"
            ],
            [
                "0a2fca7dbded32e0"
            ],
            [
                "9c13f29571c31128"
            ]
        ],
        "outputLabels": [
            "SetpointLOW",
            "SetpointNORMAL",
            "NightReductionRoomSetpoint_state",
            "trigger re-evalutation"
        ]
    },
    {
        "id": "8a9735b101f0cf03",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Filter / no block",
        "func": "if (msg.payload != 99) {\n    msg.topic = \"Scheduler - Nightreduction room setpoint\";\n    return msg;\n}\n\nelse { return null }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 2720,
        "wires": [
            [
                "1c3a1716ed8db17d"
            ]
        ]
    },
    {
        "id": "5d320e94981761fc",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_10",
        "group": "2b0c8e162d47abbb",
        "order": 106,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_10",
        "topicType": "str",
        "x": 3440,
        "y": 1620,
        "wires": [
            [
                "bde3ed8785911ece",
                "01af4e578895cb64",
                "8b943ed66c6894fd"
            ]
        ]
    },
    {
        "id": "c4fb7de363d6e1c1",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_2",
        "group": "2b0c8e162d47abbb",
        "order": 34,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_2",
        "topicType": "msg",
        "x": 3430,
        "y": 340,
        "wires": [
            [
                "8b943ed66c6894fd",
                "b29a79a606f67a94",
                "48bedc6898a86520"
            ]
        ]
    },
    {
        "id": "b0ab37d0a28d90d4",
        "type": "function",
        "z": "35d210f042827344",
        "name": "DELETE",
        "func": "if (msg.payload == \"delete\")\n    {\n        \n        \n        global.set(msg.topic + '_Description',undefined,\"file\");\n        global.set(msg.topic + '_day',undefined,\"file\");\n        global.set(msg.topic + '_hour',undefined,\"file\");\n        global.set(msg.topic + '_minutes',undefined,\"file\");\n        global.set(msg.topic + '_action',undefined,\"file\");\n        global.set(msg.topic + '_setpoint',undefined,\"file\");\n        global.set(msg.topic + '_override',undefined,\"file\");\n        global.set(msg.topic + '_state',0,\"file\");\n        global.set(msg.topic + '_condition',undefined,\"file\");\n        global.set(msg.topic + '_last_run',undefined,\"file\");\n        global.set(msg.topic + '_toggle_item', undefined, \"file\");\n\n    }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3800,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "d6a7b4c88198805c",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_9",
        "group": "2b0c8e162d47abbb",
        "order": 97,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_9",
        "topicType": "str",
        "x": 3430,
        "y": 1460,
        "wires": [
            [
                "8b943ed66c6894fd",
                "e1900f0662ab8e89",
                "a2c614ccf1136bda"
            ]
        ]
    },
    {
        "id": "57e0c404bf54aba7",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_8",
        "group": "2b0c8e162d47abbb",
        "order": 88,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_8",
        "topicType": "str",
        "x": 3430,
        "y": 1300,
        "wires": [
            [
                "8b943ed66c6894fd",
                "82ec28563a45c0e1",
                "9493e487ba4b2168"
            ]
        ]
    },
    {
        "id": "c9e8507eeb72dae8",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_7",
        "group": "2b0c8e162d47abbb",
        "order": 79,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_7",
        "topicType": "str",
        "x": 3430,
        "y": 1140,
        "wires": [
            [
                "8b943ed66c6894fd",
                "54d2af3d1cbb0671",
                "7523f8903fb6cc1e"
            ]
        ]
    },
    {
        "id": "80971077c673d3a2",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_6",
        "group": "2b0c8e162d47abbb",
        "order": 70,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_6",
        "topicType": "str",
        "x": 3430,
        "y": 980,
        "wires": [
            [
                "8b943ed66c6894fd",
                "7ffe81943fa43415",
                "32e5d373c9dcf449"
            ]
        ]
    },
    {
        "id": "20053902cbf5c49a",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_5",
        "group": "2b0c8e162d47abbb",
        "order": 61,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_5",
        "topicType": "str",
        "x": 3430,
        "y": 820,
        "wires": [
            [
                "8b943ed66c6894fd",
                "c853ac3eb3f2d486",
                "0a51c4981f55f9f6"
            ]
        ]
    },
    {
        "id": "e87eaf09d103f9b1",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_4",
        "group": "2b0c8e162d47abbb",
        "order": 52,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_4",
        "topicType": "str",
        "x": 3430,
        "y": 660,
        "wires": [
            [
                "8b943ed66c6894fd",
                "48d83a6051b743c8",
                "7cb711e83a201701"
            ]
        ]
    },
    {
        "id": "7d9060288d6516b7",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_3",
        "group": "2b0c8e162d47abbb",
        "order": 43,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_3",
        "topicType": "str",
        "x": 3430,
        "y": 500,
        "wires": [
            [
                "8b943ed66c6894fd",
                "1f99be99de5ea946",
                "963350a5070e3897"
            ]
        ]
    },
    {
        "id": "684d1bcc0a898b4b",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "Delete Schedule_1",
        "group": "2b0c8e162d47abbb",
        "order": 25,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "delete",
        "payloadType": "str",
        "topic": "Schedule_1",
        "topicType": "str",
        "x": 3430,
        "y": 180,
        "wires": [
            [
                "8b943ed66c6894fd",
                "dad7d9da1cf67158",
                "5bec724ed77d6245"
            ]
        ]
    },
    {
        "id": "bde3ed8785911ece",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 1620,
        "wires": [
            [
                "219fcc0259998439",
                "1759cf2fcc472812",
                "e20f0e179a77b100",
                "88872f26b2ce5e9b",
                "99bf0b7454b3b5c0"
            ]
        ]
    },
    {
        "id": "01af4e578895cb64",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 1620,
        "wires": [
            [
                "bc8c769ccc26fa5d",
                "a477e5b86fe9c792",
                "8e3cfd35030617d7"
            ]
        ]
    },
    {
        "id": "8b943ed66c6894fd",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3650,
        "y": 1740,
        "wires": [
            [
                "b0ab37d0a28d90d4"
            ]
        ]
    },
    {
        "id": "e1900f0662ab8e89",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 1460,
        "wires": [
            [
                "611bf69e3ab85546",
                "5a75949723c259df"
            ]
        ]
    },
    {
        "id": "a2c614ccf1136bda",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 1460,
        "wires": [
            [
                "11958cca6fba73cb",
                "663c8cf477dc16cb",
                "5b138a18f47114e3",
                "37d57c847d1b5ff8",
                "d77c206846bfe16d",
                "a147fe89247aa73b"
            ]
        ]
    },
    {
        "id": "82ec28563a45c0e1",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 1300,
        "wires": [
            [
                "fe24caf7cb4e92d3",
                "62e00829c19bec7c"
            ]
        ]
    },
    {
        "id": "9493e487ba4b2168",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 1300,
        "wires": [
            [
                "f511b9d4cedb0977",
                "0b60ef37733490bf",
                "f93699165fe750ce",
                "b1956b6593a4a597",
                "32e23a19047b877e",
                "c8f137bcff651fba"
            ]
        ]
    },
    {
        "id": "54d2af3d1cbb0671",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 1140,
        "wires": [
            [
                "0a155882d5693fda",
                "87241aa5e6a2ccf7"
            ]
        ]
    },
    {
        "id": "7523f8903fb6cc1e",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 1140,
        "wires": [
            [
                "436b41690b969348",
                "9fc9947dc30386f3",
                "f95cadbe3c3cd2f4",
                "fcf03506100353c9",
                "0a54cb095adcb787",
                "f314a9b676182c11"
            ]
        ]
    },
    {
        "id": "7ffe81943fa43415",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 980,
        "wires": [
            [
                "4470d0d9384e5146",
                "67c2c134c50ed462"
            ]
        ]
    },
    {
        "id": "32e5d373c9dcf449",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 980,
        "wires": [
            [
                "e72e318e1a456090",
                "51e9aad82e544c85",
                "3103abf9a680a9ea",
                "a1866018a9f27226",
                "1e30fa210ee856be",
                "773eba4d817b8b93"
            ]
        ]
    },
    {
        "id": "c853ac3eb3f2d486",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 820,
        "wires": [
            [
                "fd75ca33fe4a9589",
                "5bd339d22882aa07"
            ]
        ]
    },
    {
        "id": "0a51c4981f55f9f6",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 820,
        "wires": [
            [
                "9de114ee921577b7",
                "cdd91f4f0777b0fc",
                "53c6208ebe18f176",
                "a5c85f0332e4746d",
                "c649a3a840183e86",
                "82d6f38bd9764a93"
            ]
        ]
    },
    {
        "id": "48d83a6051b743c8",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 660,
        "wires": [
            [
                "73e5b776ee37e929",
                "b01c2ff9f7469f79"
            ]
        ]
    },
    {
        "id": "7cb711e83a201701",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 660,
        "wires": [
            [
                "9f04561329aa26f4",
                "612ac224e061cc79",
                "5f74425ca9610401",
                "0710a190d551707c",
                "2a7fb72a1781fe14",
                "e90e53734d73b6da"
            ]
        ]
    },
    {
        "id": "1f99be99de5ea946",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 500,
        "wires": [
            [
                "57520972cf8f3282",
                "1a27db997a27a1dd"
            ]
        ]
    },
    {
        "id": "963350a5070e3897",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 500,
        "wires": [
            [
                "8a47deae609a4257",
                "d73541639351e613",
                "7a42e5778bf41519",
                "871d8f6de9ad1a98",
                "d15b2d0e98e01f65",
                "b24f970c2d6262f9"
            ]
        ]
    },
    {
        "id": "b29a79a606f67a94",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 340,
        "wires": [
            [
                "479965c26a5f5d15",
                "ce3b0c94ff7a8500"
            ]
        ]
    },
    {
        "id": "48bedc6898a86520",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 340,
        "wires": [
            [
                "bbc0fc2f4315d9a0",
                "e411cdb2b3617a7e",
                "d8e5ca53b22c577d",
                "0fcdf0e74a334edb",
                "bc2393868b4f66ed",
                "c904ad7bb0b016d8"
            ]
        ]
    },
    {
        "id": "dad7d9da1cf67158",
        "type": "change",
        "z": "35d210f042827344",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 180,
        "wires": [
            [
                "1372ccca982b4f0a",
                "e3d4b9d611e649e0"
            ]
        ]
    },
    {
        "id": "5bec724ed77d6245",
        "type": "change",
        "z": "35d210f042827344",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 180,
        "wires": [
            [
                "57dddda65db516a2",
                "40f0401e20235a07",
                "243fa1e4e8cef5d0",
                "8fbe0ef4995f8e6a",
                "98499b42fe5f6688",
                "f6acd15f36324736"
            ]
        ]
    },
    {
        "id": "6261eb2d28619996",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 15,
        "width": 1,
        "height": 1,
        "name": "SPACER scheduler 1x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3450,
        "y": 140,
        "wires": []
    },
    {
        "id": "3a71aada556a2950",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "Nightreduction Room setpoint_____________________________________ (some GUI changes are made on tab WP Help / Scheduler HELP)",
        "info": "",
        "x": 570,
        "y": 3080,
        "wires": []
    },
    {
        "id": "a0090b3fd8c64e10",
        "type": "change",
        "z": "35d210f042827344",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3870,
        "y": 2720,
        "wires": [
            [
                "9815e18a26e4cd85"
            ]
        ]
    },
    {
        "id": "257acc4dad15edc0",
        "type": "comment",
        "z": "35d210f042827344",
        "name": ">>>>>>>>>>>>>>>>>>>>>>",
        "info": "",
        "x": 2180,
        "y": 2720,
        "wires": []
    },
    {
        "id": "0a2fca7dbded32e0",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "label": "Current status",
        "tooltip": "",
        "group": "9aec7afe54746c39",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 600,
        "y": 3320,
        "wires": [
            [
                "05344a8f5a84a598"
            ]
        ]
    },
    {
        "id": "ddf3715aaea9672b",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "link in 18",
        "links": [
            "7a27b2c8c4721ed9"
        ],
        "x": 185,
        "y": 3320,
        "wires": [
            [
                "6e79eaf44bdd252f"
            ]
        ]
    },
    {
        "id": "68f4601da2aa107a",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "link out 30",
        "mode": "link",
        "links": [],
        "x": 3415,
        "y": 2720,
        "wires": []
    },
    {
        "id": "6e79eaf44bdd252f",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "currentstatus",
        "func": "let msg1 = {};\n//node.warn(msg.currentstatus);\nif (msg.currentstatus === \"Active\") {\n    msg1.payload = 1;\n    return msg1;\n}\n\nif (msg.currentstatus === \"Inactive\") {\n    msg1.payload = 0;\n    return msg1;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 3320,
        "wires": [
            [
                "0a2fca7dbded32e0"
            ]
        ]
    },
    {
        "id": "05344a8f5a84a598",
        "type": "rbe",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 3320,
        "wires": [
            [
                "ce6d6e5627ec1fa2"
            ]
        ]
    },
    {
        "id": "ce6d6e5627ec1fa2",
        "type": "function",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "set NightReductionRoomSetpoint.state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\n//firts check if it's neccesary to set, to avoid log message:\nif (global.get(\"NightReductionRoomSetpoint.state\", \"file\") == msg.payload) { return null;} //disable message to log at start / 30 min\n\nglobal.set(\"NightReductionRoomSetpoint.state\", msg.payload, \"file\");\n\nmsg.topic = \"Function - Nightreduction room setpoint\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3320,
        "wires": [
            [
                "4ca97fe11f8196e4"
            ]
        ]
    },
    {
        "id": "1911fbfbf89866a8",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "9a106cdefc873348"
        ],
        "x": 1425,
        "y": 3260,
        "wires": []
    },
    {
        "id": "55a0fb67fbe206cf",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "link-in Night reduction room setpoint NORMAL",
        "links": [
            "28ade256a9b75487"
        ],
        "x": 415,
        "y": 3280,
        "wires": [
            [
                "4be14d43ed11df9e"
            ]
        ]
    },
    {
        "id": "9c13f29571c31128",
        "type": "delay",
        "z": "35d210f042827344",
        "g": "92293ba8ccc5db0f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 200,
        "y": 3260,
        "wires": [
            [
                "827d25a8ccb91857"
            ]
        ]
    },
    {
        "id": "149593cb5a59bfc2",
        "type": "ui_ui_control",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "",
        "events": "all",
        "x": 3220,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "7c42986702362e7e",
        "type": "change",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Scheduler_Notification\"],\"hide\":[\"Scheduler_Scheduler\",\"Scheduler_Scheduler_related_settings\",\"Scheduler_Help\",\"Scheduler_function_actions\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 1860,
        "wires": [
            [
                "149593cb5a59bfc2"
            ]
        ]
    },
    {
        "id": "d76b2de1985f09bb",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "group": "90c1cff3f272d850",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "{{msg.text1}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2690,
        "y": 2020,
        "wires": []
    },
    {
        "id": "b6f2cfb3efd983c4",
        "type": "ui_numeric",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "Temperature",
        "label": "",
        "tooltip": "",
        "group": "90c1cff3f272d850",
        "order": 4,
        "width": 3,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}°C",
        "min": 0,
        "max": "30",
        "step": "0.1",
        "className": "",
        "x": 2890,
        "y": 2020,
        "wires": [
            [
                "e9afc0729467ae1d"
            ]
        ]
    },
    {
        "id": "a14f9aee7a90cce0",
        "type": "ui_button",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "",
        "group": "90c1cff3f272d850",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "SET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"Scheduler_Notification\",\"Scheduler_Help\",\"Scheduler_function_actions\"],\"show\":[\"Scheduler_Scheduler\",\"Scheduler_Scheduler_related_settings\"]}}",
        "payloadType": "json",
        "topic": "set",
        "topicType": "str",
        "x": 2810,
        "y": 2080,
        "wires": [
            [
                "149593cb5a59bfc2",
                "e9afc0729467ae1d"
            ]
        ]
    },
    {
        "id": "b33abbe2fee043fb",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "group": "90c1cff3f272d850",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "empty",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 2910,
        "y": 1980,
        "wires": []
    },
    {
        "id": "d0bd2ba9d6d4fa4f",
        "type": "ui_template",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "group": "90c1cff3f272d850",
        "name": "Line - Change Heat setpoint",
        "order": 1,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left><b></b></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2760,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "2fee17012ab3bcf3",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "group": "90c1cff3f272d850",
        "order": 5,
        "width": 1,
        "height": 3,
        "name": "1x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3230,
        "y": 2080,
        "wires": []
    },
    {
        "id": "13f54518d82c8796",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "group": "90c1cff3f272d850",
        "order": 2,
        "width": 1,
        "height": 3,
        "name": "1x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2690,
        "y": 2080,
        "wires": []
    },
    {
        "id": "6a6e0e79315f1423",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "group": "90c1cff3f272d850",
        "order": 11,
        "width": 8,
        "height": 1,
        "name": "1x7",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2950,
        "y": 2120,
        "wires": []
    },
    {
        "id": "1e2795a950379445",
        "type": "ui_button",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "",
        "group": "90c1cff3f272d850",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"Scheduler_Notification\",\"Scheduler_Help\",\"Scheduler_function_actions\"],\"show\":[\"Scheduler_Scheduler\",\"Scheduler_Scheduler_related_settings\"]}}",
        "payloadType": "json",
        "topic": "cancel",
        "topicType": "str",
        "x": 3100,
        "y": 2080,
        "wires": [
            [
                "149593cb5a59bfc2",
                "e9afc0729467ae1d"
            ]
        ]
    },
    {
        "id": "aacf8eb6a239e142",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "group": "90c1cff3f272d850",
        "order": 9,
        "width": 1,
        "height": 1,
        "name": "1x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2950,
        "y": 2080,
        "wires": []
    },
    {
        "id": "1c76ec837c811a63",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "group": "90c1cff3f272d850",
        "order": 8,
        "width": 1,
        "height": 1,
        "name": "1x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2690,
        "y": 1980,
        "wires": []
    },
    {
        "id": "e9afc0729467ae1d",
        "type": "function",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "store setpoint",
        "func": "if (msg.topic == \"set\"){\n    var top = context.get('temp_topic');\n    var pay = context.get('temp_payload');\n    global.set(top,pay,\"file\");\n    \n    return msg;\n}\n\nif (msg.topic == \"cancel\"){\n    context.set('temp_topic',undefined);\n    context.set('temp_payload',undefined);\n    return null;\n}\n\nif (msg.range == \"ranges\") {\n    msg.topic = msg.topic.replace(\"action\", \"setpoint\");\n    context.set('temp_topic',msg.topic);\n    context.set('temp_payload',msg.payload);\n    return null;\n}\n\n\n\n\nmsg.topic = msg.topic.replace(\"action\", \"setpoint\");\ncontext.set('temp_topic',msg.topic);\ncontext.set('temp_payload',msg.payload);\nreturn null;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3120,
        "y": 2020,
        "wires": [
            [
                "dfd6d3ff02d1dcbd"
            ]
        ]
    },
    {
        "id": "525e9bfc80e7f5e5",
        "type": "function",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "pupup setup",
        "func": "var pay = msg.topic.replace(\"action\", \"setpoint\");\npay = global.get(pay,\"file\");\n \nif (msg.payload == 'Water setpoint (heat shift)') {\n    \n    var msg1={}; \n    var msg2={};\n    msg1.ui_control = {min:-5, max:+5, step:1}; \n    // @ts-ignore\n    if (pay===undefined || pay > 5) {pay=0};\n    msg1.payload = pay; msg1.range = 'ranges'; msg1.topic = msg.topic;\n    \n    msg2.text1 = msg.payload;\n    msg2.note1 = \"This will set the shift level. <br>Range: -5 / +5 °C<br>Step size: 1°C<br><br>Note: Panasonic needs to be in 'Compensation-Curve'-mode\";\n    \n    return [msg1,msg2];\n}\n\n\nif (msg.payload == 'Water setpoint (direct)') {\n    \n    let msg1={}; let msg2={};\n    msg1 = {ui_control:{min:20, max:+65, step:1}}; \n    // @ts-ignore\n    if (pay===undefined || pay < 20) {pay=20}\n    msg1.payload = pay; msg1.range = 'ranges'; msg1.topic = msg.topic;\n    \n    msg2.text1 = msg.payload;\n    msg2.note1 = \"This will set the water temperature directly.<br>Range: 20 / 65 °C<br>Step size: 1°C<br><br>Note: Panasonic needs to be in 'Direct'-mode\";\n\n    return [msg1,msg2];\n}\n\n\nif (msg.payload == 'Room setpoint RTC') {\n    \n    let msg1={}; let msg2={};\n    msg1 = {ui_control:{min:5, max:+50, step:0.1}}; \n    // @ts-ignore\n    if (pay===undefined || pay < 5) {pay=20}\n    msg1.payload = pay; msg1.range = 'ranges'; msg1.topic = msg.topic;\n    \n    msg2.text1 = msg.payload;\n    msg2.note1 = \"This target roomtemperature for the RTC function.<br>Range: 5 / 50 °C<br>Step size: 0.1°C<br><br>Note: This applies only to the 'RTC'-function\";\n\n    return [msg1,msg2];\n}\n\n\nif (msg.payload == 'DHW setpoint') {\n    \n    let msg1={}; let msg2={};\n    msg1 = {ui_control:{min:40, max:+75, step:1}}; \n    // @ts-ignore\n    if (pay===undefined || pay < 40) {pay=40;}\n    // @ts-ignore\n    if (pay > 75) {pay=75;}\n    msg1.payload = pay; msg1.range = 'ranges'; msg1.topic = msg.topic;\n    \n    msg2.text1 = msg.payload;\n    msg2.note1 = \"Set a new target temperature for the DHW water.<br><br>Range: 40 / 75 °C<br>Step size: 1°C\";\n\n    return [msg1,msg2];\n}\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 1860,
        "wires": [
            [
                "b6f2cfb3efd983c4",
                "7c42986702362e7e"
            ],
            [
                "19cb9e9d4bfea67d",
                "d76b2de1985f09bb"
            ]
        ]
    },
    {
        "id": "534c85f1af373b3c",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "to Schedule_xx topics",
        "links": [
            "dfd6d3ff02d1dcbd"
        ],
        "x": 160,
        "y": 360,
        "wires": [
            [
                "f5602874161743c8"
            ]
        ],
        "l": true
    },
    {
        "id": "dfd6d3ff02d1dcbd",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "link to Schedule_xx topics",
        "mode": "link",
        "links": [
            "534c85f1af373b3c"
        ],
        "x": 3265,
        "y": 2020,
        "wires": []
    },
    {
        "id": "19cb9e9d4bfea67d",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "group": "90c1cff3f272d850",
        "order": 12,
        "width": 8,
        "height": 4,
        "name": "8x2 note",
        "label": "{{msg.note1}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2960,
        "y": 2160,
        "wires": []
    },
    {
        "id": "dd36095ad4abca5a",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Setpoints",
        "func": "\n// pin 1: Water setpoint (heat shift)\n// pin 2: Water setpoint (direct)\n// pin 3: Room setpoint RTC\n// pin 4: to log\n// pin 5: to DHW setpoint\nlet msg99={};\n\nif (msg.topic == 'Water setpoint (heat shift)'){\n    msg99.topic = 'Scheduler - Set water setpoint (shift)';\n    msg99.payload = msg.payload;\n    return [msg,null,null,msg99];\n}\n\nif (msg.topic == 'Water setpoint (direct)'){\n    msg99.topic = 'Scheduler - Set water setpoint (direct)';\n    msg99.payload = msg.payload;\n    return [null,msg,null,msg99];\n}\n\nif (msg.topic == 'Room setpoint RTC'){\n    msg99.topic = 'Scheduler - Set room setpoint (RTC)';\n    msg99.payload = msg.payload;\n    return [null,null,msg,msg99];\n}\n\n\nif (msg.topic == 'DHW setpoint'){\n    msg99.topic = 'Scheduler - DHW setpoint';\n    msg99.payload = msg.payload;\n    return [null,null,null,msg99,msg];\n}\n\n// Forwarding the information to next function node if topic is toggle item\nif (msg.topic == 'toggle item') {\n    return [null, null, null, null, null, msg];\n}\n",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2740,
        "wires": [
            [
                "3c7256b41577c8e5"
            ],
            [
                "3c7256b41577c8e5"
            ],
            [
                "ca6a3a25d3074b64"
            ],
            [
                "f41ec824afb63153"
            ],
            [
                "e7d5b3d47ad1c53a"
            ],
            [
                "b7f0fdbf9ddb2a8a"
            ]
        ],
        "outputLabels": [
            "Water setpoint (heat shift)",
            "Water setpoint (direct)",
            "Room setpoint RTC",
            "to log",
            "DHW setpoint",
            "Toggle menu item"
        ]
    },
    {
        "id": "ca6a3a25d3074b64",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out to RTC setpoint",
        "mode": "link",
        "links": [
            "9a106cdefc873348"
        ],
        "x": 1425,
        "y": 2740,
        "wires": []
    },
    {
        "id": "3c7256b41577c8e5",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out to SP Manager",
        "mode": "link",
        "links": [
            "2d52ca9e08c7fb9a"
        ],
        "x": 1395,
        "y": 2720,
        "wires": []
    },
    {
        "id": "c0d182e336a34912",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "link in 51",
        "links": [
            "47cb7500b0321fc1",
            "ef9614c64c2b1966"
        ],
        "x": 2805,
        "y": 2120,
        "wires": [
            [
                "1e2795a950379445"
            ]
        ]
    },
    {
        "id": "aa04e7be9348a071",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "link out to DHW setpoint",
        "mode": "link",
        "links": [
            "327f3ad0eae0d7d5"
        ],
        "x": 3415,
        "y": 2620,
        "wires": []
    },
    {
        "id": "8f7d82299e5dcf8a",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to DHW SP manager",
        "info": "",
        "x": 3590,
        "y": 2660,
        "wires": []
    },
    {
        "id": "0544bbb49cbd245a",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_01",
        "label": "Condition 01:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 4,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_01",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 1840,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "d8e03fdb71a6f2fb",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "decdc0db03cb6227",
        "order": 25,
        "width": 16,
        "height": 1,
        "name": "note",
        "label": "Note. If the condition is TRUE, the scheduled task will be blocked",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 730,
        "y": 2240,
        "wires": []
    },
    {
        "id": "11554b0d6d72d08f",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input1",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_01",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 1840,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "b69a19e4b1334fa5",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_02",
        "label": "Condition 02:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 7,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_02",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 1880,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "a6e14f9f36b96843",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "link in 62",
        "links": [
            "49ebac0412d87642",
            "d63e1d5671ed9af1"
        ],
        "x": 115,
        "y": 280,
        "wires": [
            [
                "f5602874161743c8"
            ]
        ]
    },
    {
        "id": "8e3cfd35030617d7",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 105,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 1620,
        "wires": [
            [
                "8f344e97a91251d5",
                "3dd4ba546f5d887e"
            ]
        ]
    },
    {
        "id": "8f344e97a91251d5",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.Schedule_x_condition",
        "func": "if (msg.payload.includes('none') === true) {\n    global.set(msg.topic, undefined, \"file\");\n    return null;\n}\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3290,
        "y": 1740,
        "wires": [
            [
                "216334dde1648924"
            ]
        ]
    },
    {
        "id": "6a48a1a61f8fc344",
        "type": "function",
        "z": "35d210f042827344",
        "name": "function 31",
        "func": "var Schedule_1_state = global.get('Schedule_1_state',\"file\");\nvar Schedule_2_state = global.get('Schedule_2_state',\"file\");\nvar Schedule_3_state = global.get('Schedule_3_state',\"file\");\nvar Schedule_4_state = global.get('Schedule_4_state',\"file\");\nvar Schedule_5_state = global.get('Schedule_5_state',\"file\");\nvar Schedule_6_state = global.get('Schedule_6_state',\"file\");\nvar Schedule_7_state = global.get('Schedule_7_state',\"file\");\nvar Schedule_8_state = global.get('Schedule_8_state',\"file\");\nvar Schedule_9_state = global.get('Schedule_9_state',\"file\");\nvar Schedule_10_state = global.get('Schedule_10_state',\"file\");\n\nif (Schedule_1_state === 1 && msg.topic == 'Schedule_1') { return msg }\nif (Schedule_2_state === 1 && msg.topic == 'Schedule_2') { return msg }\nif (Schedule_3_state === 1 && msg.topic == 'Schedule_3') { return msg }\nif (Schedule_4_state === 1 && msg.topic == 'Schedule_4') { return msg }\nif (Schedule_5_state === 1 && msg.topic == 'Schedule_5') { return msg }\nif (Schedule_6_state === 1 && msg.topic == 'Schedule_6') { return msg }\nif (Schedule_7_state === 1 && msg.topic == 'Schedule_7') { return msg }\nif (Schedule_8_state === 1 && msg.topic == 'Schedule_8') { return msg }\nif (Schedule_9_state === 1 && msg.topic == 'Schedule_9') { return msg }\nif (Schedule_10_state === 1 && msg.topic == 'Schedule_10') { return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2560,
        "wires": [
            [
                "e168945122de5aa2"
            ]
        ]
    },
    {
        "id": "fb787bd66613fb70",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_03",
        "label": "Condition 03:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 9,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_03",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 1920,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "92f9bdf78a061e5d",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_04",
        "label": "Condition 04:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 11,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_04",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 1960,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "730bac2b62298b0e",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_05",
        "label": "Condition 05:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 13,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_05",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 2000,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "b86369771a709263",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_06",
        "label": "Condition 06:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 15,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_06",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 2040,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "f0bcc033e490736b",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_07",
        "label": "Condition 07:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 17,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_07",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 2080,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "12641cfda977bcf1",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_08",
        "label": "Condition 08:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 19,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_08",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 2120,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "1dfdb11f717c8ad2",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_09",
        "label": "Condition 09:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 21,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_09",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 2160,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "184f2de25e86640f",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "condition_10",
        "label": "Condition 10:   Block if",
        "tooltip": "",
        "place": "Select option",
        "group": "decdc0db03cb6227",
        "order": 23,
        "width": 13,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select option",
                "value": "none",
                "type": "str"
            },
            {
                "label": "DHW temperature is above",
                "value": "DHW_temperature",
                "type": "str"
            },
            {
                "label": "time since last sterelization is less than",
                "value": "ELAPSED_TIME",
                "type": "str"
            },
            {
                "label": "time since DHW temp was on target temperature is less than",
                "value": "ELAPSED_TIME2",
                "type": "str"
            },
            {
                "label": "time since previous trigger of this scheduled action is less than ",
                "value": "ELAPSED_TIME3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "condition_10",
        "topicType": "str",
        "className": "",
        "x": 750,
        "y": 2200,
        "wires": [
            [
                "2b9f10c0ddbd0b85"
            ]
        ]
    },
    {
        "id": "2b9f10c0ddbd0b85",
        "type": "function",
        "z": "35d210f042827344",
        "name": "function 32",
        "func": "\nif (msg.payload!='none') {global.set('Schedule_conditions.'+msg.topic+'.type',msg.payload,\"file\");}\nif (msg.payload=='none') {global.set('Schedule_conditions.'+msg.topic,undefined,\"file\");}\n\n\nif (msg.payload == \"DHW_temperature\") {\n    msg.payload = '0';\n    msg.label = '------';\n    msg.tooltip = '------';\n    node.send(msg);\n    msg.payload = '';\n    msg.label = \"°C\";\n    msg.tooltip = \"Range: 0-75 °C\";\n    global.set('Schedule_conditions.'+msg.topic+'.upperlimit',75,\"file\");\n    global.set('Schedule_conditions.'+msg.topic+'.lowerlimit',0,\"file\");\n    global.set('Schedule_conditions.'+msg.topic+'.value',undefined,\"file\");\n    return msg;\n}\nif (msg.payload == \"ELAPSED_TIME\") {\n    msg.payload = '0';\n    msg.label = '------';\n    msg.tooltip = '------';\n    node.send(msg);\n    msg.payload = '';\n    msg.label = \"Hours\";\n    msg.tooltip = \"Range: 0-500 hours\";\n    global.set('Schedule_conditions.'+msg.topic+'.upperlimit',500,\"file\");\n    global.set('Schedule_conditions.'+msg.topic+'.lowerlimit',0,\"file\");\n    global.set('Schedule_conditions.'+msg.topic+'.value',undefined,\"file\");\n    return msg;\n}\nif (msg.payload == \"ELAPSED_TIME2\") {\n    msg.payload = '0';\n    msg.label = '------';\n    msg.tooltip = '------';\n    node.send(msg);\n    msg.payload = '';\n    msg.label = \"Hours\";\n    msg.tooltip = \"Range: 0-500 hours\";\n    global.set('Schedule_conditions.'+msg.topic+'.upperlimit',500,\"file\");\n    global.set('Schedule_conditions.'+msg.topic+'.lowerlimit',0,\"file\");\n    global.set('Schedule_conditions.'+msg.topic+'.value',undefined,\"file\");\n    return msg;\n}\nif (msg.payload == \"ELAPSED_TIME3\") {\n    msg.payload = '0';\n    msg.label = '------';\n    msg.tooltip = '------';\n    node.send(msg);\n    msg.payload = '';\n    msg.label = \"Hours\";\n    msg.tooltip = \"Range: 0-500 hours\";\n    global.set('Schedule_conditions.'+msg.topic+'.upperlimit',500,\"file\");\n    global.set('Schedule_conditions.'+msg.topic+'.lowerlimit',0,\"file\");\n    global.set('Schedule_conditions.'+msg.topic+'.value',undefined,\"file\");\n    return msg;\n}\nif (msg.payload == \"none\") {\n    msg.payload = 1;\n    msg.label = '------';\n    msg.tooltip = '------';\n    node.send(msg);\n    msg.payload = '';\n    msg.label = '';\n    msg.tooltip = '';\n    global.set('Schedule_conditions.'+msg.topic+'.value',undefined,\"file\");\n    return msg;\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2000,
        "wires": [
            [
                "e67cac66797822c9"
            ]
        ]
    },
    {
        "id": "09ad5bc7494d3bae",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input2",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_02",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 1880,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "81c7eb5abe1acd21",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input3",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_03",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 1920,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "a82e0461d3df88ba",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input4",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_04",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 1960,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "8d310d74f111808e",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input5",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_05",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 2000,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "e7c780b04e58991f",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input6",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 16,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_06",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 2040,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "ad9c5e342b8c0e4d",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input7",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_07",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 2080,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "a80cfb45d2ed4485",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input8",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 20,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_08",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 2120,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "2d46ae559a35d285",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input9",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 22,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_09",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 2160,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "d638e2c6cafc1247",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "name": "text input10",
        "label": "{{msg.label}}",
        "tooltip": "{{msg.tooltip}}",
        "group": "decdc0db03cb6227",
        "order": 24,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "500",
        "topic": "condition_10",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 2200,
        "wires": [
            [
                "1da654b8422cbda9"
            ]
        ]
    },
    {
        "id": "1da654b8422cbda9",
        "type": "function",
        "z": "35d210f042827344",
        "name": "upper/lower limits",
        "func": "var conditions =    global.get('Schedule_conditions.'+msg.topic,\"file\");\n\n\nif (msg.payload > conditions.upperlimit) {msg.payload = conditions.upperlimit}\nif (msg.payload < conditions.lowerlimit) {msg.payload = conditions.lowerlimit}\n\nglobal.set('Schedule_conditions.'+msg.topic+'.value',msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 2200,
        "wires": [
            [
                "bb74ee97ca071609"
            ]
        ]
    },
    {
        "id": "e67cac66797822c9",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "condition_01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_02",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_03",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_04",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_05",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_06",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_07",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_08",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_09",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 1110,
        "y": 1900,
        "wires": [
            [
                "11554b0d6d72d08f"
            ],
            [
                "09ad5bc7494d3bae"
            ],
            [
                "81c7eb5abe1acd21"
            ],
            [
                "a82e0461d3df88ba"
            ],
            [
                "8d310d74f111808e"
            ],
            [
                "e7c780b04e58991f"
            ],
            [
                "ad9c5e342b8c0e4d"
            ],
            [
                "a80cfb45d2ed4485"
            ],
            [
                "2d46ae559a35d285"
            ],
            [
                "d638e2c6cafc1247"
            ]
        ]
    },
    {
        "id": "bb74ee97ca071609",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "condition_01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_02",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_03",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_04",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_05",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_06",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_07",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_08",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_09",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 1110,
        "y": 2140,
        "wires": [
            [
                "11554b0d6d72d08f"
            ],
            [
                "09ad5bc7494d3bae"
            ],
            [
                "81c7eb5abe1acd21"
            ],
            [
                "a82e0461d3df88ba"
            ],
            [
                "8d310d74f111808e"
            ],
            [
                "e7c780b04e58991f"
            ],
            [
                "ad9c5e342b8c0e4d"
            ],
            [
                "a80cfb45d2ed4485"
            ],
            [
                "2d46ae559a35d285"
            ],
            [
                "d638e2c6cafc1247"
            ]
        ]
    },
    {
        "id": "a147fe89247aa73b",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition09",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 96,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 1460,
        "wires": [
            [
                "8f344e97a91251d5",
                "54cb085390734540"
            ]
        ]
    },
    {
        "id": "f6acd15f36324736",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition01",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 24,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 180,
        "wires": [
            [
                "8f344e97a91251d5",
                "9ed21e4bc022f0f9"
            ]
        ]
    },
    {
        "id": "acea208050889a80",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out 66",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1525,
        "y": 2920,
        "wires": []
    },
    {
        "id": "c8f137bcff651fba",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition08",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 87,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 1300,
        "wires": [
            [
                "8f344e97a91251d5",
                "947134b7bba6db74"
            ]
        ]
    },
    {
        "id": "f314a9b676182c11",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition07",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 78,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 1140,
        "wires": [
            [
                "8f344e97a91251d5",
                "9ea62ac24f82336f"
            ]
        ]
    },
    {
        "id": "773eba4d817b8b93",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition06",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 69,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 980,
        "wires": [
            [
                "8f344e97a91251d5",
                "a1aabb7ee798e9d6"
            ]
        ]
    },
    {
        "id": "82d6f38bd9764a93",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition05",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 60,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 820,
        "wires": [
            [
                "8f344e97a91251d5",
                "9aeed9019812c599"
            ]
        ]
    },
    {
        "id": "e90e53734d73b6da",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition04",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 51,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 660,
        "wires": [
            [
                "8f344e97a91251d5",
                "babe98b784a672f6"
            ]
        ]
    },
    {
        "id": "b24f970c2d6262f9",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition03",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 42,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 500,
        "wires": [
            [
                "8f344e97a91251d5",
                "0ac021e4786e8145"
            ]
        ]
    },
    {
        "id": "c904ad7bb0b016d8",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "name": "Condition02",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 33,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Condition 1",
                "value": "condition_01",
                "type": "str"
            },
            {
                "label": "Condition 2",
                "value": "condition_02",
                "type": "str"
            },
            {
                "label": "Condition 3",
                "value": "condition_03",
                "type": "str"
            },
            {
                "label": "Condition 4",
                "value": "condition_04",
                "type": "str"
            },
            {
                "label": "Condition 5",
                "value": "condition_05",
                "type": "str"
            },
            {
                "label": "Condition 6",
                "value": "condition_06",
                "type": "str"
            },
            {
                "label": "Condition 7",
                "value": "condition_07",
                "type": "str"
            },
            {
                "label": "Condition 8",
                "value": "condition_08",
                "type": "str"
            },
            {
                "label": "Condition 9",
                "value": "condition_09",
                "type": "str"
            },
            {
                "label": "Condition 10",
                "value": "condition_10",
                "type": "str"
            },
            {
                "label": "None",
                "value": "none",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_condition",
        "topicType": "str",
        "className": "",
        "x": 3050,
        "y": 340,
        "wires": [
            [
                "8f344e97a91251d5",
                "6fa7b868995a8d8e"
            ]
        ]
    },
    {
        "id": "4e9428bb306835e7",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Condition",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3040,
        "y": 140,
        "wires": []
    },
    {
        "id": "9ed21e4bc022f0f9",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = ''; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 180,
        "wires": [
            [
                "f6acd15f36324736"
            ]
        ]
    },
    {
        "id": "6fa7b868995a8d8e",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = ''; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 340,
        "wires": [
            [
                "c904ad7bb0b016d8"
            ]
        ]
    },
    {
        "id": "0ac021e4786e8145",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = ''; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 500,
        "wires": [
            [
                "b24f970c2d6262f9"
            ]
        ]
    },
    {
        "id": "babe98b784a672f6",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = ''; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 660,
        "wires": [
            [
                "e90e53734d73b6da"
            ]
        ]
    },
    {
        "id": "9aeed9019812c599",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = ''; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 820,
        "wires": [
            [
                "82d6f38bd9764a93"
            ]
        ]
    },
    {
        "id": "a1aabb7ee798e9d6",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = ''; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 980,
        "wires": [
            [
                "773eba4d817b8b93"
            ]
        ]
    },
    {
        "id": "9ea62ac24f82336f",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = ''; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1140,
        "wires": [
            [
                "f314a9b676182c11"
            ]
        ]
    },
    {
        "id": "947134b7bba6db74",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = ''; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1300,
        "wires": [
            [
                "c8f137bcff651fba"
            ]
        ]
    },
    {
        "id": "54cb085390734540",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = ''; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1460,
        "wires": [
            [
                "a147fe89247aa73b"
            ]
        ]
    },
    {
        "id": "3dd4ba546f5d887e",
        "type": "function",
        "z": "35d210f042827344",
        "name": "none",
        "func": "if (msg.payload.includes('none') === true) { msg.payload = '' ; return msg }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 1620,
        "wires": [
            [
                "8e3cfd35030617d7"
            ]
        ]
    },
    {
        "id": "216334dde1648924",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "",
        "group": "2b0c8e162d47abbb",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Conditions",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "settings",
        "payload": "{\"group\":{\"show\":[\"Scheduler_Conditions\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 3490,
        "y": 1820,
        "wires": [
            [
                "d237190377c1112c"
            ]
        ]
    },
    {
        "id": "6b0824e7db729160",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "2b0c8e162d47abbb",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "SPACER scheduler 1x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 3530,
        "y": 1780,
        "wires": []
    },
    {
        "id": "0beb0e5d78ac91df",
        "type": "ui_template",
        "z": "35d210f042827344",
        "group": "decdc0db03cb6227",
        "name": "Condition help",
        "order": 6,
        "width": 11,
        "height": 11,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\nSetting a condition is optional. <br>\nFor every scheduled action you can define a blocking condition. This means that when the scheduled action is triggered the condition is evaluated.<br>\nWhen the condition is TRUE, the action will be blocked.<br>\n\n<br>\nThe conditions are:<br><br>\n<u>DHW temperature is above</u>\nIf the last measured DHW temperature is above the given value, the action will be blocked.<br><br>\n\n<u>time since last sterelization is less than</u>\nIf the DHW temperature is 60°C or higher, it takes minutes to sterelize (kill legionella) the tank. The date/time the water is 60+°C is stored. If the elapsed time since then is less than the given value, the action will be blocked. (Note: make sure the measured temperature is good and representative in the tank)\n<br><br>\n<u>time since DHW temp was on target temperature is less than</u>\nThe date/time the water is at the target temperature is stored. If the elapsed time since then is less than the given value, the action will be blocked.<br><br> \n<u>time since previous trigger of this scheduled action is less than</u>\nThe date/time of each scheduled action is stored. If the elapsed time since then is less than the given value, the action will be blocked. ",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1680,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "a0a2fc90ea4e5b73",
        "type": "ui_template",
        "z": "35d210f042827344",
        "group": "decdc0db03cb6227",
        "name": "Line - Setup export",
        "order": 3,
        "width": 27,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Condition configuration</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1690,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "4a7be89a2e603bb8",
        "type": "ui_text",
        "z": "35d210f042827344",
        "group": "decdc0db03cb6227",
        "order": 1,
        "width": 26,
        "height": 1,
        "name": "filler text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1660,
        "y": 1860,
        "wires": []
    },
    {
        "id": "0de8f264a17d3d32",
        "type": "ui_button",
        "z": "35d210f042827344",
        "name": "close",
        "group": "decdc0db03cb6227",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Scheduler_Conditions\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1650,
        "y": 1820,
        "wires": [
            [
                "062207b0f6922685"
            ]
        ]
    },
    {
        "id": "d237190377c1112c",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out 67",
        "mode": "link",
        "links": [
            "dbcf60ce513ff3ae"
        ],
        "x": 3615,
        "y": 1820,
        "wires": []
    },
    {
        "id": "062207b0f6922685",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out 68",
        "mode": "link",
        "links": [
            "dbcf60ce513ff3ae"
        ],
        "x": 1765,
        "y": 1820,
        "wires": []
    },
    {
        "id": "bd0a287533674d75",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "link in 63",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 1535,
        "y": 1820,
        "wires": [
            [
                "0de8f264a17d3d32"
            ]
        ]
    },
    {
        "id": "e7d5b3d47ad1c53a",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out 69",
        "mode": "link",
        "links": [
            "61def1f2090e360a"
        ],
        "x": 1425,
        "y": 2780,
        "wires": []
    },
    {
        "id": "f41ec824afb63153",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out 70",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1395,
        "y": 2760,
        "wires": []
    },
    {
        "id": "b7ba3cde110cd1ba",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "link in 64",
        "links": [
            "47cb7500b0321fc1"
        ],
        "x": 445,
        "y": 1820,
        "wires": [
            [
                "39e791e51b901015"
            ]
        ]
    },
    {
        "id": "39e791e51b901015",
        "type": "function",
        "z": "35d210f042827344",
        "name": "restore type and value",
        "func": "let i = 1;\nwhile (i < 11) {\n    \n    var topic_name;\n    var msg1={};\n    var msg2={};\n    var msg3={}; msg3.payload=0; msg3.label = '------'; msg3.tooltip = '------';\n    \n    \n    \n    if (i < 10)     {topic_name = 'condition_0'}\n    else            {topic_name = 'condition_'}\n    \n    if (global.get('Schedule_conditions.'+topic_name+i,\"file\") !== undefined) {\n        msg3.topic      =  topic_name + i;\n        node.send([null,msg3]);\n\n        // type\n        msg1.payload    = global.get('Schedule_conditions.'+topic_name+i+'.type',\"file\");\n        msg1.topic      =  topic_name + i;\n        \n        // value\n        msg2.payload    = global.get('Schedule_conditions.'+topic_name+i+'.value',\"file\");\n        msg2.topic      = topic_name + i;\n    \n            if (msg1.payload == \"DHW_temperature\") {\n                msg2.label = \"°C\";\n                msg2.tooltip = \"Range: 0-75 °C\";\n                \n            }\n            \n            if (msg1.payload == \"ELAPSED_TIME\") {\n                msg2.label = \"Hours\";\n                msg2.tooltip = \"Range: 0-500 hours\";\n            }\n            \n            if (msg1.payload == \"ELAPSED_TIME2\") {\n                msg2.label = \"Hours\";\n                msg2.tooltip = \"Range: 0-500 hours\";\n            }\n\n            if (msg.payload == \"ELAPSED_TIME3\") {\n                msg2.label = \"Hours\";\n                msg2.tooltip = \"Range: 0-500 hours\";\n            }\n\n        node.send([msg1,msg2]);\n        \n    }\n\n    i++;\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1860,
        "wires": [
            [
                "35e2711cece61d0b"
            ],
            [
                "cc0e8acfaa76166a"
            ]
        ],
        "outputLabels": [
            "type",
            "value"
        ]
    },
    {
        "id": "35e2711cece61d0b",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "restore",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "condition_01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_02",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_03",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_04",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_05",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_06",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_07",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_08",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_09",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 490,
        "y": 1960,
        "wires": [
            [
                "0544bbb49cbd245a"
            ],
            [
                "b69a19e4b1334fa5"
            ],
            [
                "fb787bd66613fb70"
            ],
            [
                "92f9bdf78a061e5d"
            ],
            [
                "730bac2b62298b0e"
            ],
            [
                "b86369771a709263"
            ],
            [
                "f0bcc033e490736b"
            ],
            [
                "12641cfda977bcf1"
            ],
            [
                "1dfdb11f717c8ad2"
            ],
            [
                "184f2de25e86640f"
            ]
        ]
    },
    {
        "id": "cc0e8acfaa76166a",
        "type": "switch",
        "z": "35d210f042827344",
        "name": "restore",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "condition_01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_02",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_03",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_04",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_05",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_06",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_07",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_08",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_09",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "condition_10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 490,
        "y": 2120,
        "wires": [
            [
                "11554b0d6d72d08f"
            ],
            [
                "09ad5bc7494d3bae"
            ],
            [
                "81c7eb5abe1acd21"
            ],
            [
                "a82e0461d3df88ba"
            ],
            [
                "8d310d74f111808e"
            ],
            [
                "e7c780b04e58991f"
            ],
            [
                "ad9c5e342b8c0e4d"
            ],
            [
                "a80cfb45d2ed4485"
            ],
            [
                "2d46ae559a35d285"
            ],
            [
                "d638e2c6cafc1247"
            ]
        ]
    },
    {
        "id": "6e6b758f54cd9b22",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1715,
        "y": 2520,
        "wires": [
            [
                "317942154b6d1cb3"
            ]
        ],
        "l": false
    },
    {
        "id": "1a571f9216756e5e",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1715,
        "y": 2560,
        "wires": [
            [
                "92b636a9597d91b2"
            ]
        ],
        "l": false
    },
    {
        "id": "9a097e6d95e1ca6e",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1715,
        "y": 2600,
        "wires": [
            [
                "14327004637e05c7",
                "f0045be5a90c957f"
            ]
        ],
        "l": false
    },
    {
        "id": "12c1fd3169e6c639",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1715,
        "y": 2640,
        "wires": [
            [
                "c6801a6c865543b3"
            ]
        ],
        "l": false
    },
    {
        "id": "c616ab1245360ad1",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1715,
        "y": 2680,
        "wires": [
            [
                "b91f0b27e28d647b",
                "a040c5a397316aa6"
            ]
        ],
        "l": false
    },
    {
        "id": "1c3a1716ed8db17d",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1715,
        "y": 2720,
        "wires": [
            [
                "4ca97fe11f8196e4"
            ]
        ],
        "l": false
    },
    {
        "id": "9c75cdabfee5ec0f",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "8387b4df126e002c",
        "name": "link in 65",
        "links": [
            "04d51dd3d6706289"
        ],
        "x": 3025,
        "y": 1900,
        "wires": [
            [
                "149593cb5a59bfc2"
            ]
        ]
    },
    {
        "id": "04d51dd3d6706289",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "link out 71",
        "mode": "link",
        "links": [
            "9c75cdabfee5ec0f"
        ],
        "x": 2555,
        "y": 1900,
        "wires": []
    },
    {
        "id": "41e3d65e44f729b3",
        "type": "function",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "function 37",
        "func": "if (msg.payload == 'toggle item') {\n\n    var msg1 = {};\n    \n\n    msg1.topic = msg.topic.replace(\"action\", \"toggle_item\");\n    var value1 = global.get(msg1.topic,\"file\");\n    \n    if (value1 === undefined) { msg1.payload = { \" \": \"\", \"WAR\": false, \"RTC\": false, \"SoftStart\": false, \"Solar2DHW\": false, \"State\": false } }\n    else {msg1.payload = value1}\n\n    return [msg1]\n\n    }\n\n\nreturn null\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 1900,
        "wires": [
            [
                "64b63afc5d83d929",
                "aa67113ad3088493",
                "d71671801e83ccd8"
            ]
        ],
        "outputLabels": [
            "msg1 - show pop-up"
        ]
    },
    {
        "id": "64b63afc5d83d929",
        "type": "change",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "Show submenu",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Scheduler_function_actions\"],\"hide\":[\"Scheduler_Scheduler\",\"Scheduler_Scheduler_related_settings\",\"Scheduler_Help\",\"Scheduler_Conditions\",\"Scheduler_Notification\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2380,
        "y": 1900,
        "wires": [
            [
                "04d51dd3d6706289",
                "2d4eefbf9dcc6e9f"
            ]
        ]
    },
    {
        "id": "aa67113ad3088493",
        "type": "ui_form",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "form Select functions",
        "label": "",
        "group": "5cfc57b36b31394c",
        "order": 2,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Select function(s) to change",
                "value": " ",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "WAR",
                "value": "WAR",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "RTC",
                "value": "RTC",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "SoftStart",
                "value": "SoftStart",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "Solar²DHW",
                "value": "Solar2DHW",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "Set the desired state",
                "value": " ",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "State",
                "value": "State",
                "type": "switch",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            " ": "",
            "WAR": false,
            "RTC": false,
            "SoftStart": false,
            "Solar2DHW": false,
            "State": false
        },
        "payload": "",
        "submit": "Save",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 2000,
        "y": 1980,
        "wires": [
            [
                "5ab7ad5b040ca231"
            ]
        ]
    },
    {
        "id": "83791dcc23be38a9",
        "type": "ui_template",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "group": "5cfc57b36b31394c",
        "name": "HEAD",
        "order": 1,
        "width": 6,
        "height": 2,
        "format": "<html>\n<!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n\n<head>\n    <left>\n        <h1>Scheduler action</h1>\n        <br>\n    </left>\n    <hr style=\"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\" ;>\n\n</head>\n\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2050,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "5ab7ad5b040ca231",
        "type": "function",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "function 38",
        "func": "if (msg.payload.WAR === false && msg.payload.RTC === false && msg.payload.SoftStart === false && msg.payload.Solar2DHW === false) {\n    global.set(msg.topic, undefined, \"file\");\n    \n    msg.topic = msg.topic.replace(\"toggle_item\", \"action\");\n    global.set(msg.topic, undefined, \"file\");\n    \n    return msg;\n} \n\nglobal.set(msg.topic, msg.payload, \"file\");\nreturn msg\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 1980,
        "wires": [
            [
                "23cce10c04b0a251",
                "cf6dfeda59a5ed1d",
                "7250ce16a456d262"
            ]
        ]
    },
    {
        "id": "d71671801e83ccd8",
        "type": "ui_form",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "form cancel button",
        "label": "",
        "group": "5cfc57b36b31394c",
        "order": 3,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": " ",
                "value": " ",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            " ": ""
        },
        "payload": "",
        "submit": "Cancel",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 2010,
        "y": 2020,
        "wires": [
            [
                "23cce10c04b0a251",
                "cf6dfeda59a5ed1d"
            ]
        ]
    },
    {
        "id": "e95b104ec4b5b889",
        "type": "ui_template",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "group": "5cfc57b36b31394c",
        "name": "FOOTER",
        "order": 4,
        "width": 6,
        "height": 4,
        "format": "<html>\n<!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<left>\n    <br>\n    Note:<br><br>\n    Only the selected items will be changed to the new state.<br>\n    Items not selected wil remain unchanged upon execution.<br>\n</left>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2040,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "23cce10c04b0a251",
        "type": "change",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "Hide submenu",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Scheduler_Notification\",\"Scheduler_Help\",\"Scheduler_function_actions\",\"Scheduler_Conditions\"],\"show\":[\"Scheduler_Scheduler\",\"Scheduler_Scheduler_related_settings\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2380,
        "y": 2020,
        "wires": [
            [
                "04d51dd3d6706289",
                "7250ce16a456d262"
            ]
        ]
    },
    {
        "id": "b7f0fdbf9ddb2a8a",
        "type": "function",
        "z": "35d210f042827344",
        "name": "toggle item",
        "func": "var item = msg.payload;\n    if (item === undefined) {return null}\n\nvar list;\nvar state;\nif (item.State == true) { msg.payload = 1 ; state = 'ON'}\nif (item.State == false) { msg.payload = 0 ; state = 'OFF'}\n\n\n\nif (item.WAR === true) { \n    msg.topic = 'Correction_0_WAR_on_off'; \n    list = 'WAR';\n    node.send([msg, null, null, null]) \n    }\n\nif (item.RTC === true) { \n    msg.topic = 'Scheduled action'; \n    if (list !== undefined) {list += ', RTC'}\n    else {list = 'RTC'}\n    node.send([null, msg, null, null]) \n    }\nif (item.SoftStart === true) { \n    if (list !== undefined) { list += ', SoftStart' }\n    else { list = 'SoftStart' }\n    node.send([null, null, msg, null]) \n    }\n\nif (item.Solar2DHW === true) { \n    if (list !== undefined) { list += ', Solar²DHW' }\n    else { list = 'Solar²DHW' }\n    node.send([null, null, null, msg]) \n    }\n\nvar msg99 = {};\nmsg99.topic = 'Scheduler';\nmsg99.payload = 'Turn ' + state + ' function: ' + list;\n\n\n\n// msg to log\nnode.send([null,null,null,null,msg99])",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2880,
        "wires": [
            [
                "34e923228bf51ddf"
            ],
            [
                "eb88ab4567d68ff5"
            ],
            [
                "029c63457cab9dc0"
            ],
            [
                "cd1b20e317c3d446"
            ],
            [
                "acea208050889a80"
            ]
        ],
        "outputLabels": [
            "WAR",
            "RTC",
            "SOFTSTART",
            "SOLAR2DHW",
            "LOG"
        ]
    },
    {
        "id": "34e923228bf51ddf",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out 72",
        "mode": "link",
        "links": [
            "01d75eec1bfe68d4"
        ],
        "x": 1395,
        "y": 2820,
        "wires": []
    },
    {
        "id": "eb88ab4567d68ff5",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out 73",
        "mode": "link",
        "links": [
            "942f2ca34abfe8ac"
        ],
        "x": 1395,
        "y": 2860,
        "wires": []
    },
    {
        "id": "029c63457cab9dc0",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out 74",
        "mode": "link",
        "links": [
            "6bb32dd02ad372d4"
        ],
        "x": 1395,
        "y": 2900,
        "wires": []
    },
    {
        "id": "cd1b20e317c3d446",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "link out 75",
        "mode": "link",
        "links": [
            "4ed5f3924acf26ff"
        ],
        "x": 1395,
        "y": 2940,
        "wires": []
    },
    {
        "id": "d63e1d5671ed9af1",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "link out 76",
        "mode": "link",
        "links": [
            "a6e14f9f36b96843"
        ],
        "x": 2525,
        "y": 2080,
        "wires": []
    },
    {
        "id": "cf6dfeda59a5ed1d",
        "type": "delay",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2360,
        "y": 2080,
        "wires": [
            [
                "d63e1d5671ed9af1"
            ]
        ]
    },
    {
        "id": "8596a9f652603dac",
        "type": "trigger",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "",
        "op1": "",
        "op2": "{\"group\":{\"hide\":[\"Scheduler_Notification\",\"Scheduler_Help\",\"Scheduler_function_actions\",\"Scheduler_Conditions\"],\"show\":[\"Scheduler_Scheduler\",\"Scheduler_Scheduler_related_settings\"]}}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "15",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2370,
        "y": 2140,
        "wires": [
            [
                "04d51dd3d6706289"
            ]
        ]
    },
    {
        "id": "2d4eefbf9dcc6e9f",
        "type": "change",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 2120,
        "wires": [
            [
                "8596a9f652603dac"
            ]
        ]
    },
    {
        "id": "7250ce16a456d262",
        "type": "change",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 2160,
        "wires": [
            [
                "8596a9f652603dac"
            ]
        ]
    },
    {
        "id": "efe3dd019498a583",
        "type": "link in",
        "z": "35d210f042827344",
        "name": "link in 71",
        "links": [
            "fb5aeb896e8acc76",
            "5c677fecb54920ff",
            "9bc9b1a547ea7ef6"
        ],
        "x": 1125,
        "y": 2480,
        "wires": [
            [
                "e168945122de5aa2"
            ]
        ]
    },
    {
        "id": "6021a18a5e9c23cb",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "function 84",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3235,
        "y": 2480,
        "wires": [
            [
                "d9b9cfbe76f8a7aa",
                "c959ee1f94c31c45"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "af9178426366861c",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "function 85",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3235,
        "y": 2620,
        "wires": [
            [
                "aa04e7be9348a071"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "ebc9b8c270d7c636",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "function 86",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2695,
        "y": 2780,
        "wires": [
            [
                "7a27b2c8c4721ed9",
                "55ed50ca78ad2e8e"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "c0fdc0126f7d69c7",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "link in 75",
        "links": [
            "49ebac0412d87642"
        ],
        "x": 2005,
        "y": 2200,
        "wires": [
            [
                "8b33ff42888d0c3b"
            ]
        ]
    },
    {
        "id": "8b33ff42888d0c3b",
        "type": "function",
        "z": "35d210f042827344",
        "g": "af1f780bbdddde83",
        "name": "function 90",
        "func": "let msg1={};\nmsg1.payload=1;\nreturn msg1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 2200,
        "wires": [
            [
                "23cce10c04b0a251"
            ]
        ]
    },
    {
        "id": "e33b5a24cd58c8d2",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "link in 76",
        "links": [
            "8ed91c4260d9b758",
            "b131edf180140fb6"
        ],
        "x": 2855,
        "y": 2340,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "3aa03811830ef29e",
        "type": "tab",
        "label": "WP System",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d31e83867f2e0227",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3240ca538c2a5df3",
            "d43ee06ee34140d5",
            "a3a41ed73245a328",
            "50cd2358bc4fed85",
            "4120fc9975690028",
            "6a54feb677599729",
            "510f802795714d75"
        ],
        "x": 2114,
        "y": 539,
        "w": 692,
        "h": 222
    },
    {
        "id": "5c3df7b5fb0fa130",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e5ee81fbd045b5ef",
            "258316e7112c15b4",
            "6f8b37b8a4354baf",
            "cc96d0a80f6bdef4",
            "71bc363e9bca5fa6",
            "9e1b71b301e9e79d",
            "44cd6ca0f672e121",
            "d11ec0cafa6ed09f",
            "c38da5f9e3ce0d13",
            "ab0c73c86987caf3",
            "09edf2907086baf2",
            "5837cbf37ef47ea6"
        ],
        "x": 1944,
        "y": 1399,
        "w": 872,
        "h": 302
    },
    {
        "id": "404eed4ef9d90803",
        "type": "group",
        "z": "3aa03811830ef29e",
        "name": "Show / hide menu section",
        "style": {
            "label": true
        },
        "nodes": [
            "a42f4f922e494524",
            "0b8747d2da0482a3",
            "bc563b90430840aa",
            "63c695317a49ea6b",
            "ec21e518e2ade1eb",
            "c5e1f08f07eb647b",
            "0911a9edae380679"
        ],
        "x": 2014,
        "y": 19,
        "w": 812,
        "h": 122
    },
    {
        "id": "c361a153997d2dfd",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0f0ace5816c4fe0a",
            "c5ae638b1b65bff4"
        ],
        "x": 824,
        "y": 159,
        "w": 252,
        "h": 142
    },
    {
        "id": "8fe25c73d37fe670",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "51c0bb5ee4bb4f0f",
            "bffa098ab7b94669",
            "28fafb00eff46231",
            "eb0c82f6553d8182",
            "96d1b2a3bba37ab3",
            "9439217717d533c8",
            "e45c612a7cd81bca",
            "78ea8dcdc912cc07",
            "280ef51b4c314e1a",
            "fdd9c7ec95eff575",
            "142d3fc7ce50b860",
            "ab61cc041f990a5e",
            "b0db0c075b6cada4",
            "5c678c17c0272bd7",
            "f68241d2cf6a74e8",
            "110b1d924469e409",
            "338e6b81ea5e1e06",
            "59ac957754893b83",
            "6be67176d1f660cc",
            "05b0e21936f66dca",
            "498c5eb0c718380d",
            "776cbfd355ed920f",
            "e335ee2f6e1f9957",
            "f4fa02505ab621d5",
            "319c435620e4980f",
            "867fcdc764bf28f1",
            "a53f9fb190ca01ea",
            "ac8ee41d4f78120e",
            "43bf696dbf416cb0",
            "7257e77181b2e1a4",
            "cb7b5a6a14926482",
            "6c31c89912e87024",
            "5945f577b64bd499",
            "00b957e057fd4843",
            "f9048baa0aa4d07d",
            "a3eab03124fb697b",
            "376a174e36667b9d",
            "e8e1e41f1c85ca7a",
            "1f82dc785dc48abf",
            "ce0115cd2e7f2ac7",
            "419fb911b5aa7d3e",
            "646815dd1d600ff2",
            "cfcc8b51c90050ac",
            "1d0bdc24983833d5"
        ],
        "x": 1944,
        "y": 219,
        "w": 942,
        "h": 1162
    },
    {
        "id": "0bb11670c285bff1",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a8d0be4408703f65",
            "bf4e74cd2b591a26",
            "cba9af7ca5d830ba",
            "a6a546d71cb6c3c9",
            "0eec66bcde81e7bf",
            "1624dc37720ea0f6",
            "645258b618c6186b",
            "fb3f6458755be846",
            "62f798bf3b269fb8",
            "4eab814831da1cf7",
            "6241ed2b12f12331",
            "37dfca7cd812ec3b",
            "6bdadcca19574473",
            "4ebf2601353294cb",
            "3f207fc52ec0027e",
            "740a027c146249ae",
            "70b30de18eac8972",
            "70016d3833197d68"
        ],
        "x": 1494,
        "y": 259,
        "w": 412,
        "h": 722
    },
    {
        "id": "b4e7d28c61065a10",
        "type": "group",
        "z": "3aa03811830ef29e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f233670d8569fc20",
            "54bfc60418e56a9b",
            "fb74e5d35106e2b9",
            "f9c1a6778b03a810",
            "67a7a74773ea6560",
            "716a35b80ac09a85",
            "c0148bdd1814580f",
            "c2d0c237af80e591",
            "5998c26dd710f4f1",
            "e112c36e957452a3",
            "42db2c5a1500bee2",
            "ee674cfd16767755",
            "f6260e40072e9c45",
            "14fbc980fb2680f1",
            "94f9b89e93918fa6",
            "c96747c13bdcbcd3",
            "9293ce0fe3ffaed3"
        ],
        "x": 1474,
        "y": 999,
        "w": 432,
        "h": 602
    },
    {
        "id": "9ad65d8ac40d3b19",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "SYSTEM HEALTH",
        "info": "",
        "x": 130,
        "y": 140,
        "wires": []
    },
    {
        "id": "59f295a319957fc3",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "LOG",
        "info": "",
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "d6c24d84dd4b55eb",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "HW INFORMATION",
        "info": "",
        "x": 630,
        "y": 140,
        "wires": []
    },
    {
        "id": "726819233aa921e5",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "MENU CONFIG",
        "info": "",
        "x": 900,
        "y": 140,
        "wires": []
    },
    {
        "id": "d893e0e05a2f4786",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "ABOUT",
        "info": "",
        "x": 1230,
        "y": 140,
        "wires": []
    },
    {
        "id": "4ad1dd213be1bcfe",
        "type": "ui_ui_control",
        "z": "3aa03811830ef29e",
        "name": "",
        "events": "all",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "c63327653e3140e5"
            ]
        ]
    },
    {
        "id": "b6bd3a764d893318",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "SYSTEM HEALTH",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "favorite",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_SYSTEM_HEALTH\"],\"hide\":[\"SYSTEM_LOG\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_MENU\",\"SYSTEM_ABOUT\",\"SYSTEM_MQTT\",\"SYSTEM_MQTT_sensors\",\"SYSTEM_1_wire_sensors\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "dbcf60ce513ff3ae",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "name": "to ui control",
        "links": [
            "ad0975065f9323c6",
            "bc563b90430840aa",
            "5837cbf37ef47ea6",
            "62a0909d9f5a43c0",
            "ad7996a6a3e6085b",
            "d237190377c1112c",
            "062207b0f6922685",
            "c46075529b443060"
        ],
        "x": 55,
        "y": 60,
        "wires": [
            [
                "4ad1dd213be1bcfe"
            ]
        ]
    },
    {
        "id": "7d97d279c32a474a",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "ec94eaa0930738be",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SYSTEM HEALTH",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 130,
        "y": 320,
        "wires": []
    },
    {
        "id": "ad0975065f9323c6",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "dbcf60ce513ff3ae"
        ],
        "x": 285,
        "y": 260,
        "wires": []
    },
    {
        "id": "3a86dae674a0f12f",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "LOG",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "history",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_LOG\"],\"hide\":[\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_MENU\",\"SYSTEM_ABOUT\",\"SYSTEM_MQTT\",\"SYSTEM_MQTT_sensors\",\"SYSTEM_1_wire_sensors\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "d01467831b5376d8",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "HARDWARE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "settings",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_HW_INFORMATION\"],\"hide\":[\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_MENU\",\"SYSTEM_ABOUT\",\"SYSTEM_LOG\",\"SYSTEM_MQTT\",\"SYSTEM_MQTT_sensors\",\"SYSTEM_1_wire_sensors\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "c23026d28e7fbe42",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "About",
        "group": "70a5fe6af8ed1d29",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "About",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "help",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_ABOUT\"],\"hide\":[\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_MENU\",\"SYSTEM_LOG\",\"SYSTEM_MQTT\",\"SYSTEM_MQTT_sensors\",\"SYSTEM_1_wire_sensors\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1250,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "fa276db3a5fd6186",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "group": "70a5fe6af8ed1d29",
        "name": "Line - Setup ",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 110,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "205ffcc404e58973",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "group": "b7f740331bca1b3f",
        "name": "Line - Contributions text",
        "order": 3,
        "width": 7,
        "height": 14,
        "format": "<h3>Heishamon to Node Red</h3>\n<p>Github page: <a href=\"https://github.com/edterbak/NodeRed_Heishamon_control\" target=\"_blank\\\">here</a>.</p>\n</br>\n<h3>Author(s):</h3></br>\nEd ter bak (alias)</br>\nMaarten69 (alias)</br></br>\n\n<h3>Thanks and gratitude goes to:</h3>\nEgyras</br>\nCurlyMo</br>\nAUijtdehaag</br>\nlampy25</br>\ntimovd</br>\nE1cid</br>\nJavaboon</br>\nAikon</br>\nMikeyMan</br>\nblb4</br>\nsjampeter</br>\nThe-Source</br>\nBazemanMK</br>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3240ca538c2a5df3",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "group": "82f1040c4d704f04",
        "order": 11,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Select allowed functions",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2490,
        "y": 600,
        "wires": []
    },
    {
        "id": "a42f4f922e494524",
        "type": "trigger",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "",
        "op1": "",
        "op2": "{\"tab\":\"Power\"}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2530,
        "y": 100,
        "wires": [
            [
                "0b8747d2da0482a3",
                "bc563b90430840aa"
            ]
        ]
    },
    {
        "id": "0b8747d2da0482a3",
        "type": "trigger",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "",
        "op1": "",
        "op2": "{\"tabs\":{\"hide\":[\"Power\"]}}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2730,
        "y": 100,
        "wires": [
            [
                "bc563b90430840aa"
            ]
        ]
    },
    {
        "id": "bc563b90430840aa",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "dbcf60ce513ff3ae"
        ],
        "x": 2375,
        "y": 60,
        "wires": []
    },
    {
        "id": "d43ee06ee34140d5",
        "type": "ui_switch",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "",
        "label": "RTC on/off",
        "tooltip": "",
        "group": "82f1040c4d704f04",
        "order": 12,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Allow_function_rtc_onoff",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2450,
        "y": 640,
        "wires": [
            [
                "4120fc9975690028"
            ]
        ]
    },
    {
        "id": "a3a41ed73245a328",
        "type": "ui_switch",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "",
        "label": "Solar",
        "tooltip": "",
        "group": "82f1040c4d704f04",
        "order": 13,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Allow_function_solar",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2430,
        "y": 680,
        "wires": [
            [
                "4120fc9975690028"
            ]
        ]
    },
    {
        "id": "50cd2358bc4fed85",
        "type": "ui_switch",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "",
        "label": "Scheduled tasks",
        "tooltip": "",
        "group": "82f1040c4d704f04",
        "order": 14,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Allow_scheduled_tasks",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2460,
        "y": 720,
        "wires": [
            [
                "4120fc9975690028"
            ]
        ]
    },
    {
        "id": "63c695317a49ea6b",
        "type": "inject",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tabs\":{\"hide\":[\"Power\"]}}",
        "payloadType": "str",
        "x": 2110,
        "y": 60,
        "wires": [
            [
                "c5e1f08f07eb647b"
            ]
        ]
    },
    {
        "id": "4120fc9975690028",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "off_topic_to_variable",
        "func": "if (msg.topic == 'Allow_function_rtc_onoff'){\n    global.set('MQTT.allow_rtc_onoff',msg.payload,\"file\");\n}\n\nif (msg.topic == 'Allow_scheduled_tasks'){\n    global.set('MQTT.allow_scheduler',msg.payload,\"file\");\n    \n}\nif (msg.topic == 'Allow_function_solar'){\n    global.set('MQTT.allow_solar',msg.payload,\"file\");\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "6a54feb677599729",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "load on boot MQTT",
        "func": "var MQTT  = global.get('MQTT',\"file\"); \n\nlet msg1={};\nlet msg2={};\nlet msg3={};\nlet msg4={};\n\n\n\n\nif (MQTT===undefined){\n    MQTT = {};\n}\n\nif (MQTT.block_active===undefined){\n    MQTT = {};\n    global.set('MQTT.block_active',0,\"file\");\n}\n\nif (MQTT.allow_rtc_onoff===undefined){\n    global.set('MQTT.allow_rtc_onoff',0,\"file\");\n    MQTT.allow_rtc_onoff=0;\n}\n\nif (MQTT.allow_scheduler===undefined){\n    global.set('MQTT.allow_scheduler',0,\"file\"); \n    MQTT.allow_scheduler=0;\n}\n\nif (MQTT.allow_solar===undefined){\n    global.set('MQTT.allow_solar',0,\"file\"); \n    MQTT.allow_solar=0;\n}\nif (MQTT.block_mode===undefined){\n    global.set('MQTT.block_mode',1,\"file\");\n    MQTT.block_mode = 1;\n}\n\n\nmsg1.payload = MQTT.allow_rtc_onoff;\nmsg2.payload = MQTT.allow_scheduler;\nmsg3.payload = MQTT.allow_solar;\n\nif (MQTT.block_mode == 1){msg4.payload = 'MQTT_default_1';}\nif (MQTT.block_mode == 2){msg4.payload = 'MQTT_default_2';}\nif (MQTT.block_mode == 3){msg4.payload = 'MQTT_default_3';}\n\n\nreturn [msg1,msg2,msg3,msg4];\n\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 640,
        "wires": [
            [
                "d43ee06ee34140d5"
            ],
            [
                "50cd2358bc4fed85"
            ],
            [
                "a3a41ed73245a328"
            ],
            [
                "28fafb00eff46231",
                "1d0bdc24983833d5"
            ]
        ]
    },
    {
        "id": "510f802795714d75",
        "type": "inject",
        "z": "3aa03811830ef29e",
        "g": "d31e83867f2e0227",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2230,
        "y": 580,
        "wires": [
            [
                "6a54feb677599729"
            ]
        ]
    },
    {
        "id": "ec21e518e2ade1eb",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "shutdown popup (up)",
        "links": [
            "6f8b37b8a4354baf"
        ],
        "x": 2085,
        "y": 100,
        "wires": [
            [
                "0911a9edae380679"
            ]
        ]
    },
    {
        "id": "c5e1f08f07eb647b",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "function 9",
        "func": "TOP0_Heatpump_State      = global.get('TOP0_Heatpump_State',\"file\");\nif (TOP0_Heatpump_State == 1)\n    {\n        return msg;\n    }\n    \n    \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2260,
        "y": 60,
        "wires": [
            [
                "bc563b90430840aa"
            ]
        ]
    },
    {
        "id": "e5ee81fbd045b5ef",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "Heatpump_State input",
        "links": [
            "a0d8b4706f8d61b1",
            "48998f8d0b0d052a"
        ],
        "x": 1985,
        "y": 1440,
        "wires": [
            [
                "258316e7112c15b4",
                "44cd6ca0f672e121"
            ]
        ]
    },
    {
        "id": "258316e7112c15b4",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "Shutdown detection",
        "func": "if (msg.payload == 1)       { return null; } //exit if power state is on\n\nvar TOP0_Heatpump_State = global.get(\"TOP0_Heatpump_State\", \"file\");\nvar VirtualState = global.get('VirtualState');\n\n\nif (VirtualState == 0) { return null; } // TOP0_Heatpump_State will be 0 soon\n\nvar MQTT_Source = global.get('MQTT_Source'); //Memory Only\nif (MQTT_Source == \"GUI\") { return null; } //continue only if origin mqtt broker\n\n\n\nlet msg99={};   //  pin 2 - info to Log\nlet msg1={};    //  pin 3 - trigger for shutdown\n\nmsg1.source = \"shutdown_detection\";\n\n\n\n\n        msg99.topic = 'POWER';\n        if (msg.source == \"mqtt\"){msg99.payload = 'Manual OFF detected. (Remote Controller)';}\n        var option = global.get('MQTT.block_mode',\"file\");\n\n        if (option === undefined) {\n            msg99.payload = msg99.payload + ' - No default action set yet. No restrictions applied';\n            global.set('MQTT.block_active',0, \"file\");\n            global.set('MQTT.block_mode',3, \"file\");\n            msg1.payload = 0;                           // MQTT-switch payload and pop-up\n            return [msg99,msg1];\n        }        \n        \n        if (option == 1)  {\n            global.set('MQTT.block_active',1, \"file\");\n            msg99.payload = msg99.payload + ' - Default action used: Block all';\n            msg1.payload = 1;                           // MQTT-switch payload and pop-up\n            return [msg99,msg1];               // <<<<< Send MQTT out\n        }\n\n        if (option == 2)  {\n            global.set('MQTT.block_active',1, \"file\");\n            msg99.payload = msg99.payload + ' - Default action used: Block custom';\n            msg1.payload = 1;                           // MQTT-switch payload and pop-up\n            return [msg99,msg1];               // <<<<< Send MQTT out\n        }\n\n        if (option == 3)   {\n            global.set('MQTT.block_active',0, \"file\");\n            msg99.payload = msg99.payload + ' - Default action used: Unrestricted';            \n            msg1.payload = 0;                           // MQTT-switch payload and pop-up\n            return [msg99,msg1];\n        }\n\n\n\n\n\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2220,
        "y": 1440,
        "wires": [
            [
                "71bc363e9bca5fa6"
            ],
            [
                "6f8b37b8a4354baf"
            ]
        ],
        "outputLabels": [
            "info to Log",
            "trigger for shutdown popup (start)"
        ]
    },
    {
        "id": "6f8b37b8a4354baf",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "trigger for shutdown popup (start)",
        "mode": "link",
        "links": [
            "5a8c6de632f4dbc8",
            "ec21e518e2ade1eb",
            "172fe3f8a616d7b8"
        ],
        "x": 2775,
        "y": 1440,
        "wires": []
    },
    {
        "id": "cc96d0a80f6bdef4",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "trigger for shutdown popup (end)",
        "mode": "link",
        "links": [
            "5a8c6de632f4dbc8",
            "172fe3f8a616d7b8"
        ],
        "x": 2775,
        "y": 1540,
        "wires": []
    },
    {
        "id": "71bc363e9bca5fa6",
        "type": "rbe",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2450,
        "y": 1660,
        "wires": [
            [
                "9e1b71b301e9e79d"
            ]
        ]
    },
    {
        "id": "9e1b71b301e9e79d",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "link out to log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2775,
        "y": 1660,
        "wires": []
    },
    {
        "id": "44cd6ca0f672e121",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "Restart detection",
        "func": "// This function also show manual power on/off to log when switch \"Extend debugging\" is active.\n\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'TOP0_Heatpump_State';\n\nvar TOP0_Heatpump_State      = global.get(\"TOP0_Heatpump_State\",\"file\");\nvar Debugging           = global.get('Debugging', \"file\");\nif (Debugging === undefined) { Debugging = 0; } // used to show more detection to log\n\nvar popup_state         = flow.get('stop_popup');\nif (popup_state === undefined)  {\n    popup_state = 0;\n}\n\nlet msg99={};   //  pin 1 - info to Log\nlet msg1={};    //  pin 2 - trigger popup\nmsg1.source = \"shutdown_detection\";\nlet msg2={};    //  pin 3 - \n\nvar VirtualState = global.get('VirtualState');\n\nvar MQTT = global.get('MQTT',\"file\");\nif (MQTT === undefined){global.set('MQTT',{},\"file\"); return [null,null,null,msg];}\n\n\nif (msg.payload == 1) { \n        msg99.topic = 'POWER';\n        msg99.payload = 'ON detected';\n        if (VirtualState == 0) { msg99.payload = msg99.payload + ' [Remote Controller]'; }\n        if (VirtualState == 1) { msg99.payload = msg99.payload + ' [Flow]'; }\n        msg1.payload = 0;                           // MQTT block value\n\n\n        if (MQTT.block_active == 1  && popup_state == 0) {\n            //get block_mode\n            var value = MQTT.block_mode;\n            var Blockmode = \"undefined\";\n            if (value === 1) { Blockmode = \"BLOCK ALL\"; }\n            if (value === 2) { Blockmode = \"CUSTOM\"; }\n            if (value === 3) { Blockmode = \"UNRESTRICTED\"; }\n            msg2.topic = \"Power on heatpump detected\";\n            msg2.payload = \"</br>   MQTT commands are being blocked (\" + Blockmode + \") </br></br> Resume normal operation? </br> </br> _____________________________________________________ \"\n            return [msg99,null,msg2]\n        }\n\n        flow.set('stop_popup',0);\n        if (Debugging == 1 || VirtualState == 0) { return [msg99, msg1, null]; } else { return [null, msg1, null]; } //only show in log when \"Extend logging\"-switch is enabled or remote controller.\n    }\n    \n    else {\n            msg99.topic = 'POWER';\n            msg99.payload = 'OFF detected';\n    if (VirtualState == 0) { msg99.payload = msg99.payload + ' [Flow]'; }\n            if (VirtualState == 1) { msg99.payload = msg99.payload + ' [Remote Controller]'; }\n\n    if (Debugging == 1 || VirtualState == 1) { return [msg99, null, null]; } else { return [null, null, null]; } //only show in log when \"Extend logging\"-switch is enabled or remote controller.\n}\n\n\n\n\n\n\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2220,
        "y": 1540,
        "wires": [
            [
                "71bc363e9bca5fa6"
            ],
            [
                "cc96d0a80f6bdef4",
                "09edf2907086baf2"
            ],
            [
                "d11ec0cafa6ed09f"
            ],
            []
        ],
        "outputLabels": [
            "info to Log",
            "",
            "",
            "re-evaluate"
        ]
    },
    {
        "id": "d11ec0cafa6ed09f",
        "type": "ui_toast",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes, lift block",
        "cancel": "No, continue block",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2480,
        "y": 1580,
        "wires": [
            [
                "ab0c73c86987caf3"
            ]
        ]
    },
    {
        "id": "c38da5f9e3ce0d13",
        "type": "inject",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Power on heatpump detected",
        "payload": "</br>   MQTT commands are being blocked. </br></br> Resume normal operation? </br> </br> _____________________________________________________ ",
        "payloadType": "str",
        "x": 2250,
        "y": 1600,
        "wires": [
            [
                "d11ec0cafa6ed09f"
            ]
        ]
    },
    {
        "id": "ab0c73c86987caf3",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "lift block",
        "func": "//******************************************************************************\nif (msg.payload == \"Yes, lift block\") {\n    global.set('MQTT.block_active',0, \"file\");\n    flow.set('stop_popup',0);\n    \n    let msg1={};\n    let msg2={};\n    \n    msg1.topic = 'SYSTEM';\n    msg1.payload = \"MQTT-Commands to HP will be sent normally.\";\n\n    msg2.payload = 0;\n    msg2.source = \"shutdown_detection\";\n    \n    return [msg1,msg2];\n\n}\n\n//******************************************************************************\nif (msg.payload == \"No, continue block\")    {\n    flow.set('stop_popup',1);\n    \n    return null;\n}\n\n//******************************************************************************\nelse {\n    return null;\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 1580,
        "wires": [
            [
                "71bc363e9bca5fa6"
            ],
            [
                "cc96d0a80f6bdef4"
            ]
        ]
    },
    {
        "id": "09edf2907086baf2",
        "type": "change",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":{\"hide\":[\"hidden_tab1\"]}}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2650,
        "y": 1500,
        "wires": [
            [
                "5837cbf37ef47ea6"
            ]
        ]
    },
    {
        "id": "5837cbf37ef47ea6",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "5c3df7b5fb0fa130",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "dbcf60ce513ff3ae"
        ],
        "x": 2775,
        "y": 1500,
        "wires": []
    },
    {
        "id": "9a3e8e959a51d403",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "To be added on later",
        "info": "",
        "x": 630,
        "y": 280,
        "wires": []
    },
    {
        "id": "0f0ace5816c4fe0a",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "c361a153997d2dfd",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "MENU CONFIG",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "menu",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_MENU\"],\"hide\":[\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_ABOUT\",\"SYSTEM_LOG\",\"SYSTEM_MQTT\",\"SYSTEM_MQTT_sensors\",\"SYSTEM_1_wire_sensors\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 930,
        "y": 200,
        "wires": [
            [
                "ad0975065f9323c6",
                "c5ae638b1b65bff4"
            ]
        ]
    },
    {
        "id": "cdbfdf626a17263f",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "group": "b7f740331bca1b3f",
        "name": "Line - Changelog",
        "order": 2,
        "width": 17,
        "height": 14,
        "format": "</br>\n<u>Release notes</u></br>\n\nChanges compared to v23.00 stable</br>\n- Breaking change: New flow-tab \"WP Input\". All external sensors and triggers are now managed from this tab.</br>\n- Breaking change: External sensors used with functions are now handled partly though the dashboard. (DASHBOARD > SYSTEM >\nSENSORS)</br>\n- A lot of stability issues and bugs have been resolved. Thanks to all issue reporters and the Dutch www.tweakers.net\nusers</br>\n- First boot of new installations has been improved a lot.</br>\n- The flow works correct using \"Compensation Curve\" or \"Direct\" mode.</br>\n- The flow works correct using zone control \"Water Temperature\", \"Thermostat (External)\", \"Thermostat (Internal)\" or \"Room\nsensor\".</br>\n- Resource improvement; CPU usage has been decreased by ~30%.</br>\n</br>\nAs always, enjoy your heat pump!</br>\n</br>\n/Ed ter bak\n\n</br>\nFor the full changelog please visit the github page and unfold the button \"changelog\".\n</br>\n</br>\nAs always: Have fun with your heat pump!</br>\n</br>\n/Ed ter bak</br>\n</br>\n</br>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "51c0bb5ee4bb4f0f",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "name": "Line - Setup ",
        "order": 2,
        "width": 12,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2290,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "bffa098ab7b94669",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "name": "Line - ATTENTION top text",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<H1>Manual OFF button press detected on the controller</H1>\nPlease select how the Node Red flow should continue to behave.</br></br>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2340,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "28fafb00eff46231",
        "type": "ui_dropdown",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "00f6a5c103e9ef2f",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "BLOCK ALL",
                "value": "MQTT_default_1",
                "type": "str"
            },
            {
                "label": "CUSTOM",
                "value": "MQTT_default_2",
                "type": "str"
            },
            {
                "label": "UNRESTRICTED",
                "value": "MQTT_default_3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2280,
        "y": 1100,
        "wires": [
            [
                "376a174e36667b9d"
            ]
        ]
    },
    {
        "id": "eb0c82f6553d8182",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "group": "82f1040c4d704f04",
        "order": 16,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Unrestricted",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MQTT_default_3",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2290,
        "y": 860,
        "wires": [
            [
                "28fafb00eff46231",
                "1d0bdc24983833d5"
            ]
        ]
    },
    {
        "id": "96d1b2a3bba37ab3",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "group": "82f1040c4d704f04",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Custom",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MQTT_default_2",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2280,
        "y": 500,
        "wires": [
            [
                "28fafb00eff46231",
                "1d0bdc24983833d5"
            ]
        ]
    },
    {
        "id": "9439217717d533c8",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "group": "82f1040c4d704f04",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Block all",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "MQTT_default_1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2280,
        "y": 360,
        "wires": [
            [
                "28fafb00eff46231",
                "1d0bdc24983833d5"
            ]
        ]
    },
    {
        "id": "e45c612a7cd81bca",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 17,
        "width": 9,
        "height": 2,
        "name": "Unrestricted text",
        "label": "All Node Red functions will stay active. If you have set the RTC on/off function, it will be able to turn on the heatpump automatically. If the solar function is enabled, it will be able to turn on the heatpump automatically.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2300,
        "y": 900,
        "wires": []
    },
    {
        "id": "78ea8dcdc912cc07",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 8,
        "width": 9,
        "height": 2,
        "name": "Custom text",
        "label": "In the \"Custom settings\" section you can specify which action will be allowed to keep functioning when you manually turned off the heatpump.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2450,
        "y": 500,
        "wires": []
    },
    {
        "id": "280ef51b4c314e1a",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 4,
        "width": 9,
        "height": 2,
        "name": "Block all text",
        "label": "This mode will not allow any command to be sent to the heatpump. This means the heatpump will never turn on automatically. This needs to be done manually.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2450,
        "y": 360,
        "wires": []
    },
    {
        "id": "fdd9c7ec95eff575",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "name": "Line - attentiontab1",
        "order": 6,
        "width": 12,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "142d3fc7ce50b860",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "name": "Line - attentiontab2",
        "order": 15,
        "width": 12,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "ab61cc041f990a5e",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "name": "Line - attentiontab3",
        "order": 1,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Default</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "b0db0c075b6cada4",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2280,
        "y": 400,
        "wires": []
    },
    {
        "id": "5c678c17c0272bd7",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 9,
        "width": 3,
        "height": 5,
        "name": "spacer 2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2280,
        "y": 540,
        "wires": []
    },
    {
        "id": "f68241d2cf6a74e8",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 18,
        "width": 3,
        "height": 1,
        "name": "spacer 3",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2280,
        "y": 940,
        "wires": []
    },
    {
        "id": "110b1d924469e409",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Attention setdefault",
        "label": "Current default",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 2310,
        "y": 1060,
        "wires": []
    },
    {
        "id": "338e6b81ea5e1e06",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "order": 5,
        "width": 8,
        "height": 2,
        "name": "attention setdefault text",
        "label": "When a default action is set, this will automatically be executed from that moment onward.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2330,
        "y": 1220,
        "wires": []
    },
    {
        "id": "59ac957754893b83",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "name": "Line - attentiontab4",
        "order": 4,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "6be67176d1f660cc",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "MQTT.block_mode",
        "func": "/*\nMQTT.\nblock_mode - 1 - BLOCK ALL\nblock_mode - 2 - CUSTOM\nblock_mode - 3 - UNRESTRICTED\n*/\n\nif (msg.source == \"block_switch\") return null; //do nothing just updated combobox only\n\n\nvar Block_mode = global.get('MQTT.block_mode',\"file\");\n\nif (msg.payload == \"MQTT_default_1\" && Block_mode != 1){\n    global.set('MQTT.block_mode',1,\"file\");    //off_default_1 - BLOCK ALL\n    global.set('MQTT.block_mode_previous', 1, \"file\");\n}\n\nif (msg.payload == \"MQTT_default_2\" && Block_mode != 2){\n    global.set('MQTT.block_mode',2,\"file\");        //off_default_2 - CUSTOM\n    global.set('MQTT.block_mode_previous', 2, \"file\");\n}\n\nif (msg.payload == \"MQTT_default_3\" && Block_mode != 3) {\n    global.set('MQTT.block_mode',3,\"file\");        //off_default_3 - UNRESTRICTED\n    global.set('MQTT.block_mode_previous', 3, \"file\");\n    global.set('MQTT.block_active', 0, \"file\"); //lift block after selecting action\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1120,
        "wires": [
            [
                "867fcdc764bf28f1",
                "f9048baa0aa4d07d"
            ]
        ]
    },
    {
        "id": "05b0e21936f66dca",
        "type": "change",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 1100,
        "wires": [
            [
                "28fafb00eff46231",
                "319c435620e4980f",
                "1d0bdc24983833d5"
            ]
        ]
    },
    {
        "id": "498c5eb0c718380d",
        "type": "inject",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "clear selection",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2070,
        "y": 1060,
        "wires": [
            [
                "05b0e21936f66dca"
            ]
        ]
    },
    {
        "id": "776cbfd355ed920f",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "->Notify!",
        "mode": "link",
        "links": [
            "c764c19340b7b720"
        ],
        "x": 2835,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e335ee2f6e1f9957",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "Notification and log",
        "info": "",
        "x": 2730,
        "y": 960,
        "wires": []
    },
    {
        "id": "f4fa02505ab621d5",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "82f1040c4d704f04",
        "order": 10,
        "width": 2,
        "height": 4,
        "name": "spacer 5",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2380,
        "y": 580,
        "wires": []
    },
    {
        "id": "319c435620e4980f",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "reset default_selection",
        "func": "if (msg.payload == \"\")   {\n    global.set('MQTT.block_mode',undefined,\"file\");\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "867fcdc764bf28f1",
        "type": "rbe",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2690,
        "y": 1060,
        "wires": [
            [
                "776cbfd355ed920f",
                "e8e1e41f1c85ca7a",
                "1f82dc785dc48abf"
            ]
        ]
    },
    {
        "id": "a53f9fb190ca01ea",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "ATTENTION",
        "info": "",
        "x": 2070,
        "y": 260,
        "wires": []
    },
    {
        "id": "ac8ee41d4f78120e",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "Default --------------------------------------------------------------------------------------",
        "info": "",
        "x": 2250,
        "y": 980,
        "wires": []
    },
    {
        "id": "43bf696dbf416cb0",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "group": "00f6a5c103e9ef2f",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{msg.label}}",
        "tooltip": "Actual status only, no button.",
        "color": "{{msg.color}}",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "999",
        "payloadType": "num",
        "topic": "button_press",
        "topicType": "str",
        "x": 2490,
        "y": 1300,
        "wires": [
            [
                "a3eab03124fb697b"
            ]
        ]
    },
    {
        "id": "7257e77181b2e1a4",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "name": "Line - attentiontab5",
        "order": 6,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>MQTT block status</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "cb7b5a6a14926482",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "order": 9,
        "width": 5,
        "height": 1,
        "name": "MQTT commands are being",
        "label": "",
        "format": "{{msg.result}}",
        "layout": "row-left",
        "className": "",
        "x": 2280,
        "y": 1300,
        "wires": []
    },
    {
        "id": "6c31c89912e87024",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "00f6a5c103e9ef2f",
        "name": "Line - attentiontab6",
        "order": 10,
        "width": 8,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2310,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "5945f577b64bd499",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "link in to block_button",
        "links": [
            "c3c58f9072c16f58"
        ],
        "x": 2525,
        "y": 1260,
        "wires": [
            [
                "f9048baa0aa4d07d"
            ]
        ]
    },
    {
        "id": "00b957e057fd4843",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "link out to block_toggle",
        "mode": "link",
        "links": [
            "172fe3f8a616d7b8"
        ],
        "x": 2845,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f9048baa0aa4d07d",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "function 11",
        "func": "var block_active = global.get('MQTT.block_active',\"file\");\n\nif (block_active == 0) { msg.payload = 0; }\nif (block_active == 1) { msg.payload = 1; }\n\nif (msg.payload == 1){\n    msg.label = \"block\";\n    msg.color = \"white\";\n    msg.bgcolor = \"red\";\n    msg.result = \"MQTT commands are blocked\";\n}\nif (msg.payload == 0){\n    msg.label = \"allow\";\n    msg.color = \"white\";\n    msg.bgcolor = \"green\";\n    msg.result = \"MQTT commands are allowed\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 1260,
        "wires": [
            [
                "43bf696dbf416cb0",
                "cb7b5a6a14926482",
                "fb74e5d35106e2b9",
                "f9c1a6778b03a810"
            ]
        ],
        "outputLabels": [
            "to button"
        ]
    },
    {
        "id": "a3eab03124fb697b",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "function 12",
        "func": "if (msg.payload == 999) return null; // exit, do not act as a button (show status only)\n\n\nvar block_active = global.get('MQTT.block_active',\"file\");\n\n\nif (msg.topic == \"button_press\"){\n    if (block_active == 1){msg.payload = 0;}\n    if (block_active == 0){msg.payload = 1;}\n}\n\n\nif (msg.payload == 1){\n    msg.label = \"block\";\n    msg.color = \"white\";\n    msg.bgcolor = \"red\";\n    msg.result = \"MQTT commands are blocked\";\n}\nif (msg.payload == 0){\n    msg.label = \"allow\";\n    msg.color = \"white\";\n    msg.bgcolor = \"green\";\n    msg.result = \"MQTT commands are allowed\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 1300,
        "wires": [
            [
                "43bf696dbf416cb0",
                "cb7b5a6a14926482",
                "00b957e057fd4843",
                "fb74e5d35106e2b9",
                "f9c1a6778b03a810"
            ]
        ],
        "outputLabels": [
            "to button"
        ]
    },
    {
        "id": "376a174e36667b9d",
        "type": "rbe",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2550,
        "y": 1120,
        "wires": [
            [
                "6be67176d1f660cc"
            ]
        ]
    },
    {
        "id": "e8e1e41f1c85ca7a",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "to update block_mode MQTT_block button",
        "mode": "link",
        "links": [
            "d2415b149ef2f275"
        ],
        "x": 2835,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1f82dc785dc48abf",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "log",
        "func": "/*\nMQTT.\nblock_mode - 1 - BLOCK ALL\nblock_mode - 2 - CUSTOM\nblock_mode - 3 - UNRESTRICTED\n*/\n\nvar Block_mode = global.get('MQTT.block_mode', \"file\") || \"not set\";\nif (Block_mode == 1) Block_mode = \"BLOCK ALL\";\nif (Block_mode == 2) Block_mode = \"CUSTOM\";\nif (Block_mode == 3) Block_mode = \"UNRESTRICTED\";\n\nvar Block_active = global.get('MQTT.block_active', \"file\");\nif (Block_active == 0) Block_active = \"MQTT block inactive\";\nif (Block_active == 1) Block_active = \"<b>MQTT block active</b>\";\n\nmsg.topic = \"SYSTEM\";\nmsg.payload = Block_active + \", default block mode: \" + Block_mode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2690,
        "y": 1000,
        "wires": [
            [
                "ce0115cd2e7f2ac7"
            ]
        ]
    },
    {
        "id": "ce0115cd2e7f2ac7",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "to input LOGS",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 2835,
        "y": 1000,
        "wires": []
    },
    {
        "id": "419fb911b5aa7d3e",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "update dropdown box with block_mode status",
        "links": [
            "bb5e36b2c205a984"
        ],
        "x": 1985,
        "y": 1020,
        "wires": [
            [
                "646815dd1d600ff2"
            ]
        ]
    },
    {
        "id": "646815dd1d600ff2",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "change",
        "func": "// convert payload to block_mode name (used by combobox)\nlet msg1 = {};\nmsg1.source = \"block_switch\";\n\nif (msg.payload == 1) msg1.payload = \"MQTT_default_1\"; // BLOCK_ALL\nif (msg.payload == 2) msg1.payload = \"MQTT_default_2\"; // BLOCK CUSTOM\nif (msg.payload == 3) msg1.payload = \"MQTT_default_3\"; // UNRESTRICTED \n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 1020,
        "wires": [
            [
                "28fafb00eff46231",
                "1d0bdc24983833d5"
            ]
        ]
    },
    {
        "id": "775b498383c88430",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "MQTT",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "wifi",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_MQTT\"],\"hide\":[\"SYSTEM_ABOUT\",\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_MENU\",\"SYSTEM_LOG\",\"SYSTEM_MQTT_sensors\",\"SYSTEM_1_wire_sensors\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1581,
        "y": 201,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "2d8b1e1ac57fc5ec",
        "type": "comment",
        "z": "3aa03811830ef29e",
        "name": "MQTT",
        "info": "",
        "x": 1550,
        "y": 140,
        "wires": []
    },
    {
        "id": "a8d0be4408703f65",
        "type": "mqtt in",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "name": "",
        "topic": "panasonic_heat_pump/stats",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1640,
        "y": 360,
        "wires": [
            [
                "bf4e74cd2b591a26"
            ]
        ]
    },
    {
        "id": "bf4e74cd2b591a26",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "name": "Processing",
        "func": "let msg1={};\nlet msg2={};\nlet msg3={};\nlet msg4={};\nlet msg5={};\nlet msg6={};\nlet msg7={};\nlet msg8={};\nlet msg9={};\nlet msg10={};\nlet msg11={};\nlet msg12={};\n\nmsg1.payload = msg.payload.uptime;\nmsg2.payload = msg.payload.voltage\nmsg3.payload = msg.payload[\"free memory\"]\nmsg4.payload = msg.payload.wifi\nmsg5.payload = msg.payload[\"mqtt reconnects\"]\nmsg6.payload = msg.payload[\"total reads\"]\nmsg7.payload = msg.payload[\"good reads\"]\nmsg8.payload = msg.payload[\"bad crc reads\"]\nmsg9.payload = msg.payload[\"bad header reads\"]\nmsg10.payload = msg.payload[\"too short reads\"]\nmsg11.payload = msg.payload[\"too long reads\"]\nmsg12.payload = msg.payload[\"timeout reads\"]\n\nreturn [msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8,msg9,msg10,msg11,msg12]\n\n",
        "outputs": 12,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 500,
        "wires": [
            [
                "4ebf2601353294cb"
            ],
            [
                "cba9af7ca5d830ba"
            ],
            [
                "a6a546d71cb6c3c9"
            ],
            [
                "0eec66bcde81e7bf"
            ],
            [
                "1624dc37720ea0f6"
            ],
            [
                "645258b618c6186b"
            ],
            [
                "fb3f6458755be846"
            ],
            [
                "62f798bf3b269fb8"
            ],
            [
                "4eab814831da1cf7"
            ],
            [
                "6241ed2b12f12331"
            ],
            [
                "37dfca7cd812ec3b"
            ],
            [
                "6bdadcca19574473"
            ]
        ]
    },
    {
        "id": "cba9af7ca5d830ba",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 30,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1780,
        "y": 740,
        "wires": []
    },
    {
        "id": "a6a546d71cb6c3c9",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 24,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Free memory",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1590,
        "y": 760,
        "wires": []
    },
    {
        "id": "0eec66bcde81e7bf",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 28,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Wifi signal",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1790,
        "y": 780,
        "wires": []
    },
    {
        "id": "1624dc37720ea0f6",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 36,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "MQTT reconnects",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1610,
        "y": 800,
        "wires": []
    },
    {
        "id": "645258b618c6186b",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 39,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Total reads",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1790,
        "y": 820,
        "wires": []
    },
    {
        "id": "fb3f6458755be846",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 23,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Good reads",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1590,
        "y": 840,
        "wires": []
    },
    {
        "id": "62f798bf3b269fb8",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 29,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Bad CRC reads",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1800,
        "y": 860,
        "wires": []
    },
    {
        "id": "4eab814831da1cf7",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 33,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Bad header reads",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1610,
        "y": 880,
        "wires": []
    },
    {
        "id": "6241ed2b12f12331",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 40,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Too short reads",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1800,
        "y": 900,
        "wires": []
    },
    {
        "id": "37dfca7cd812ec3b",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 37,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Too long reads",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1600,
        "y": 920,
        "wires": []
    },
    {
        "id": "6bdadcca19574473",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 42,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Timeout reads",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1800,
        "y": 940,
        "wires": []
    },
    {
        "id": "4ebf2601353294cb",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "name": "Uptime translate",
        "func": "let msg0={};//seconds\nlet msg1={};//minutes\nlet msg2={};//hours\nlet msg3={};//days\nlet msg4={};//years\nlet msg5={};//combo\n\nvar D;\nvar Y;\n\n//*****year\nmsg4.payload = msg.payload / ( 1000*60*60*24*365);\nmsg4.payload = Math.floor(msg4.payload);\nif (msg4.payload > 1) {Y = 'Years/';}\nif (msg4.payload <= 1) {Y = 'Year/';}\n\n//*****days\nmsg3.payload = msg.payload - (msg4.payload * ( 1000*60*60*24*365));\nmsg3.payload = msg3.payload / ( 1000*60*60*24);\nmsg3.payload = Math.floor(msg3.payload);\n\nif (msg3.payload > 1) {D = ' Days, ';}\nif (msg3.payload <= 1) {D = ' Day, ';}\n\n//*****hours\nmsg2.payload = msg.payload - (msg4.payload * ( 1000*60*60*24*365)) - (msg3.payload * ( 1000*60*60*24));\nmsg2.payload = msg2.payload / ( 1000*60*60);\nmsg2.payload = Math.floor(msg2.payload);\n//msg2.payload = msg2.payload.padStart(2)\nmsg2.payload = msg2.payload.toString().padStart(2,\"0\")\n\n\n//*****minutes\nmsg1.payload = msg.payload - (msg4.payload * ( 1000*60*60*24*365)) - (msg3.payload * ( 1000*60*60*24)) - (msg2.payload * ( 1000*60*60));\nmsg1.payload = msg1.payload / ( 1000*60);\nmsg1.payload = Math.floor(msg1.payload);\nmsg1.payload = msg1.payload.toString().padStart(2,\"0\")\n\n//*****seconds\nmsg0.payload = msg.payload - (msg4.payload * ( 1000*60*60*24*365)) - (msg3.payload * ( 1000*60*60*24)) - (msg2.payload * ( 1000*60*60)) -  (msg1.payload * ( 1000*60));\nmsg0.payload = msg0.payload / 1000;\nmsg0.payload = Math.floor(msg0.payload);\nmsg0.payload = msg0.payload.toString().padStart(2,\"0\")\n\n\n//////////////////////////////////////////////\nif (msg4.payload >= 1)  { msg5.payload = msg4.payload + Y +  msg3.payload + D + msg2.payload + \"h\" + msg1.payload + \" \" + msg0.payload + \"s\";    }\nelse                    { msg5.payload =                     msg3.payload + D + msg2.payload + \"h\" + msg1.payload + \" \" + msg0.payload + \"s\";    }\n\n\nreturn [msg5];\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 720,
        "wires": [
            [
                "3f207fc52ec0027e"
            ]
        ],
        "outputLabels": [
            "Uptime"
        ]
    },
    {
        "id": "3f207fc52ec0027e",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 32,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Uptime",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1780,
        "y": 720,
        "wires": []
    },
    {
        "id": "740a027c146249ae",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "name": "Line - Heishamon information",
        "order": 21,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left><b>Heishamon information</b></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1640,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f233670d8569fc20",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "name": "Line - MQTT Block",
        "order": 1,
        "width": 24,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left><b>MQTT Block</b></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1590,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "54bfc60418e56a9b",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 3,
        "width": 7,
        "height": 5,
        "name": "spacer 0",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1560,
        "y": 1220,
        "wires": []
    },
    {
        "id": "fb74e5d35106e2b9",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "name": "",
        "group": "d95eca50f9342e76",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{msg.label}}",
        "tooltip": "Actual status only, no button.",
        "color": "{{msg.color}}",
        "bgcolor": "{{msg.bgcolor}}",
        "className": "",
        "icon": "",
        "payload": "999",
        "payloadType": "num",
        "topic": "button_press",
        "topicType": "str",
        "x": 1550,
        "y": 1120,
        "wires": [
            [
                "a3eab03124fb697b"
            ]
        ]
    },
    {
        "id": "f9c1a6778b03a810",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 10,
        "width": 5,
        "height": 1,
        "name": "MQTT commands are being",
        "label": "",
        "format": "{{msg.result}}",
        "layout": "row-left",
        "className": "",
        "x": 1760,
        "y": 1120,
        "wires": []
    },
    {
        "id": "67a7a74773ea6560",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "Attention setdefault",
        "label": "Default blockmode",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1590,
        "y": 1180,
        "wires": []
    },
    {
        "id": "716a35b80ac09a85",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 2,
        "width": 9,
        "height": 1,
        "name": "",
        "label": "Current settings",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1580,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c0148bdd1814580f",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 7,
        "width": 1,
        "height": 1,
        "name": "spacer 01x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1570,
        "y": 1260,
        "wires": []
    },
    {
        "id": "c2d0c237af80e591",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 9,
        "width": 1,
        "height": 1,
        "name": "spacer 01x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1570,
        "y": 1300,
        "wires": []
    },
    {
        "id": "0911a9edae380679",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "g": "404eed4ef9d90803",
        "name": "",
        "group": "d95eca50f9342e76",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "Setup",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"tabs\":{\"show\":[\"Power\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 2270,
        "y": 100,
        "wires": [
            [
                "bc563b90430840aa",
                "a42f4f922e494524"
            ]
        ]
    },
    {
        "id": "5998c26dd710f4f1",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 6,
        "width": 1,
        "height": 1,
        "name": "spacer 01x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1570,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e112c36e957452a3",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "Setup shutdown response",
        "label": "Setup shutdown response",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1610,
        "y": 1400,
        "wires": []
    },
    {
        "id": "cfcc8b51c90050ac",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "group": "d95eca50f9342e76",
        "order": 13,
        "width": 5,
        "height": 1,
        "name": "current blockmode payload",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2660,
        "y": 860,
        "wires": []
    },
    {
        "id": "1d0bdc24983833d5",
        "type": "function",
        "z": "3aa03811830ef29e",
        "g": "8fe25c73d37fe670",
        "name": "Translate",
        "func": "if (msg.payload == 'MQTT_default_1'){\n    msg.payload = 'BLOCK ALL';\n}\n\n\nif (msg.payload == 'MQTT_default_2'){\n    msg.payload = 'CUSTOM';\n    \n}\n\nif (msg.payload == 'MQTT_default_3'){\n    msg.payload = 'UNRESTRICTED';\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 900,
        "wires": [
            [
                "cfcc8b51c90050ac"
            ]
        ]
    },
    {
        "id": "42db2c5a1500bee2",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 19,
        "width": 9,
        "height": 1,
        "name": "spacer 04",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1560,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ee674cfd16767755",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 34,
        "width": 6,
        "height": 4,
        "name": "spacer 2x2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1610,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f6260e40072e9c45",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 38,
        "width": 6,
        "height": 3,
        "name": "spacer 2x2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1610,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4dfd92d952236e82",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "group": "4a119e18236415e9",
        "name": "Line - DASHBOARD CONFIGURATION",
        "order": 5,
        "width": 24,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left><b>DASHBOARD CONFIGURATION</b></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1000,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "e4a4fc20462d5562",
        "type": "ui_form",
        "z": "3aa03811830ef29e",
        "name": "group - Home screen",
        "label": "Home",
        "group": "4a119e18236415e9",
        "order": 6,
        "width": 4,
        "height": 1,
        "options": [
            {
                "label": "HEAT",
                "value": "Home_HEAT",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "DHW",
                "value": "Home_DHW",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "COOL",
                "value": "Home_COOL",
                "type": "checkbox",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "Home_HEAT": false,
            "Home_DHW": false,
            "Home_COOL": false
        },
        "payload": "",
        "submit": "Set",
        "cancel": "cancel",
        "topic": "group",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 920,
        "y": 660,
        "wires": [
            [
                "b7a1e39d48d6b353"
            ]
        ]
    },
    {
        "id": "e35b7df78bc6f722",
        "type": "ui_form",
        "z": "3aa03811830ef29e",
        "name": "group - Main tabs",
        "label": "",
        "group": "4a119e18236415e9",
        "order": 1,
        "width": 4,
        "height": 1,
        "options": [
            {
                "label": "SETTINGS",
                "value": "SETTINGS",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "PUMPSPEED",
                "value": "Pumpspeed",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "WAR",
                "value": "WAR",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "RTC",
                "value": "RTC",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "COOL",
                "value": "COOL",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "SOFTSTART",
                "value": "SOFTSTART",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "Solar²DHW",
                "value": "Solar²DHW",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "SCHEDULER",
                "value": "SCHEDULER",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "TEMPERATURE",
                "value": "TEMPERATURE",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "ENERGY",
                "value": "ENERGY",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "DEGREE DAYS",
                "value": "Degree_days",
                "type": "checkbox",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "SETTINGS": false,
            "Pumpspeed": false,
            "WAR": false,
            "RTC": false,
            "COOL": false,
            "SOFTSTART": false,
            "Solar²DHW": false,
            "SCHEDULER": false,
            "TEMPERATURE": false,
            "ENERGY": false,
            "Degree_days": false
        },
        "payload": "",
        "submit": "Set",
        "cancel": "cancel",
        "topic": "tabs",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 910,
        "y": 620,
        "wires": [
            [
                "b7a1e39d48d6b353"
            ]
        ]
    },
    {
        "id": "5a44b5cc5e9f4844",
        "type": "function",
        "z": "3aa03811830ef29e",
        "name": "Store settings",
        "func": "var GUI = global.get('GUI',\"file\");\n\nif (GUI === undefined) {GUI={};}\n\n//////////////////////\n// SET variable GUI //\n//////////////////////\nif (msg.topic != \"trigger\" && msg.payload != \"connect\" && msg.payload != \"change\"){\n    global.set('GUI.' + msg.topic,msg,\"file\");\n}\n\n\n\n\n//////////////////////\n// Trigger command  // \n//////////////////////\nif (msg.topic==\"trigger\")   {\n    if (GUI===undefined) {return null;}\n    var object = GUI;\n    delete object._msgid;\n    \n    for (var property in object) {\n    node.send([null,object[property]]);\n    }\n}\n\n\nif (msg.payload==\"connect\")   {\n    if (GUI===undefined) {return null;}\n    var object = GUI;\n    delete object._msgid;\n    \n    for (var property in object) {\n    node.send([null,null,object[property]]);\n    }\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 860,
        "wires": [
            [
                "76dca09b425ef4cb"
            ],
            [
                "e35b7df78bc6f722",
                "e4a4fc20462d5562",
                "7fa1754db79c4869",
                "76dca09b425ef4cb"
            ],
            [
                "76dca09b425ef4cb"
            ]
        ],
        "outputLabels": [
            "set",
            "trigger",
            "connect"
        ]
    },
    {
        "id": "e6dd0cd84e528398",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "1eb6d525c86c4977",
        "order": 12,
        "width": 12,
        "height": 12,
        "name": "spacer abc",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 310,
        "y": 460,
        "wires": []
    },
    {
        "id": "8576379c0665d73d",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "group": "4a119e18236415e9",
        "name": "Line - Main Tabs",
        "order": 8,
        "width": 4,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left><b>Main Tabs</b></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 920,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "5d3d8ab2e8e22c40",
        "type": "ui_template",
        "z": "3aa03811830ef29e",
        "group": "4a119e18236415e9",
        "name": "Line - Tab content",
        "order": 2,
        "width": 20,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left><b>Tab content</b></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 970,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "ad7996a6a3e6085b",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "name": "link out 42",
        "mode": "link",
        "links": [
            "dbcf60ce513ff3ae"
        ],
        "x": 1205,
        "y": 800,
        "wires": []
    },
    {
        "id": "f9a8a11ad37a32a3",
        "type": "function",
        "z": "3aa03811830ef29e",
        "name": "split",
        "func": "\n\nif (msg.payload===true){\n    msg.state=\"show\";\n}\n\nif (msg.payload===false){\n    msg.state=\"hide\";\n}\n\nif (msg.type.includes(\"group\")) {msg.type=\"group\";}\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 800,
        "wires": [
            [
                "c7f9b5c422ad6f87"
            ]
        ]
    },
    {
        "id": "76dca09b425ef4cb",
        "type": "split",
        "z": "3aa03811830ef29e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 850,
        "y": 800,
        "wires": [
            [
                "f9a8a11ad37a32a3"
            ]
        ]
    },
    {
        "id": "c7f9b5c422ad6f87",
        "type": "template",
        "z": "3aa03811830ef29e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"{{type}}\": {\n        \"{{state}}\": [\n            \"{{topic}}\"\n        ]\n    }\n}\n",
        "output": "json",
        "x": 1100,
        "y": 800,
        "wires": [
            [
                "ad7996a6a3e6085b"
            ]
        ]
    },
    {
        "id": "3d5dc66749eac00f",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "name": "GUI_dashboard_trigger",
        "links": [
            "49ebac0412d87642",
            "47cb7500b0321fc1",
            "c5ae638b1b65bff4"
        ],
        "x": 745,
        "y": 860,
        "wires": [
            [
                "ffd0c1d0d38be2d5"
            ]
        ]
    },
    {
        "id": "ffd0c1d0d38be2d5",
        "type": "function",
        "z": "3aa03811830ef29e",
        "name": "trigger",
        "func": "let msg1={};\nmsg1.topic = \"trigger\";\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 860,
        "wires": [
            [
                "5a44b5cc5e9f4844"
            ]
        ]
    },
    {
        "id": "b7a1e39d48d6b353",
        "type": "function",
        "z": "3aa03811830ef29e",
        "name": "function 20",
        "func": "msg.type=msg.topic;\ndelete msg._msgid;\ndelete msg.socketid;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 620,
        "wires": [
            [
                "e35b7df78bc6f722",
                "e4a4fc20462d5562",
                "76dca09b425ef4cb",
                "5a44b5cc5e9f4844",
                "7fa1754db79c4869"
            ]
        ]
    },
    {
        "id": "c5ae638b1b65bff4",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "g": "c361a153997d2dfd",
        "name": "link out 43",
        "mode": "link",
        "links": [
            "3d5dc66749eac00f"
        ],
        "x": 1035,
        "y": 260,
        "wires": []
    },
    {
        "id": "4ef6053b1b3d6301",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "4a119e18236415e9",
        "order": 3,
        "width": 12,
        "height": 1,
        "name": "spacer 11",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1000,
        "y": 980,
        "wires": []
    },
    {
        "id": "7fa1754db79c4869",
        "type": "ui_form",
        "z": "3aa03811830ef29e",
        "name": "group - Settings screen",
        "label": "Settings",
        "group": "4a119e18236415e9",
        "order": 10,
        "width": 4,
        "height": 1,
        "options": [
            {
                "label": "HEAT PUMP",
                "value": "Settings_HEAT_PUMP",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "HEAT",
                "value": "Settings_HEAT",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "OPERATION",
                "value": "Settings_OPERATION",
                "type": "checkbox",
                "required": false,
                "rows": null
            },
            {
                "label": "DHW",
                "value": "Settings_DHW",
                "type": "checkbox",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "Settings_HEAT_PUMP": false,
            "Settings_HEAT": false,
            "Settings_OPERATION": false,
            "Settings_DHW": false
        },
        "payload": "",
        "submit": "Set",
        "cancel": "cancel",
        "topic": "group2",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 930,
        "y": 700,
        "wires": [
            [
                "b7a1e39d48d6b353"
            ]
        ]
    },
    {
        "id": "14fbc980fb2680f1",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 20,
        "width": 8,
        "height": 1,
        "name": "spacer 04",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1760,
        "y": 1440,
        "wires": []
    },
    {
        "id": "c96747c13bdcbcd3",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 17,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1770,
        "y": 1280,
        "wires": []
    },
    {
        "id": "94f9b89e93918fa6",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 15,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "<b>Block MQTT</b>",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1780,
        "y": 1240,
        "wires": []
    },
    {
        "id": "70b30de18eac8972",
        "type": "mqtt in",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "name": "IP",
        "topic": "panasonic_heat_pump/ip",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1770,
        "y": 560,
        "wires": [
            [
                "70016d3833197d68"
            ]
        ]
    },
    {
        "id": "70016d3833197d68",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "0bb11670c285bff1",
        "group": "d95eca50f9342e76",
        "order": 22,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "IP adress",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1780,
        "y": 640,
        "wires": []
    },
    {
        "id": "9293ce0fe3ffaed3",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "g": "b4e7d28c61065a10",
        "group": "d95eca50f9342e76",
        "order": 41,
        "width": 6,
        "height": 1,
        "name": "spacer 2x2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1790,
        "y": 1560,
        "wires": []
    },
    {
        "id": "c63327653e3140e5",
        "type": "switch",
        "z": "3aa03811830ef29e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 60,
        "wires": [
            [
                "638acce8e81b513f"
            ],
            [
                "464ea2f7e0ae0b1f"
            ]
        ]
    },
    {
        "id": "47cb7500b0321fc1",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "name": "on_connect",
        "mode": "link",
        "links": [
            "2c79bd3e2dc678e7",
            "3d5dc66749eac00f",
            "62873fd698209c83",
            "a0b2a8ca1de90c30",
            "b7ba3cde110cd1ba",
            "c0d182e336a34912",
            "d9b3ca8bfaa4c10a",
            "ea31d112c91c0da9"
        ],
        "x": 645,
        "y": 40,
        "wires": []
    },
    {
        "id": "49ebac0412d87642",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "name": "on_change_GUI",
        "mode": "link",
        "links": [
            "281a5e0dca0e33dc",
            "2cf43683279df520",
            "3d5dc66749eac00f",
            "5c8427c809a8f68f",
            "838a27801d1da2db",
            "94fb2ca53932250b",
            "9fd7064be2551caa",
            "a0b2a8ca1de90c30",
            "a1d3737a5a110aa9",
            "a6e14f9f36b96843",
            "b9cc5f94e160078d",
            "bd0a287533674d75",
            "d4627d98961f13e3",
            "d9b3ca8bfaa4c10a",
            "e3cf888e2774fce3",
            "e4d3b74c7c050a7d",
            "e77ae78af76db973",
            "ea31d112c91c0da9",
            "725f538b26776db4",
            "c0fdc0126f7d69c7"
        ],
        "x": 865,
        "y": 100,
        "wires": []
    },
    {
        "id": "d14a858857494232",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "name": "link in 50",
        "links": [
            "ef9614c64c2b1966"
        ],
        "x": 805,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "62873fd698209c83",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "name": "link in 53",
        "links": [
            "47cb7500b0321fc1",
            "ef9614c64c2b1966"
        ],
        "x": 305,
        "y": 200,
        "wires": [
            [
                "3a86dae674a0f12f"
            ]
        ]
    },
    {
        "id": "638acce8e81b513f",
        "type": "delay",
        "z": "3aa03811830ef29e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 40,
        "wires": [
            [
                "47cb7500b0321fc1"
            ]
        ]
    },
    {
        "id": "f014b20991b88442",
        "type": "trigger",
        "z": "3aa03811830ef29e",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "0.5",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 760,
        "y": 100,
        "wires": [
            [
                "49ebac0412d87642"
            ]
        ]
    },
    {
        "id": "464ea2f7e0ae0b1f",
        "type": "change",
        "z": "3aa03811830ef29e",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "socketid",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 100,
        "wires": [
            [
                "f014b20991b88442"
            ]
        ]
    },
    {
        "id": "337082438f912abd",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "70a5fe6af8ed1d29",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "SENSORS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "remove_red_eye",
        "payload": "{\"group\":{\"show\":[\"SYSTEM_MQTT_sensors\",\"SYSTEM_1_wire_sensors\"],\"hide\":[\"SYSTEM_SYSTEM_HEALTH\",\"SYSTEM_HW_INFORMATION\",\"SYSTEM_MENU\",\"SYSTEM_ABOUT\",\"SYSTEM_LOG\",\"SYSTEM_MQTT\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 390,
        "y": 520,
        "wires": [
            [
                "ad0975065f9323c6"
            ]
        ]
    },
    {
        "id": "af9877a2a2ce809a",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "70a5fe6af8ed1d29",
        "order": 7,
        "width": 5,
        "height": 1,
        "name": "filler",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 370,
        "y": 560,
        "wires": []
    },
    {
        "id": "450373f786da707e",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "1eb6d525c86c4977",
        "order": 24,
        "width": 2,
        "height": 1,
        "name": "2x1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 310,
        "y": 620,
        "wires": []
    },
    {
        "id": "dbe4ac2fce5a9226",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "d95eca50f9342e76",
        "order": 31,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "MQTT node",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1730,
        "y": 1680,
        "wires": []
    },
    {
        "id": "b742f5fc9cae8166",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "name": "broker status",
        "links": [
            "25c9701ce27fd523"
        ],
        "x": 1545,
        "y": 1680,
        "wires": [
            [
                "dbe4ac2fce5a9226"
            ]
        ]
    },
    {
        "id": "fd75674be084c74e",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "d95eca50f9342e76",
        "order": 35,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Last verified working",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1760,
        "y": 1720,
        "wires": []
    },
    {
        "id": "baf6c28e9b5a2dd8",
        "type": "link in",
        "z": "3aa03811830ef29e",
        "name": "last tested",
        "links": [
            "10c007e5346d744d"
        ],
        "x": 1545,
        "y": 1720,
        "wires": [
            [
                "fd75674be084c74e"
            ]
        ]
    },
    {
        "id": "f4428377604fbb3b",
        "type": "moment",
        "z": "3aa03811830ef29e",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "",
        "output": "",
        "outputType": "msg",
        "outTz": "",
        "x": 1880,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "e8df057fcaf9d5b6",
        "type": "ui_button",
        "z": "3aa03811830ef29e",
        "name": "",
        "group": "d95eca50f9342e76",
        "order": 26,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "TEST",
        "tooltip": "Test the connection with the MQTT broker",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "test",
        "payloadType": "str",
        "topic": "test",
        "topicType": "msg",
        "x": 1790,
        "y": 1820,
        "wires": [
            [
                "93689e503b06b2cc"
            ]
        ]
    },
    {
        "id": "cc1376f0b9161f41",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "d95eca50f9342e76",
        "order": 25,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "MQTT Broker",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1620,
        "y": 1820,
        "wires": []
    },
    {
        "id": "93689e503b06b2cc",
        "type": "link out",
        "z": "3aa03811830ef29e",
        "name": "link out 102",
        "mode": "link",
        "links": [
            "5aeff3950c06df9a"
        ],
        "x": 1875,
        "y": 1820,
        "wires": []
    },
    {
        "id": "fccd2e0f27d35404",
        "type": "ui_text",
        "z": "3aa03811830ef29e",
        "group": "d95eca50f9342e76",
        "order": 27,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1610,
        "y": 1860,
        "wires": []
    },
    {
        "id": "d5fea67661261002",
        "type": "tab",
        "label": "WP Debug",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ce1342324a97c52",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "HP data logging when compr. is ON (Tinlet, Toutlet, Ttarget, Freq)",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "57c9f02c576ad71f",
            "c8b48ccb978f3380",
            "b903f8bbf513d6a1",
            "a1954fc33dd6ddf9",
            "ff02e751b096770f",
            "9080f9e84fd9e2a5",
            "082586cfc8693748",
            "1a8bf49ae0badf5a",
            "2a1004c42a0b7dc1",
            "109e99262b1d9b31",
            "3078dedaa0fa9fa6",
            "df9dc017de54372f",
            "98332e44d65ec671",
            "32c013973096ab65"
        ],
        "x": 74,
        "y": 219,
        "w": 1112,
        "h": 202
    },
    {
        "id": "1f4cf47dbe4285dc",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "MQTT Counter + Overflow protection",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "112b797f401c4afc",
            "459dcc6cc8cff9da",
            "c94e5636d62a2bd9",
            "de77807ce3dc66fc",
            "58c919290387cba4",
            "fdd35059e43f16d0",
            "c4dd85e3e2a5dff4"
        ],
        "x": 574,
        "y": 439,
        "w": 612,
        "h": 162
    },
    {
        "id": "aed05096f97f9ba6",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Function System Check",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8e9e69d85c6ec035",
            "365e9747b6e58903",
            "ae21a03ad6f43d1c",
            "614b9c64adf19f94",
            "d0ac8299461b7c1f"
        ],
        "x": 74,
        "y": 439,
        "w": 492,
        "h": 162
    },
    {
        "id": "5166b23daf2b561d",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Defrost counter",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f9d6e659dbe05a19",
            "991502670f43d03e",
            "116f4e573c2d55e8",
            "a9fa37eb6a1a4fc2",
            "842e7cc6853ea3c8",
            "afa5bf9f7c3531bc"
        ],
        "x": 74,
        "y": 619,
        "w": 552,
        "h": 162
    },
    {
        "id": "9a941ae145859932",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Averige runtime",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ef07058c04267dd5",
            "2db0d9b3a1bc868c",
            "4df2960daa64b31d",
            "6fe317de99320aa3",
            "0af4b3b3445b3ce2",
            "6c6d719592dac8d5",
            "09a6b8cd0884bcc2",
            "2c3deed445f0081b"
        ],
        "x": 84,
        "y": 799,
        "w": 1102,
        "h": 142
    },
    {
        "id": "ebe2890eadc33dcd",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Error Counter",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5f9d089ca2c8df2f",
            "0e9c0e551061fdbf",
            "b8280b17e99b11d1"
        ],
        "x": 634,
        "y": 619,
        "w": 552,
        "h": 162
    },
    {
        "id": "1a3f956a12898279",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Check for custom sensors connected to Heishamon:  kWh meter(s) & 1-wire sensors",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "88b24c510e42cb4d",
            "e13d89b6bf39c3a3",
            "320f3cb11444550f",
            "10a931a475e12a39",
            "f91a8e87996f7a36",
            "50965b08724bdd8c",
            "f2d7ea937abca010",
            "d4c3dbf4899c176d",
            "f135a11c0945f1cd",
            "2dd99b9e00efee29",
            "fe8169803ad0da4c",
            "98ab01c488771719",
            "f04a11835631b092",
            "e570795bddada758",
            "28ad1d969c079693"
        ],
        "x": 74,
        "y": 1379,
        "w": 1072,
        "h": 262
    },
    {
        "id": "cd5937af83198f9a",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Test Dynamic subsribe to Heishamon 1-wire topics",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "05e22a7bbcfb1aa1",
            "825f53ebdfb5fd43",
            "8cab4c14513ce5fa",
            "16808d5b28081690",
            "798b2017d73b9795",
            "fd1a14b5c123f7aa",
            "9624117d96bd6dbb"
        ],
        "x": 74,
        "y": 1679,
        "w": 1112,
        "h": 202
    },
    {
        "id": "bab76cb8c9631c59",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Defrost button",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "399e883e6deac7a3",
            "d6ef6434856148df",
            "037c668f34165450",
            "1b91aa81aad7c7b5",
            "0b00b03e3c4e9930",
            "d3a2ef1813673fb5",
            "1ebb1a2803291fd7",
            "fd2777fee0c73d23"
        ],
        "x": 74,
        "y": 1919,
        "w": 1112,
        "h": 82
    },
    {
        "id": "0531f7d830ad5e1b",
        "type": "group",
        "z": "d5fea67661261002",
        "name": "Dashboard System check",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a8acdcc0dc537830",
            "fa1495af192e1c1e",
            "8a882609f0e2d88a",
            "62d33aea9b2babaa",
            "751fec2ce6f8faac",
            "c25c9914b837785c",
            "dadcc09786666d40",
            "a13a59feb119d9ce",
            "5ce82b31e85cfe3a",
            "559f3875ebe7df72",
            "172fe3f8a616d7b8",
            "6e97d05d1a6275c7",
            "be1b927461546a7f",
            "bd61942b914a15ce",
            "43783f0ff1a97ef1",
            "35b2bc2a89cc2d84",
            "c3c58f9072c16f58",
            "4606d685d39ac772",
            "bb5e36b2c205a984",
            "d2415b149ef2f275",
            "2cc4d65eb692223b",
            "70355972167285f4",
            "4c70cc2db4654795",
            "bb8548eb6893bd56",
            "678c2fa5db148f1e",
            "c40e5d6c866f68df",
            "cbec49b57325d8a9",
            "c4100822f25e71c5"
        ],
        "x": 54,
        "y": 959,
        "w": 1132,
        "h": 382
    },
    {
        "id": "aca3036a5a8e2f25",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "WP Debug. A tab showing extra information. Show temperatures, system variables used by flow, Check for conflicts",
        "info": "",
        "x": 480,
        "y": 60,
        "wires": []
    },
    {
        "id": "57c9f02c576ad71f",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Log all WP info",
        "func": "var Freq = msg.payload;\n//Freq = parseFloat(Freq);\n\n//save hightest freq ever:\nif (Freq > 0) { \n    var HighestFreq = global.get('HighestFreq', \"file\"); // get last highscore ;)\n    if (HighestFreq === undefined) { HighestFreq = 0; }\n    if (Freq > HighestFreq) { global.set('HighestFreq', Freq, \"file\"); } //save\n}\n\nif (global.get('Debugging', \"file\") == 0) { return null ; } //exit if debugging switch is off\n\nlet msg1 = {};\nmsg.topic = \"\";\nif (Freq > 0) \n    { \n    //var Freq = msg.payload;\n    var Ta = global.get('TOP6_Main_Outlet_Temp');                   //  PV (Ta/outlet) Temperature of water.\n    var Tr = global.get('TOP5_Main_Inlet_Temp');                    //  PV (Tr/inlet) Temperature of water\n    var SP = global.get('TOP27_Z1_Heat_Request_Temp'); \n    var QM = global.get('TOP18_Quiet_Mode_Level', \"file\");            // current Quietmode level\n    var PM = global.get('TOP17_Powerful_Mode_Time', \"file\");    // current TOP17_Powerful_Mode_Time\n    var Watt = global.get('TOP16_Heat_Energy_Consumption');           // power in Watt\n    var TOP62_Fan1_Motor_Speed = global.get('TOP62_Fan1_Motor_Speed');                  // Fan 1 rpm\n    var TOP63_Fan2_Motor_Speed = global.get('TOP63_Fan2_Motor_Speed');                  // Fan 2 rpm\n    var COP_HEAT = global.get('COP_HEAT');                      // COP Heat\n    var COP_DHW = global.get('COP_DHW');                        // COP DHW\n    var OperatingModes = [\"Heat only\", \"Cool only\", \"Auto(Heat)\", \"DHW only\", \"Heat+DHW\", \"Cool+DHW\", \"Auto(Heat)+DHW\", \"Auto(Cool)\", \"Auto(Cool)+DHW\"];\n    var OM = global.get('TOP4_Operating_Mode_State', \"file\");\n    OM = OperatingModes[OM];\n\n    \n    msg.payload = \"Target=\" + SP + \"°C\" + \", Inlet=\" + Tr + \"°C\" + \",  Outlet=\" + Ta + \"°C\" + \", Freq=\" + Freq + \" Hz\" + \", \" + Watt + \" W, OM=\" + OM;\n    if (PM == 1) msg.payload += \", Powerful mode=\" + PM;\n    msg.payload += \", fan1: \" + TOP62_Fan1_Motor_Speed + \" rpm\";\n    if (TOP63_Fan2_Motor_Speed > 0) \n        {\n            msg.payload += \", fan2: \" + TOP63_Fan2_Motor_Speed + \" rpm\";\n        }\n    if (QM > 0) \n        {\n            msg.payload += \", QM=\" + QM;\n        }\n    if (COP_HEAT > 0) {\n        msg.payload += \", COP=\" + COP_HEAT;\n    }\n    if (COP_DHW > 0) {\n        msg.payload += \", COP=\" + COP_DHW;\n    }\n    } \n\nelse \n    {\n    return null;\n    } \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 320,
        "wires": [
            [
                "c8b48ccb978f3380"
            ]
        ]
    },
    {
        "id": "c8b48ccb978f3380",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "b903f8bbf513d6a1"
            ]
        ]
    },
    {
        "id": "b903f8bbf513d6a1",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Send to log",
        "mode": "link",
        "links": [
            "fa1495af192e1c1e"
        ],
        "x": 1145,
        "y": 320,
        "wires": []
    },
    {
        "id": "a1954fc33dd6ddf9",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "at boot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "source",
                "v": "boot",
                "vt": "str"
            }
        ],
        "repeat": "1680",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "#:(file)::Debugging",
        "payloadType": "global",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "ff02e751b096770f"
            ]
        ]
    },
    {
        "id": "ff02e751b096770f",
        "type": "ui_switch",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Extend logging",
        "label": "Extend logging",
        "tooltip": "Show more data in logs",
        "group": "ec94eaa0930738be",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 380,
        "y": 260,
        "wires": [
            [
                "9080f9e84fd9e2a5"
            ]
        ]
    },
    {
        "id": "9080f9e84fd9e2a5",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Debuginfo",
        "func": "\nif (msg.payload == 1) //Extend logging on\n    {\n    global.set('Debugging', 1, \"file\");\n    if (msg.source == \"boot\") { return null; }\n    } \n    \nif (msg.payload == 0 || msg.payload === undefined) //Extend logging on or undefined\n        { \n            global.set('Debugging', 0, \"file\");\n            return null; \n        }\n        \nreturn null; //send nothing",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 260,
        "wires": [
            [
                "57c9f02c576ad71f"
            ]
        ]
    },
    {
        "id": "8e9e69d85c6ec035",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "System check",
        "func": "flow.set('debuglog', []); // clear log\n\nmsg.topic = \"\";\nmsg.payload = \"<b>============================================================</b>\";\nnode.send(msg);\n\n\n// Warn user is mqtt-messages are blocked:\nvar MQTT = global.get('MQTT', \"file\");\nif (MQTT.block_active == 1) {\n    msg.payload = \"*SYSTEM: MQTT-Commands are blocked, this flow will not function correctly.\";\n    node.send(msg);\n}\n\n\n// check WP status first\nvar TOP0_Heatpump_State = global.get('TOP0_Heatpump_State', \"file\");\nif (TOP0_Heatpump_State == 0 || TOP0_Heatpump_State === undefined) { TOP0_Heatpump_State = \"off\"; } else { TOP0_Heatpump_State = \"on\"; }\nvar TOP20_ThreeWay_Valve_State = global.get('TOP20_ThreeWay_Valve_State'); // 3-way valve mode (0=Room, 1=DHW)\nif (TOP20_ThreeWay_Valve_State === undefined) { TOP20_ThreeWay_Valve_State = \"NA\"; }\nif (TOP20_ThreeWay_Valve_State == 0) { TOP20_ThreeWay_Valve_State = \"Room\"; }\nif (TOP20_ThreeWay_Valve_State == 1) { TOP20_ThreeWay_Valve_State = \"DHW\"; }\nvar ss_Hz = global.get('compressor_frequency', \"file\");         // Get the global variable for current compressor frequency\n\nvar OperatingModes = [\"Heat only\", \"Cool only\", \"Auto(Heat)\", \"DHW only\", \"Heat+DHW\", \"Cool+DHW\", \"Auto(Heat)+DHW\", \"Auto(Cool)\", \"Auto(Cool)+DHW\"];\nvar OM = global.get('TOP4_Operating_Mode_State', \"file\");\nvar message = \"HP power is \" + TOP0_Heatpump_State + \", operation mode \" + OperatingModes[OM] + \", threeway valve in position \" + TOP20_ThreeWay_Valve_State;\nmsg.payload = message;\nnode.send(msg);\n\n\n\n\n// temperatures etc:\nvar Freq = ss_Hz;\nvar Ta = global.get('TOP6_Main_Outlet_Temp');                   //  PV (Ta/outlet) Temperature of water.\nvar Tr = global.get('TOP5_Main_Inlet_Temp');                    //  PV (Tr/inlet) Temperature of water\nvar SP = global.get('TOP27_Z1_Heat_Request_Temp');\nvar QM = global.get('TOP18_Quiet_Mode_Level', \"file\");            // current Quietmode level\nvar PM = global.get('TOP17_Powerful_Mode_Time', \"file\");                // current TOP17_Powerful_Mode_Time\nvar Watt = global.get('TOP16_Heat_Energy_Consumption');           // power in Watt (Todo, use custom meter)\nmsg.payload = \"Target=\" + SP + \"°C\" + \", Inlet=\" + Tr + \"°C\" + \",  Outlet=\" + Ta + \"°C\" + \", Freq=\" + Freq + \" Hz\" + \", Quiet mode=\" + QM + \", \" + Watt + \" Watt\";\nif (PM == 1) msg.payload = msg.payload + \", Powerful mode=\" + PM;\nnode.send(msg);\n\n//check heating mode\nvar TOP76_Heating_Mode = global.get(\"TOP76_Heating_Mode\", \"file\");\nif (TOP76_Heating_Mode == 0) {\n    msg.payload = \"Heatpump is WAR mode (compensation curve)\";\n    msg.topic = \"SYSTEM\";\n}\nelse if (TOP76_Heating_Mode == 1) {\n    msg.payload = \"Heatpump is in DIRECT mode\";\n    msg.topic = \"SYSTEM\";\n}\nnode.send(msg);\n\n// check how long this flow is running without restart\nvar CurrentTime = new Date().getTime();\nvar StartTime = global.get(\"OnlineTimer\");\nvar TimeElapsed = ((CurrentTime - StartTime) / 60000); // minutes\nTimeElapsed = parseFloat(TimeElapsed.toFixed(0));\nmsg.topic = \"\";\nmsg.payload = \"This flow is running for \" + TimeElapsed + \" minutes since restart\";\nif (TimeElapsed > 60) { TimeElapsed = TimeElapsed / 60; TimeElapsed = parseFloat(TimeElapsed.toFixed(0)); msg.payload = \"This flow is running for \" + TimeElapsed + \" hours without a restart.\"; }\nif (TimeElapsed > 24) { TimeElapsed = TimeElapsed / 24; TimeElapsed = parseFloat(TimeElapsed.toFixed(0)); msg.payload = \"This flow is running for \" + TimeElapsed + \" days without a restart.\"; }\nnode.send(msg);\n\n//check MQTT blocked\nif (MQTT.block_active == 1) {\n    msg.topic = \"MQTT-Commands:\";\n    msg.payload = \"Are blocked (disable switch to unblock)\"\n    node.send(msg);\n}\n\n// Count TOP44 Error messages \nvar Last_Error = global.get('Last_Error', \"file\");      // Last error\nvar Error_Counter = global.get('Error_Counter', \"file\");// Total errors\nmsg.topic = \"\";\nmsg.payload = \"Total errors: \" + Error_Counter + \", last error: \" + Last_Error;\nnode.send(msg);\n\n// check if using own kWh-meter(s) \nvar Meters = 0;\nif (global.get('kWh_meter1') == \"true\") { Meters += 1; }\nif (global.get('kWh_meter2') == \"true\") { Meters += 1; }\nif (Meters > 0) {\n    msg.payload = \"Found \" + Meters + \" custom kWh-device(s) connected to Heishamon\";\n    node.send(msg);\n} else { msg.payload = \"No custom kWh-devices detected\"; node.send(msg); }\n\n// check if using 1-wire and how many:\nvar oneWire_sensors = flow.get('oneWire_sensors').length; // No. of sensors found\nmsg.payload = \"Found \" + oneWire_sensors + \" 1-wire sensors connected to Heishamon\";\nif (oneWire_sensors == 0) { msg.payload = \"No 1-wire sensors connected to Heishamon\"; }\nnode.send(msg);\n\n// finished checken HP state \nmsg.topic = \"\";\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// checking some scheduler vars \nmsg.topic = \"solar_block_scheduler:\";\nif (global.get('solar_block_scheduler', \"file\") === undefined) msg.payload = \"undefined (ok)\"; else msg.payload = global.get('F_stored_next_operating_mode', \"file\");\nnode.send(msg);\nmsg.topic = \"F_SOLAR.function_active_state:\";\nif (global.get('F_SOLAR.function_active_state', \"file\") === undefined) msg.payload = \"undefined (ok)\"; else msg.payload = global.get('F_stored_next_operating_mode', \"file\");\nnode.send(msg);\nmsg.topic = \"F_stored_next_operating_mode:\";\nif (global.get('F_stored_next_operating_mode', \"file\") === undefined) msg.payload = \"undefined (ok)\"; else msg.payload = global.get('F_stored_next_operating_mode', \"file\");\nnode.send(msg);\n\n// checking  scheduler tasks \nvar count = 0;\nfor (let i = 1; i < 11; i++) {\n    var state = global.get('Schedule_' + i + '_state', \"file\") || 0;\n    if (state == 1) { count += 1; }\n}\nmsg.topic = \"Scheduler:\"\nmsg.payload = count + \" tasks are currently active\";\nnode.send(msg);\n\n// show which tasks are active:\nfor (let i = 10; i > 0; i--) {\n    var schedule_topic = \"Schedule_\" + i;\n\n    //var var0 = global.get(schedule_topic + '_state', \"file\") + \", \";\n    var var1 = global.get(schedule_topic + '_Description', \"file\") + \", \";\n    var var2 = global.get(schedule_topic + '_day', \"file\") + \", \";\n    var var3 = global.get(schedule_topic + '_hour', \"file\");\n    var3 = Number(var3).toFixed(0);\n    if (var3 < 10) { var3 = \"0\" + var3 + \":\"; } else { var3 = var3 + \":\"; } //voorloopnul indien nodig\n    var var4 = global.get(schedule_topic + '_minutes', \"file\");\n    var4 = Number(var4).toFixed(0);\n    if (var4 < 10) { var4 = \"0\" + var4 + \", \" } // voorloopnul indien nodig\n    var var5 = global.get(schedule_topic + '_state', \"file\");\n    var var6 = global.get(schedule_topic + '_action', \"file\") + \" \";\n    if (global.get(schedule_topic + '_override', \"file\") == 1) { var var7 = \"(override)\" } else { var var7 = \"\"; }\n\n    msg.topic = schedule_topic;\n    msg.payload = var1 + var2 + var3 + var4 + var6 + var7;\n    if (var5 == 1) { node.send(msg); } // only show when active\n}\n//\n\nmsg.topic = \"\";\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// checking  RTC settings \nvar F_RTC = global.get('F_RTC', \"file\");\nif (F_RTC === undefined) { F_RTC = {}; F_RTC.z1 = {}; }\nmsg.topic = \"F_RTC.automation_active: \"; msg.payload = F_RTC.automation_active; node.send(msg);\n//msg.topic = \"F_RTC.on_off_status: \"; msg.payload = F_RTC.on_off_status; node.send(msg);\n\nmsg.topic = \"\";\n\nvar rtc_PV = global.get('T_room'); // Actual room temp\n\nif (F_RTC.z1.state == 1) { msg.payload = \"F_RTC.z1.state: 1 (Function RTC is enabled)\"; } else msg.payload = \"F_RTC.z1.state: 0 (Function RTC is disabled)\";\nnode.send(msg);\nif (F_RTC.automation_power_state == 1) { msg.payload = \"F_RTC.automation_power_state: 1 (Function RTC turn heat on/off is enabled)\"; } else { msg.payload = \"F_RTC.automation_power_state: 0 (RTC turn heat on/off is disabled)\"; }\nnode.send(msg);\n\nif (F_RTC.automation_OM_state == 1) { msg.payload = \"F_RTC.automation_OM_state: 1 (Function RTC allow change OM is enabled)\"; } else { msg.payload = \"F_RTC.automation_OM_state: 0 (RTC allow change OM is disabled)\"; }\nnode.send(msg);\n\n// show incremental setpoint status:\nmsg.topic = \"F_RTC.z1.incremental_setpoints_state: \";\nmsg.payload = F_RTC.z1.incremental_setpoints_state;\nnode.send(msg);\n\nif (TOP0_Heatpump_State == \"on\") TOP0_Heatpump_State = \"(power is on)\";\nif (TOP0_Heatpump_State == \"off\") TOP0_Heatpump_State = \"(power is off)\";\nvar RoomSP = global.get('WoonkamerSP', \"file\");\n\n// show current RTC room setpoint:\nmsg.topic = \"RTC Room setpoint\";\nmsg.payload = RoomSP + \"°C\";\nnode.send(msg);\n\nif (F_RTC.automation_power_state == 1 && TOP0_Heatpump_State == \"(power is off)\") {\n    var rtc_on = RoomSP + global.get('F_RTC.automation_off_limit', \"file\");\n    rtc_on = Number(rtc_on).toFixed(1);\n    if (TOP0_Heatpump_State == \"(power is off)\") {\n        msg.topic = \"\";\n        msg.payload = \"RTC will switch heatpump on at \" + rtc_on + \"°C (now \" + rtc_PV + \"°C) \" + TOP0_Heatpump_State;\n        node.send(msg); //\n    }\n}\n\nif (F_RTC.automation_power_state == 1 && TOP0_Heatpump_State == \"(power is on)\") {\n    var rtc_off = RoomSP + global.get('F_RTC.automation_on_limit', \"file\");\n    rtc_off = Number(rtc_off).toFixed(1);\n    msg.topic = \"\";\n    msg.payload = \"RTC will switch heatpump off at \" + rtc_off + \"°C (now \" + rtc_PV + \"°C) \" + TOP0_Heatpump_State; node.send(msg);\n}\n\n// check for possible error:\nif (F_RTC.automation_active == 0 && TOP0_Heatpump_State == \"(power is off)\" && F_RTC.automation_power_state == 1) {\n    msg.payload = \"<b>WARNING</b> RTC will not turn heatpump on, because pump manualy switched off or flow restarted\"; node.send(msg);\n}\n// check for possible error:\nif (F_RTC.automation_active == 1 && TOP0_Heatpump_State == \"(power is on)\" && F_RTC.automation_power_state == 1) {\n    msg.payload = \"<b>WARNING</b> RTC will not turn heatpump off, because you switched pump manualy on above room setpoint\"; node.send(msg);\n}\n\n\nmsg.topic = \"\";\n// test possible block:\nif (global.get('TOP2_Force_DHW_State') == 1) { msg.payload = \"TOP2_Force_DHW_State = 1 --> RTC will not turn heatpump to on (blocked)\"; node.send(msg); }\n\nmsg.topic = \"\";\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// check total MQTT messages \nif (MQTT !== undefined) {\n    // format the message\n    msg.payload = \"Total MQTT-Commands send: \" + MQTT.counter + \", today \" + MQTT.messages_today + \", yesterday \" + MQTT.messages_yesterday;\n    node.send(msg);\n}\n\n\n// check total Defrosts \nvar Defrost = global.get('Defrost', \"file\");\nif (Defrost === undefined) { Defrost = {}; global.set('Defrost', Defrost, \"file\"); }\nif (Defrost.Counter === undefined) { Defrost.Counter = 0; }\nif (Defrost.Counter_Today === undefined) { Defrost.Counter_Today = 0; }                 // Defrost_Counter_Today\nif (Defrost.Counter_Yesterday === undefined) { Defrost.Counter_Yesterday = 0; }         // Defrost_Counter_Yesterday\nmsg.payload = \"Total Defrosts: \" + Defrost.Counter + \", today \" + Defrost.Counter_Today + \", yesterday \" + Defrost.Counter_Yesterday; node.send(msg);\n\n// calc total hours/ Average  runtime\nvar TOP11_Operations_Hours = global.get('TOP11_Operations_Hours');\nvar TOP12_Operations_Counter = global.get('TOP12_Operations_Counter');\nvar AverageRuntime = (TOP11_Operations_Hours / TOP12_Operations_Counter);\nAverageRuntime = parseFloat(AverageRuntime.toFixed(2));\nmsg.topic = \"\";\nmsg.payload = \"Total hours: \" + TOP11_Operations_Hours + \", starts: \" + TOP12_Operations_Counter + \", average runtime: \" + AverageRuntime + \" hours\";\nnode.send(msg);\n\n// highest frequency ever recorded\nvar HighestFreq = global.get('HighestFreq', \"file\"); // get last highscore ;)\nif (HighestFreq === undefined) { HighestFreq = 0; }\nmsg.payload = \"Highest compressor frequency ever recorded: \" + HighestFreq + \" Hz\";\nnode.send(msg);\n\n//get Starts_Today:\nvar Starts_Today = global.get('Starts_Today', \"file\");\n//node.warn(Starts_Today);\nif (Starts_Today === undefined) { global.set('Starts_Today', 0, \"file\"); } // not necessary\nmsg.payload = \"The compressor has started \" + Starts_Today + \" times in the last 24 hours\";\nnode.send(msg);\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// Check SoftStart \nvar F_SS = global.get('F_SS', \"file\");\n// Get the global variable. Used to see if the softstart function is enabled.\nvar F_SS_state = F_SS.state;\nif (F_SS_state === undefined) { F_SS_state = 0; }\nif (F_SS_state == 0) { F_SS_state = \"disabled\" ; }\nif (F_SS_state == 1) { F_SS_state = \"enabled\" ; }\n//if (F_SS_state === undefined || F_SS_state == 0) { F_SS_state = \"disabled\"; } else { F_SS_state = \"enabled\"; }\nmsg.payload = \"Function - SoftStart is \" + F_SS_state;\n\n//At which state is SS running now?\nvar F_SS_actual_stage = global.get('F_SS_actual_stage'); //todo change to var F_SS.actual_stage (have to update function SoftStart)\nif (F_SS_actual_stage !== undefined) { msg.payload = msg.payload + \" (Operation in \" + F_SS_actual_stage + \")\"; }\nnode.send(msg);\n\n//SS limits:\nmsg.payload = \"F_SS.total_duration: \" + (F_SS.total_duration / 60) + \" minutes (Max. time the SoftStart will be active)\"; node.send(msg);\nmsg.payload = \"F_SS.upperlimit_correction: \" + F_SS.upperlimit_correction + \"°C (Max. setpoint increase)\"; node.send(msg);\nmsg.payload = \"F_SS.lowerlimit_correction: \" + F_SS.lowerlimit_correction + \"°C (Max. setpoint decrease)\"; node.send(msg);\n\nvar compressor_runtime = global.get('compressor_runtime', \"file\") || 0;\nvar compressor_last_runtime = global.get(\"compressor_last_runtime\", \"file\") || 0;\nmsg.payload = \"Actual runtime: \" + compressor_runtime + \" minutes, last runtime: \" + compressor_last_runtime + \" minutes\"; node.send(msg);\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// Quietmode settings:\nvar Quietmode_time = global.get('F_SS.QM_duration', \"file\");\n\nif (Quietmode_time === undefined) { Quietmode_time = 5; }                           //default 5 minutes\nvar SS_Quietmode_on_off = global.get(\"F_SS.QM_state\", \"file\");                // Status switch SS_Quietmode \nif (SS_Quietmode_on_off === 0 || SS_Quietmode_on_off === undefined) {\n    msg.payload = \"Function - SoftStart Quietmode is disabled\"; node.send(msg);\n} else { msg.payload = \"Function - SoftStart Quietmode is enabled\"; node.send(msg); }\n\nif (SS_Quietmode_on_off == 1) {\n    var TOP18_Quiet_Mode_Level = global.get('F_SS.QM_active_level', \"file\");           //check current Quietmode level\n    var QM_default_level = global.get('F_SS.QM_default_level', \"file\");  //check previous Quietmode level\n    if (QM_default_level === undefined) { QM_default_level = 0; }\n    msg.payload = \"Current Quietmode level: \" + TOP18_Quiet_Mode_Level + \", restoring to level: \" + QM_default_level + \" after \" + Quietmode_time + \" minutes runtime.\";\n    node.send(msg);\n}\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\nif (MQTT !== undefined) {\n    // Check MQTT-blocker and manual on/off settings\n    var value = MQTT.block_active;\n    msg.topic = \"MQTT.block_active: \"; msg.payload = value; node.send(msg); msg.topic = \"\";\n\n    value = MQTT.allow_rtc_onoff;\n    msg.topic = \"MQTT.allow_rtc_onoff: \"; msg.payload = value; node.send(msg); msg.topic = \"\";\n\n    value = MQTT.allow_solar;\n    msg.topic = \"MQTT.allow_solar: \"; msg.payload = value; node.send(msg);\n\n    value = MQTT.allow_scheduler;\n    msg.topic = \"MQTT.allow_scheduler: \"; msg.payload = value; node.send(msg);\n\n    value = MQTT.messages_today;\n    msg.topic = \"MQTT.messages_today: \"; msg.payload = value; node.send(msg);\n\n    value = MQTT.messages_yesterday;\n    msg.topic = \"MQTT.messages_yesterday: \"; msg.payload = value; node.send(msg);\n\n    value = MQTT.counter;;\n    msg.topic = \"MQTT.counter: \"; msg.payload = value + \" (total)\"; node.send(msg);\n\n    value = MQTT.message_limit;\n    msg.topic = \"MQTT.message_limit: \"; msg.payload = value; node.send(msg);\n\n    var block_mode = [\"undefined\", \"BLOCK ALL\", \"CUSTOM\", \"UNRESTRICTED\"];\n    var value = MQTT.block_mode;\n    msg.topic = \"MQTT.block_mode: \";\n    msg.payload = block_mode[value];\n    node.send(msg);\n\n    var value = MQTT.block_mode_previous;\n    msg.topic = \"MQTT.block_mode_previous: \";\n    msg.payload = block_mode[value];\n    node.send(msg);\n\n}\nelse {\n    msg.topic = \"MQTT: \"; msg.payload = \"undefined\";\n    node.send(msg);\n}\n\nmsg.topic = \"\";\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// Check Function reduce pump speed settings:\nvar F_ReducePumpSpeed = global.get('F_ReducePumpSpeed', \"file\");\nmsg.topic = \"F_ReducePumpSpeed.PumpMaxFlowSetting: \"; msg.payload = F_ReducePumpSpeed.PumpMaxFlowSetting; node.send(msg); msg.topic = \"\";\nmsg.topic = \"F_ReducePumpSpeed.NormalSpeed: \"; msg.payload = F_ReducePumpSpeed.NormalSpeed; node.send(msg); msg.topic = \"\";\nmsg.topic = \"F_ReducePumpSpeed.LowSpeed: \"; msg.payload = F_ReducePumpSpeed.LowSpeed; node.send(msg); msg.topic = \"\";\nmsg.topic = \"F_ReducePumpSpeed.state: \"; msg.payload = F_ReducePumpSpeed.state; node.send(msg); msg.topic = \"\";\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\n// Check Night Reduction variables:\nvar NightReductionWaterTemp = global.get('NightReductionWaterTemp', \"file\");\nmsg.topic = \"NightReductionWaterTemp.state:\"; msg.payload = NightReductionWaterTemp.nightreduction_state; node.send(msg); msg.topic = \"\";\nmsg.topic = \"NightReductionWaterTemp.correction:\"; msg.payload = NightReductionWaterTemp.correction; node.send(msg); msg.topic = \"\";\nmsg.topic = \"NightReductionWaterTemp.current_value:\"; msg.payload = NightReductionWaterTemp.current_value; node.send(msg); msg.topic = \"\";\nvar F_NR_correction = global.get('NightReductionWaterTemp.current_value', \"file\");\nmsg.topic = \"F_NR_correction:\"; msg.payload = F_NR_correction; node.send(msg); msg.topic = \"\";\n\nmsg.payload = \"---------------------------------------------------------------------------------------------------\";\nnode.send(msg);\n\nvar NightReductionRoomSetpoint = global.get('NightReductionRoomSetpoint', \"file\");\nmsg.topic = \"NightReduction room_setpoint.state:\"; msg.payload = NightReductionRoomSetpoint.state; node.send(msg); msg.topic = \"\";\nmsg.topic = \"NightReductionRoomSetpoint.LOW:\"; msg.payload = NightReductionRoomSetpoint.LOW; node.send(msg); msg.topic = \"\";\nmsg.topic = \"NightReductionRoomSetpoint.NORMAL:\"; msg.payload = NightReductionRoomSetpoint.NORMAL; node.send(msg); msg.topic = \"\";\n\nmsg.payload = \"<b>---------------------------------------------------------------------------------------------------</b>\";\nmsg.payload = \"<b>================refresh for actual values======================</b>\";\nnode.send(msg);\n\nnode.done(); // finished",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 480,
        "wires": [
            [
                "365e9747b6e58903"
            ]
        ]
    },
    {
        "id": "365e9747b6e58903",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "fa1495af192e1c1e"
        ],
        "x": 525,
        "y": 480,
        "wires": []
    },
    {
        "id": "ae21a03ad6f43d1c",
        "type": "ui_button",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "System check",
        "group": "ec94eaa0930738be",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "Press to refresh and show system data",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "8e9e69d85c6ec035"
            ]
        ]
    },
    {
        "id": "614b9c64adf19f94",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "Online timer",
        "func": "var CurrentTime = new Date().getTime();\nglobal.set(\"OnlineTimer\", CurrentTime);\n\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 560,
        "wires": []
    },
    {
        "id": "d0ac8299461b7c1f",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "aed05096f97f9ba6",
        "name": "at boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "614b9c64adf19f94",
                "8e9e69d85c6ec035"
            ]
        ]
    },
    {
        "id": "112b797f401c4afc",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "MQTT commands",
        "topic": "panasonic_heat_pump/commands/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 690,
        "y": 520,
        "wires": [
            [
                "459dcc6cc8cff9da",
                "58c919290387cba4"
            ]
        ]
    },
    {
        "id": "459dcc6cc8cff9da",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "Count",
        "func": "var MQTT = global.get('MQTT',\"file\");\nif (MQTT===undefined){\n    MQTT = {};\n    global.set('MQTT',MQTT,\"file\");\n}\n\nif (MQTT.counter === undefined) {MQTT.counter = 0;\nMQTT.counter = parseFloat(MQTT.counter.toFixed(0));\n}\n\n// today\nif (MQTT.messages_today === undefined) MQTT.messages_today = 0;\nMQTT.messages_today = parseFloat(MQTT.messages_today.toFixed(0));\n\n// yesterday\nif (MQTT.messages_yesterday === undefined) {MQTT.messages_yesterday = 0;}\n\nMQTT.messages_yesterday = parseFloat(MQTT.messages_yesterday.toFixed(0));\n\n// reset_today\nif (msg.payload == \"reset_today\") { // daily midnight reset\n    MQTT.messages_yesterday = MQTT.messages_today;\n    MQTT.messages_today = 0;\n    global.set('MQTT.messages_yesterday', MQTT.messages_yesterday, \"file\");\n    global.set('MQTT.messages_today', MQTT.messages_today, \"file\");\n    return null; // exit node\n} \n\nMQTT.counter += 1; // increase total\nMQTT.messages_today += 1; //increase today\n\n// reset, clear all vars from flow:\nif (msg.payload == \"reset\") { MQTT.counter = 0; MQTT.messages_today; MQTT.messages_yesterday; }\n\nglobal.set('MQTT.counter', MQTT.counter, \"file\"); // save\nglobal.set('MQTT.messages_yesterday', MQTT.messages_yesterday, \"file\");\nglobal.set('MQTT.messages_today', MQTT.messages_today, \"file\");\n\n//msg.payload = \"Total:\" + MQTT.counter + \", Today:\" + MQTT.messages_today; // for debug node only\n\n//return msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 560,
        "wires": []
    },
    {
        "id": "c94e5636d62a2bd9",
        "type": "inject",
        "z": "d5fea67661261002",
        "d": true,
        "g": "1f4cf47dbe4285dc",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 730,
        "y": 480,
        "wires": [
            [
                "459dcc6cc8cff9da"
            ]
        ]
    },
    {
        "id": "de77807ce3dc66fc",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "New day reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payload": "reset_today",
        "payloadType": "str",
        "x": 700,
        "y": 560,
        "wires": [
            [
                "459dcc6cc8cff9da"
            ]
        ]
    },
    {
        "id": "f9d6e659dbe05a19",
        "type": "inject",
        "z": "d5fea67661261002",
        "d": true,
        "g": "5166b23daf2b561d",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 230,
        "y": 660,
        "wires": [
            [
                "116f4e573c2d55e8"
            ]
        ]
    },
    {
        "id": "991502670f43d03e",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "New day reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payload": "reset_today",
        "payloadType": "str",
        "x": 260,
        "y": 740,
        "wires": [
            [
                "116f4e573c2d55e8"
            ]
        ]
    },
    {
        "id": "116f4e573c2d55e8",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "Count",
        "func": "var Defrost = global.get('Defrost',\"file\");\nif (Defrost === undefined){\n    Defrost = {};\n    global.set('Defrost',Defrost,\"file\");\n}\n\n\nvar Defrost_Counter = global.get('Defrost.Counter', \"file\");\nif (Defrost_Counter === undefined) {\n    Defrost_Counter = 0;\n    global.set('Defrost.Counter',0,\"file\");\n}\n\n\n// today\nvar Defrost_Counter_Today = global.get('Defrost.Counter_Today', \"file\");\nif (Defrost_Counter_Today === undefined) Defrost_Counter_Today = 0;\nDefrost_Counter_Today = parseFloat(Defrost_Counter_Today.toFixed(0));\n\n// yesterday\nvar Defrost_Counter_Yesterday = global.get('Defrost.Counter_Yesterday', \"file\");\nif (Defrost_Counter_Yesterday === undefined) Defrost_Counter_Yesterday = 0;\nDefrost_Counter_Yesterday = parseFloat(Defrost_Counter_Yesterday.toFixed(0));\n\n\n// reset_today\nif (msg.payload == \"reset_today\") { // daily reset\n    var Defrost_Counter_Yesterday = Defrost_Counter_Today;\n    Defrost_Counter_Today = 0; \n    global.set('Defrost.Counter_Yesterday', Defrost_Counter_Yesterday, \"file\"); // memory only\n    global.set('Defrost.Counter_Today', Defrost_Counter_Today, \"file\"); // memory only\n    return null; // exit node\n     } \n\n// when Defrost is finished:\nlet msg99 = {}; // log\n\nif (msg.payload == 0 ) {\n    msg99.topic = \"*DEFROSTING\";\n    msg99.payload = \"Finished\";\n    return msg99; // exit node\n    } \n\n\nDefrost_Counter += 1; // increase total\nDefrost_Counter_Today += 1; //increase today\n\n// reset, clear all vars from flow:\nif (msg.payload == \"reset\") { Defrost_Counter = 0; Defrost_Counter_Today; Defrost_Counter_Yesterday; }\n\nglobal.set('Defrost.Counter', Defrost_Counter, \"file\");\nglobal.set('Defrost.Counter_Today', Defrost_Counter_Today, \"file\");\nglobal.set('Defrost.Counter_Yesterday', Defrost_Counter_Yesterday, \"file\");\n\nif (msg.payload == 1) {\n    msg99.topic = \"*DEFROSTING\";\n    msg99.payload = \"Started\";\n    }\n\nmsg.payload = \"Total:\" + Defrost_Counter + \", today:\" + Defrost_Counter_Today; // for debug node only\nmsg.topic = \"\";\n\nreturn msg99; // to input LOGS\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 700,
        "wires": [
            [
                "842e7cc6853ea3c8"
            ]
        ]
    },
    {
        "id": "a9fa37eb6a1a4fc2",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 210,
        "y": 700,
        "wires": [
            [
                "116f4e573c2d55e8"
            ]
        ]
    },
    {
        "id": "ef07058c04267dd5",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "TOP11 - panasonic_heat_pump/main/Operations_Hours",
        "topic": "panasonic_heat_pump/main/Operations_Hours",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 840,
        "wires": [
            [
                "09a6b8cd0884bcc2"
            ]
        ]
    },
    {
        "id": "2db0d9b3a1bc868c",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "TOP12 - panasonic_heat_pump/main/Operations_Counter",
        "topic": "panasonic_heat_pump/main/Operations_Counter",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 900,
        "wires": [
            [
                "2c3deed445f0081b"
            ]
        ]
    },
    {
        "id": "4df2960daa64b31d",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "set.TOP11_Operations_Hours",
        "func": "global.set('TOP11_Operations_Hours', msg.payload); // memory only\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 840,
        "wires": [
            [
                "0af4b3b3445b3ce2"
            ]
        ]
    },
    {
        "id": "6fe317de99320aa3",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "set.TOP12_Operations_Counter",
        "func": "global.set('TOP12_Operations_Counter', msg.payload); // memory only\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 900,
        "wires": [
            [
                "6c6d719592dac8d5"
            ]
        ]
    },
    {
        "id": "0af4b3b3445b3ce2",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "Hours",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1090,
        "y": 840,
        "wires": []
    },
    {
        "id": "6c6d719592dac8d5",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "Starts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1090,
        "y": 900,
        "wires": []
    },
    {
        "id": "842e7cc6853ea3c8",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "input LOGS",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 585,
        "y": 700,
        "wires": []
    },
    {
        "id": "2fa6b31339e8638d",
        "type": "ui_toast",
        "z": "d5fea67661261002",
        "position": "top left",
        "displayTime": "2",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "GUI Notify",
        "x": 1390,
        "y": 240,
        "wires": []
    },
    {
        "id": "c764c19340b7b720",
        "type": "link in",
        "z": "d5fea67661261002",
        "name": "Notify!",
        "links": [
            "b28336107aaff12e",
            "85327198ddc6e251",
            "d65b99037cb3740d",
            "29f1c1eaf91ec977",
            "e0217508a82c4d43",
            "65e5ce7e8bb0e284",
            "302de5d951e650b6",
            "db78ad9b985b4aa5",
            "e1d9c3b48e3b4cba",
            "9b7f15d048bb1f60",
            "749ce60adde338d9",
            "c6e07a956cf2f293",
            "6886cb05525f8d0b",
            "16e91d824cef95e3",
            "6111292139d84986",
            "a863b940531858e1",
            "f2e85ff23b3dc136",
            "400c912774a24583",
            "f94a97e9d42084d7",
            "b8ed3bef56b272a1",
            "ae97f18776a1de28",
            "7ddd3f5d8f76897e",
            "b43820fd5a21f4e7",
            "776cbfd355ed920f",
            "037c668f34165450",
            "68685dfaa9b474b6",
            "4c70cc2db4654795",
            "e6f11948336b5214",
            "d233c56ec779154b"
        ],
        "x": 1285,
        "y": 240,
        "wires": [
            [
                "2fa6b31339e8638d"
            ]
        ]
    },
    {
        "id": "5f9d089ca2c8df2f",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "ebe2890eadc33dcd",
        "name": "TOP44-Error",
        "topic": "panasonic_heat_pump/main/Error",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 730,
        "y": 660,
        "wires": [
            [
                "0e9c0e551061fdbf"
            ]
        ]
    },
    {
        "id": "0e9c0e551061fdbf",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "ebe2890eadc33dcd",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 700,
        "wires": [
            [
                "b8280b17e99b11d1"
            ]
        ]
    },
    {
        "id": "b8280b17e99b11d1",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "ebe2890eadc33dcd",
        "name": "Count",
        "func": "var Error_Counter = global.get('Error_Counter', \"file\");\nif (Error_Counter === undefined)\n    {\n        Error_Counter = 0;\n        global.set('Error_Counter', Error_Counter, \"file\");\n    }\n\nvar Last_Error = msg.payload; // current error\nif (global.get('Last_Error', \"file\") === undefined)\n    {\n        global.set('Last_Error', Last_Error, \"file\");\n    }\nif (Last_Error == \"No error\")\n    {\n        return null;\n    }\n\nif (Last_Error != \"No error\")\n    { \n        Error_Counter += 1;\n        global.set('Error_Counter', Error_Counter, \"file\");\n        global.set('Last_Error', Last_Error, \"file\");\n    } \n\n//return msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 740,
        "wires": []
    },
    {
        "id": "88b24c510e42cb4d",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "panasonic_heat_pump/s0/Watt/1",
        "topic": "panasonic_heat_pump/s0/Watt/1",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1420,
        "wires": [
            [
                "fe8169803ad0da4c"
            ]
        ]
    },
    {
        "id": "e13d89b6bf39c3a3",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "If detected 1st",
        "func": "if (msg.payload > 0) {\n    global.set('kWh_meter1', \"true\"); // memory only\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "320f3cb11444550f",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "panasonic_heat_pump/s0/Watt/2",
        "topic": "panasonic_heat_pump/s0/Watt/2",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1480,
        "wires": [
            [
                "f04a11835631b092"
            ]
        ]
    },
    {
        "id": "10a931a475e12a39",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "if detected 2nd",
        "func": "if (msg.payload > 0) {\n    global.set('kWh_meter2', \"true\"); // memory only\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "f91a8e87996f7a36",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 870,
        "y": 1480,
        "wires": [
            [
                "10a931a475e12a39"
            ]
        ]
    },
    {
        "id": "50965b08724bdd8c",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "at boot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1600,
        "wires": [
            [
                "f2d7ea937abca010"
            ]
        ]
    },
    {
        "id": "f2d7ea937abca010",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "Clr sensors",
        "func": "flow.set('oneWire_sensors', []);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "082586cfc8693748",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Log HP data",
        "func": "// [NEW] Melding tijdens defrost\nvar Debugging = global.get('Debugging', \"file\");    \nvar Defrosting = global.get('TOP26_Defrosting_State', \"file\");\n\nmsg.topic = \"Compressor\";\n\nif (msg.payload > 0) \n        {                                                       //started or already running\n        msg.payload = \"running\";\n        if (Defrosting == 1 && Debugging == 1) \n                {\n                msg.payload = \"running [defrosting]\";\n                } \n        if (Defrosting == 1 && Debugging == 0) \n                {\n                msg.payload = \"running skip\";\n                } \n        }\n        \n\nif (msg.payload == 0) \n        {\n        var runtime = global.get(\"compressor_runtime\", \"file\");         //stopped\n        if (runtime == 0) { msg.payload = \"stopped\"; } else { msg.payload = \"stopped (runtime: \" + runtime + \" min)\"; }\n        if (Defrosting == 1 && Debugging == 1) \n                {\n                msg.payload = \"stopped [defrosting]\";\n                } \n        if (Defrosting == 1 && Debugging == 0) \n                {\n                msg.payload = \"stopped skip\";\n                } \n        } \n\n\n\nreturn msg;\n\n//be carefull with changing msg.payload string, Start counter uses this.",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 380,
        "wires": [
            [
                "3078dedaa0fa9fa6"
            ]
        ]
    },
    {
        "id": "1a8bf49ae0badf5a",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "link out Log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "47e2a8d99d332229"
        ],
        "x": 1145,
        "y": 380,
        "wires": []
    },
    {
        "id": "2a1004c42a0b7dc1",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "24 hours reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payload": "reset_today",
        "payloadType": "str",
        "x": 200,
        "y": 380,
        "wires": [
            [
                "df9dc017de54372f"
            ]
        ]
    },
    {
        "id": "109e99262b1d9b31",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 570,
        "y": 380,
        "wires": [
            [
                "082586cfc8693748"
            ]
        ]
    },
    {
        "id": "3078dedaa0fa9fa6",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 850,
        "y": 380,
        "wires": [
            [
                "df9dc017de54372f",
                "98332e44d65ec671"
            ]
        ]
    },
    {
        "id": "df9dc017de54372f",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "Starts counter",
        "func": "//get Starts_Today:\nvar Starts_Today = global.get('Starts_Today', \"file\");\nif (Starts_Today === undefined) { global.set('Starts_Today', 0, \"file\"); }\n\nif (msg.payload == \"reset_today\") {\n    global.set('Starts_Today', 0, \"file\");\n    return null;\n}\n\nif (msg.payload == \"running\" || msg.payload == \"running [defrosting]\" || msg.payload == \"running skip\") {                                      //started or already running\n    Starts_Today += 1;\n    global.set('Starts_Today', Starts_Today, \"file\");\n}\n\n\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": []
    },
    {
        "id": "58c919290387cba4",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "Overflow protection",
        "func": "//  msg1 to Pin1 Block MQTT switch\n// msg99 to input LOGS\n\n// get send commands today\nvar MQTT_messages_today = global.get('MQTT.messages_today', \"file\");\nif (MQTT_messages_today === undefined) MQTT_messages_today = 0;\n\n// get user set limit\nvar MQTT_message_limit = global.get('MQTT.message_limit', \"file\");\nif (MQTT_message_limit === undefined) {\n    MQTT_message_limit = 500; //default 300\n    global.set('MQTT.message_limit', 500, \"file\");\n}\n\n// check MQTT.message_limit reached\nif (MQTT_messages_today >= MQTT_message_limit) {\n    // first check if not already blocked:\n    if (global.get('MQTT.block_active', \"file\") == 1) { return null; } // exit node when already active\n\n    // block MQTT commands:\n    let msg1 = {};\n    msg1.topic = \"\";\n    msg1.payload = 1;\n    \n    //warning send to log\n    let msg99 = {};\n    msg99.topic = \"[WARNING]\";\n    msg99.payload = MQTT_messages_today + \" MQTT-commands send today! MQTT sending blocked (limit \" + MQTT_message_limit + \" msg/day)\";\n    return [msg1, msg99];\n}\n\nreturn [null, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 500,
        "wires": [
            [
                "fdd35059e43f16d0"
            ],
            [
                "c4dd85e3e2a5dff4"
            ]
        ]
    },
    {
        "id": "fdd35059e43f16d0",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "Block MQTT switch",
        "mode": "link",
        "links": [
            "172fe3f8a616d7b8"
        ],
        "x": 1145,
        "y": 480,
        "wires": []
    },
    {
        "id": "c4dd85e3e2a5dff4",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "1f4cf47dbe4285dc",
        "name": "to input LOGS",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1145,
        "y": 520,
        "wires": []
    },
    {
        "id": "05e22a7bbcfb1aa1",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "d": true,
        "g": "cd5937af83198f9a",
        "name": "Heishamon-1wire(1)",
        "topic": "",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 770,
        "y": 1760,
        "wires": [
            [
                "16808d5b28081690"
            ]
        ]
    },
    {
        "id": "825f53ebdfb5fd43",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1560",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1800,
        "wires": [
            [
                "8cab4c14513ce5fa"
            ]
        ]
    },
    {
        "id": "8cab4c14513ce5fa",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "Dynamic Subscribe to found 1-Wire",
        "func": "let msg1 = {}; // 1st 1-wire sensor topic\nlet msg2 = {}; // 2nd 1-wire sensor topic\nlet msg3 = {}; //Array of found sensors --> dropdown box\n\nmsg1.topic = \"panasonic_heat_pump/s0/\";\nmsg2.topic = \"panasonic_heat_pump/s0/\";\n\nlet oneWire_sensors = [];\n\noneWire_sensors =  flow.get('oneWire_sensors'); //array of found 1-wire sensors (for now max 2))\n\nvar i = oneWire_sensors.length;           // No. of sensors found\n//node.warn(\"No sensors=\" + i);\nif (i === undefined || i == 0 ) {return null;}\n\n\nmsg1.topic = msg1.topic + oneWire_sensors[0];\nmsg2.topic = msg2.topic + oneWire_sensors[1];\nmsg1.action = \"subscribe\";\nmsg2.action = \"subscribe\";\n\n//setup dropdownbox message:\nmsg3.options = oneWire_sensors;\nreturn [msg1, msg2,msg3];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1800,
        "wires": [
            [
                "05e22a7bbcfb1aa1"
            ],
            [
                "798b2017d73b9795"
            ],
            []
        ]
    },
    {
        "id": "16808d5b28081690",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1090,
        "y": 1760,
        "wires": []
    },
    {
        "id": "798b2017d73b9795",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "d": true,
        "g": "cd5937af83198f9a",
        "name": "Heishamon-1wire(2)",
        "topic": "",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 770,
        "y": 1840,
        "wires": [
            [
                "fd1a14b5c123f7aa"
            ]
        ]
    },
    {
        "id": "fd1a14b5c123f7aa",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1090,
        "y": 1840,
        "wires": []
    },
    {
        "id": "9624117d96bd6dbb",
        "type": "comment",
        "z": "d5fea67661261002",
        "g": "cd5937af83198f9a",
        "name": "Test dynamic subcribe",
        "info": "",
        "x": 220,
        "y": 1720,
        "wires": []
    },
    {
        "id": "399e883e6deac7a3",
        "type": "ui_button",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "",
        "group": "548e51986bce11b0",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Defrost",
        "tooltip": "Send a force defrost to HP",
        "color": "",
        "bgcolor": "{{background}}",
        "className": "",
        "icon": "",
        "payload": "This will start a defrosting routine.",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 380,
        "y": 1960,
        "wires": [
            [
                "d3a2ef1813673fb5"
            ]
        ]
    },
    {
        "id": "d6ef6434856148df",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "Block?",
        "func": "var MQTT              = global.get('MQTT', \"file\");\n\n// *****************************************************************************\n//          Default manual or automated BLOCK ALL\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 1) {\n    let msg66 = {}; // pin 2 - To Notify msg (and INPUTdebuglog)\n    msg66.topic = \"SYSTEM\";\n    msg66.payload = \"MQTT-Commands are blocked!\";\n    return [null, msg66];                                                       //  Block msg, and log it.\n}\n\n// *****************************************************************************\n//  MQTT.block_mode = BLOCK ALL (1)\n//  MQTT.block_mode = CUSTOM (2)\n//  MQTT.block_mode = UNRESTRICTED (3)\n// *****************************************************************************\n\nif (MQTT.block_active == 1 && MQTT.block_mode == 2) {                                //  If Manual OFF has been detected...\n    \n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 1 || MQTT.block_mode == 2) {\n        return [null, null];  \n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    if (MQTT.block_mode == 3) {                                            //  MQTT_default_3 = UNRESTRICTED\n        return [msg, null];                                                     //  Pass through msg.\n    }\n}\n\nif (MQTT.block_active == 0) {\n    return msg;\n}\n\n    \n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1960,
        "wires": [
            [
                "0b00b03e3c4e9930"
            ],
            [
                "037c668f34165450"
            ]
        ]
    },
    {
        "id": "037c668f34165450",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "exit to INPUTlogs",
        "mode": "link",
        "links": [
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 895,
        "y": 1960,
        "wires": []
    },
    {
        "id": "1b91aa81aad7c7b5",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "Force",
        "func": "if (msg.payload == \"Yes\") \n    {\n        msg.payload = 1;\n        return msg;\n    } else \n    {\n        return null;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1960,
        "wires": [
            [
                "d6ef6434856148df"
            ]
        ]
    },
    {
        "id": "0b00b03e3c4e9930",
        "type": "mqtt out",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "SET12-SetForceDefrost",
        "topic": "panasonic_heat_pump/commands/SetForceDefrost",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 1050,
        "y": 1960,
        "wires": []
    },
    {
        "id": "d3a2ef1813673fb5",
        "type": "ui_toast",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "Send a defrost now to HP?",
        "name": "Defrost?",
        "x": 520,
        "y": 1960,
        "wires": [
            [
                "1b91aa81aad7c7b5"
            ]
        ]
    },
    {
        "id": "98332e44d65ec671",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "skip",
        "func": "if (msg.payload == \"running skip\" || msg.payload == \"stopped skip\") { return null; } // no log message\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 380,
        "wires": [
            [
                "1a8bf49ae0badf5a"
            ]
        ]
    },
    {
        "id": "afa5bf9f7c3531bc",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "5166b23daf2b561d",
        "name": "link in 15",
        "links": [
            "6c685782864f1787"
        ],
        "x": 115,
        "y": 700,
        "wires": [
            [
                "a9fa37eb6a1a4fc2"
            ]
        ]
    },
    {
        "id": "32c013973096ab65",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "3ce1342324a97c52",
        "name": "link in 16",
        "links": [
            "c57a81d1dee5b8a9"
        ],
        "x": 115,
        "y": 320,
        "wires": [
            [
                "109e99262b1d9b31",
                "57c9f02c576ad71f"
            ]
        ]
    },
    {
        "id": "1ebb1a2803291fd7",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "link in 19",
        "links": [
            "6c685782864f1787"
        ],
        "x": 115,
        "y": 1960,
        "wires": [
            [
                "fd2777fee0c73d23"
            ]
        ]
    },
    {
        "id": "fd2777fee0c73d23",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "bab76cb8c9631c59",
        "name": "Button look",
        "func": "if (msg.payload == 0)\n    {\n        msg.background = null;\n    }\n\n\n\nif (msg.payload == 1) \n    {\n    msg.background = \"Red\";\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1960,
        "wires": [
            [
                "399e883e6deac7a3"
            ]
        ]
    },
    {
        "id": "c40e5d6c866f68df",
        "type": "ui_template",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "ec94eaa0930738be",
        "name": "Line",
        "order": 2,
        "width": 24,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1090,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "678c2fa5db148f1e",
        "type": "ui_text",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "ec94eaa0930738be",
        "order": 8,
        "width": 9,
        "height": 1,
        "name": "spacer1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 1080,
        "wires": []
    },
    {
        "id": "bb8548eb6893bd56",
        "type": "ui_text",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "ec94eaa0930738be",
        "order": 4,
        "width": 11,
        "height": 2,
        "name": "spacer2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6c196a9703c10a79",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "naming convention",
        "info": "\nMQTT\t\n\t.active\t\t\t\t\t\t\t\t\tMQTT block enabled/disabled 1,0\n\t.allow_rtc_onoff\t\t\t\n\t.allow_scheduler\t\t\t\n\t.allow_solar\t\t\t\t\n\t.block_mode\t\t\t\t\t\t\t\tBLOCK ALL (1) , CUSTOM (2), UNRESTRICTED (3)\n\t.counter\t\t\t\t    \t\t\tTotal MQTT messages counter\n\t.messages_today\t\t\t    \t\t\tNo. MQTT messages today\n\t.messages_yesterday\t\t    \t\t\tNo. MQTT messages yesterday\n\t.message_limit\t\t\t    \t\t\tMaximum allowed messages in 24h allow before block will activate\n\n\nNightReductionWaterTempOn \t\t    \t\tscheduler task to activate night reduction water temp\nNightReductionWaterTempOff\t\t    \t\tscheduler task to deactivate night reduction water temp\n\nNightReductionWaterTemp\n\t.current_value\t\t\t\t\t\t\trenamed from NightReduction_current_value\n\t.correction\t\t\t\t\t\t\t\trenamed from NightReduction_correction\n\t.state\t\t\t\t\t\t\t\t\trenamed from nightreduction_on_off\n\nNightReductionRoomSetpoint\n\t.state \t\t\t\t\t\t\t\t\tNight reduction room setpoint status (1,0)\n\t.LOW\t\t\t\t\t\t\t\t\trenamed from RoomSetpointLOW\n\t.NORMAL\t\t\t\t\t\t\t\t\trenamed from RoomSetpointNORMAL\n\nF_ReducePumpSpeed\n\t.state\t\t\t\t\t\t\t\t\tReduce pump speed active 1,0\n\t.PumpMaxFlowSetting\t\t\t\t\t\t\n\t.NormalSpeed\t\t\t\t\t\t\tValue to restore to when disabled\n\t.LowSpeed\t\t\t\t\t\t\t\tValue used as low pump speed when active\n\nF_RTC\n\t.state\t\t\t\t\t\t\t\t\tRTC main function on/off (1,0) (old name: Correction_1_RTC_on_off)\n\t.incremental_setpoints_state\t\t\tincremental_setpoints status of switch. (Renamed from Booster), value 1,0\n\t.correction_value (Memory Only)\t\t\tRTC correction (renamed from F_RTC_correction)\n\t.F1_power_state\t\t\t\t\t\t\tfunction turn on/off heatpump (1,0)\n\t.F2_OM_state\t\t\t\t\t\t\tfunction change OM heatpump\n\t.on_off_active\t\t\t\t\t\t\t0= waiting to turn heat on. 1= waiting to turn heat off\n\t.on_off_status\t\t\t\t\t\t\tvalue: 0,1,2\n\nDefrost\n\t.Counter\t\t\t\t\t\t\t\tRenamed from Defrost_Counter\n\t.Counter_Today\t\t\t\t\t\t\tRenamed from Defrost_Counter_Today\n\t.Counter_Yesterday\t\t\t\t\t\tRenamed from Defrost_Counter_Yesterday\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "x": 1350,
        "y": 360,
        "wires": []
    },
    {
        "id": "5c3b694f82537189",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "Todo  (open me)",
        "info": "[ ] Remove unused outputs (pins) from function nodes (some need none).\n\nlater versions\n[ ] Add new 3rd or 4th stage to SoftStart to phase out diffence between original_SP and the SP with last SS_correction.\n[ ] Check RTC Automation why this message shows up in log while not relevant: \"Function RTC: Operation mode to Heat only\".\n[ ] Limit SS corrections by using a median Ta temp? Or limit max 1/min.\n[ ] Continue with MQTT_source placement for all functions generation a MQTT-Command.\n[ ] Continue with naming convention. (reduce capitals)\n[X] Add possibility to change room setpoint through scheduler.\n[X] Better way to detect and use custom room temperature sensor. Setting in SYSTEM / HW CONFIGURATION?\n\n\n\n",
        "x": 1340,
        "y": 400,
        "wires": []
    },
    {
        "id": "5566fb2a502d3f92",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "User info",
        "info": "Users currently using those devices:\n=====================================\nAikon (kWh + 1-wire (Toutside) + MQTT sensor (Troom))\nMikeyMan (kWh + MQTT sensors)\nMaarten69 (kWh + 1-wire)\nEdterbak (kWh)\nblb4 (2x kWh en 5x 1-wire)\nlampy25 (2x kWh + 1-wire)",
        "x": 1320,
        "y": 440,
        "wires": []
    },
    {
        "id": "a8acdcc0dc537830",
        "type": "ui_template",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "ec94eaa0930738be",
        "name": "",
        "order": 10,
        "width": 24,
        "height": 17,
        "format": "<div ng-repeat=\"line in msg.payload track by $index\">\n<div ng-bind-html=\"line\"></div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "fa1495af192e1c1e",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "inputDEBUGLOG",
        "links": [
            "16e91d824cef95e3",
            "29f1c1eaf91ec977",
            "302de5d951e650b6",
            "365e9747b6e58903",
            "400c912774a24583",
            "559f3875ebe7df72",
            "6111292139d84986",
            "65e5ce7e8bb0e284",
            "6886cb05525f8d0b",
            "749ce60adde338d9",
            "7ddd3f5d8f76897e",
            "85327198ddc6e251",
            "9b7f15d048bb1f60",
            "a863b940531858e1",
            "ae97f18776a1de28",
            "b43820fd5a21f4e7",
            "b8ed3bef56b272a1",
            "b903f8bbf513d6a1",
            "c6e07a956cf2f293",
            "d65b99037cb3740d",
            "db78ad9b985b4aa5",
            "e1d9c3b48e3b4cba",
            "f2e85ff23b3dc136",
            "f94a97e9d42084d7",
            "037c668f34165450",
            "68685dfaa9b474b6",
            "4c70cc2db4654795",
            "e6f11948336b5214",
            "d233c56ec779154b"
        ],
        "x": 725,
        "y": 1040,
        "wires": [
            [
                "8a882609f0e2d88a"
            ]
        ]
    },
    {
        "id": "8a882609f0e2d88a",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Add",
        "func": "let pay = msg.topic + \" \" + msg.payload;\n\n// Read scrolling table from context\nlet debuglog = flow.get('debuglog'); //MemoryOnly\n\nif (debuglog === undefined || pay === undefined)\n    {\n        return null;\n    }\nelse if (msg.topic==\"populate\")\n    {\n        msg.payload = [...debuglog];\n        \n        return msg;\n    }\n\nelse\n    {\n        // Modify scrolling table by adding msg.payload as first element\n        let size = debuglog.unshift(pay);\n         \n        // Remove last element from scrolling table\n        if (size >80) debuglog.pop();\n         \n        // Update context for scrolling text\n        flow.set('debuglog',debuglog);\n         \n        // Shalow copy updated scrolling table to msg.payload\n        msg.payload = [...debuglog];\n         \n        return msg;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1040,
        "wires": [
            [
                "a8acdcc0dc537830"
            ]
        ]
    },
    {
        "id": "62d33aea9b2babaa",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Create",
        "func": "var stored_value = flow.get(\"debuglog\",\"file\");\n\nif (msg.payload == \"RESET\")\n    {\n    flow.set(\"debuglog\", undefined); \n        return null;\n    }\n\nelse if (stored_value !== undefined) \n    {\n        let debuglog = [];\n        debuglog = stored_value; \n        msg.payload = [...debuglog];\n        return msg;\n    }\n    \nelse\n    {\n        let debuglog = [];\n        flow.set(\"debuglog\", debuglog);        \n    }\n    \n    \n\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1000,
        "wires": [
            [
                "a8acdcc0dc537830"
            ]
        ]
    },
    {
        "id": "751fec2ce6f8faac",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Block MQTT",
        "func": "let msg1 = {}; // pin2 to combobox update block_mode status\nmsg1.topic = \"Update block_mode\"; //update 19-01-2023 msg --> msg1\nif (msg.source == \"boot\") { return null; } //exit when source is from inject node\n\nlet msg99 = {};\nmsg99.topic = \"SYSTEM\";\nmsg99.payload = \"\";\n\nvar MQTT = global.get('MQTT',\"file\");\n\n// *****************************************************************************\n//  MQTT.block_mode 1 = BLOCK ALL\n//  MQTT.block_mode 2 = CUSTOM\n//  MQTT.block_mode 3 = UNRESTRICTED\n// *****************************************************************************\n\nif (msg.payload == 1) {\n    global.set('MQTT.block_active', 1, \"file\"); \n    msg99.payload = 1;\n    global.set('MQTT.block_mode_previous', MQTT.block_mode, \"file\"); // 11-01-20223 for restoring block_mode after disabling switch\n\n    // check if msg source is from shutdown_detection (POWER OFF)\n    if (msg.source == \"shutdown_detection\") {\n        msg1.payload = MQTT.block_mode;\n        return [msg99, msg1]; // log and update combobox\n    }\n\n\n    global.set('MQTT.block_mode', 1, \"file\"); // block all\n    msg1.payload = 1;\n    return [msg99, msg1]; // log and update combobox\n\n}\n\nif (msg.payload == 0) {\n    global.set('MQTT.block_active', 0, \"file\");\n    msg99.payload = 0;\n    if (MQTT.block_mode_previous !== undefined) { global.set('MQTT.block_mode', MQTT.block_mode_previous, \"file\"); } // 11-01-20223 for restoring block_mode after disabling switch\n        \n    // test if reached max MQTT command limit today:\n    if (MQTT.messages_today === undefined) MQTT.messages_today = 0;\n\n    // get user set limit\n    if (MQTT.message_limit === undefined) {\n        MQTT.message_limit = 500; //default 500\n        global.set('MQTT.message_limit', 500, \"file\");\n        }\n\n    // Request: Auto increase limit when disabling\n    if (MQTT.messages_today >= MQTT.message_limit) {\n        msg99.payload = \"MQTT limit of \" + MQTT.message_limit + \" reached, increasing limit to \" + (MQTT.message_limit + 100);\n        global.set('MQTT.message_limit', (MQTT.message_limit + 100), \"file\");\n    }\n\n    msg1.payload = MQTT.block_mode_previous; // now actual block_mode\n    return [msg99, msg1]; // log, and update combobox?\n}\n\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1060,
        "wires": [
            [
                "35b2bc2a89cc2d84",
                "43783f0ff1a97ef1"
            ],
            [
                "bb5e36b2c205a984"
            ]
        ],
        "outputLabels": [
            "msg",
            "to button block_mode 1"
        ]
    },
    {
        "id": "c25c9914b837785c",
        "type": "ui_switch",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Block MQTT commands",
        "label": "",
        "tooltip": "Block MQTT commands",
        "group": "d95eca50f9342e76",
        "order": 16,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 250,
        "y": 1060,
        "wires": [
            [
                "751fec2ce6f8faac",
                "c3c58f9072c16f58"
            ]
        ]
    },
    {
        "id": "dadcc09786666d40",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "set at boot",
        "func": "var MQTT = global.get('MQTT', \"file\");\nlet msg1 = {};\n\nif (MQTT.block_active === undefined){\n    global.set('MQTT.block_active',0,\"file\");\n    msg1.payload = 0;\n    msg1.source = \"boot\";\n    return msg1;\n    \n}\n\n\nmsg1.payload = MQTT.block_active;\nmsg1.source = \"boot\";\n\nvar value = MQTT.block_mode;\nvar Blockmode = \"undefined\";\nif (value === 1) Blockmode = \"BLOCK ALL\";\nif (value === 2) Blockmode = \"CUSTOM\";\nif (value === 3) Blockmode = \"UNRESTRICTED\";\n\nmsg1.topic = Blockmode; //text label toggle\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "c25c9914b837785c"
            ]
        ]
    },
    {
        "id": "a13a59feb119d9ce",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "at boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2100",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "x": 160,
        "y": 1180,
        "wires": [
            [
                "dadcc09786666d40",
                "43783f0ff1a97ef1"
            ]
        ]
    },
    {
        "id": "5ce82b31e85cfe3a",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "Repair & delete old vars",
        "func": "    let msg99={};\n    msg99.topic = \"SYSTEM:\";\n    msg99.payload = \"removed old variables\";      \n\n\n\n    global.set('F_ReducePumpSpeed.SavedPumpspeed', undefined, \"file\");\n    global.set('MQTT_Block_default_3', undefined, \"file\");\n    global.set('MQTT_Block_default_2', undefined, \"file\");\n    global.set('MQTT_Block_default_1', undefined, \"file\");\n    global.set('MQTT_Block_Allow_function_scheduled_tasks', undefined, \"file\");   \n    global.set('MQTT_Block_Allow_function_solar', undefined, \"file\");\n    global.set('MQTT_Block_Allow_function_rtc_onoff', undefined, \"file\");\n// remove more old vars 18-01-2023     \n    global.set('Correction_1_RTC_on_off', undefined, \"file\");\n    global.set('F_RTC_on_off_active', undefined, \"file\");\n    global.set('F_RTC_on_off3_OM', undefined, \"file\");\n    global.set('F_RTC_on_off2', undefined, \"file\");\n    global.set('F_RTC_correction', undefined); //Memory Only\n    global.set('F_rtc_on_off_status', undefined, \"file\");\n    global.set('F_rtc_on_off_active', undefined, \"file\");\n    global.set('Defrost_Counter_Yesterday', undefined, \"file\");\n    global.set('Defrost_Counter_Today', undefined, \"file\");\n    global.set('Defrost_Counter', undefined, \"file\");\n    global.set('Booster', undefined, \"file\");\n    global.set('LowSpeed', undefined, \"file\");\n    global.set('SavedPumpspeed', undefined, \"file\");\n    global.set('PumpMaxFlowSetting', undefined, \"file\");\n    global.set('ReducePumpSpeed', undefined, \"file\");\n    global.set('RoomSetpointNORMAL', undefined, \"file\");\n    global.set('RoomSetpointLOW', undefined, \"file\");\n    global.set('nightreduction_on_off', undefined, \"file\");\n    global.set('NightReductionWaterTemp_correction', undefined, \"file\");\n    global.set('NightReduction_correction', undefined, \"file\");\n    global.set('NightReduction_current_value', undefined, \"file\");\n    global.set('NightReductionRoomPV_CurrentStatus', undefined, \"file\");\n    global.set('MQTT_Limit', undefined, \"file\");\n    global.set('MQTT_Counter_Yesterday', undefined, \"file\");\n    global.set('MQTT_Counter_Today', undefined, \"file\");\n    global.set('MQTT_Counter', undefined, \"file\");\n    global.set('MQTT_Block_select', undefined, \"file\");\n    global.set('MQTT_select', undefined, \"file\");\n    var MQTT = global.get('MQTT', \"file\");\n    global.set('MQTT_Block', undefined, \"file\");\n    if (MQTT == 0 || MQTT == 1) {global.set('MQTT',undefined,\"file\");}\n    global.set('Nightmode', undefined, \"file\");\n//delete old vars:\n\nvar SavedPumpspeed = global.get('F_ReducePumpSpeed.SavedPumpspeed', \"file\");\nif (SavedPumpspeed !== undefined) { global.set('F_ReducePumpSpeed.NormalSpeed', SavedPumpspeed, \"file\"); }\n// use old pumpspeed low:\n\nvar Correction_1_RTC_on_off = global.get('Correction_1_RTC_on_off', \"file\");\nif (Correction_1_RTC_on_off != undefined) { global.set('F_RTC.state', Correction_1_RTC_on_off, \"file\"); }\n\n    var F_RTC_on_off_active = global.get('F_RTC_on_off_active', \"file\");\n    if (F_RTC_on_off_active !== undefined) { global.set('F_RTC.on_off_active', F_RTC_on_off_active, \"file\"); }\n    if (F_RTC_on_off_active === undefined) { global.set('F_RTC.on_off_active', 0, \"file\"); }\n\n    var F_RTC_on_off3_OM = global.get('F_RTC_on_off3_OM', \"file\");\n    if (F_RTC_on_off3_OM !== undefined) { global.set('F_RTC.F2_OM_state', F_RTC_on_off3_OM, \"file\"); }\n\n    var F_RTC_on_off2 = global.get('F_RTC_on_off2', \"file\");\n    if (F_RTC_on_off2 !== undefined) { global.set('F_RTC.F1_power_state', F_RTC_on_off2, \"file\"); }\n\n    var F_RTC_on_off_active = global.get('F_RTC_on_off_active', \"file\");\n    if (F_RTC_on_off_active !== undefined) { global.set('F_RTC.on_off_active', F_RTC_on_off_active, \"file\"); }\n\n    var F_rtc_on_off_status = global.get('F_rtc_on_off_status', \"file\");\n    if (F_rtc_on_off_status !== undefined) { global.set('F_RTC.on_off_status', F_rtc_on_off_status, \"file\"); }\n\n    var F_rtc_on_off_active = global.get('F_rtc_on_off_active', \"file\");\n    if (F_rtc_on_off_active !== undefined) { global.set('F_RTC.on_off_active', F_rtc_on_off_active, \"file\"); }\n//copy RTC vars to new vars:\n    var Defrost_Counter = global.get('Defrost_Counter', \"file\");\n    if (Defrost_Counter !== undefined) { \n        global.set('Defrost.Counter', Defrost_Counter, \"file\"); \n        global.set('Defrost.Counter_Today', 0, \"file\"); \n        global.set('Defrost.Counter_Yesterday', 0, \"file\"); \n        } \n//copy defrost to new var:\n\n    var LowSpeed = global.get('LowSpeed', \"file\");\n    if (LowSpeed !== undefined) { global.set('F_ReducePumpSpeed.LowSpeed', LowSpeed, \"file\"); } \n\n    var SavedPumpspeed = global.get('SavedPumpspeed', \"file\");\n    if (SavedPumpspeed !== undefined) { global.set('F_ReducePumpSpeed.SavedPumpspeed', SavedPumpspeed, \"file\"); } \n\n    var PumpMaxFlowSetting = global.get('PumpMaxFlowSetting', \"file\");\n    if (PumpMaxFlowSetting !== undefined) { global.set('F_ReducePumpSpeed.PumpMaxFlowSetting', PumpMaxFlowSetting, \"file\"); }   \n\n    var ReducePumpSpeed = global.get('ReducePumpSpeed', \"file\");\n    if (ReducePumpSpeed !== undefined) { global.set('F_ReducePumpSpeed.state', ReducePumpSpeed, \"file\"); }   \n//copy reduce pumpspeed settings:\n\n    var MQTT_Limit = global.get('MQTT_Limit', \"file\");\n    if (MQTT_Limit !== undefined) { global.set('MQTT.message_limit', MQTT_Limit, \"file\"); }\n\n    var MQTT_Counter_Yesterday = global.get('MQTT_Counter_Yesterday', \"file\");\n    if (MQTT_Counter_Yesterday !== undefined) { global.set('MQTT.messages_yesterday', MQTT_Counter_Yesterday, \"file\"); }\n\n    var MQTT_Counter_Today = global.get('MQTT_Counter_Today', \"file\");\n    if (MQTT_Counter_Today !== undefined) { global.set('MQTT.messages_today', MQTT_Counter_Today, \"file\"); }\n\n    var MQTT_Counter = global.get('MQTT_Counter', \"file\");\n    if (MQTT_Counter !== undefined) { global.set('MQTT.counter', MQTT_Counter, \"file\"); }\n    //first move old mqtt counters to new vars:\n    \n/////////////////\n    \n\nif(global.get('F_SS_correction') !==undefined)                                   {   global.set('F_SS.correction_value', global.get('F_SS_correction'),'file'); global.set('F_SS_correction',undefined);}\nif(global.get('Correction_2_softstart_on_off','file') !==undefined)              {   global.set('F_SS.state', global.get('Correction_2_softstart_on_off','file'),'file'); global.set('Correction_2_softstart_on_off',undefined,'file');}\nif(global.get('F_SS_reset_after_defrost','file') !==undefined)                   {   global.set('F_SS.reset_after_defrost', global.get('F_SS_reset_after_defrost','file'),'file'); global.set('F_SS_reset_after_defrost',undefined,'file');}\nif(global.get('F_SS_stage2_limit','file') !==undefined)                          {   global.set('F_SS.upperlimit_correction', global.get('F_SS_stage2_limit','file'),'file'); global.set('F_SS_stage2_limit',undefined,'file');}\nif(global.get('F_SS_stage2','file') !==undefined)                                {   global.set('F_SS.total_duration', global.get('F_SS_stage2','file'),'file'); global.set('F_SS_stage2',undefined,'file');}\n// move old to new\nif(global.get('F_SS_correction_active') !==undefined)                            {   global.set('F_SS_correction_active',undefined);}\nif(global.get('compressor_frequency') !==undefined)                              {   global.set('compressor_frequency',undefined);}\n// remove old\n// 2023-02-12 (v22.02)\n\nif(global.get('SS_Quitmode_levelchange','file') !==undefined)                    {   global.set('SS_Quitmode_levelchange',undefined,'file');}\n// remove\n\nif(global.get('solar_detection_method','file') !==undefined)                     {   global.set('F_SOLAR.detection_method', global.get('solar_detection_method','file'),'file'); global.set('solar_detection_method',undefined,'file');}\nif(global.get('Quietmode_time','file') !==undefined)                             {   global.set('F_SS.QM_duration', global.get('Quietmode_time','file'),'file'); global.set('Quietmode_time',undefined,'file');}\nif(global.get('SS_Quietmode_on_off','file') !==undefined)                        {   global.set('F_SS.QM_state', global.get('SS_Quietmode_on_off','file'),'file'); global.set('SS_Quietmode_on_off',undefined,'file');}\n// replace\n// 2023-03-19 (v22.09)\n\nif(global.get('solar_turn_on','file') !==undefined)                              {   global.set('solar_turn_on',undefined,'file');}\nif(global.get('solar_state','file') !==undefined)                                {   global.set('solar_state',undefined,'file');}\nif(global.get('solar_fallback','file') !==undefined)                             {   global.set('solar_fallback',undefined,'file');}\n// remove\n\nif(global.get('DHW_Target_Temp','file') !==undefined)                            {   global.set('TOP9_DHW_Target_Temp', global.get('DHW_Target_Temp','file'),'file'); global.set('DHW_Target_Temp',undefined,'file');}\nif(global.get('DHW_SP_LOW','file') !==undefined)                                 {   global.set('F_SOLAR.dhw_sp_low', global.get('DHW_SP_LOW','file'),'file'); global.set('DHW_SP_LOW',undefined,'file');}\nif(global.get('DHW_SP_HIGH','file') !==undefined)                                {   global.set('F_SOLAR.dhw_sp_high', global.get('DHW_SP_HIGH','file'),'file'); global.set('DHW_SP_HIGH',undefined,'file');}\nif(global.get('solar_threshold','file') !==undefined)                            {   global.set('F_SOLAR.threshold', global.get('solar_threshold','file'),'file'); global.set('solar_threshold',undefined,'file');}\nif(global.get('SolarFunction_active','file') !==undefined)                       {   global.set('F_SOLAR.function_active_state', global.get('SolarFunction_active','file'),'file'); global.set('SolarFunction_active',undefined,'file');}\nif(global.get('F_Solar_import_correction','file') !==undefined)                  {   global.set('F_SOLAR.import_correction', global.get('F_Solar_import_correction','file'),'file'); global.set('F_Solar_import_correction',undefined,'file');}\nif(global.get('F_Solar_export_correction','file') !==undefined)                  {   global.set('F_SOLAR.export_correction', global.get('F_Solar_export_correction','file'),'file'); global.set('F_Solar_export_correction',undefined,'file');}\n// replace\n// 2023-03-26 (v22.10)\n\n\nvar T_room_custom       = global.get('T_room_custom',\"file\");                          // Custom outside temperature sensor\nif (T_room_custom > 0){\n    var old_value = T_room_custom;\n    T_room_custom = {};\n    T_room_custom.value = old_value;\n    global.set('T_room_custom',undefined,\"file\");\n    global.set('T_room_custom',T_room_custom,\"file\")\n}\n// replace\n// 2023-03-26 (v22.10)\n\n\n\n\n\n\nif(global.get('FloorHeatDelta','file') !==undefined)                             {   global.set('TOP23_Heat_Delta', global.get('FloorHeatDelta','file'),'file'); global.set('FloorHeatDelta',undefined,'file');}\nif(global.get('FloorCoolDelta','file') !==undefined)                             {   global.set('TOP24_Cool_Delta', global.get('FloorCoolDelta','file'),'file'); global.set('FloorCoolDelta',undefined,'file');}\nif(global.get('DHW_Temp') !==undefined)                                          {   global.set('TOP10_DHW_Temp', global.get('DHW_Temp')); global.set('DHW_Temp',undefined);}\nif(global.get('DHWHeatDelta','file') !==undefined)                               {   global.set('TOP22_DHW_Heat_Delta', global.get('DHWHeatDelta','file'),'file'); global.set('DHWHeatDelta',undefined,'file');}\nif(global.get('Sterilization_Temp','file') !==undefined)                         {   global.set('TOP70_Sterilization_Temp', global.get('Sterilization_Temp','file'),'file'); global.set('Sterilization_Temp',undefined,'file');}\nif(global.get('Sterilization_State') !==undefined)                               {   global.set('TOP69_Sterilization_State', global.get('Sterilization_State'),'file'); global.set('Sterilization_State',undefined);}\n// 2023-03-27 (v22.15)\n\n\n\n\nif(global.get('HolidayMode','file') !==undefined)                                {   global.set('TOP19_Holiday_Mode_State', global.get('HolidayMode','file')); global.set('HolidayMode',undefined,'file');}\nif(global.get('OperationHours') !==undefined)                                    {   global.set('TOP11_Operations_Hours', global.get('OperationHours')); global.set('OperationHours',undefined);}\nif(global.get('PanasonicMainScheduler','file') !==undefined)                     {   global.set('TOP13_Main_Schedule_State', global.get('PanasonicMainScheduler','file'),'file'); global.set('PanasonicMainScheduler',undefined,'file');}\nif(global.get('Fan2_Speed') !==undefined)                                        {   global.set('TOP63_Fan2_Motor_Speed', global.get('Fan2_Speed')); global.set('Fan2_Speed',undefined);}\nif(global.get('Fan1_Speed') !==undefined)                                        {   global.set('TOP62_Fan1_Motor_Speed', global.get('Fan1_Speed')); global.set('Fan1_Speed',undefined);}\nif(global.get('Heat_Energy_Consumption') !==undefined)                           {   global.set('TOP16_Heat_Energy_Consumption', global.get('Heat_Energy_Consumption')); global.set('Heat_Energy_Consumption',undefined);}\nif(global.get('DHW_Energy_Consumption') !==undefined)                            {   global.set('TOP41_DHW_Energy_Consumption', global.get('DHW_Energy_Consumption')); global.set('DHW_Energy_Consumption',undefined);}\nif(global.get('OperationCounter') !==undefined)                                  {   global.set('TOP12_Operations_Counter', global.get('OperationCounter')); global.set('OperationCounter',undefined);}\nif(global.get('Pump_Flow') !==undefined)                                         {   global.set('TOP1_Pump_Flow', global.get('Pump_Flow')); global.set('Pump_Flow',undefined);}\nif(global.get('SetZones','file') !==undefined)                                   {   global.set('TOP94_Zones_State', global.get('SetZones','file'),'file'); global.set('SetZones',undefined,'file');}\nif(global.get('Quiet_Mode_Level','file') !==undefined)                           {   global.set('TOP18_Quiet_Mode_Level', global.get('Quiet_Mode_Level','file'),'file'); global.set('Quiet_Mode_Level',undefined,'file');}\nif(global.get('ForceDefrost','file') !==undefined)                               {   global.set('TOP26_Defrosting_State', global.get('ForceDefrost','file'),'file'); global.set('ForceDefrost',undefined,'file');}\nif(global.get('Force_DHW_State') !==undefined)                                   {   global.set('TOP2_Force_DHW_State', global.get('Force_DHW_State')); global.set('Force_DHW_State',undefined);}\nif(global.get('T_outside_panasonic','file') !==undefined)                        {   global.set('TOP14_Outside_Temp', global.get('T_outside_panasonic','file'),'file'); global.set('T_outside_panasonic',undefined,'file');}\nif(global.get('PowerfulMode','file') !==undefined)                               {   global.set('TOP17_Powerful_Mode_Time', global.get('PowerfulMode','file'),'file'); global.set('PowerfulMode',undefined,'file');}\nif(global.get('Operating_Mode_State','file') !==undefined)                       {   global.set('TOP4_Operating_Mode_State', global.get('Operating_Mode_State','file'),'file'); global.set('Operating_Mode_State',undefined,'file');}\nif(global.get('Main_Target_Temp') !==undefined)                                  {   global.set('TOP27_Z1_Heat_Request_Temp', global.get('Main_Target_Temp')); global.set('Main_Target_Temp',undefined);}\nif(global.get('Main_Outlet_Temp') !==undefined)                                  {   global.set('TOP6_Main_Outlet_Temp', global.get('Main_Outlet_Temp')); global.set('Main_Outlet_Temp',undefined);}\nif(global.get('Main_Inlet_Temp') !==undefined)                                   {   global.set('TOP5_Main_Inlet_Temp', global.get('Main_Inlet_Temp')); global.set('Main_Inlet_Temp',undefined);}\nif(global.get('ThreeWay_Valve_State') !==undefined)                              {   global.set('TOP20_ThreeWay_Valve_State', global.get('ThreeWay_Valve_State')); global.set('ThreeWay_Valve_State',undefined);}\nif(global.get('Heating_Mode','file') !==undefined)                               {   global.set('TOP76_Heating_Mode', global.get('Heating_Mode','file'),'file'); global.set('Heating_Mode',undefined,'file');}\nif(global.get('Heatpump_State','file') !==undefined)                             {   global.set('TOP0_Heatpump_State', global.get('Heatpump_State','file'),'file'); global.set('Heatpump_State',undefined,'file');}\nif(global.get('HeaterStopDelta','file') !==undefined)                            {   global.set('TOP98_Heater_Stop_Delta', global.get('HeaterStopDelta','file'),'file'); global.set('HeaterStopDelta',undefined,'file');}\nif(global.get('HeaterStartDelta','file') !==undefined)                           {   global.set('TOP97_Heater_Start_Delta', global.get('HeaterStartDelta','file'),'file'); global.set('HeaterStartDelta',undefined,'file');}\nif(global.get('HeaterDelayTime','file') !==undefined)                            {   global.set('TOP96_Heater_Delay_Time', global.get('HeaterDelayTime','file'),'file'); global.set('HeaterDelayTime',undefined,'file');}\n// replace\n\nif(global.get('F_ReducePumpSpeed.NormalSpeed','file') !==undefined)              {   global.set('F_ReducePumpSpeed.NormalSpeed',undefined,'file');}\nif(global.get('solar_block_scheduler','file') !==undefined)                      {   global.set('solar_block_scheduler',undefined,'file');}\nif(global.get('Previous_Quiet_Mode_Level','file') !==undefined)                  {   global.set('Previous_Quiet_Mode_Level',undefined,'file');}\nif(global.get('Last_Error') !==undefined)                                        {   global.set('Last_Error',undefined);}\n\n// cleanup\n\n\n\n\nif(global.get('Correction_1_RTC_on_off','file') !==undefined)                    {   global.set('F_RTC.state', global.get('Correction_1_RTC_on_off','file'),'file'); global.set('Correction_1_RTC_on_off',undefined,'file');}\nif(global.get('rtc_t7','file') !==undefined)                                     {   global.set('F_RTC.rtc_t7_limit', global.get('rtc_t7','file'),'file'); global.set('rtc_t7',undefined,'file');}\nif(global.get('rtc_t7_custom_cor','file') !==undefined)                          {   global.set('F_RTC.rtc_t7_correction_value', global.get('rtc_t7_custom_cor','file'),'file'); global.set('rtc_t7_custom_cor',undefined,'file');}\nif(global.get('rtc_t6','file') !==undefined)                                     {   global.set('F_RTC.rtc_t6_limit', global.get('rtc_t6','file'),'file'); global.set('rtc_t6',undefined,'file');}\nif(global.get('rtc_t5','file') !==undefined)                                     {   global.set('F_RTC.rtc_t5_limit', global.get('rtc_t5','file'),'file'); global.set('rtc_t5',undefined,'file');}\nif(global.get('rtc_t4','file') !==undefined)                                     {   global.set('F_RTC.rtc_t4_limit', global.get('rtc_t4','file'),'file'); global.set('rtc_t4',undefined,'file');}\nif(global.get('rtc_t3','file') !==undefined)                                     {   global.set('F_RTC.rtc_t3_limit', global.get('rtc_t3','file'),'file'); global.set('rtc_t3',undefined,'file');}\nif(global.get('rtc_t2','file') !==undefined)                                     {   global.set('F_RTC.rtc_t2_limit', global.get('rtc_t2','file'),'file'); global.set('rtc_t2',undefined,'file');}\nif(global.get('rtc_t1','file') !==undefined)                                     {   global.set('F_RTC.rtc_t1_limit', global.get('rtc_t1','file'),'file'); global.set('rtc_t1',undefined,'file');}\nif(global.get('rtc_on','file') !==undefined)                                     {   global.set('rtc_on',undefined,'file');}\nif(global.get('rtc_off','file') !==undefined)                                    {   global.set('rtc_off',undefined,'file');}\n//\n\n\nif(global.get('DHW_treshold','file') !==undefined)                               {   global.set('DHW_threshold_upper', global.get('DHW_treshold','file'),'file'); global.set('DHW_treshold',undefined,'file');}\nif(global.get('F_RTC.F1_F2_active','file') !==undefined)                         {   global.set('F_RTC.F1_F2_active',undefined,'file');}\n//9-5-2023\n\n\n\nif(global.get('SetForceSterilization','file') !==undefined)                      {   global.set('SetForceSterilization',undefined,'file');}\n//11-5-2023\n\n\n//21-08-2023\nvar i = 1;\nwhile (i < 11) {\n    var condition = global.get('Schedule_' + i + '_condition',\"file\");\n    if (condition !== undefined) {\n        if (typeof(condition) === \"string\") {\n            var newCondition = [];\n            newCondition.push(condition);\n            global.set('Schedule_' + i + '_condition',newCondition,\"file\");\n        }\n        if (typeof(condition) === \"object\") { }\n    }\n    i++;\n}   // converting all conditions to multiselect objects instead of strings.\n\nglobal.set('Sterilization_active', 0, \"file\");\nglobal.set('Force_DHW_active', 0, \"file\");\nglobal.set('F_RTC.on_off_status', undefined, \"file\");\n\n//30-10-2023\nif (global.get('F_SS.state', \"file\") === \"enabled\") { global.set('F_SS.state', 0, \"file\"); }\nif (global.get('F_SS.state', \"file\") === \"disabled\") { global.set('F_SS.state', 0, \"file\"); }\n\nif (global.get('F_RTC.rtc_t1_limit', \"file\") !== undefined) { global.set('F_RTC.z1.t1_limit', global.get('F_RTC.rtc_t1_limit', \"file\"), \"file\"); global.set('F_RTC.rtc_t1_limit', undefined, \"file\"); }\nif (global.get('F_RTC.rtc_t2_limit', \"file\") !== undefined) { global.set('F_RTC.z1.t2_limit', global.get('F_RTC.rtc_t2_limit', \"file\"), \"file\"); global.set('F_RTC.rtc_t2_limit', undefined, \"file\"); }\nif (global.get('F_RTC.rtc_t3_limit', \"file\") !== undefined) { global.set('F_RTC.z1.t3_limit', global.get('F_RTC.rtc_t3_limit', \"file\"), \"file\"); global.set('F_RTC.rtc_t3_limit', undefined, \"file\"); }\nif (global.get('F_RTC.rtc_t4_limit', \"file\") !== undefined) { global.set('F_RTC.z1.t4_limit', global.get('F_RTC.rtc_t4_limit', \"file\"), \"file\"); global.set('F_RTC.rtc_t4_limit', undefined, \"file\"); }\nif (global.get('F_RTC.rtc_t5_limit', \"file\") !== undefined) { global.set('F_RTC.z1.t5_limit', global.get('F_RTC.rtc_t5_limit', \"file\"), \"file\"); global.set('F_RTC.rtc_t5_limit', undefined, \"file\"); }\nif (global.get('F_RTC.rtc_t6_limit', \"file\") !== undefined) { global.set('F_RTC.z1.t6_limit', global.get('F_RTC.rtc_t6_limit', \"file\"), \"file\"); global.set('F_RTC.rtc_t6_limit', undefined, \"file\"); }\nif (global.get('F_RTC.rtc_t7_limit', \"file\") !== undefined) { global.set('F_RTC.z1.t7_limit', global.get('F_RTC.rtc_t7_limit', \"file\"), \"file\"); global.set('F_RTC.rtc_t7_limit', undefined, \"file\"); }\nif (global.get('F_RTC.rtc_t7_correction_value', \"file\") !== undefined) { global.set('F_RTC.z1.t7_correction_value', global.get('F_RTC.rtc_t7_correction_value', \"file\"), \"file\"); global.set('F_RTC.rtc_t7_correction_value', undefined, \"file\"); }\nif (global.get('F_RTC.correction_value', \"file\") !== undefined) { global.set('F_RTC.correction_value', undefined, \"file\"); }\nif (global.get('F_RTC.state', \"file\") !== undefined) { global.set('F_RTC.z1.state', global.get('F_RTC.state', \"file\"), \"file\"); global.set('F_RTC.state', undefined, \"file\"); }\nif (global.get('F_RTC.on_limit', \"file\") !== undefined) { global.set('F_RTC.automation_on_limit', global.get('F_RTC.on_limit', \"file\"), \"file\"); global.set('F_RTC.on_limit', undefined, \"file\"); }\nif (global.get('F_RTC.off_limit', \"file\") !== undefined) { global.set('F_RTC.automation_off_limit', global.get('F_RTC.off_limit', \"file\"), \"file\"); global.set('F_RTC.off_limit', undefined, \"file\"); }\nif (global.get('F_RTC.on_off_active', \"file\") !== undefined) { global.set('F_RTC.automation_active', global.get('F_RTC.on_off_active', \"file\"), \"file\"); global.set('F_RTC.on_off_active', undefined, \"file\"); }\nif (global.get('F_RTC.F1_power_state', \"file\") !== undefined) { global.set('F_RTC.automation_power_state', global.get('F_RTC.F1_power_state', \"file\"), \"file\"); global.set('F_RTC.F1_power_state', undefined, \"file\"); }\nif (global.get('F_RTC.F2_OM_state', \"file\") !== undefined) { global.set('F_RTC.automation_OM_state', global.get('F_RTC.F2_OM_state', \"file\"), \"file\"); global.set('F_RTC.F2_OM_state', undefined, \"file\"); }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1160,
        "wires": [
            [
                "559f3875ebe7df72"
            ]
        ]
    },
    {
        "id": "559f3875ebe7df72",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "to input DEBUGLOG",
        "mode": "link",
        "links": [
            "fa1495af192e1c1e"
        ],
        "x": 1005,
        "y": 1160,
        "wires": []
    },
    {
        "id": "172fe3f8a616d7b8",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "MQTT-switch link in",
        "links": [
            "6f8b37b8a4354baf",
            "cc96d0a80f6bdef4",
            "fdd35059e43f16d0",
            "00b957e057fd4843"
        ],
        "x": 165,
        "y": 1000,
        "wires": [
            [
                "c25c9914b837785c"
            ]
        ]
    },
    {
        "id": "6e97d05d1a6275c7",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "set MQTT-Limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"MQTT.message_limit\",msg.payload,\"file\");\n\n//return msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1220,
        "wires": []
    },
    {
        "id": "be1b927461546a7f",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 1220,
        "wires": [
            [
                "6e97d05d1a6275c7"
            ]
        ]
    },
    {
        "id": "bd61942b914a15ce",
        "type": "ui_numeric",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "MQTT-limit",
        "label": "MQTT Limit",
        "tooltip": "",
        "group": "d95eca50f9342e76",
        "order": 11,
        "width": 8,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}/day",
        "min": "100",
        "max": "2000",
        "step": "10",
        "className": "",
        "x": 590,
        "y": 1220,
        "wires": [
            [
                "be1b927461546a7f"
            ]
        ]
    },
    {
        "id": "43783f0ff1a97ef1",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "set at boot",
        "func": "var MQTT = global.get('MQTT', \"file\");\n\nif (MQTT.message_limit === undefined) {\n    MQTT.message_limit = 500; // default 500\n    global.set('MQTT.message_limit', 500, \"file\");\n}\n\nlet msg1 = {};\nlet msg2 = {};\nmsg1.messages_today = MQTT.messages_today;\nmsg1.payload = MQTT.message_limit;\nmsg2.payload = MQTT.messages_yesterday;\n\nreturn [msg1,msg2]\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1220,
        "wires": [
            [
                "bd61942b914a15ce",
                "cbec49b57325d8a9"
            ],
            [
                "c4100822f25e71c5"
            ]
        ],
        "outputLabels": [
            "DHW_treshold",
            null
        ]
    },
    {
        "id": "35b2bc2a89cc2d84",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 650,
        "y": 1060,
        "wires": [
            [
                "dadcc09786666d40",
                "70355972167285f4"
            ]
        ]
    },
    {
        "id": "c3c58f9072c16f58",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "MQTT_Status",
        "mode": "link",
        "links": [
            "29daf0bbd602db4f",
            "5945f577b64bd499"
        ],
        "x": 325,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4606d685d39ac772",
        "type": "inject",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "just once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 1160,
        "wires": [
            [
                "5ce82b31e85cfe3a"
            ]
        ]
    },
    {
        "id": "bb5e36b2c205a984",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "to combobox update block_mode",
        "mode": "link",
        "links": [
            "419fb911b5aa7d3e"
        ],
        "x": 415,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d2415b149ef2f275",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "link in update block_mode MQTT_block button",
        "links": [
            "e8e1e41f1c85ca7a"
        ],
        "x": 135,
        "y": 1120,
        "wires": [
            [
                "dadcc09786666d40"
            ]
        ]
    },
    {
        "id": "2cc4d65eb692223b",
        "type": "link in",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "from COMMANDS#",
        "links": [
            "9202d8b025b48df6"
        ],
        "x": 125,
        "y": 1220,
        "wires": [
            [
                "43783f0ff1a97ef1"
            ]
        ]
    },
    {
        "id": "70355972167285f4",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "log",
        "func": "//if (msg.payload == 1) return null; // no logging when user turns on (will happen in node log on WP System)\n\nif (msg.payload != 0 && msg.payload != 1) return msg; // happens when received msg max mqqt message increase\n/*\nMQTT.\nblock_mode - 1 - BLOCK ALL\nblock_mode - 2 - CUSTOM\nblock_mode - 3 - UNRESTRICTED\n*/\n\nvar Block_mode = global.get('MQTT.block_mode', \"file\") || \"not set\";\nif (Block_mode == 1) Block_mode = \"BLOCK ALL\";\nif (Block_mode == 2) Block_mode = \"CUSTOM\";\nif (Block_mode == 3) Block_mode = \"UNRESTRICTED\";\n\nvar Block_active = global.get('MQTT.block_active', \"file\");\nif (Block_active == 0) Block_active = \"MQTT block inactive\";\nif (Block_active == 1) Block_active = \"MQTT block active\";\n\nmsg.topic = \"SYSTEM\";\nmsg.payload = Block_active + \", default block mode: \" + Block_mode;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1100,
        "wires": [
            [
                "4c70cc2db4654795"
            ]
        ]
    },
    {
        "id": "4c70cc2db4654795",
        "type": "link out",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "name": "link out 36",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7",
            "c764c19340b7b720",
            "fa1495af192e1c1e"
        ],
        "x": 1005,
        "y": 1100,
        "wires": []
    },
    {
        "id": "cbec49b57325d8a9",
        "type": "ui_text",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "d95eca50f9342e76",
        "order": 14,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "MQTT count today",
        "format": "{{msg.messages_today}}",
        "layout": "row-spread",
        "className": "",
        "x": 610,
        "y": 1260,
        "wires": []
    },
    {
        "id": "c4100822f25e71c5",
        "type": "ui_text",
        "z": "d5fea67661261002",
        "g": "0531f7d830ad5e1b",
        "group": "d95eca50f9342e76",
        "order": 18,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "MQTT count yesterday",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 620,
        "y": 1300,
        "wires": []
    },
    {
        "id": "74a67c5148f41ad2",
        "type": "ui_button",
        "z": "d5fea67661261002",
        "name": "Reset1",
        "group": "ec94eaa0930738be",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "Reset \"F_stored_next_operating_mode\" + \"F_RTC.automation_active\" + \"F_SOLAR.function_active_state\"",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "reset",
        "payloadType": "str",
        "topic": "F_stored_next_operating_mode",
        "topicType": "msg",
        "x": 540,
        "y": 2120,
        "wires": [
            [
                "e70ff6cce7d56cac"
            ]
        ]
    },
    {
        "id": "fab0c909d11e0858",
        "type": "ui_text",
        "z": "d5fea67661261002",
        "group": "ec94eaa0930738be",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "F_stored_next_operating_mode",
        "label": "Generic: Reset certain operating variables",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 310,
        "y": 2120,
        "wires": []
    },
    {
        "id": "e70ff6cce7d56cac",
        "type": "function",
        "z": "d5fea67661261002",
        "name": "reset",
        "func": "global.set(\"F_stored_next_operating_mode\", undefined, \"file\");\nglobal.set('F_SOLAR.function_active_state', undefined, \"file\");\n\nvar F_RTC                           = global.get('F_RTC',\"file\");\n\nif (F_RTC.automation_power_state == 1){\n    var TOP0_Heatpump_State     = global.get('TOP0_Heatpump_State',\"file\");\n\n    if (TOP0_Heatpump_State == 0 && F_RTC.automation_active == 0) {\n        global.set('F_RTC.automation_active', 1, \"file\")\n    }\n    if (TOP0_Heatpump_State == 1 && F_RTC.automation_active == 1) {\n        global.set('F_RTC.automation_active', 0, \"file\")\n    }\n\n}\n\nlet msg1={};\nmsg1.payload = 'Stored variables are cleared...';\nmsg1.topic = 'Manual reset'\nreturn msg1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "cf6084aaeae66737",
        "type": "ui_template",
        "z": "d5fea67661261002",
        "group": "ec94eaa0930738be",
        "name": "Line",
        "order": 9,
        "width": 24,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n</head>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 230,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "d4c3dbf4899c176d",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "panasonic_heat_pump/1wire",
        "topic": "panasonic_heat_pump/1wire/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 1540,
        "wires": [
            [
                "f135a11c0945f1cd"
            ]
        ]
    },
    {
        "id": "f135a11c0945f1cd",
        "type": "function",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "Detect No. 1Wire",
        "func": "var Topic = msg.topic.split('panasonic_heat_pump/1wire/');          // strip \"panasonic_heat_pump/1wire/\" from topic\n//node.warn(Topic);\n\nlet oneWire_sensors = [];\noneWire_sensors = flow.get('oneWire_sensors');\noneWire_sensors.push(Topic[1]);                 // add to Array \n\n// check for duplicates sensors:\nvar hash = {};\noneWire_sensors.forEach(function (item) { hash[item] = 1; });\noneWire_sensors = Object.keys(hash);\n\nflow.set(\"oneWire_sensors\", oneWire_sensors);\n    \n\nmsg.payload = oneWire_sensors.length;           // No. of sensors found\nif (msg.payload == undefined) { msg.payload = 0; }\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1540,
        "wires": [
            [
                "2dd99b9e00efee29"
            ]
        ]
    },
    {
        "id": "2dd99b9e00efee29",
        "type": "debug",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "Found No. sensors",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1010,
        "y": 1540,
        "wires": []
    },
    {
        "id": "09a6b8cd0884bcc2",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 610,
        "y": 840,
        "wires": [
            [
                "4df2960daa64b31d"
            ]
        ]
    },
    {
        "id": "2c3deed445f0081b",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "9a941ae145859932",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 610,
        "y": 900,
        "wires": [
            [
                "6fe317de99320aa3"
            ]
        ]
    },
    {
        "id": "fe8169803ad0da4c",
        "type": "switch",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 1420,
        "wires": [
            [],
            [
                "e570795bddada758"
            ]
        ]
    },
    {
        "id": "98ab01c488771719",
        "type": "rbe",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 870,
        "y": 1420,
        "wires": [
            [
                "e13d89b6bf39c3a3"
            ]
        ]
    },
    {
        "id": "f04a11835631b092",
        "type": "switch",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 1480,
        "wires": [
            [],
            [
                "28ad1d969c079693"
            ]
        ]
    },
    {
        "id": "e570795bddada758",
        "type": "change",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "payload =1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1420,
        "wires": [
            [
                "98ab01c488771719"
            ]
        ]
    },
    {
        "id": "28ad1d969c079693",
        "type": "change",
        "z": "d5fea67661261002",
        "g": "1a3f956a12898279",
        "name": "payload =1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1480,
        "wires": [
            [
                "f91a8e87996f7a36"
            ]
        ]
    },
    {
        "id": "51030cc261a73195",
        "type": "mqtt in",
        "z": "d5fea67661261002",
        "name": "broker/status - receive",
        "topic": "broker/status",
        "qos": "0",
        "datatype": "utf8",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 760,
        "y": 2440,
        "wires": [
            [
                "d835f4b5ca16ea1b",
                "db28beb15a475ff0"
            ]
        ]
    },
    {
        "id": "de966fd67ed00465",
        "type": "function",
        "z": "d5fea67661261002",
        "name": "MQTT check - send",
        "func": "msg.payload = \"online\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2340,
        "wires": [
            [
                "93243e3b65662c68",
                "13712f8ac1e35004"
            ]
        ]
    },
    {
        "id": "bab67b7de6f048f1",
        "type": "mqtt out",
        "z": "d5fea67661261002",
        "name": "broker/status - send",
        "topic": "broker/status",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 1200,
        "y": 2340,
        "wires": []
    },
    {
        "id": "c98df7f6cdd712f3",
        "type": "inject",
        "z": "d5fea67661261002",
        "name": "MANUAL TEST BROKER CONNECTION",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 2340,
        "wires": [
            [
                "de966fd67ed00465"
            ]
        ]
    },
    {
        "id": "d835f4b5ca16ea1b",
        "type": "trigger",
        "z": "d5fea67661261002",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "num",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "online",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 2380,
        "wires": [
            [
                "711818575ab7a585"
            ]
        ]
    },
    {
        "id": "93243e3b65662c68",
        "type": "delay",
        "z": "d5fea67661261002",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 2340,
        "wires": [
            [
                "bab67b7de6f048f1"
            ]
        ]
    },
    {
        "id": "c1c79e431d237e73",
        "type": "link out",
        "z": "d5fea67661261002",
        "name": "To log",
        "mode": "link",
        "links": [
            "031e62b0bf3df7d7"
        ],
        "x": 1525,
        "y": 2400,
        "wires": []
    },
    {
        "id": "711818575ab7a585",
        "type": "function",
        "z": "d5fea67661261002",
        "name": "No connection detected",
        "func": "msg.topic = \"SYSTEM\";\nmsg.payload = \"MQTT Broker: <font color=red>WARNING</font> - Node Red MQTT node not connected !\";\nlet msg1={};\nmsg1.payload = 'NOT connected';\nmsg2.topic = '';\nreturn [msg,msg1];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2380,
        "wires": [
            [
                "e7cda6f6301c3a98"
            ],
            [
                "25c9701ce27fd523"
            ]
        ],
        "outputLabels": [
            "not connected log",
            "not connected dash"
        ]
    },
    {
        "id": "5aeff3950c06df9a",
        "type": "link in",
        "z": "d5fea67661261002",
        "name": "mqtt broker test",
        "links": [
            "93689e503b06b2cc"
        ],
        "x": 415,
        "y": 2400,
        "wires": [
            [
                "de966fd67ed00465"
            ]
        ]
    },
    {
        "id": "13712f8ac1e35004",
        "type": "change",
        "z": "d5fea67661261002",
        "name": "start check",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "TEST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 2380,
        "wires": [
            [
                "d835f4b5ca16ea1b"
            ]
        ]
    },
    {
        "id": "db28beb15a475ff0",
        "type": "function",
        "z": "d5fea67661261002",
        "name": "OK",
        "func": "msg.topic = \"SYSTEM\";\nmsg.payload = \"MQTT Broker: <font color=green>Node Red MQTT node connected</font>\";\n\nlet msg1={};\nlet msg2={};\n\nmsg1.payload = \"Connected\";\nmsg1.topic = '';\n\nmsg2.payload = new Date().getTime();\nmsg2.topic = \"Test result\";\n\nreturn [msg,msg1,msg2];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2440,
        "wires": [
            [
                "e7cda6f6301c3a98"
            ],
            [
                "25c9701ce27fd523"
            ],
            [
                "dd46600e120f880b"
            ]
        ],
        "outputLabels": [
            "connected log",
            "connected dash",
            "last tested dash"
        ]
    },
    {
        "id": "3ded629acc7a1bdf",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "Input TEST button press",
        "info": "",
        "x": 210,
        "y": 2400,
        "wires": []
    },
    {
        "id": "e7cda6f6301c3a98",
        "type": "rbe",
        "z": "d5fea67661261002",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1430,
        "y": 2400,
        "wires": [
            [
                "c1c79e431d237e73"
            ]
        ]
    },
    {
        "id": "25c9701ce27fd523",
        "type": "link out",
        "z": "d5fea67661261002",
        "name": "broker status",
        "mode": "link",
        "links": [
            "b742f5fc9cae8166"
        ],
        "x": 1450,
        "y": 2440,
        "wires": [],
        "l": true
    },
    {
        "id": "10c007e5346d744d",
        "type": "link out",
        "z": "d5fea67661261002",
        "name": "last tested",
        "mode": "link",
        "links": [
            "baf6c28e9b5a2dd8"
        ],
        "x": 1450,
        "y": 2480,
        "wires": [],
        "l": true
    },
    {
        "id": "dd46600e120f880b",
        "type": "moment",
        "z": "d5fea67661261002",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "ETC/UTC",
        "adjAmount": "0",
        "adjType": "hours",
        "adjDir": "add",
        "format": "DD/MM HH:mm",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 1180,
        "y": 2480,
        "wires": [
            [
                "10c007e5346d744d"
            ]
        ]
    },
    {
        "id": "523c9ce99de4c159",
        "type": "comment",
        "z": "d5fea67661261002",
        "name": "mqtt broker test",
        "info": "",
        "x": 180,
        "y": 2300,
        "wires": []
    },
    {
        "id": "24b2fad95360cd29",
        "type": "ui_group",
        "name": "MQTT sensors",
        "tab": "593cfab8493b6bad",
        "order": 3,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4a6d0f091176e20f",
        "type": "ui_group",
        "name": "1 wire sensors",
        "tab": "593cfab8493b6bad",
        "order": 4,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "92e5b2c.00a8b5",
        "type": "mqtt-broker",
        "name": "MQTT (x.x.x.x)",
        "broker": "x.x.x.x",
        "port": "1883",
        "clientid": "Node_Red_Client",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "bf4af523ba16d457",
        "type": "ui_group",
        "name": "HEAT PUMP",
        "tab": "a5be8588.b8fbc8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e3cc96332cd59f07",
        "type": "ui_group",
        "name": "DHW",
        "tab": "a5be8588.b8fbc8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1179fa790d2d89ca",
        "type": "ui_group",
        "name": "HEAT",
        "tab": "a5be8588.b8fbc8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e27cfec311892d88",
        "type": "ui_group",
        "name": "Settings",
        "tab": "d6d4a43045260ac9",
        "order": 1,
        "disp": false,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2a223fd6c0b54acd",
        "type": "ui_group",
        "name": "Living room",
        "tab": "5b5fabb85470bd21",
        "order": 5,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e668c57c8cf470e7",
        "type": "ui_group",
        "name": "Heat | Water temperature",
        "tab": "5b5fabb85470bd21",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e374621a9f5ac0d6",
        "type": "ui_group",
        "name": "DHW | Water temperature",
        "tab": "5b5fabb85470bd21",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "052caff3b2365345",
        "type": "ui_group",
        "name": "Settings",
        "tab": "1d038e38da23c646",
        "order": 1,
        "disp": false,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9b8ec8b1b9f66309",
        "type": "ui_group",
        "name": "Graph",
        "tab": "1d038e38da23c646",
        "order": 2,
        "disp": false,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7267dafd7dc99038",
        "type": "ui_group",
        "name": "RTC Graphics",
        "tab": "d6d4a43045260ac9",
        "order": 3,
        "disp": false,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4551542d51501ce1",
        "type": "ui_group",
        "name": "SS Graphics",
        "tab": "992c3064baf54797",
        "order": 4,
        "disp": false,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c2a0123d2e2c91f0",
        "type": "ui_group",
        "name": "Settings",
        "tab": "992c3064baf54797",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fb77ab43998a2f18",
        "type": "ui_group",
        "name": "Power",
        "tab": "1a08b96c5aeb8d6e",
        "order": 1,
        "disp": false,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ef3dbc543ae92bec",
        "type": "ui_group",
        "name": "Automations",
        "tab": "d6d4a43045260ac9",
        "order": 2,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e18bf5825c47a08f",
        "type": "ui_group",
        "name": "Advanced",
        "tab": "992c3064baf54797",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "16ec453c8cb345ac",
        "type": "ui_group",
        "name": "LOG",
        "tab": "593cfab8493b6bad",
        "order": 2,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1eb6d525c86c4977",
        "type": "ui_group",
        "name": "HW INFORMATION",
        "tab": "593cfab8493b6bad",
        "order": 5,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "548e51986bce11b0",
        "type": "ui_group",
        "name": "OPERATION",
        "tab": "33ece0076bfd7cb7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b0c8e162d47abbb",
        "type": "ui_group",
        "name": "Scheduler",
        "tab": "ac594a9d775ca4fb",
        "order": 1,
        "disp": false,
        "width": "27",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7f740331bca1b3f",
        "type": "ui_group",
        "name": "ABOUT",
        "tab": "593cfab8493b6bad",
        "order": 9,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fea7672db2f050c9",
        "type": "ui_group",
        "name": "HEAT PUMP",
        "tab": "33ece0076bfd7cb7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4e9e24cca215ad4d",
        "type": "ui_group",
        "name": "DHW",
        "tab": "33ece0076bfd7cb7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "26d9e6cf24507b4f",
        "type": "ui_group",
        "name": "HEAT",
        "tab": "33ece0076bfd7cb7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "778fd272c9304a44",
        "type": "ui_group",
        "name": "Quietmode add-on setings",
        "tab": "992c3064baf54797",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "182f5ffccfef5c11",
        "type": "ui_group",
        "name": "POPUPTOP111",
        "tab": "534382cf81d94968",
        "order": 1,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9aec7afe54746c39",
        "type": "ui_group",
        "name": "Scheduler related settings",
        "tab": "ac594a9d775ca4fb",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1fd46fe459716742",
        "type": "ui_group",
        "name": "Chart",
        "tab": "1cc13371e25eaa24",
        "order": 2,
        "disp": false,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4fb2801b6ab7ae20",
        "type": "ui_group",
        "name": "Settings",
        "tab": "1cc13371e25eaa24",
        "order": 1,
        "disp": false,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "273f74f363a57507",
        "type": "ui_group",
        "name": "COOL",
        "tab": "a5be8588.b8fbc8",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "830a81a1c54c6ef5",
        "type": "ui_group",
        "name": "Settings",
        "tab": "575dc22256fd966c",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "397a51ddac8419aa",
        "type": "ui_group",
        "name": "Chart",
        "tab": "575dc22256fd966c",
        "order": 2,
        "disp": false,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2bd11d2d909e2ba3",
        "type": "ui_group",
        "name": "Charts",
        "tab": "4fb3ce05f81e8c95",
        "order": 3,
        "disp": false,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7f22c282fde0f86",
        "type": "ui_group",
        "name": "Setup",
        "tab": "4fb3ce05f81e8c95",
        "order": 1,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "70a5fe6af8ed1d29",
        "type": "ui_group",
        "name": "NAVIGATION",
        "tab": "593cfab8493b6bad",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "87be08e6a82ef6a0",
        "type": "ui_group",
        "name": "Degree days information",
        "tab": "a681244e6db9a6a7",
        "order": 1,
        "disp": false,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "338420d1319e8350",
        "type": "ui_group",
        "name": "P1 setup",
        "tab": "4fb3ce05f81e8c95",
        "order": 2,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "79eed3b289871944",
        "type": "ui_group",
        "name": "Help",
        "tab": "1d038e38da23c646",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "55fef8703465841e",
        "type": "ui_group",
        "name": "Help",
        "tab": "4fb3ce05f81e8c95",
        "order": 4,
        "disp": false,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ae6c2168304beda0",
        "type": "ui_group",
        "name": "Help",
        "tab": "d6d4a43045260ac9",
        "order": 4,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a606e01fab1bbd66",
        "type": "ui_group",
        "name": "Help",
        "tab": "ac594a9d775ca4fb",
        "order": 4,
        "disp": false,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3226b17db86f4510",
        "type": "ui_group",
        "name": "Help",
        "tab": "992c3064baf54797",
        "order": 5,
        "disp": false,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1110c1df5a310684",
        "type": "ui_group",
        "name": "Help",
        "tab": "575dc22256fd966c",
        "order": 3,
        "disp": false,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "90c1cff3f272d850",
        "type": "ui_group",
        "name": "Notification",
        "tab": "ac594a9d775ca4fb",
        "order": 5,
        "disp": false,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "decdc0db03cb6227",
        "type": "ui_group",
        "name": "Conditions",
        "tab": "ac594a9d775ca4fb",
        "order": 2,
        "disp": false,
        "width": "27",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5cfc57b36b31394c",
        "type": "ui_group",
        "name": "function_actions",
        "tab": "ac594a9d775ca4fb",
        "order": 6,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ec94eaa0930738be",
        "type": "ui_group",
        "name": "SYSTEM HEALTH",
        "tab": "593cfab8493b6bad",
        "order": 8,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "82f1040c4d704f04",
        "type": "ui_group",
        "name": "ATTENTION",
        "tab": "43190c0921e1e1ed",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "00f6a5c103e9ef2f",
        "type": "ui_group",
        "name": "Default",
        "tab": "43190c0921e1e1ed",
        "order": 2,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d95eca50f9342e76",
        "type": "ui_group",
        "name": "MQTT",
        "tab": "593cfab8493b6bad",
        "order": 6,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4a119e18236415e9",
        "type": "ui_group",
        "name": "MENU",
        "tab": "593cfab8493b6bad",
        "order": 7,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "593cfab8493b6bad",
        "type": "ui_tab",
        "name": "SYSTEM",
        "icon": "memory",
        "order": 14,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a5be8588.b8fbc8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d6d4a43045260ac9",
        "type": "ui_tab",
        "name": "RTC",
        "icon": "shuffle",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5b5fabb85470bd21",
        "type": "ui_tab",
        "name": "Temperature",
        "icon": "show_chart",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1d038e38da23c646",
        "type": "ui_tab",
        "name": "WAR",
        "icon": "cloud",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "992c3064baf54797",
        "type": "ui_tab",
        "name": "SoftStart",
        "icon": "power_input",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1a08b96c5aeb8d6e",
        "type": "ui_tab",
        "name": "Energy",
        "icon": "show_chart",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "33ece0076bfd7cb7",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "settings",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ac594a9d775ca4fb",
        "type": "ui_tab",
        "name": "Scheduler",
        "icon": "schedule",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "534382cf81d94968",
        "type": "ui_tab",
        "name": "GUI",
        "icon": "dashboard",
        "order": 15,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "1cc13371e25eaa24",
        "type": "ui_tab",
        "name": "Pumpspeed",
        "icon": "fa-forward",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "575dc22256fd966c",
        "type": "ui_tab",
        "name": "Cool",
        "icon": "ac_unit",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4fb3ce05f81e8c95",
        "type": "ui_tab",
        "name": "Solar²DHW",
        "icon": "wb_sunny",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a681244e6db9a6a7",
        "type": "ui_tab",
        "name": "Degree days",
        "icon": "show_chart",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "43190c0921e1e1ed",
        "type": "ui_tab",
        "name": "Power",
        "icon": "memory",
        "order": 15,
        "disabled": false,
        "hidden": true
    }
]