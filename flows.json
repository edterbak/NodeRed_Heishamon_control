[
    {
        "id": "71bfbc8ecbf3973f",
        "type": "tab",
        "label": "WP MQTT",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8637c6b60269464e",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP0 - panasonic_heat_pump/main/Heatpump_State",
        "topic": "panasonic_heat_pump/main/Heatpump_State",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "2226c542e4bb2514",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP1 - panasonic_heat_pump/main/Pump_Flow",
        "topic": "panasonic_heat_pump/main/Pump_Flow",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "5249ad832d8b72bc",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP2 - panasonic_heat_pump/main/Force_DHW_State",
        "topic": "panasonic_heat_pump/main/Force_DHW_State",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "38be53abb9ccb0be",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP3 - panasonic_heat_pump/main/Quiet_Mode_Schedule",
        "topic": "panasonic_heat_pump/main/Quiet_Mode_Schedule",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "34478fceb0c4e8f7",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP4 - panasonic_heat_pump/main/Operating_Mode_State",
        "topic": "panasonic_heat_pump/main/Operating_Mode_State",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "551e9f021d90969a",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP5 - panasonic_heat_pump/main/Main_Inlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Inlet_Temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c62e2c1787df279f",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP6 - panasonic_heat_pump/main/Main_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Outlet_Temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "19ce27d0981efc6d",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP7 - panasonic_heat_pump/main/Main_Target_Temp",
        "topic": "panasonic_heat_pump/main/Main_Target_Temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "123eb6b70e31129f",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "topic": "panasonic_heat_pump/main/Compressor_Freq",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "12f55de289b35533",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP9 - panasonic_heat_pump/main/DHW_Target_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Target_Temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9bc50fe5f2b6c184",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP10 - panasonic_heat_pump/main/DHW_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "42d842d4802b3676",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP11 - panasonic_heat_pump/main/Operations_Hours",
        "topic": "panasonic_heat_pump/main/Operations_Hours",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "add7f922704c6b4d",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP12 - panasonic_heat_pump/main/Operations_Counter",
        "topic": "panasonic_heat_pump/main/Operations_Counter",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "24d43466e2e4b501",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP13 - panasonic_heat_pump/main/Main_Schedule_State",
        "topic": "panasonic_heat_pump/main/Main_Schedule_State",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "093d932e7adac4ca",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP14 - panasonic_heat_pump/main/Outside_Temp",
        "topic": "panasonic_heat_pump/main/Outside_Temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "13be5ed4032b715d",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP15 - panasonic_heat_pump/main/Heat_Energy_Production",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Production",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "41ecc6d77424f493",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP16 - panasonic_heat_pump/main/Heat_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Consumption",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "c632b4eefedf4c2f",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP17 - panasonic_heat_pump/main/Powerful_Mode_Time",
        "topic": "panasonic_heat_pump/main/Powerful_Mode_Time",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "5a85eb1798923bc7",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP18 - panasonic_heat_pump/main/Quiet_Mode_Level",
        "topic": "panasonic_heat_pump/main/Quiet_Mode_Level",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "d72c3f5d7899a8eb",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP19 - panasonic_heat_pump/main/Holiday_Mode_State",
        "topic": "panasonic_heat_pump/main/Holiday_Mode_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "7bfad15d615967de",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP20 - panasonic_heat_pump/main/ThreeWay_Valve_State",
        "topic": "panasonic_heat_pump/main/ThreeWay_Valve_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "0ca2fe260d7457c2",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP21 - panasonic_heat_pump/main/Outside_Pipe_Temp",
        "topic": "panasonic_heat_pump/main/Outside_Pipe_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "148ea24f97cf15a2",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP22 - panasonic_heat_pump/main/DHW_Heat_Delta",
        "topic": "panasonic_heat_pump/main/DHW_Heat_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "6865f2cc24ef7af5",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP23 - panasonic_heat_pump/main/Heat_Delta",
        "topic": "panasonic_heat_pump/main/Heat_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "68293db99751414e",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP24 - panasonic_heat_pump/main/Cool_Delta",
        "topic": "panasonic_heat_pump/main/Cool_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "e8305c805a6d8160",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP25 - panasonic_heat_pump/main/DHW_Holiday_Shift_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Holiday_Shift_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "5d3f40d306f63b32",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "topic": "panasonic_heat_pump/main/Defrosting_State",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "01ba93f54d2ca9f7",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP27 - panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "e64bc93226693e03",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP28 - panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "d08a0e42189a25bd",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP29 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "602932e9172d35a7",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP30 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "099946eaca4e0487",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP31 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 920,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9e6ce5421b3fe4a6",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP32 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 920,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "281cac47965d19db",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP33 - panasonic_heat_pump/main/Room_Thermostat_Temp",
        "topic": "panasonic_heat_pump/main/Room_Thermostat_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 890,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "37cb83556ad1b481",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP34 - panasonic_heat_pump/main/Z2_Heat_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Request_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 890,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "e1c3e0ea90020772",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP35 - panasonic_heat_pump/main/Z2_Cool_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Request_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 890,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "757c37f5f2a94670",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP36 - panasonic_heat_pump/main/Z1_Water_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Water_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2272275115220870",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP37 - panasonic_heat_pump/main/Z2_Water_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Water_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "6cc8e79217759d79",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP38 - panasonic_heat_pump/main/Cool_Energy_Production",
        "topic": "panasonic_heat_pump/main/Cool_Energy_Production",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 890,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "926844ad574c2c9c",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP39 - panasonic_heat_pump/main/Cool_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Cool_Energy_Consumption",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 890,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "745aa6ce676cbd2f",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP40 - panasonic_heat_pump/main/DHW_Energy_Production",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Production",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 890,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "fbb2bf50fcba46b6",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP41 - panasonic_heat_pump/main/DHW_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Consumption",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 900,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "7f1108eb67f4615f",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP42 - panasonic_heat_pump/main/Z1_Water_Target_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Water_Target_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 880,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "10e46d50b6fc757f",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP43 - panasonic_heat_pump/main/Z2_Water_Target_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Water_Target_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 880,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "13780b0ca95007a0",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP44 - panasonic_heat_pump/main/Error",
        "topic": "panasonic_heat_pump/main/Error",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 820,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "0232c59b83a685b7",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP45 - panasonic_heat_pump/main/Room_Holiday_Shift_Temp",
        "topic": "panasonic_heat_pump/main/Room_Holiday_Shift_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 890,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "74fa0df6bf070313",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP46 - panasonic_heat_pump/main/Buffer_Temp",
        "topic": "panasonic_heat_pump/main/Buffer_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 850,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "4bd38e3013dad89a",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP47 - panasonic_heat_pump/main/Solar_Temp",
        "topic": "panasonic_heat_pump/main/Solar_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 850,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "c9e563394321c263",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP48 - panasonic_heat_pump/main/Pool_Temp",
        "topic": "panasonic_heat_pump/main/Pool_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 840,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "d91d87e6ce601462",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP49 - panasonic_heat_pump/main/Main_Hex_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Hex_Outlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 880,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "02258d4a3403e051",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP50 - panasonic_heat_pump/main/Discharge_Temp",
        "topic": "panasonic_heat_pump/main/Discharge_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "47c5e18d138e73a1",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP51 - panasonic_heat_pump/main/Inside_Pipe_Temp",
        "topic": "panasonic_heat_pump/main/Inside_Pipe_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 870,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "1e4f876de039cf6b",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP52 - panasonic_heat_pump/main/Defrost_Temp",
        "topic": "panasonic_heat_pump/main/Defrost_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 850,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "44437009d5ab93de",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP53 - panasonic_heat_pump/main/Eva_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Eva_Outlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "d04b9807d946c691",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP54 - panasonic_heat_pump/main/Bypass_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Bypass_Outlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 870,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "10dc72a4f9d34c87",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP55 - panasonic_heat_pump/main/Ipm_Temp",
        "topic": "panasonic_heat_pump/main/Ipm_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 840,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "b778adc184ac2578",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP56 - panasonic_heat_pump/main/Z1_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 840,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "8e8d5fbf07129767",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP57 - panasonic_heat_pump/main/Z2_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 840,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "de913f64a4ae4119",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP58 - panasonic_heat_pump/main/DHW_Heater_State",
        "topic": "panasonic_heat_pump/main/DHW_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 870,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "40e76ceabec867ef",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP59 - panasonic_heat_pump/main/Room_Heater_State",
        "topic": "panasonic_heat_pump/main/Room_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 870,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "5eab8fe4c34adf36",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP60 - panasonic_heat_pump/main/Internal_Heater_State",
        "topic": "panasonic_heat_pump/main/Internal_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 880,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "7e03a3e59227fd37",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP61 - panasonic_heat_pump/main/External_Heater_State",
        "topic": "panasonic_heat_pump/main/External_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1480,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f4fb8cc4dfe6fdc2",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP62 - panasonic_heat_pump/main/Fan1_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan1_Motor_Speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1470,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "238c31dfdad53093",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP63 - panasonic_heat_pump/main/Fan2_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan2_Motor_Speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1470,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1674d0daa78acd7e",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP64 - panasonic_heat_pump/main/High_Pressure",
        "topic": "panasonic_heat_pump/main/High_Pressure",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1450,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "33c4fc4158008c32",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP65 - panasonic_heat_pump/main/Pump_Speed",
        "topic": "panasonic_heat_pump/main/Pump_Speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1450,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f42e8b3e20a06a6c",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP66 - panasonic_heat_pump/main/Low_Pressure",
        "topic": "panasonic_heat_pump/main/Low_Pressure",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1450,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c8d1096360c67418",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP67 - panasonic_heat_pump/main/Compressor_Current",
        "topic": "panasonic_heat_pump/main/Compressor_Current",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1470,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "706a75faf295a79b",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP68 - panasonic_heat_pump/main/Force_Heater_State",
        "topic": "panasonic_heat_pump/main/Force_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1470,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "276b88431655835c",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP69 - panasonic_heat_pump/main/Sterilization_State",
        "topic": "panasonic_heat_pump/main/Sterilization_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1460,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "de395777172831a0",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP70 - panasonic_heat_pump/main/Sterilization_Temp",
        "topic": "panasonic_heat_pump/main/Sterilization_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1470,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "e18843ae96fb407f",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP71 - panasonic_heat_pump/main/Sterilization_Max_Time",
        "topic": "panasonic_heat_pump/main/Sterilization_Max_Time",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1480,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "b072945069f0cdfd",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP72 - panasonic_heat_pump/main/Z1_Cool_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Curve_Target_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "5daa0b58c5c72e08",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP73 - panasonic_heat_pump/main/Z1_Cool_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Curve_Target_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "b7dde65ddd74c5ce",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP74 - panasonic_heat_pump/main/Z1_Cool_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Curve_Outside_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "070cf3e7373e5521",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP75 - panasonic_heat_pump/main/Z1_Cool_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Curve_Outside_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "28b8f3625bd4de57",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP76 - panasonic_heat_pump/main/Heating_Mode",
        "topic": "panasonic_heat_pump/main/Heating_Mode",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1450,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "707e687f2790a642",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP77 - panasonic_heat_pump/main/Heating_Off_Outdoor_Temp",
        "topic": "panasonic_heat_pump/main/Heating_Off_Outdoor_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1500,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "280d8d62414fa0fc",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP78 - panasonic_heat_pump/main/Heater_On_Outdoor_Temp",
        "topic": "panasonic_heat_pump/main/Heater_On_Outdoor_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1490,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "efa7e0d7f71bccab",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP79 - panasonic_heat_pump/main/Heat_To_Cool_Temp",
        "topic": "panasonic_heat_pump/main/Heat_To_Cool_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1470,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "1eafadeddb59f514",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP80 - panasonic_heat_pump/main/Cool_To_Heat_Temp",
        "topic": "panasonic_heat_pump/main/Cool_To_Heat_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1470,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "6af6e8f73a2d6bd0",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP81 - panasonic_heat_pump/main/Cooling_Mode",
        "topic": "panasonic_heat_pump/main/Cooling_Mode",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1450,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "e09e023eef5573f9",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP82 - panasonic_heat_pump/main/Z2_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Curve_Target_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "5d23f54e3031877f",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP83 - panasonic_heat_pump/main/Z2_Heat_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Curve_Target_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "0745580594936db9",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP84 - panasonic_heat_pump/main/Z2_Heat_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Curve_Outside_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "5acd74b4a80d2a20",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP85 - panasonic_heat_pump/main/Z2_Heat_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Curve_Outside_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "fcd972338916cea3",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP86 - panasonic_heat_pump/main/Z2_Cool_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Curve_Target_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "8375e559d3cc2e87",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP87 - panasonic_heat_pump/main/Z2_Cool_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Curve_Target_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "d426557f5129e344",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP88 - panasonic_heat_pump/main/Z2_Cool_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Curve_Outside_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "c6d43e19565173bb",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP89 - panasonic_heat_pump/main/Z2_Cool_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Curve_Outside_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1520,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "d053ae3b258376f9",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP90 - panasonic_heat_pump/main/Room_Heater_Operations_Hours",
        "topic": "panasonic_heat_pump/main/Room_Heater_Operations_Hours",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1510,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "b8488639928fb21e",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP91 - panasonic_heat_pump/main/DHW_Heater_Operations_Hours",
        "topic": "panasonic_heat_pump/main/DHW_Heater_Operations_Hours",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2110,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1d9891616d234411",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP92 - panasonic_heat_pump/main/Heat_Pump_Model",
        "topic": "panasonic_heat_pump/main/Heat_Pump_Model",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2070,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "14ebb11069e71bbd",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP93 - panasonic_heat_pump/main/Pump_Duty",
        "topic": "panasonic_heat_pump/main/Pump_Duty",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2040,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2d41e96abbfcd028",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP94 - panasonic_heat_pump/main/Zones_State",
        "topic": "panasonic_heat_pump/main/Zones_State",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2050,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "9fa83dee03bd69fa",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP95 - panasonic_heat_pump/main/Max_Pump_Duty",
        "topic": "panasonic_heat_pump/main/Max_Pump_Duty",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2060,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "94bb80d93f38af78",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP96 - panasonic_heat_pump/main/Heater_Delay_Time",
        "topic": "panasonic_heat_pump/main/Heater_Delay_Time",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2070,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "61997b41884909ef",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP97 - panasonic_heat_pump/main/Heater_Start_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Start_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2070,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "690890feb3ab1137",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP98 - panasonic_heat_pump/main/Heater_Stop_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Stop_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2070,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f3f562a3a61bce64",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP99 - panasonic_heat_pump/main/Buffer_Installed",
        "topic": "panasonic_heat_pump/main/Buffer_Installed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "fc51d23ba639122a",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP100 - panasonic_heat_pump/main/DHW_Installed",
        "topic": "panasonic_heat_pump/main/DHW_Installed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "e72a4c1c9f17c9cb",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP101 - panasonic_heat_pump/main/Solar_Mode",
        "topic": "panasonic_heat_pump/main/Solar_Mode",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2050,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "0fde4878b3724547",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP102 - panasonic_heat_pump/main/Solar_On_Delta",
        "topic": "panasonic_heat_pump/main/Solar_On_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2060,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "aacc53ee9fe82bc8",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP103 - panasonic_heat_pump/main/Solar_Off_Delta",
        "topic": "panasonic_heat_pump/main/Solar_Off_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2060,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "beda62542259d8a2",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP104 - panasonic_heat_pump/main/Solar_Frost_Protection",
        "topic": "panasonic_heat_pump/main/Solar_Frost_Protection",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2080,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "3eed0a81e2b0ccc5",
        "type": "mqtt in",
        "z": "71bfbc8ecbf3973f",
        "d": true,
        "name": "TOP105 - panasonic_heat_pump/main/Solar_High_Limit",
        "topic": "panasonic_heat_pump/main/Solar_High_Limit",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2070,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "062b3af4102cc99a",
        "type": "comment",
        "z": "71bfbc8ecbf3973f",
        "name": "ALL MQTT Topics",
        "info": "",
        "x": 190,
        "y": 20,
        "wires": []
    },
    {
        "id": "03903d650dcecf13",
        "type": "comment",
        "z": "71bfbc8ecbf3973f",
        "name": "MQTT COMMAND",
        "info": "",
        "x": 190,
        "y": 1420,
        "wires": []
    },
    {
        "id": "10f89a1ff9c349e6",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET1 SetHeatpump",
        "topic": "panasonic_heat_pump/commands/SetHeatpump",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 200,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0d0ebf289afab39f",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET2 SetHolidayMode",
        "topic": "panasonic_heat_pump/commands/SetHolidayMode",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 200,
        "y": 1520,
        "wires": []
    },
    {
        "id": "c27c63c65bb71f28",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET3 SetQuietMode",
        "topic": "panasonic_heat_pump/commands/SetQuietMode",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 200,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b08806f9756ac677",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET4 SetPowerfulMode",
        "topic": "panasonic_heat_pump/commands/SetPowerfulMode",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 210,
        "y": 1600,
        "wires": []
    },
    {
        "id": "6bf6d87c85dc41f1",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET5 SetZ1HeatRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1HeatRequestTemperature",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 250,
        "y": 1640,
        "wires": []
    },
    {
        "id": "0b8b416622171c42",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET6 SetZ1CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1CoolRequestTemperature",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 250,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c1d546187985f026",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET7 SetZ2HeatRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2HeatRequestTemperature",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 250,
        "y": 1720,
        "wires": []
    },
    {
        "id": "dbdc614eeae208bc",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET8 SetZ2CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2CoolRequestTemperature",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 250,
        "y": 1760,
        "wires": []
    },
    {
        "id": "4660f78e24297580",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET9 SetOperationMode",
        "topic": "panasonic_heat_pump/commands/SetOperationMode",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 210,
        "y": 1800,
        "wires": []
    },
    {
        "id": "e1369c848e96894f",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET10 SetForceDHW",
        "topic": "panasonic_heat_pump/commands/SetForceDHW",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 200,
        "y": 1840,
        "wires": []
    },
    {
        "id": "18633be7ef3e72ad",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET11 SetDHWTemp",
        "topic": "panasonic_heat_pump/commands/SetDHWTemp",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 560,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0268bb50d6b14ed3",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET12 SetForceDefrost",
        "topic": "panasonic_heat_pump/commands/SetForceDefrost",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 570,
        "y": 1520,
        "wires": []
    },
    {
        "id": "77a49467d6b61fce",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET13 SetForceSterilization",
        "topic": "panasonic_heat_pump/commands/SetForceSterilization",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 580,
        "y": 1560,
        "wires": []
    },
    {
        "id": "c5cfa73523f9c221",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET14 SetPump",
        "topic": "panasonic_heat_pump/commands/SetPump",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 550,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ae60530b0ba5af4b",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET15 SetMaxPumpDuty",
        "topic": "panasonic_heat_pump/commands/SetMaxPumpDuty",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 570,
        "y": 1640,
        "wires": []
    },
    {
        "id": "03f76b32ae718c41",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET16 SetCurves",
        "topic": "panasonic_heat_pump/commands/SetCurves",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 550,
        "y": 1680,
        "wires": []
    },
    {
        "id": "e57c8159fc380307",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET17 SetZones",
        "topic": "panasonic_heat_pump/commands/SetZones",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 550,
        "y": 1720,
        "wires": []
    },
    {
        "id": "a948916dce9db764",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET18 SetFloorHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorHeatDelta",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 570,
        "y": 1760,
        "wires": []
    },
    {
        "id": "76ca55011c95eeee",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET19 SetFloorCoolDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorCoolDelta",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 570,
        "y": 1800,
        "wires": []
    },
    {
        "id": "befcfe3e79d68753",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET20 SetDHWHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetDHWHeatDelta",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 580,
        "y": 1840,
        "wires": []
    },
    {
        "id": "596cb979c411eabf",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET21 SetHeaterDelayTime",
        "topic": "panasonic_heat_pump/commands/SetHeaterDelayTime",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 880,
        "y": 1480,
        "wires": []
    },
    {
        "id": "18d1977629717be2",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET22 SetHeaterStartDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStartDelta",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 880,
        "y": 1520,
        "wires": []
    },
    {
        "id": "643bf4f2dbf8727a",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET23 SetHeaterStopDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStopDelta",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 880,
        "y": 1560,
        "wires": []
    },
    {
        "id": "8f8eb7aea14ea190",
        "type": "mqtt out",
        "z": "71bfbc8ecbf3973f",
        "name": "SET24 SetMainSchedule",
        "topic": "panasonic_heat_pump/commands/SetMainSchedule",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 870,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ef8c0646b3fee31c",
        "type": "comment",
        "z": "71bfbc8ecbf3973f",
        "name": "These are all the available input channels from the Heishamon. All are disabled to reduce overhead. If you need one, just copy and enable.",
        "info": "",
        "x": 1040,
        "y": 60,
        "wires": []
    },
    {
        "id": "5866a177cdfb0882",
        "type": "tab",
        "label": "WP Dash",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4c977d73c5080527",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Home (ROOM)",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "22e7256bb5fb5fc5",
            "1556c8702bb4d292",
            "d04cf2f6abf7d215",
            "8a295d94145833fa",
            "e111252a28b9b3c9",
            "e169dd8effcb9c7e",
            "ee91daf750f8d47c"
        ],
        "x": 114,
        "y": 1279,
        "w": 932,
        "h": 142
    },
    {
        "id": "f073195c855749be",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Home (DHW)",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "ce351aa8ae6161ec",
            "e55a57ba3591d9b3",
            "a18aece3e8884e3a",
            "836e024c750878de",
            "ace33c56590ccc4d",
            "0ed2fa6301468285",
            "1f9610b9731673f8",
            "6c165f7ef7378069",
            "e63851b03004dabb",
            "1ac9c0edf5ce945c",
            "8e0401ed1df9c1dc",
            "c270b43b23f974d8",
            "12d8ca21b240be10",
            "33c440195bf3323a",
            "0f07048ebb903935",
            "691099cf98991b53",
            "ebac652429960e8c",
            "72c312c10eda5067",
            "b8b31693901c1687"
        ],
        "x": 94,
        "y": 19,
        "w": 892,
        "h": 442
    },
    {
        "id": "3544f341b388c8c3",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Home (PUMP)",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "769aa971f270b921",
            "63dd2a9008447047",
            "668b45302405dc46",
            "b15c84fe01142574",
            "46f32bd056749232",
            "7dde426dba02597b",
            "4639658eaaec990c",
            "3b1aa689c08054cb",
            "820e7c017560f3fd",
            "9e07590de4d8897a",
            "c38e35109a249ab5",
            "6d8fa9e7a461ba84",
            "7e884e8968ef4414",
            "281ff13fefe3c954",
            "b98aa4a2de18c545",
            "2045ac2fb303a584",
            "d0e2e8a0a826f066",
            "61f15ea35fbb0ca9",
            "419c79e5b556e99b",
            "d93353d328296fc3"
        ],
        "x": 114,
        "y": 639,
        "w": 972,
        "h": 562
    },
    {
        "id": "ef927cebced24aed",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Charts Temperature",
        "style": {
            "label": true
        },
        "nodes": [
            "3e07e48ce677a44a",
            "4f4727fe4411a36b",
            "1c37d2587fe54c74",
            "1567f7b94d2e4c81",
            "be766b8eec1668e8",
            "6f43655df0366bac",
            "e8c0de580cd4387d",
            "929ee2da3d6d1ccc",
            "03f2a1618ffa9f78",
            "92b8e5a2ba78144d",
            "c57b3258ba408cdd",
            "213ef2905f57d68e",
            "838c79fe0ac1265a",
            "f6419690ac785bd9",
            "cedfedcaef9174da"
        ],
        "x": 34,
        "y": 2119,
        "w": 952,
        "h": 342
    },
    {
        "id": "78460edf5398e987",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Function (RTC)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "481f23abca9c988b",
            "1696d196c804632d",
            "7b3219fafd1ea228",
            "6165e2de9d2695b1",
            "40b2569942fe4353",
            "5ba4569119772a84",
            "fd52b3f21356b4b4",
            "37cbef3e30fc15e8",
            "dd00be8a564b9690",
            "8088170c73dd479e",
            "8bd79adbb8101ee8",
            "a457e78b09df8951",
            "0eda3090dd8edd1b",
            "51cac319528c4435",
            "a38c5b576949dc2b",
            "05226e204e6aa5c8",
            "1a6b60d45a9baef3",
            "ba612124460f35fd",
            "95689b7a5a7a797e",
            "fd69c0842a9d63cf",
            "3c6ce12b13c760a7",
            "59869f5586d3d758",
            "bd47c6c1df5d3cf2",
            "a4a706f98516e948",
            "a9422e3829309b73",
            "1ee1025bd5993e64",
            "6de54cefafec7d6b",
            "aee527ba46d6535b",
            "d97fe7bc5fe05397",
            "9e3b71158e96bc72",
            "e4289e6df798aded",
            "d108ae1e680ef408",
            "343b29ce395a0a6c",
            "1a2eb3d5c6df6689",
            "b577e22f72c47989",
            "5f9f0d97fbadd7f0",
            "cf23e60321bd7960",
            "d0a41d3a1d0af639",
            "e886ebc63999cc78",
            "6c2e3e52b5c5031f",
            "80de4ef3c61f641a",
            "bbda492523718613",
            "6a80ed713dd2c778",
            "4414591a125a0d81",
            "ede37e7e06d62d2d",
            "5d25c6457e081421",
            "bad23e4fdb495436",
            "db725d7eaf875ba4",
            "8b4e3f72b8002c9a",
            "d98647f9bcfc8ce5",
            "6d3f481aaa3c5d9e",
            "f58d698744a36e40",
            "7d2dfd43b50940c0",
            "6b1892eda3de23c3",
            "ef5c6c4461e7d606",
            "486531746269118b",
            "883e900c6a8f4789",
            "133c17e0534f745e",
            "6455c3fd3d979985"
        ],
        "x": 2674,
        "y": 959,
        "w": 1842,
        "h": 662,
        "info": "# yeah"
    },
    {
        "id": "07a9900d991d6958",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Function (SoftStart)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "b9e698480d85c22b",
            "878d2c583a0e53ce",
            "bd3320d9437db028",
            "282345d4cc3e0885",
            "54086ab7a94b4317",
            "fcd346cdb7719575",
            "4e3b738f5eaa538c",
            "f988e3387b29083f",
            "3a082226d5ea31c8",
            "d0621793bea09350",
            "51e5846e022876b0",
            "99868ef9b40d0be7",
            "af7a0f71a3e9fa7b",
            "1fe6730f6c3b9c56",
            "8f56db5edb38b0b0",
            "c9a9e60e28a5fd85",
            "a774464a96bfae2b",
            "372cb6d71716d9dd",
            "a515de9398570253",
            "ba0cdca2b49676aa",
            "61197514d15763f9",
            "49f086712e863549",
            "f24e08164f3adbcc",
            "ae0726a3fb3988c0"
        ],
        "x": 2724,
        "y": 1739,
        "w": 1342,
        "h": 322
    },
    {
        "id": "d87b8ea5bea4191d",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Function (WAR)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "b6ed90c95d2f90da",
            "2b047c13df04a42f",
            "10b2b0e450b2393c",
            "6b9529e74ff02c53",
            "c69f0e786a1c82c5",
            "acee7f42b7663507",
            "7e21ed46cf7dee97",
            "bfa0add14cbc38a4",
            "a420b20de6b2ada1",
            "1b3ea0ab4c870ba5",
            "657c16826cbdb9e7",
            "6a035cc0365c187c",
            "6a6841f1d397e72f",
            "2b51e541d071409f",
            "967ae895e1775e51",
            "6b12e17056b6d0da",
            "156a4b8ffca4190a",
            "597c65923992b7d3",
            "86871f9d46130e28",
            "d18745c2f9a01458",
            "5b6bca440f428676",
            "bf49390cba98feb0",
            "8dba4358889afcf5",
            "be5aea96c865d9db",
            "7df5c202a4206341",
            "33780910b4167cfb",
            "c3827f64106d8787",
            "2c23b6aa75c7b7af",
            "851193f076b61dae",
            "2bd126203e9f2afe",
            "d644ad699941de34",
            "75bebea1be7e5290",
            "d53e6e94224a71a8",
            "8ca9702cd1fc76c9",
            "f7d8d68abe563615",
            "2735f7483f5ac8bb",
            "7fa36f769ef4e859",
            "725025f5186f97ec",
            "8df765750123144c",
            "8f600dc3e12a5af7",
            "dc47e3de677dd8ab",
            "8add64806a9b768c",
            "399a12cd39007ade",
            "5aa1dfdf89cc382a",
            "4627373cacc729e7",
            "6ee7e4a50eebc6ec",
            "146a111549c43249",
            "a79b872e50bd79db",
            "85a64541ba4f7616",
            "6da02c9fe23882ec",
            "4f4dd70baa91ad29",
            "dd25cb0d5cfa1a33",
            "8178504d6991a1b1",
            "10308aa4b107175e",
            "693c5e9e55ae7359",
            "d75c6b47296ce5d9",
            "99d6c8ae3cc124b9",
            "52560c878205d212",
            "d6deeaf6af28e924",
            "5f1112aeeffe3dbe"
        ],
        "x": 2774,
        "y": 39,
        "w": 1652,
        "h": 662
    },
    {
        "id": "5c49f3cb8f8ec4b0",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Settings",
        "style": {
            "fill": "#bfbfbf",
            "label": true
        },
        "nodes": [
            "06972d082b4edb12",
            "9f3e792fa9556646",
            "80ebb669c4d1bb74",
            "711165c2387d9e50",
            "0464c0bffa5b501d",
            "59cf6b8edb2d7203",
            "e4482a8587a55b51",
            "b3f7f9ca1ec60e83",
            "587abf5315fb17fc",
            "1a4d27c6a3e94745",
            "ab9bc932797dc648",
            "f5d3afe52705dec7",
            "e1181fa55063e5cb",
            "26aba23a915ba45a",
            "123d8988d7dd78d4",
            "8d67e4b94d19ae38",
            "0b4166e29cb85045",
            "ce25acdaadd8fc9b",
            "f4dfbbc80536441c",
            "24adfa00d0c84637",
            "5615407948b0659a",
            "fbfa4c829171ca15",
            "ee04f58ddf2b3f32",
            "d9303af1404278c0",
            "0e74c767a47d2cf8",
            "7508e892b1b76281",
            "fa5cb59968c54d87",
            "62c988876e63bd3d",
            "96f77d72e0d09d0b",
            "32bdd882f9fda307",
            "3fa9bce6765e0559",
            "16a799a272f9d399",
            "75bbeea1fe0248d1",
            "47e3cd4915602cf9",
            "fde361a7c1b89194",
            "15ceb9e2a7d0fbb0",
            "6155a471ed9a4209",
            "22d9b5306c32e0a0",
            "a1988fd5b64b9138",
            "2af6d2733b382ccd",
            "6d020e33561c33f7",
            "0e12f9702f321baf",
            "6342467bdb93414d",
            "f06ae55ce6c283ac",
            "f3a3360439dadec2",
            "81d5a8b7c2cd4a24",
            "c0505a76cb674cd3",
            "2bedcec616d6ded1",
            "fe0a6ae4bedf1f06",
            "ca2185dbae028593",
            "f311fa24f1f2eff1",
            "70bdf9a1b9ddbe08",
            "a58dd1a5279243db",
            "afa016c8c8bf6f66",
            "817eab424cbe54b8",
            "3347423e986c456f",
            "3319341e875c1c34",
            "c4ab0c4a63c41a7e",
            "29bf105c977fa4a2",
            "976dea314b622c06",
            "399a47e38288087e",
            "80f72faade28b47c",
            "86d484889622b393",
            "1f33d0225e34752f",
            "751a714439c831d4",
            "90109b95306f9bfd",
            "b716db861e8f424d",
            "6ecde2f5829ff329",
            "a34f3895492bdb0b",
            "a3cb54c6121cf8ef",
            "51f1764ce6fbd8b1",
            "f82414f6079cee26",
            "db96b90be8932e0a",
            "9756e5a9b716ae97",
            "cc43946102e053b2",
            "a4a44f2b59a5a5cf",
            "0798e12ef47695a6",
            "47b9c4f0569d0664",
            "8c120546f2678ef0",
            "570216c6ac37740d",
            "0208ec1c75aee83b",
            "e4554e610825af0a",
            "ea12012042d7f94f",
            "900964365bc3c801",
            "af6a64b5b0304ccd",
            "3823e94cbb9eea94",
            "b3a84db57ea88e4d",
            "454ccc604b58ec07",
            "996d525c5219261b",
            "a62c0fc7b0690e78",
            "0b88b30588567529",
            "09c088b66c7d19b8",
            "ca5f12c71474804d",
            "057a1704dec4a234",
            "f3e699b6fab67357",
            "65d056550e366c3a",
            "5a50af13f106e619",
            "e746c2626c1df614",
            "cbb8e05268e0b804",
            "a33eb5a40c901bc6",
            "767e5ea3e3d74218",
            "3aaf7c56d6e89e4b",
            "7d36ea7ba101ae3b",
            "b3a78c2dd8516eae",
            "4cd968e37828a56e",
            "abb144dfe8f3fac3",
            "c4e9ab182c12950d",
            "a772d2026681f718",
            "05f6401aa0329b2b",
            "bffd799064f16e5f",
            "55671ed84534c41a",
            "1dd17dd31530ea92",
            "59a6e3a342814b35",
            "e431fbafac457e57",
            "ad8a47695289e208",
            "43d8738dec50dfb7",
            "93557709b1849c5c",
            "24d9661f4ddabd43",
            "d5417c789a2d741c",
            "1ae6e3383669ca96",
            "d72d36208a501ecb",
            "cf5f05f860a8889f",
            "d41af73e6d6d3554",
            "937bab7333c667b9",
            "1679216f35634441",
            "007a174682051ada",
            "d1e9f271ab245c3c",
            "4ef40e6a332b66c9",
            "0b27f00820a8be16",
            "0dfee3882bc06741",
            "7d0cd14f9565caf2",
            "9148db0267cd6ca0",
            "905e817be8ae342c",
            "37e5e4afb68c6428",
            "f0358e59b78f1eb8",
            "1851bb467a05d06a",
            "e7db804704a7653c",
            "b46bb5543c33cb6b",
            "cb31369b84adaaa8",
            "dd43e003f8ed68fa",
            "ee42d0fc4ddda0ef",
            "60122a0767c5862b",
            "93f39094cecfa074",
            "66b0268a4d987e01"
        ],
        "x": 1174,
        "y": 119,
        "w": 1432,
        "h": 1722
    },
    {
        "id": "6e87c271f3b4c5e5",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Chart Energy",
        "style": {
            "label": true
        },
        "nodes": [
            "4c4bbced9b193fe8",
            "25cb728a24f379e3",
            "68b56da3282ab9be",
            "c5f9acc27407296d",
            "e533c0df3ffb50b8",
            "a784229e2b2fc2db",
            "f402bbd959151e26",
            "86f71c7ce0c26911",
            "c235f1b422987934",
            "9f8ab375fd2d5f34",
            "e17dc7a8865d30f7",
            "48d80364299cd944",
            "84b03ecd7a0fe3f6",
            "01e3354ceab81ba3",
            "fb3a305db7843da7",
            "0c804c93a39a9006",
            "e2d9817bab3bdf8e",
            "c2baac5a5c8773a9",
            "a553a4f68032bffa",
            "bccc2f35ca625c20",
            "9d1efffae054be5f",
            "f4d5818cacef07eb",
            "2be703d3fa6abbb5",
            "a167b98e3a26ba21",
            "55cb9087a1fa52da",
            "c9864f89a4612f06",
            "c4d63901477882f1",
            "96b90be275acf8c8",
            "e47056c87a41e95a",
            "45806e023a52e120",
            "bb4c4ff51d32852c",
            "1f5ee4264b7b4cbb"
        ],
        "x": 34,
        "y": 1479,
        "w": 1092,
        "h": 602
    },
    {
        "id": "589b9c5c9bd5aab9",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Combined bar-chart",
        "style": {
            "label": true
        },
        "nodes": [
            "49197010980651fe",
            "609c62d23c30ec24",
            "526983f803aaaffe",
            "c35353743ee9aecd",
            "45b5b3a215358c26",
            "83edb6bd4fa36941",
            "224179f31e1b39cf",
            "3a693f1a3ac01999",
            "105e3b8e6c61c434",
            "7ca4a277069a6621",
            "91befa8c0031f1bc",
            "fbc0c5e972470aef",
            "63e4f9528a665bfd",
            "0db73b1f6a296601",
            "828dce18302cc5b4",
            "8a1e0c8dd68d798d",
            "db4a1d787f4b0c26",
            "370bd0fbbbb8db1d",
            "7171661642381ba7",
            "b505ce644cfd53f0"
        ],
        "x": 94,
        "y": 2659,
        "w": 1398,
        "h": 602
    },
    {
        "id": "2aec1d3c6476c263",
        "type": "group",
        "z": "5866a177cdfb0882",
        "name": "Logs",
        "style": {
            "fill": "#ffffff",
            "label": true
        },
        "nodes": [
            "c9558bbce1976ec3",
            "d76c46f7799aa7cc",
            "b9f0be2a62ab43ca",
            "f001acc4b67ff6b7",
            "5bde50d2926cd49d",
            "2fbd2aebc412d60d",
            "ff2c1f020a12ad2c",
            "7acb3a2bfbb56892",
            "2961fd82e93eaa0a",
            "e6e586cf0f7db4a2",
            "2c1431de1b755c18",
            "23ceb02f81db1b2c",
            "b89abacae12f43a7",
            "bb8da0c1e5a21312",
            "8a5aae0865ff61e4",
            "95dcb5870f12cc89",
            "775220b9790203af",
            "47bc8e4922e5da40",
            "cdbdb41b6560c60b",
            "9845734f771c578a",
            "adcb4cce2abc550f",
            "09f21a10bce2701a",
            "fd278bf4d649809b",
            "6adfc58db087514b",
            "de99936f44427db1",
            "fb6b8c54295278e6",
            "80d8ab8ea57ab276",
            "dccdea3a4f9da78b",
            "91f006142bfd8525",
            "2194ac9210dfbba2",
            "d62ed0039e2f885b"
        ],
        "x": 1188,
        "y": 1959,
        "w": 1438,
        "h": 682
    },
    {
        "id": "c3827f64106d8787",
        "type": "group",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "charts",
        "style": {
            "label": true
        },
        "nodes": [
            "1eeb68446ae10222",
            "7be56a800b9fcf2b",
            "51f2e65505d50a9c",
            "baf753b8cd513411",
            "cb10d15cfa5100d3"
        ],
        "x": 3834,
        "y": 379,
        "w": 462,
        "h": 202
    },
    {
        "id": "b577e22f72c47989",
        "type": "group",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8fe75e3b31b2c535",
            "281d5159456912da",
            "d99496a4ace53860",
            "fdf0433c7da9344a",
            "bdaa5beb6a03a784"
        ],
        "x": 3914,
        "y": 1379,
        "w": 392,
        "h": 202
    },
    {
        "id": "db4a1d787f4b0c26",
        "type": "group",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f03363ab31e23fa4"
        ],
        "x": 1134,
        "y": 3119,
        "w": 312,
        "h": 82
    },
    {
        "id": "370bd0fbbbb8db1d",
        "type": "group",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "",
        "style": {
            "fill": "#DE425B",
            "fill-opacity": "0.5",
            "label": true
        },
        "nodes": [
            "7225676c4c158b93"
        ],
        "x": 1114,
        "y": 2899,
        "w": 352,
        "h": 82
    },
    {
        "id": "7171661642381ba7",
        "type": "group",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "Bucket 1 - kWh calculation",
        "style": {
            "fill": "#F59B56",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "291b027cdd86a232"
        ],
        "x": 1114,
        "y": 2799,
        "w": 352,
        "h": 82
    },
    {
        "id": "7acb3a2bfbb56892",
        "type": "group",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "LOGS",
        "style": {
            "label": true
        },
        "nodes": [
            "a5aadc7eea67c95e",
            "4955712907d9e185",
            "4cbd899752cb10d0",
            "1d264b5f8284bb77"
        ],
        "x": 1214,
        "y": 2139,
        "w": 1092,
        "h": 82
    },
    {
        "id": "52560c878205d212",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 25,
        "width": 7,
        "height": 1,
        "name": "spacer 7x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3990,
        "y": 100,
        "wires": []
    },
    {
        "id": "769aa971f270b921",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "group": "47608011c629d4a1",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "Compressor",
        "label": "Compressor",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 920,
        "wires": []
    },
    {
        "id": "63dd2a9008447047",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "",
        "links": [
            "e0aacaf5319aeea7"
        ],
        "x": 515,
        "y": 860,
        "wires": [
            [
                "668b45302405dc46"
            ]
        ]
    },
    {
        "id": "668b45302405dc46",
        "type": "ui_gauge",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "Water",
        "group": "47608011c629d4a1",
        "order": 6,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Water flow",
        "label": "L/min",
        "format": "{{value}}",
        "min": 0,
        "max": "35",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 910,
        "y": 860,
        "wires": []
    },
    {
        "id": "b15c84fe01142574",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "topic": "panasonic_heat_pump/main/Compressor_Freq",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 920,
        "wires": [
            [
                "769aa971f270b921",
                "61f15ea35fbb0ca9"
            ]
        ]
    },
    {
        "id": "46f32bd056749232",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "",
        "links": [
            "1ac44510b7470b4e"
        ],
        "x": 515,
        "y": 800,
        "wires": [
            [
                "4639658eaaec990c"
            ]
        ]
    },
    {
        "id": "7dde426dba02597b",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "",
        "links": [
            "89c0dace84e9e862"
        ],
        "x": 515,
        "y": 740,
        "wires": [
            [
                "3b1aa689c08054cb"
            ]
        ]
    },
    {
        "id": "4639658eaaec990c",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "group": "47608011c629d4a1",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "T inlet (PV)",
        "label": "T inlet (PV)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 800,
        "wires": []
    },
    {
        "id": "3b1aa689c08054cb",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "group": "47608011c629d4a1",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "T outlet (PV)",
        "label": "T outlet (PV)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 740,
        "wires": []
    },
    {
        "id": "820e7c017560f3fd",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "",
        "links": [
            "9c7253d3cba1818f"
        ],
        "x": 515,
        "y": 680,
        "wires": [
            [
                "9e07590de4d8897a"
            ]
        ]
    },
    {
        "id": "9e07590de4d8897a",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "group": "47608011c629d4a1",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "T outlet (SP)",
        "label": "T outlet (SP)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "c270b43b23f974d8",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "",
        "links": [
            "f286caa8f446a1b8"
        ],
        "x": 155,
        "y": 420,
        "wires": [
            [
                "8e0401ed1df9c1dc"
            ]
        ]
    },
    {
        "id": "1ac9c0edf5ce945c",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "group": "ba668149f2e70274",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "DHW Status",
        "label": "DHW Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 420,
        "wires": []
    },
    {
        "id": "8e0401ed1df9c1dc",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 420,
        "wires": [
            [
                "1ac9c0edf5ce945c"
            ]
        ]
    },
    {
        "id": "ce351aa8ae6161ec",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "Force sterilization",
        "label": "Force sterilization",
        "tooltip": "",
        "group": "ba668149f2e70274",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "72c312c10eda5067"
            ]
        ]
    },
    {
        "id": "d04cf2f6abf7d215",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "4c977d73c5080527",
        "group": "f4d34b6388e64ca9",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "HEAT Status",
        "label": "HEAT Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 1380,
        "wires": []
    },
    {
        "id": "8a295d94145833fa",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "4c977d73c5080527",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1380,
        "wires": [
            [
                "d04cf2f6abf7d215"
            ]
        ]
    },
    {
        "id": "c38e35109a249ab5",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "TOP65 - panasonic_heat_pump/main/Pump_Speed",
        "topic": "panasonic_heat_pump/main/Pump_Speed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 1100,
        "wires": [
            [
                "6d8fa9e7a461ba84"
            ]
        ]
    },
    {
        "id": "6d8fa9e7a461ba84",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "group": "47608011c629d4a1",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "Pump speed",
        "label": "Pump speed",
        "format": "{{msg.payload}} RPM",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e55a57ba3591d9b3",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "DHW (SP)",
        "label": "DHW (SP)",
        "tooltip": "",
        "group": "ba668149f2e70274",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "40",
        "max": "75",
        "step": 1,
        "className": "",
        "x": 510,
        "y": 120,
        "wires": [
            [
                "0f07048ebb903935"
            ]
        ]
    },
    {
        "id": "1f9610b9731673f8",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "TOP70 - panasonic_heat_pump/main/Sterilization_Temp",
        "topic": "panasonic_heat_pump/main/Sterilization_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "0ed2fa6301468285"
            ]
        ]
    },
    {
        "id": "0ed2fa6301468285",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "group": "ba668149f2e70274",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "Sterilization (SP)",
        "label": "Sterilization (SP)",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "6c165f7ef7378069",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "group": "ba668149f2e70274",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "DHW (PV)",
        "label": "DHW (PV)",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 360,
        "wires": []
    },
    {
        "id": "a18aece3e8884e3a",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "Force DHW",
        "label": "Force DHW",
        "tooltip": "",
        "group": "ba668149f2e70274",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "ebac652429960e8c"
            ]
        ]
    },
    {
        "id": "481f23abca9c988b",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "Room Setpoint",
        "label": "Room Setpoint",
        "tooltip": "",
        "group": "af26718b91621f02",
        "order": 13,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "50",
        "step": "0.1",
        "className": "",
        "x": 3220,
        "y": 1220,
        "wires": [
            [
                "7b3219fafd1ea228",
                "7d2dfd43b50940c0"
            ]
        ]
    },
    {
        "id": "1696d196c804632d",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "Woonkamer SP (custom)",
        "links": [
            "4afdd4d77fefa8b4",
            "6d890380e00e164d"
        ],
        "x": 4015,
        "y": 1220,
        "wires": []
    },
    {
        "id": "1556c8702bb4d292",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "4c977d73c5080527",
        "name": "",
        "links": [
            "1f9b6862937c501f"
        ],
        "x": 155,
        "y": 1340,
        "wires": [
            [
                "22e7256bb5fb5fc5"
            ]
        ]
    },
    {
        "id": "22e7256bb5fb5fc5",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "4c977d73c5080527",
        "group": "f4d34b6388e64ca9",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "T woonkamer (PV)",
        "label": "T Room (PV)",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 930,
        "y": 1340,
        "wires": []
    },
    {
        "id": "7b3219fafd1ea228",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3730,
        "y": 1220,
        "wires": [
            [
                "1696d196c804632d",
                "7d2dfd43b50940c0"
            ]
        ]
    },
    {
        "id": "e63851b03004dabb",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "",
        "links": [
            "1faa7391f40dac58"
        ],
        "x": 155,
        "y": 360,
        "wires": [
            [
                "6c165f7ef7378069"
            ]
        ]
    },
    {
        "id": "836e024c750878de",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "",
        "links": [
            "29bf105c977fa4a2",
            "ec508019a9a6b07d"
        ],
        "x": 155,
        "y": 240,
        "wires": [
            [
                "a18aece3e8884e3a"
            ]
        ]
    },
    {
        "id": "ace33c56590ccc4d",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "Force sterilization",
        "links": [
            "e746c2626c1df614",
            "8d6479e24b83b5e8"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "ce351aa8ae6161ec"
            ]
        ]
    },
    {
        "id": "e111252a28b9b3c9",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "4c977d73c5080527",
        "name": "",
        "links": [
            "f286caa8f446a1b8"
        ],
        "x": 155,
        "y": 1380,
        "wires": [
            [
                "ee91daf750f8d47c"
            ]
        ]
    },
    {
        "id": "3e07e48ce677a44a",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "Kamer Temperatuur",
        "group": "6b395ebf705e92b7",
        "order": 1,
        "width": 10,
        "height": 12,
        "label": "Temperatuur",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "20",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 2160,
        "wires": [
            [
                "c57b3258ba408cdd"
            ]
        ]
    },
    {
        "id": "4f4727fe4411a36b",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "Water HEAT",
        "group": "7088496dfc793dbb",
        "order": 1,
        "width": 9,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 2280,
        "wires": [
            [
                "213ef2905f57d68e"
            ]
        ]
    },
    {
        "id": "1c37d2587fe54c74",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "Water DHW",
        "group": "052c832231904e16",
        "order": 1,
        "width": 9,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 2320,
        "wires": [
            [
                "838c79fe0ac1265a"
            ]
        ]
    },
    {
        "id": "878d2c583a0e53ce",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "Softstart on/off",
        "label": "Softstart (experimental)",
        "tooltip": "Turn on/off the softstart function ",
        "group": "c7d23e4a20ddaedf",
        "order": 11,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3120,
        "y": 1900,
        "wires": [
            [
                "61197514d15763f9"
            ]
        ]
    },
    {
        "id": "bd3320d9437db028",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "set.Correction_2_softstart_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Function - SoftStart\";\nglobal.set(\"Correction_2_softstart_on_off\",msg.payload,\"file\");\n//global.set(\"Correction_2_softstart_on_off\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3610,
        "y": 1860,
        "wires": [
            [
                "282345d4cc3e0885"
            ]
        ]
    },
    {
        "id": "282345d4cc3e0885",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "Correction_2_softstart_on_off",
        "mode": "link",
        "links": [
            "b9e698480d85c22b",
            "23ceb02f81db1b2c",
            "73ee925b927ed0c6",
            "3ab7a10b46379da2"
        ],
        "x": 3805,
        "y": 1860,
        "wires": []
    },
    {
        "id": "6165e2de9d2695b1",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "RTC on/off",
        "label": "",
        "tooltip": "Turn on/off the Room Temperature Correction function. Configure in \"Function (RTC)\" menu. ",
        "group": "c7d23e4a20ddaedf",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3170,
        "y": 1000,
        "wires": [
            [
                "bbda492523718613"
            ]
        ]
    },
    {
        "id": "40b2569942fe4353",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "set.Correction_1_RTC_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Function - RTC\";\nglobal.set(\"Correction_1_RTC_on_off\",msg.payload,\"file\");\n//global.set(\"Correction_1_RTC_on_off\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3810,
        "y": 1000,
        "wires": [
            [
                "5ba4569119772a84"
            ]
        ]
    },
    {
        "id": "5ba4569119772a84",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "Correction_1_heatcurve_on_off",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c",
            "73ee925b927ed0c6",
            "aee527ba46d6535b",
            "3ab7a10b46379da2"
        ],
        "x": 4015,
        "y": 1000,
        "wires": []
    },
    {
        "id": "fd52b3f21356b4b4",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "",
        "links": [
            "d9d59760031361d8",
            "c61ef1791ada4e77"
        ],
        "x": 2935,
        "y": 1500,
        "wires": [
            [
                "6455c3fd3d979985",
                "37cbef3e30fc15e8"
            ]
        ]
    },
    {
        "id": "37cbef3e30fc15e8",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 30,
        "width": 7,
        "height": 1,
        "name": "Function - Current correction (RTC)",
        "label": "Current correction",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3240,
        "y": 1500,
        "wires": []
    },
    {
        "id": "2b047c13df04a42f",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "SP_DIRECT_virt",
        "label": "Virtual SP (Ta)",
        "tooltip": "Set the virtual target Ta temperature (Direct) of the heatpump. This can be avalue between 20-55 degrees celsius",
        "group": "c7d23e4a20ddaedf",
        "order": 1,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "20",
        "max": "55",
        "step": 1,
        "className": "",
        "x": 3200,
        "y": 80,
        "wires": [
            [
                "10b2b0e450b2393c",
                "146a111549c43249"
            ]
        ]
    },
    {
        "id": "10b2b0e450b2393c",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "set.SP_Ta_(base)",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"SP_DIRECT_virt\",msg.payload,\"file\");\n//global.set(\"SP_DIRECT_virt\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3590,
        "y": 100,
        "wires": [
            [
                "6b9529e74ff02c53"
            ]
        ]
    },
    {
        "id": "6b9529e74ff02c53",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "SP_DIRECT_virt",
        "links": [
            "73ee925b927ed0c6",
            "6d890380e00e164d",
            "3ab7a10b46379da2",
            "89acf9bcfcf5b9b1",
            "7b967769c6a6b68c"
        ],
        "x": 3755,
        "y": 100,
        "wires": []
    },
    {
        "id": "54086ab7a94b4317",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "group": "c7d23e4a20ddaedf",
        "order": 20,
        "width": 6,
        "height": 1,
        "name": "SP Final",
        "label": "Final SP",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3770,
        "y": 1960,
        "wires": []
    },
    {
        "id": "fcd346cdb7719575",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "",
        "links": [
            "16260c5c569c28d0",
            "3babaa01a5706113"
        ],
        "x": 3065,
        "y": 2020,
        "wires": [
            [
                "54086ab7a94b4317",
                "d144ccdd3db144fc"
            ]
        ]
    },
    {
        "id": "c69f0e786a1c82c5",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "war_ot1",
        "label": "",
        "tooltip": "",
        "group": "463138d4bf845cca",
        "order": 12,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot1",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "step": 1,
        "className": "",
        "x": 3200,
        "y": 300,
        "wires": [
            [
                "6a035cc0365c187c",
                "146a111549c43249"
            ]
        ]
    },
    {
        "id": "acee7f42b7663507",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "war_wt2",
        "label": "",
        "tooltip": "",
        "group": "463138d4bf845cca",
        "order": 16,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt2",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "step": 1,
        "className": "",
        "x": 3360,
        "y": 340,
        "wires": [
            [
                "6a035cc0365c187c",
                "146a111549c43249"
            ]
        ]
    },
    {
        "id": "7e21ed46cf7dee97",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "war_ot2",
        "label": "",
        "tooltip": "",
        "group": "463138d4bf845cca",
        "order": 15,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot2",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-20",
        "max": "55",
        "step": 1,
        "className": "",
        "x": 3200,
        "y": 340,
        "wires": [
            [
                "6a035cc0365c187c",
                "146a111549c43249"
            ]
        ]
    },
    {
        "id": "bfa0add14cbc38a4",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "war_wt1",
        "label": "",
        "tooltip": "",
        "group": "463138d4bf845cca",
        "order": 13,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt1",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "step": 1,
        "className": "",
        "x": 3360,
        "y": 300,
        "wires": [
            [
                "6a035cc0365c187c",
                "146a111549c43249"
            ]
        ]
    },
    {
        "id": "a420b20de6b2ada1",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "WAR on/off",
        "label": "",
        "tooltip": "Turn on/off the Weather Correction function. Configure in \"Function (WAR)\" menu. ",
        "group": "c7d23e4a20ddaedf",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Correction_0_WAR_on_off",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3210,
        "y": 240,
        "wires": [
            [
                "2735f7483f5ac8bb"
            ]
        ]
    },
    {
        "id": "1b3ea0ab4c870ba5",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "set.Correction_0_WAR_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Function - WAR\";\nglobal.set(\"Correction_0_WAR_on_off\",msg.payload,\"file\");\n//global.set(\"Correction_0_WAR_on_off\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 220,
        "wires": [
            [
                "657c16826cbdb9e7"
            ]
        ]
    },
    {
        "id": "657c16826cbdb9e7",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "Correction_0_WAR_on_off",
        "mode": "link",
        "links": [
            "b6ed90c95d2f90da",
            "23ceb02f81db1b2c"
        ],
        "x": 3815,
        "y": 220,
        "wires": []
    },
    {
        "id": "6a035cc0365c187c",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "set.war_ot_wt",
        "func": "varName = msg.topic\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(varName,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2980,
        "y": 460,
        "wires": [
            [
                "6a6841f1d397e72f"
            ]
        ]
    },
    {
        "id": "6a6841f1d397e72f",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "Chart WAR",
        "func": "var war_Tb          = global.get('T_outside',\"file\");                           // Outdoor temperature.\nvar SP_war          = global.get('F_WAR_SP');                                   // Setpoint after the WAR calculation done in (other) function.\n\nvar war_ot1         = global.get('war_ot1',\"file\");\nvar war_ot2         = global.get('war_ot2',\"file\");\nvar war_ot3         = global.get('war_ot3',\"file\");\n\nvar war_wt1         = global.get('war_wt1',\"file\");\nvar war_wt2         = global.get('war_wt2',\"file\");\nvar war_wt3         = global.get('war_wt3',\"file\");\n\n// Design example\n//          OUTSIDE                 WATER\n//          Temperature     >>      Temperature\n//----------------------------------------------------------------------------\n// Range 1\n//          (OT1=)  20      >>  25  (=WT1)\n// Range 2\n//          (OT2=)  5       >>  31  (=WT2)\n// Range 3\n//          (OT3=)  -10     >>  37  (=WT3)\n// Range 4\n//----------------------------------------------------------------------------\n//\n//\n// math part \n// Y = aX + b\n// X axis = ot variable\n// Y axis = wt variable\nvar a;\nvar b;\n\nif (war_Tb <= war_ot3)                                                          // Range 1 in the graph\n    {   a = 0;\n        b = war_wt3;\n    }\n\nif (war_Tb > war_ot2)                                                           // Range 2 in the graph\n    {   a = ((war_wt2-war_wt1)/(war_ot2-war_ot1));\n        b = (war_wt1-(war_ot1*a));\n    }\n    \nif (war_Tb <= war_ot2)                                                          // Range 3 in the graph\n    {   a = ((war_wt3-war_wt2)/(war_ot3-war_ot2));\n        b = (war_wt2-(war_ot2*a));\n    }\n    \nif (war_Tb >= war_ot1)                                                          // Range 4 in the graph\n    {   a = 0;\n        b = war_wt1;\n    }\n\n// Chart part. \n// Here the chart is created with the variables.\n// Part 1 of the chart plots the WAR temperature profile set by the values on the page. \n// Part 2 of the chart plots the line which represents the actual temperature to water temperature. To read it easier.\n// Part 3 of the chart plots the ranges so the chart will be more stable on screen, not messing around with chart axis.\n\nvar chart =     [{\n    \"series\":   [\"Water\",\"Actual\",''],\n    \"data\": [\n                [\n                {\"x\":(war_ot1+15),\"y\":war_wt1},                                 // chart part 1: WAR program series\n                {\"x\":(war_ot1),\"y\":war_wt1},\n                {\"x\":(war_ot2),\"y\":war_wt2},\n                {\"x\":(war_ot3),\"y\":war_wt3},\n                {\"x\":(war_ot3-15),\"y\":war_wt3}\n                ],\n                \n                [\n                {\"x\":(war_ot3-15),  \"y\":((a*war_Tb)+b)},                        // chart part 2: Actual lines which make use of the function above.\n                {\"x\":(war_Tb),      \"y\":((a*war_Tb)+b)},\n                {\"x\":(war_Tb),      \"y\":war_wt1-5},\n                ],\n                \n                [                                                               // chart part 3: X-Y as with fixed ranges to make it look more stable.\n                {\"x\":(war_ot3-15),\"y\":(war_wt3+5)},\n                {\"x\":(war_ot3-15),\"y\":(war_wt1-5)},\n                {\"x\":(war_ot1+15),\"y\":(war_wt1-5)}\n                ]\n\n            ],    \n    \"labels\":[ \"\",\"\" ]\n}];\n\n\n\nlet msg1={}, msg2={}, msg3={};\nmsg.payload = chart; msg2.payload = war_Tb; msg3.payload = SP_war\n\nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='T outside';\n\nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='SP WAR';\n\nreturn [msg, msg2, msg3];\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3430,
        "y": 460,
        "wires": [
            [
                "1eeb68446ae10222"
            ],
            [
                "156a4b8ffca4190a",
                "7be56a800b9fcf2b",
                "d644ad699941de34"
            ],
            [
                "7be56a800b9fcf2b"
            ]
        ],
        "outputLabels": [
            "Real chart",
            "T_outside",
            ""
        ]
    },
    {
        "id": "1eeb68446ae10222",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "c3827f64106d8787",
        "name": "",
        "group": "4e2c919e44d5664c",
        "order": 1,
        "width": 11,
        "height": 8,
        "label": "WAR Temperature profile",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "war_wt3+",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#333333",
            "#000000",
            "#000000",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3970,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "cf23e60321bd7960",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 2820,
        "y": 1080,
        "wires": [
            [
                "5f9f0d97fbadd7f0"
            ]
        ]
    },
    {
        "id": "5f9f0d97fbadd7f0",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "Load on boot RTC",
        "func": "var var1e            = global.get('Correction_1_RTC_on_off',\"file\");\nvar var2e            = global.get('WoonkamerSP',\"file\");\nvar var3e            = global.get('rtc_t1',\"file\");\nvar var4e            = global.get('rtc_t2',\"file\");\nvar var5e            = global.get('rtc_t3',\"file\");\nvar var6e            = global.get('rtc_t4',\"file\");\nvar var7e            = global.get('rtc_t5',\"file\");\nvar var8e            = global.get('rtc_t6',\"file\");\nvar var9e            = global.get('rtc_off',\"file\");\nvar var10e           = global.get('rtc_on',\"file\");\nvar var11e           = global.get('F_RTC_on_off2',\"file\");\nvar var12e           = global.get('T_room');\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={};\n\n\nmsg1.payload = var1e;\nif(var1e === undefined) {msg1=null;}\nmsg2.payload = var2e;\nif(var2e === undefined) {msg2=null;}\nmsg3.payload = var3e;\nif(var3e === undefined) {msg3=null;}\nmsg4.payload = var4e;\nif(var4e === undefined) {msg4=null;}\nmsg5.payload = var5e;\nif(var5e === undefined) {msg5=null;}\nmsg6.payload = var6e;\nif(var6e === undefined) {msg6=null;}\nmsg7.payload = var7e;\nif(var7e === undefined) {msg7=null;}\nmsg8.payload = var8e;\nif(var8e === undefined) {msg8=null;}\nmsg9.payload = var9e;\nif(var9e === undefined) {msg9=null;}\nmsg10.payload = var10e;\nif(var10e === undefined) {msg10=null;}\nmsg11.payload = var11e;\nif(var11e === undefined) {msg11=null;}\nmsg12.payload = var12e;\nif(var12e === undefined) {msg12=null;}\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg11, msg12];\n",
        "outputs": 12,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nvar Correction_1_RTC_on_off     =   global.get('Correction_1_RTC_on_off',\"file\");\nif (Correction_1_RTC_on_off === undefined)\n    {\n        global.set('Correction_1_RTC_on_off',0,\"file\");\n    }\n\n\nvar WoonkamerSP                 =   global.get('WoonkamerSP',\"file\");\nif (WoonkamerSP === undefined)\n    {\n        global.set('WoonkamerSP',20,\"file\")\n    }\n\nvar F_RTC_on_off2               =   global.get('F_RTC_on_off2',\"file\")\nif (F_RTC_on_off2 === undefined)\n    {\n        global.set('F_RTC_on_off2',0,\"file\")\n    }",
        "finalize": "",
        "libs": [],
        "x": 2810,
        "y": 1200,
        "wires": [
            [
                "6165e2de9d2695b1",
                "fd69c0842a9d63cf"
            ],
            [
                "481f23abca9c988b"
            ],
            [
                "dd00be8a564b9690"
            ],
            [
                "8088170c73dd479e"
            ],
            [
                "8bd79adbb8101ee8"
            ],
            [
                "a457e78b09df8951"
            ],
            [
                "0eda3090dd8edd1b"
            ],
            [
                "51cac319528c4435"
            ],
            [
                "80de4ef3c61f641a"
            ],
            [
                "5d25c6457e081421"
            ],
            [
                "6b1892eda3de23c3"
            ],
            [
                "6de54cefafec7d6b"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off",
            "WoonkamerSP",
            "rtc_t1",
            "rtc_t2",
            "rtc_t3",
            "rtc_t4",
            "rtc_t5",
            "rtc_t6",
            "rtc_off",
            "rtc_on",
            "F_RTC_on_off2",
            "T_room"
        ]
    },
    {
        "id": "2b51e541d071409f",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "",
        "links": [
            "cb47302c2194f2f3"
        ],
        "x": 3005,
        "y": 540,
        "wires": [
            [
                "597c65923992b7d3",
                "85a64541ba4f7616"
            ]
        ]
    },
    {
        "id": "967ae895e1775e51",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "T Outside",
        "label": "T Outside",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3200,
        "y": 280,
        "wires": []
    },
    {
        "id": "6b12e17056b6d0da",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "T water",
        "label": "T Water",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3360,
        "y": 280,
        "wires": []
    },
    {
        "id": "156a4b8ffca4190a",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 22,
        "width": 2,
        "height": 1,
        "name": "T outside",
        "label": "",
        "format": "{{msg.payload}} °C",
        "layout": "row-center",
        "className": "",
        "x": 3600,
        "y": 400,
        "wires": []
    },
    {
        "id": "597c65923992b7d3",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 24,
        "width": 2,
        "height": 1,
        "name": "SP (WAR) - Function (WAR) settings tab",
        "label": "",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3640,
        "y": 500,
        "wires": []
    },
    {
        "id": "86871f9d46130e28",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 21,
        "width": 2,
        "height": 1,
        "name": "Actual",
        "label": "Actual",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3530,
        "y": 320,
        "wires": []
    },
    {
        "id": "d18745c2f9a01458",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 6,
        "width": 7,
        "height": 1,
        "name": "Profile settings",
        "label": "HEAT Profile",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 3560,
        "y": 300,
        "wires": []
    },
    {
        "id": "5b6bca440f428676",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "WAR on/off",
        "label": "WAR function",
        "tooltip": "Turn on/off the weather correction function",
        "group": "463138d4bf845cca",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Correction_0_WAR_on_off",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3210,
        "y": 200,
        "wires": [
            [
                "2735f7483f5ac8bb"
            ]
        ]
    },
    {
        "id": "dd00be8a564b9690",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "rtc_t1",
        "label": "",
        "tooltip": "",
        "group": "af26718b91621f02",
        "order": 7,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t1",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3310,
        "y": 1160,
        "wires": [
            [
                "133c17e0534f745e"
            ]
        ]
    },
    {
        "id": "8088170c73dd479e",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "rtc_t2",
        "label": "",
        "tooltip": "",
        "group": "af26718b91621f02",
        "order": 9,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t2",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3430,
        "y": 1160,
        "wires": [
            [
                "7d2dfd43b50940c0",
                "133c17e0534f745e"
            ]
        ]
    },
    {
        "id": "8bd79adbb8101ee8",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "rtc_t3",
        "label": "",
        "tooltip": "",
        "group": "af26718b91621f02",
        "order": 11,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t3",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3570,
        "y": 1160,
        "wires": [
            [
                "7d2dfd43b50940c0",
                "133c17e0534f745e"
            ]
        ]
    },
    {
        "id": "a457e78b09df8951",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "rtc_t4",
        "label": "",
        "tooltip": "",
        "group": "af26718b91621f02",
        "order": 16,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t4",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3310,
        "y": 1340,
        "wires": [
            [
                "7d2dfd43b50940c0",
                "133c17e0534f745e"
            ]
        ]
    },
    {
        "id": "0eda3090dd8edd1b",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "rtc_t5",
        "label": "",
        "tooltip": "",
        "group": "af26718b91621f02",
        "order": 18,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t5",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3430,
        "y": 1340,
        "wires": [
            [
                "7d2dfd43b50940c0",
                "133c17e0534f745e"
            ]
        ]
    },
    {
        "id": "51cac319528c4435",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "rtc_t6",
        "label": "",
        "tooltip": "",
        "group": "af26718b91621f02",
        "order": 20,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t6",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3570,
        "y": 1340,
        "wires": [
            [
                "7d2dfd43b50940c0",
                "133c17e0534f745e"
            ]
        ]
    },
    {
        "id": "a38c5b576949dc2b",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "set.rtc_t_ranges",
        "func": "varName = msg.topic;\n\nmsg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(varName,msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3780,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "05226e204e6aa5c8",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 6,
        "width": 4,
        "height": 3,
        "name": "Warm limits",
        "label": "Too warm",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 3970,
        "y": 1280,
        "wires": []
    },
    {
        "id": "1a6b60d45a9baef3",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 15,
        "width": 4,
        "height": 3,
        "name": "Cold limits",
        "label": "Too cold",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 3970,
        "y": 1320,
        "wires": []
    },
    {
        "id": "ba612124460f35fd",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "Chart RTC",
        "func": "var rtc_PV          = global.get('T_room');                             // Measurement of room temperature\n\nif (rtc_PV === undefined) \n{\n    return null;\n}\n\nelse \n{\n    \n    var rtc_SP          = global.get('WoonkamerSP',\"file\");                         // SetPoint of room temperature.\n    if (rtc_SP===undefined){return null;}\n    \n    var rtc_t1          = global.get('rtc_t1',\"file\");\n    var rtc_t2          = global.get('rtc_t2',\"file\");\n    var rtc_t3          = global.get('rtc_t3',\"file\");\n    \n    var rtc_t4          = global.get('rtc_t4',\"file\");\n    var rtc_t5          = global.get('rtc_t5',\"file\");\n    var rtc_t6          = global.get('rtc_t6',\"file\");\n    var rtc_on          = global.get('rtc_on',\"file\");\n    var rtc_off          = global.get('rtc_off',\"file\");\n    \n    var rtc_vvw1        = global.get('T_woonkamer_BT3_vvw');                        // Measurement of room temperature \n    var rtc_vvw2        = global.get('T_woonkamer_BT4_vvw');                        // Measurement of room temperature \n    \n    let msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={};\n    \n    \n    msg1.payload = rtc_SP;                                                          //\n    msg1.payload = Number(msg1.payload).toFixed(1);\n    msg1.payload = parseFloat(msg1.payload);\n    msg1.topic='Room SP';                                                                // \n    \n    msg2.payload = rtc_PV;                                                          // \n    msg2.payload = Number(msg2.payload).toFixed(2);\n    msg2.payload = parseFloat(msg2.payload);\n    msg2.topic='Room PV';                                                                // \n    \n    msg3.payload = (rtc_SP+rtc_t1);                                                 // \n    msg3.payload = Number(msg3.payload).toFixed(1);\n    msg3.payload = parseFloat(msg3.payload);\n    msg3.topic='-3';                                                          // \n    \n    msg4.payload = (rtc_SP+rtc_t2);                                                 // \n    msg4.payload = Number(msg4.payload).toFixed(1);\n    msg4.payload = parseFloat(msg4.payload);\n    msg4.topic='-2';                                                          // \n    \n    msg5.payload = (rtc_SP+rtc_t3);                                                 // \n    msg5.payload = Number(msg5.payload).toFixed(1);\n    msg5.payload = parseFloat(msg5.payload);\n    msg5.topic='-1';                                                          // \n    \n    msg6.payload = (rtc_SP+rtc_t4);                                                 // \n    msg6.payload = Number(msg6.payload).toFixed(1);\n    msg6.payload = parseFloat(msg6.payload);\n    msg6.topic='+1';                                                          // \n    \n    msg7.payload = (rtc_SP+rtc_t5);                                                 // \n    msg7.payload = Number(msg7.payload).toFixed(1);\n    msg7.payload = parseFloat(msg7.payload);\n    msg7.topic='+2';                                                          // \n    \n    msg8.payload = (rtc_SP+rtc_t6);                                                 // \n    msg8.payload = Number(msg8.payload).toFixed(1);\n    msg8.payload = parseFloat(msg8.payload);\n    msg8.topic='+3';                                                          // \n    \n    msg9.payload = rtc_vvw1;                                                        // \n    msg9.payload = Number(msg9.payload).toFixed(2);\n    msg9.payload = parseFloat(msg9.payload);\n    msg9.topic='Floor T1';\n    \n    \n    msg10.payload = rtc_vvw2;                                                        // \n    msg10.payload = Number(msg10.payload).toFixed(2);\n    msg10.payload = parseFloat(msg10.payload);\n    msg10.topic='Floor T2';  \n    \n    msg11.payload = (rtc_SP+rtc_on);                                                        // \n    msg11.payload = Number(msg11.payload).toFixed(1);\n    msg11.payload = parseFloat(msg11.payload);\n    msg11.topic='On';  \n    \n    msg12.payload = (rtc_SP+rtc_off);                                                        // \n    msg12.payload = Number(msg12.payload).toFixed(1);\n    msg12.payload = parseFloat(msg12.payload);\n    msg12.topic='Off';  \n    \n    \n    return [[msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg11, msg12], msg2];\n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 1360,
        "wires": [
            [
                "8fe75e3b31b2c535"
            ],
            [
                "6de54cefafec7d6b",
                "d0a41d3a1d0af639"
            ]
        ],
        "outputLabels": [
            "chart",
            "rtc_PV"
        ]
    },
    {
        "id": "8fe75e3b31b2c535",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "b577e22f72c47989",
        "name": "",
        "group": "3c1bc65f9fe1dd49",
        "order": 1,
        "width": 15,
        "height": 17,
        "label": "RoomTemperatureCorrection Chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "18",
        "ymax": "28",
        "removeOlder": "24",
        "removeOlderPoints": "1500",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#7bd152",
            "#0011ff",
            "#b22222",
            "#dc7f27",
            "#ffd700",
            "#ffd700",
            "#dc7f27",
            "#b22222",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4100,
        "y": 1460,
        "wires": [
            [
                "fdf0433c7da9344a"
            ]
        ]
    },
    {
        "id": "95689b7a5a7a797e",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3460,
        "y": 1440,
        "wires": [
            [
                "ba612124460f35fd"
            ]
        ]
    },
    {
        "id": "281d5159456912da",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "b577e22f72c47989",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 4190,
        "y": 1420,
        "wires": [
            [
                "8fe75e3b31b2c535"
            ]
        ]
    },
    {
        "id": "fd69c0842a9d63cf",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "RTC on/off",
        "label": "RTC function",
        "tooltip": "Turn on/off the RoomTemperatureCorrection. ",
        "group": "af26718b91621f02",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3430,
        "y": 1060,
        "wires": [
            [
                "bbda492523718613"
            ]
        ]
    },
    {
        "id": "3c6ce12b13c760a7",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 29,
        "width": 7,
        "height": 1,
        "name": "Start SP (RTC)",
        "label": "Start SP",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3180,
        "y": 1460,
        "wires": []
    },
    {
        "id": "59869f5586d3d758",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 31,
        "width": 7,
        "height": 1,
        "name": "Result SP (RTC)",
        "label": "Result SP",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3190,
        "y": 1580,
        "wires": []
    },
    {
        "id": "bd47c6c1df5d3cf2",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "",
        "links": [
            "dec1bfecd6b9d7e8"
        ],
        "x": 2995,
        "y": 1580,
        "wires": [
            [
                "59869f5586d3d758"
            ]
        ]
    },
    {
        "id": "d99496a4ace53860",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "b577e22f72c47989",
        "group": "3c1bc65f9fe1dd49",
        "order": 2,
        "width": 15,
        "height": 1,
        "name": "footnote",
        "label": "This chart shows 1 datapoint every 60 seconds",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 4000,
        "y": 1520,
        "wires": []
    },
    {
        "id": "bf49390cba98feb0",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "4e2c919e44d5664c",
        "order": 2,
        "width": 11,
        "height": 1,
        "name": "X-axis:",
        "label": "X-axis: Outside temperature. Y-axis: Water temperature.",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3690,
        "y": 320,
        "wires": []
    },
    {
        "id": "a4a706f98516e948",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "c7d23e4a20ddaedf",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "Home - Current correction",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-right",
        "className": "",
        "x": 3210,
        "y": 1540,
        "wires": []
    },
    {
        "id": "4e3b738f5eaa538c",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "group": "c7d23e4a20ddaedf",
        "order": 13,
        "width": 2,
        "height": 1,
        "name": "Home - Current correction (SS)",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-spread",
        "className": "",
        "x": 3740,
        "y": 1920,
        "wires": []
    },
    {
        "id": "f988e3387b29083f",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "",
        "links": [
            "f9ee471b53568fa9"
        ],
        "x": 3065,
        "y": 1980,
        "wires": [
            [
                "439ff50b2888eeda",
                "ae0726a3fb3988c0"
            ]
        ]
    },
    {
        "id": "8dba4358889afcf5",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "c7d23e4a20ddaedf",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "Function on/off",
        "label": "Function",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 3220,
        "y": 160,
        "wires": []
    },
    {
        "id": "3a082226d5ea31c8",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "SS chart",
        "group": "01e26c09b4e9de97",
        "order": 2,
        "width": 23,
        "height": 11,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "2000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3770,
        "y": 1800,
        "wires": [
            [
                "a774464a96bfae2b"
            ]
        ]
    },
    {
        "id": "d0621793bea09350",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "Chart SS",
        "func": "var ss_SP           = global.get('SP_Final',\"file\");                // Current compressor frequency.\nvar ss_Tr           = global.get('Main_Inlet_Temp');                             // Measurement of room temperature \nvar ss_Ta           = global.get('Main_Outlet_Temp');\nvar ss_hz           = global.get('compressor_frequency',\"file\");\nvar ss_corr         = global.get('F_SS_correction');\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={};\n\n\nmsg1.payload = ss_SP;                                                           //\nmsg1.payload = Number(msg1.payload).toFixed(1);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='Setpoint';                                                          // \n\nmsg2.payload = ss_Tr;                                                           // required\nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='Water inlet';                                                       // required\n\nmsg3.payload = ss_Ta;                                                           // required\nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='Water outlet';                                                      // required\n\nmsg4.payload = ss_hz;                                                           // required\nmsg4.payload = Number(msg4.payload).toFixed(0);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='Frequency';                                                         // required\n\n\nmsg5.payload = ss_corr;                                                           // required\nmsg5.payload = Number(msg5.payload).toFixed(0);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='ss_correction';                                                     // required\n\n\n\nreturn [[msg1, msg2, msg3, msg4, msg5]];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 1820,
        "wires": [
            [
                "3a082226d5ea31c8"
            ]
        ]
    },
    {
        "id": "51e5846e022876b0",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "Trigger interval 1m",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3230,
        "y": 1820,
        "wires": [
            [
                "d0621793bea09350"
            ]
        ]
    },
    {
        "id": "99868ef9b40d0be7",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "Softstart on/off",
        "label": "SoftStart function",
        "tooltip": "Turn on/off the softstart function ",
        "group": "2724d44e267a522a",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3120,
        "y": 1860,
        "wires": [
            [
                "61197514d15763f9"
            ]
        ]
    },
    {
        "id": "1567f7b94d2e4c81",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "Chart Water (ROOM)",
        "func": "var SP_Ta                   = global.get('SP_Final',\"file\");                    // Current Setpoint Ta\nvar PV_Tr                   = global.get('Main_Inlet_Temp');                    // Current inlet temperature\nvar PV_Ta                   = global.get('Main_Outlet_Temp');                   // Current outlet temperature\nvar DHW_Temp                = global.get('DHW_Temp');                           // Current TANK temperature\nvar ThreeWay_Valve_State    = global.get(\"ThreeWay_Valve_State\");               // Current state of the 3-way valve\nvar DHW_Target_Temp         = global.get('DHW_Target_Temp',\"file\");             // Current Setpoint DHW\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\nmsg1.payload = SP_Ta;                                                           //\nmsg1.payload = Number(msg1.payload).toFixed(0);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='SP Ta';                                                             // \n\nmsg2.payload = PV_Tr;                                                           // \nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='PV Tr';                                                             // \n\nmsg3.payload = PV_Ta;                                                           // \nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='PV Ta';                                                             // \n\nmsg4.payload = ThreeWay_Valve_State;                                            // \nmsg4.payload = Number(msg4.payload).toFixed(0);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='ThreeWay Valve State';                                              //  \n\nmsg5.payload = DHW_Temp;                                                        // \nmsg5.payload = Number(msg5.payload).toFixed(0);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='Tank PV';                                                           //  \n\nmsg6.payload = DHW_Target_Temp;                                                           //\nmsg6.payload = Number(msg6.payload).toFixed(0);\nmsg6.payload = parseFloat(msg6.payload);\nmsg6.topic='SP Ta';  \n\n\n// ThreeWay_Valve_state = ROOM mode > output value to pin 1\nif (ThreeWay_Valve_State == 0) {\n    return [ [msg1, msg2, msg3] , null ];\n    } \n\n// ThreeWay_Valve_state = DHW mode > output value to pin 2, including the PV_Tank\nelse {\n    return [ null , [msg6, msg2, msg3, msg5] ];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2300,
        "wires": [
            [
                "4f4727fe4411a36b"
            ],
            [
                "1c37d2587fe54c74"
            ]
        ]
    },
    {
        "id": "be766b8eec1668e8",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2300,
        "wires": [
            [
                "1567f7b94d2e4c81"
            ]
        ]
    },
    {
        "id": "6f43655df0366bac",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 130,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "e8c0de580cd4387d",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "Chart Roomtemperatures",
        "func": "var SP                          = global.get('SP_Final',\"file\");                // Current Setpoint of the water (Ta)\nvar T_room                      = global.get('T_room');                         // Current Livingroom sensor 1 (air)\nvar T_woonkamer_BT2             = global.get('T_woonkamer_BT2');                // Current Livingroom sensor 2 (air)\nvar T_woonkamer_BT3_vvw         = global.get('T_woonkamer_BT3_vvw');            // Current Livingroom sensor 3 (floor)\nvar T_woonkamer_BT4_vvw         = global.get('T_woonkamer_BT4_vvw');            // Current Livingroom sensor 4 (floor)\nvar Tado                        = global.get(\"Tado_Thermostaat_Temp\");          // Current Livingroom sensor 5 (floor)\nvar Echo_Temp                   = global.get(\"Echo_Temp\");                      // Current Livingroom sensor 6 (ECHO)\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={};\n\nif (SP !== undefined)\n{\n    msg1.payload = SP;\n    msg1.payload = Number(msg1.payload).toFixed(2);\n    msg1.payload = parseFloat(msg1.payload);\n    msg1.topic='SP Ta';\n}\n\nif (T_room !== undefined)\n{\n    msg2.payload = T_room;\n    msg2.payload = Number(msg2.payload).toFixed(2);\n    msg2.payload = parseFloat(msg2.payload);\n    msg2.topic='Woonkamer PV (bt)';\n}\n\nif (T_woonkamer_BT2 !== undefined)\n{\n    msg3.payload = T_woonkamer_BT2;\n    msg3.payload = Number(msg3.payload).toFixed(2);\n    msg3.payload = parseFloat(msg3.payload);\n    msg3.topic='Woonkamer PV2 (bt)'; \n}\n\nif (T_woonkamer_BT3_vvw !== undefined)\n{\n    msg4.payload = T_woonkamer_BT3_vvw;\n    msg4.payload = Number(msg4.payload).toFixed(2);\n    msg4.payload = parseFloat(msg4.payload);\n    msg4.topic='T_woonkamer_BT3_vvw';\n}\n\nif (T_woonkamer_BT4_vvw !== undefined)\n{\n    msg5.payload = T_woonkamer_BT4_vvw;\n    msg5.payload = Number(msg5.payload).toFixed(1);\n    msg5.payload = parseFloat(msg5.payload);\n    msg5.topic='T_woonkamer_BT4_vvw';\n}\n\nif (Tado !== undefined)\n{\n    msg6.payload = Tado;\n    msg6.payload = Number(msg6.payload).toFixed(1);\n    msg6.payload = parseFloat(msg6.payload);\n    msg6.topic='Tado';  \n}\n\nif (Echo_Temp !== undefined)\n{\n    msg7.payload = Echo_Temp;\n    msg7.payload = Number(msg7.payload).toFixed(1);\n    msg7.payload = parseFloat(msg7.payload);\n    msg7.topic='Echo'; \n}\n\nreturn [[msg1, msg2, msg3, msg4, msg5, msg6, msg7]];\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2160,
        "wires": [
            [
                "3e07e48ce677a44a"
            ]
        ]
    },
    {
        "id": "929ee2da3d6d1ccc",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2160,
        "wires": [
            [
                "e8c0de580cd4387d"
            ]
        ]
    },
    {
        "id": "be5aea96c865d9db",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "WAR part",
        "info": "",
        "x": 2900,
        "y": 80,
        "wires": []
    },
    {
        "id": "a9422e3829309b73",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "RTC part",
        "info": "",
        "x": 2780,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1ee1025bd5993e64",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "SP >>",
        "info": "",
        "x": 2770,
        "y": 1040,
        "wires": []
    },
    {
        "id": "af7a0f71a3e9fa7b",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "SS part",
        "info": "",
        "x": 2820,
        "y": 1780,
        "wires": []
    },
    {
        "id": "7df5c202a4206341",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "SP >>",
        "info": "",
        "x": 2890,
        "y": 120,
        "wires": []
    },
    {
        "id": "6de54cefafec7d6b",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 14,
        "width": 7,
        "height": 1,
        "name": "Room Actual",
        "label": "Room Actual",
        "format": "{{msg.payload}} °C ",
        "layout": "row-spread",
        "className": "",
        "x": 2850,
        "y": 1340,
        "wires": []
    },
    {
        "id": "7be56a800b9fcf2b",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "c3827f64106d8787",
        "name": "",
        "group": "4e2c919e44d5664c",
        "order": 4,
        "width": 11,
        "height": 5,
        "label": "WAR Time chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "40",
        "removeOlder": "24",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#333333",
            "#000000",
            "#000000",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3940,
        "y": 460,
        "wires": [
            [
                "51f2e65505d50a9c"
            ]
        ]
    },
    {
        "id": "33780910b4167cfb",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 3250,
        "y": 480,
        "wires": [
            [
                "6a6841f1d397e72f"
            ]
        ]
    },
    {
        "id": "b6ed90c95d2f90da",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "Dash_WAR_OnOff",
        "links": [
            "657c16826cbdb9e7",
            "00e9f06e7ce99f6c"
        ],
        "x": 3075,
        "y": 220,
        "wires": [
            [
                "5b6bca440f428676",
                "a420b20de6b2ada1"
            ]
        ]
    },
    {
        "id": "aee527ba46d6535b",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "RTC toggle on/off",
        "links": [
            "5ba4569119772a84",
            "657bf94dca5e4a3f"
        ],
        "x": 2995,
        "y": 1000,
        "wires": [
            [
                "fd69c0842a9d63cf",
                "6165e2de9d2695b1"
            ]
        ]
    },
    {
        "id": "b9e698480d85c22b",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "softstart on_off",
        "links": [
            "282345d4cc3e0885",
            "b8c6be5205c6525c"
        ],
        "x": 3005,
        "y": 1800,
        "wires": [
            [
                "878d2c583a0e53ce",
                "99868ef9b40d0be7"
            ]
        ]
    },
    {
        "id": "d97fe7bc5fe05397",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 8,
        "width": 1,
        "height": 1,
        "name": "-3",
        "label": "-3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3310,
        "y": 1120,
        "wires": []
    },
    {
        "id": "9e3b71158e96bc72",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 10,
        "width": 1,
        "height": 1,
        "name": "-2",
        "label": "-2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3430,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e4289e6df798aded",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 12,
        "width": 1,
        "height": 1,
        "name": "-1",
        "label": "-1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3570,
        "y": 1120,
        "wires": []
    },
    {
        "id": "1a2eb3d5c6df6689",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 17,
        "width": 1,
        "height": 1,
        "name": "+1",
        "label": "+1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3310,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d108ae1e680ef408",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 19,
        "width": 1,
        "height": 1,
        "name": "+2",
        "label": "+2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3430,
        "y": 1380,
        "wires": []
    },
    {
        "id": "343b29ce395a0a6c",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 21,
        "width": 1,
        "height": 1,
        "name": "+3",
        "label": "+3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3550,
        "y": 1380,
        "wires": []
    },
    {
        "id": "2c23b6aa75c7b7af",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 3910,
        "y": 500,
        "wires": [
            [
                "7be56a800b9fcf2b"
            ]
        ]
    },
    {
        "id": "851193f076b61dae",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "Load on boot WAR",
        "func": "var var1d          = global.get('SP_DIRECT_virt',\"file\");\nvar var2d          = global.get('Correction_0_WAR_on_off',\"file\");\nvar var3d          = global.get('war_ot1',\"file\");\nvar var4d          = global.get('war_ot2',\"file\");\nvar var5d          = global.get('war_ot3',\"file\");\nvar var6d          = global.get('war_wt1',\"file\");\nvar var7d          = global.get('war_wt2',\"file\");\nvar var8d          = global.get('war_wt3',\"file\");\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={};\n\n\nmsg1.payload = var1d;\nif(var1d === undefined) {msg1=null;}\nmsg2.payload = var2d;\nif(var2d === undefined) {msg2=null;}\nmsg3.payload = var3d;\nif(var3d === undefined) {msg3=null;}\nmsg4.payload = var4d;\nif(var4d === undefined) {msg4=null;}\nmsg5.payload = var5d;\nif(var5d === undefined) {msg5=null;}\nmsg6.payload = var6d;\nif(var6d === undefined) {msg6=null;}\nmsg7.payload = var7d;\nif(var7d === undefined) {msg7=null;}\nmsg8.payload = var8d;\nif(var8d === undefined) {msg8=null;}\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8];\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n\nif (global.get('SP_DIRECT_virt',\"file\")===undefined)\n    {\n        global.set('SP_DIRECT_virt',20,\"file\")\n    }\n    \n    \n    \nif (global.get('Correction_0_WAR_on_off',\"file\")===undefined)\n    {\n        global.set('Correction_0_WAR_on_off',0,\"file\")\n    }",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 280,
        "wires": [
            [
                "2b047c13df04a42f"
            ],
            [
                "5b6bca440f428676",
                "a420b20de6b2ada1"
            ],
            [
                "c69f0e786a1c82c5"
            ],
            [
                "7e21ed46cf7dee97"
            ],
            [
                "725025f5186f97ec"
            ],
            [
                "bfa0add14cbc38a4"
            ],
            [
                "acee7f42b7663507"
            ],
            [
                "7fa36f769ef4e859"
            ]
        ],
        "outputLabels": [
            "SP_DIRECT_virt",
            "Correction_0_WAR_on_off",
            "war_ot1",
            "war_ot2",
            "war_ot3",
            "war_wt1",
            "war_wt2",
            "war_wt3"
        ]
    },
    {
        "id": "2bd126203e9f2afe",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "1 Trigger / 3 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 2920,
        "y": 200,
        "wires": [
            [
                "851193f076b61dae"
            ]
        ]
    },
    {
        "id": "12d8ca21b240be10",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "Load on boot 4",
        "func": "var DHW_Target_Temp         = global.get('DHW_Target_Temp',\"file\");\n//let msg1={};\nmsg.payload = DHW_Target_Temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 120,
        "wires": [
            [
                "e55a57ba3591d9b3"
            ]
        ],
        "outputLabels": [
            "DHW_Target_Temp"
        ]
    },
    {
        "id": "33c440195bf3323a",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "1 Trigger / minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "12d8ca21b240be10"
            ]
        ]
    },
    {
        "id": "1fe6730f6c3b9c56",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "Load on boot SS",
        "func": "var Correction_2_softstart_on_off           = global.get('Correction_2_softstart_on_off',\"file\");\n\nlet msg1={};\n\nmsg1.payload = Correction_2_softstart_on_off;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n\nif (global.get('Correction_2_softstart_on_off',\"file\")===undefined)\n    {\n        global.set('Correction_2_softstart_on_off',0,\"file\");\n    }",
        "finalize": "",
        "libs": [],
        "x": 2860,
        "y": 1860,
        "wires": [
            [
                "878d2c583a0e53ce",
                "99868ef9b40d0be7"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off"
        ]
    },
    {
        "id": "8f56db5edb38b0b0",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "1 Trigger / minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 2860,
        "y": 1820,
        "wires": [
            [
                "1fe6730f6c3b9c56"
            ]
        ]
    },
    {
        "id": "d644ad699941de34",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "c7d23e4a20ddaedf",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "T outside (advanced Functions tab)",
        "label": "WAR",
        "format": "({{msg.payload}} °C)",
        "layout": "row-left",
        "className": "",
        "x": 3640,
        "y": 360,
        "wires": []
    },
    {
        "id": "d0a41d3a1d0af639",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "c7d23e4a20ddaedf",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "RTC text",
        "label": "RTC",
        "format": "({{msg.payload}} °C)",
        "layout": "row-left",
        "className": "",
        "x": 3160,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c9a9e60e28a5fd85",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "group": "c7d23e4a20ddaedf",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "SoftStart txt",
        "label": "SoftStart",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3110,
        "y": 1940,
        "wires": []
    },
    {
        "id": "e886ebc63999cc78",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "c7d23e4a20ddaedf",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "spacer 6x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4150,
        "y": 1240,
        "wires": []
    },
    {
        "id": "a62c0fc7b0690e78",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('FloorHeatDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'FloorHeatDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1320,
        "wires": [
            [
                "fe0a6ae4bedf1f06"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "0b88b30588567529",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('FloorCoolDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'FloorCoolDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1360,
        "wires": [
            [
                "2bedcec616d6ded1"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "09c088b66c7d19b8",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('DHWHeatDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'DHWHeatDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1400,
        "wires": [
            [
                "c0505a76cb674cd3"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "ca5f12c71474804d",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HeaterDelayTime',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HeaterDelayTime'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1440,
        "wires": [
            [
                "81d5a8b7c2cd4a24"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "057a1704dec4a234",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HeaterStartDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HeaterStartDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1480,
        "wires": [
            [
                "f3a3360439dadec2"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "f3e699b6fab67357",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HeaterStopDelta',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HeaterStopDelta'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1520,
        "wires": [
            [
                "f06ae55ce6c283ac"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "65d056550e366c3a",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('PanasonicMainScheduler',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'PanasonicMainScheduler'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1560,
        "wires": [
            [
                "6342467bdb93414d"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "06972d082b4edb12",
        "type": "ui_dropdown",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Quiet Mode",
        "label": "Quiet Mode",
        "tooltip": "Set quiet mode level",
        "place": "Select option",
        "group": "3f5561b0ad3ed66c",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Level 0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Level 1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Level 2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Level 3",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1830,
        "y": 260,
        "wires": [
            [
                "f5d3afe52705dec7",
                "8c120546f2678ef0"
            ]
        ]
    },
    {
        "id": "9f3e792fa9556646",
        "type": "ui_dropdown",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Operation Mode",
        "label": "Operation Mode",
        "tooltip": "Sets operating mode",
        "place": "Select option",
        "group": "3f5561b0ad3ed66c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Heat only",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Cool only",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Auto",
                "value": 2,
                "type": "num"
            },
            {
                "label": "DHW only",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Heat+DHW",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Cool+DHW",
                "value": 5,
                "type": "num"
            },
            {
                "label": "Auto+DHW",
                "value": 6,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1840,
        "y": 360,
        "wires": [
            [
                "e1181fa55063e5cb"
            ]
        ]
    },
    {
        "id": "80ebb669c4d1bb74",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Heatpump power",
        "label": "Heatpump power",
        "tooltip": "",
        "group": "4404bf36f6bca7c1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1850,
        "y": 200,
        "wires": [
            [
                "e431fbafac457e57"
            ]
        ]
    },
    {
        "id": "711165c2387d9e50",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Pump 100%",
        "label": "Pomp 100%",
        "tooltip": "Set pump speed to maximum",
        "group": "91122444622f238a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1650,
        "y": 420,
        "wires": [
            [
                "1dd17dd31530ea92"
            ]
        ]
    },
    {
        "id": "0464c0bffa5b501d",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET1 SetHeatpump",
        "topic": "panasonic_heat_pump/commands/SetHeatpump",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2380,
        "y": 160,
        "wires": []
    },
    {
        "id": "59cf6b8edb2d7203",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET3 SetQuietMode",
        "topic": "panasonic_heat_pump/commands/SetQuietMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2380,
        "y": 300,
        "wires": []
    },
    {
        "id": "e4482a8587a55b51",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET9 SetOperationMode",
        "topic": "panasonic_heat_pump/commands/SetOperationMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2390,
        "y": 380,
        "wires": []
    },
    {
        "id": "b3f7f9ca1ec60e83",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET14 SetPump",
        "topic": "panasonic_heat_pump/commands/SetPump",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2370,
        "y": 420,
        "wires": []
    },
    {
        "id": "587abf5315fb17fc",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "OperationMode",
        "links": [
            "35995d04250be2bc",
            "478c67efb4a811b8",
            "07ab907a4c7247f3",
            "89f0b8222cc45cab",
            "061accd649e90d5c",
            "614f9a16ee9ae8c7"
        ],
        "x": 1595,
        "y": 380,
        "wires": [
            [
                "9f3e792fa9556646",
                "e1181fa55063e5cb"
            ]
        ]
    },
    {
        "id": "1a4d27c6a3e94745",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "conversion function",
        "func": "// SET15 SetMaxPumpDuty decimal value translate to hexadecimal in service menu 64 to 254\n// First find out the upper and lower limit of the waterpump. Trial and arror by injecting a number as payload to the mqtt topic. fill them in in the two lines below!!!\n//\nvar lowerlimit=64; // Lowest value\nvar upperlimit=254; // Hihghes value\n// Note, the default setting was 149, which is ~45%\n\nvar range=(upperlimit-lowerlimit); // This is the range of operation for the waterpump. You need to test this manually and correct the values if needed.\n\n\nmsg.payload = ((msg.payload) / 100 * range) + lowerlimit; // calculation\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 580,
        "wires": [
            [
                "ab9bc932797dc648"
            ]
        ]
    },
    {
        "id": "ab9bc932797dc648",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET15 SetMaxPumpDuty",
        "topic": "panasonic_heat_pump/commands/SetMaxPumpDuty",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2390,
        "y": 580,
        "wires": []
    },
    {
        "id": "f5d3afe52705dec7",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 300,
        "wires": [
            [
                "59cf6b8edb2d7203"
            ]
        ]
    },
    {
        "id": "e1181fa55063e5cb",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 380,
        "wires": [
            [
                "e4482a8587a55b51"
            ]
        ]
    },
    {
        "id": "26aba23a915ba45a",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "links": [
            "609f82934b0df3ba"
        ],
        "x": 1595,
        "y": 300,
        "wires": [
            [
                "f5d3afe52705dec7",
                "06972d082b4edb12"
            ]
        ]
    },
    {
        "id": "123d8988d7dd78d4",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "1 Trigger / 30 minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "x": 1380,
        "y": 200,
        "wires": [
            [
                "570216c6ac37740d",
                "0208ec1c75aee83b",
                "e4554e610825af0a",
                "ea12012042d7f94f",
                "900964365bc3c801",
                "af6a64b5b0304ccd"
            ]
        ]
    },
    {
        "id": "8d67e4b94d19ae38",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET2 SetHolidayMode",
        "topic": "panasonic_heat_pump/commands/SetHolidayMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2380,
        "y": 700,
        "wires": []
    },
    {
        "id": "0b4166e29cb85045",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET4 SetPowerfulMode",
        "topic": "panasonic_heat_pump/commands/SetPowerfulMode",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2390,
        "y": 740,
        "wires": []
    },
    {
        "id": "ce25acdaadd8fc9b",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET10 SetForceDHW",
        "topic": "panasonic_heat_pump/commands/SetForceDHW",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2380,
        "y": 960,
        "wires": []
    },
    {
        "id": "f4dfbbc80536441c",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET11 SetDHWTemp",
        "topic": "panasonic_heat_pump/commands/SetDHWTemp",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2380,
        "y": 1020,
        "wires": []
    },
    {
        "id": "24adfa00d0c84637",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET12 SetForceDefrost",
        "topic": "panasonic_heat_pump/commands/SetForceDefrost",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2390,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5615407948b0659a",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET13 SetForceSterilization",
        "topic": "panasonic_heat_pump/commands/SetForceSterilization",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2400,
        "y": 1100,
        "wires": []
    },
    {
        "id": "fbfa4c829171ca15",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET17 SetZones",
        "topic": "panasonic_heat_pump/commands/SetZones",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2370,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ee04f58ddf2b3f32",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET18 SetFloorHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorHeatDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2390,
        "y": 1320,
        "wires": []
    },
    {
        "id": "d9303af1404278c0",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET19 SetFloorCoolDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorCoolDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2390,
        "y": 1360,
        "wires": []
    },
    {
        "id": "0e74c767a47d2cf8",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET20 SetDHWHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetDHWHeatDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2400,
        "y": 1400,
        "wires": []
    },
    {
        "id": "7508e892b1b76281",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET21 SetHeaterDelayTime",
        "topic": "panasonic_heat_pump/commands/SetHeaterDelayTime",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2400,
        "y": 1440,
        "wires": []
    },
    {
        "id": "fa5cb59968c54d87",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET22 SetHeaterStartDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStartDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2400,
        "y": 1480,
        "wires": []
    },
    {
        "id": "62c988876e63bd3d",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET23 SetHeaterStopDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStopDelta",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2400,
        "y": 1520,
        "wires": []
    },
    {
        "id": "96f77d72e0d09d0b",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET24 SetMainSchedule",
        "topic": "panasonic_heat_pump/commands/SetMainSchedule",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2390,
        "y": 1560,
        "wires": []
    },
    {
        "id": "32bdd882f9fda307",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "d": true,
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET16 SetCurves",
        "topic": "panasonic_heat_pump/commands/SetCurves",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2370,
        "y": 1220,
        "wires": []
    },
    {
        "id": "3fa9bce6765e0559",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "d": true,
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET5 SetZ1HeatRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1HeatRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2430,
        "y": 800,
        "wires": []
    },
    {
        "id": "16a799a272f9d399",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "d": true,
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET6 SetZ1CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1CoolRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2430,
        "y": 840,
        "wires": []
    },
    {
        "id": "75bbeea1fe0248d1",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "d": true,
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET7 SetZ2HeatRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2HeatRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2430,
        "y": 880,
        "wires": []
    },
    {
        "id": "47e3cd4915602cf9",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "d": true,
        "g": "5c49f3cb8f8ec4b0",
        "name": "SET8 SetZ2CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2CoolRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2430,
        "y": 920,
        "wires": []
    },
    {
        "id": "fde361a7c1b89194",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Force DHW",
        "label": "Force DHW",
        "tooltip": "Forces DHW cycle (Operating mode should be set first to inlcude DWH mode (operation mode 3,4,5 or 6) to be effective.",
        "group": "3f5561b0ad3ed66c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1770,
        "y": 960,
        "wires": [
            [
                "c4ab0c4a63c41a7e"
            ]
        ]
    },
    {
        "id": "15ceb9e2a7d0fbb0",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "d": true,
        "g": "5c49f3cb8f8ec4b0",
        "name": "Holiday Mode",
        "label": "Holiday Mode",
        "tooltip": "Off / On Holiday mode",
        "group": "3f5561b0ad3ed66c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1840,
        "y": 700,
        "wires": [
            [
                "3347423e986c456f",
                "bffd799064f16e5f"
            ]
        ]
    },
    {
        "id": "6155a471ed9a4209",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 1320,
        "y": 960,
        "wires": [
            [
                "3823e94cbb9eea94",
                "b3a84db57ea88e4d",
                "454ccc604b58ec07",
                "c4e9ab182c12950d",
                "abb144dfe8f3fac3",
                "767e5ea3e3d74218"
            ]
        ]
    },
    {
        "id": "22d9b5306c32e0a0",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "DHW (SP)",
        "label": "DHW (SP)",
        "tooltip": "Set target water temperature for DHW",
        "group": "e06eb2ab51f8ba38",
        "order": 9,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "40",
        "max": "75",
        "step": 1,
        "className": "",
        "x": 1770,
        "y": 1020,
        "wires": [
            [
                "ad8a47695289e208"
            ]
        ]
    },
    {
        "id": "a1988fd5b64b9138",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1020,
        "wires": [
            [
                "f4dfbbc80536441c",
                "93557709b1849c5c"
            ]
        ]
    },
    {
        "id": "2af6d2733b382ccd",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Force Defrost",
        "label": "Force Defrost",
        "tooltip": "Off / On Force defrost cycle",
        "group": "3f5561b0ad3ed66c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1780,
        "y": 1060,
        "wires": [
            [
                "976dea314b622c06",
                "a3cb54c6121cf8ef"
            ]
        ]
    },
    {
        "id": "6d020e33561c33f7",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Force sterilization",
        "label": "Force sterilization",
        "tooltip": "Off / On Force sterilization cycle",
        "group": "3f5561b0ad3ed66c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1790,
        "y": 1100,
        "wires": [
            [
                "5a50af13f106e619"
            ]
        ]
    },
    {
        "id": "0e12f9702f321baf",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Force sterilization",
        "links": [
            "8d6479e24b83b5e8",
            "72c312c10eda5067"
        ],
        "x": 1635,
        "y": 1080,
        "wires": [
            [
                "6d020e33561c33f7"
            ]
        ]
    },
    {
        "id": "6342467bdb93414d",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Panasonic Main Scheduler",
        "label": "Panasonic Main Scheduler",
        "tooltip": "Off / On. Note: It is possible to use both Panasonic and NodeRed GUI scheduler running at the same time. But make sure you know, and the schedules are not conflicting. ",
        "group": "4404bf36f6bca7c1",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1820,
        "y": 1560,
        "wires": [
            [
                "a34f3895492bdb0b",
                "47b9c4f0569d0664"
            ]
        ]
    },
    {
        "id": "f06ae55ce6c283ac",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Heater Stop Delta",
        "label": "Stop Delta",
        "tooltip": "Turn off backup-heater again when the temperature is xx °C lower than setpoint (only J-series)",
        "group": "e06eb2ab51f8ba38",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-8",
        "max": "0",
        "step": 1,
        "className": "",
        "x": 1790,
        "y": 1520,
        "wires": [
            [
                "6ecde2f5829ff329",
                "d72d36208a501ecb"
            ]
        ]
    },
    {
        "id": "f3a3360439dadec2",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Heater Start Delta",
        "label": "Start Delta",
        "tooltip": "Turn on backup-heater when the temperature is xx °C lower than setpoint (only J-series)",
        "group": "e06eb2ab51f8ba38",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-10",
        "max": "-2",
        "step": 1,
        "className": "",
        "x": 1790,
        "y": 1480,
        "wires": [
            [
                "b716db861e8f424d",
                "1ae6e3383669ca96"
            ]
        ]
    },
    {
        "id": "81d5a8b7c2cd4a24",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Heater Delay Time",
        "label": "Delay Time",
        "tooltip": "In case the pump does not achieve its setpoint, wait xx minutes before activating the backup-heater (only J-series)",
        "group": "e06eb2ab51f8ba38",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} min",
        "min": "0",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 1790,
        "y": 1440,
        "wires": [
            [
                "90109b95306f9bfd",
                "d5417c789a2d741c"
            ]
        ]
    },
    {
        "id": "c0505a76cb674cd3",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "DHW Heat Delta",
        "label": "DHW Heat Delta",
        "tooltip": "Set DHW heating delta in degrees C",
        "group": "e06eb2ab51f8ba38",
        "order": 8,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-10",
        "max": "0",
        "step": 1,
        "className": "",
        "x": 1780,
        "y": 1400,
        "wires": [
            [
                "751a714439c831d4",
                "24d9661f4ddabd43"
            ]
        ]
    },
    {
        "id": "2bedcec616d6ded1",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Floor Cool Delta",
        "label": "Cool Delta",
        "tooltip": "Set floor cooling delta in degrees C",
        "group": "e06eb2ab51f8ba38",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 1780,
        "y": 1360,
        "wires": [
            [
                "1f33d0225e34752f",
                "cf5f05f860a8889f"
            ]
        ]
    },
    {
        "id": "fe0a6ae4bedf1f06",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Floor Heat Delta",
        "label": "Heat Delta",
        "tooltip": "Set floor heating delta in degrees C",
        "group": "e06eb2ab51f8ba38",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 1780,
        "y": 1320,
        "wires": [
            [
                "86d484889622b393",
                "d41af73e6d6d3554"
            ]
        ]
    },
    {
        "id": "ca2185dbae028593",
        "type": "ui_dropdown",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Powerful Mode",
        "label": "Powerful Mode",
        "tooltip": "Choose duration",
        "place": "Set powerful mode run time in minutes",
        "group": "3f5561b0ad3ed66c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "0 minutes (OFF)",
                "value": 0,
                "type": "num"
            },
            {
                "label": "30 minutes",
                "value": 1,
                "type": "num"
            },
            {
                "label": "60 minutes",
                "value": 2,
                "type": "num"
            },
            {
                "label": "90 minutes",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1840,
        "y": 740,
        "wires": [
            [
                "3319341e875c1c34",
                "55671ed84534c41a"
            ]
        ]
    },
    {
        "id": "f311fa24f1f2eff1",
        "type": "ui_dropdown",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Set Zones",
        "label": "Set Zones",
        "tooltip": "Set the active zones",
        "place": "Select option",
        "group": "4404bf36f6bca7c1",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Zone 1 active",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Zone 2 active",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Zone 1 and 2 active",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1770,
        "y": 1280,
        "wires": [
            [
                "80f72faade28b47c",
                "51f1764ce6fbd8b1"
            ]
        ]
    },
    {
        "id": "70bdf9a1b9ddbe08",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "TOP44 - panasonic_heat_pump/main/Error",
        "topic": "panasonic_heat_pump/main/Error",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1740,
        "y": 1620,
        "wires": [
            [
                "a58dd1a5279243db"
            ]
        ]
    },
    {
        "id": "a58dd1a5279243db",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "4404bf36f6bca7c1",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Current Error",
        "label": "Current Error",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2350,
        "y": 1620,
        "wires": []
    },
    {
        "id": "afa016c8c8bf6f66",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "PumpMaxFlowSetting",
        "links": [
            "b2d169e04c5ab339",
            "c723f3f3bbdacfe7"
        ],
        "x": 2295,
        "y": 540,
        "wires": []
    },
    {
        "id": "817eab424cbe54b8",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2190,
        "y": 520,
        "wires": [
            [
                "1a4d27c6a3e94745"
            ]
        ]
    },
    {
        "id": "3347423e986c456f",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "HolidayMode",
        "links": [
            "2c5d8d5f82e25b9d"
        ],
        "x": 2195,
        "y": 700,
        "wires": []
    },
    {
        "id": "3319341e875c1c34",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "PowerfulMode",
        "mode": "link",
        "links": [
            "7463c409a280781b"
        ],
        "x": 2195,
        "y": 740,
        "wires": []
    },
    {
        "id": "c4ab0c4a63c41a7e",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 960,
        "wires": [
            [
                "ce25acdaadd8fc9b",
                "fde361a7c1b89194",
                "29bf105c977fa4a2"
            ]
        ]
    },
    {
        "id": "29bf105c977fa4a2",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "ForceDHW",
        "links": [
            "3469894785389b69",
            "67b8e26842cf7615",
            "836e024c750878de"
        ],
        "x": 2195,
        "y": 960,
        "wires": []
    },
    {
        "id": "976dea314b622c06",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "ForceDefrost",
        "links": [
            "77f0e10c3c752749"
        ],
        "x": 2195,
        "y": 1060,
        "wires": []
    },
    {
        "id": "399a47e38288087e",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "1 Trigger / 30 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 1360,
        "y": 1280,
        "wires": [
            [
                "65d056550e366c3a",
                "f3e699b6fab67357",
                "057a1704dec4a234",
                "ca5f12c71474804d",
                "09c088b66c7d19b8",
                "0b88b30588567529",
                "a62c0fc7b0690e78",
                "996d525c5219261b",
                "b46bb5543c33cb6b",
                "cb31369b84adaaa8",
                "ee42d0fc4ddda0ef",
                "93f39094cecfa074"
            ]
        ]
    },
    {
        "id": "80f72faade28b47c",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "SetZones",
        "links": [
            "c34c0a1d2b801444"
        ],
        "x": 2195,
        "y": 1280,
        "wires": []
    },
    {
        "id": "86d484889622b393",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "FloorHeatDelta",
        "links": [
            "612fa06c85db220d"
        ],
        "x": 2195,
        "y": 1320,
        "wires": []
    },
    {
        "id": "1f33d0225e34752f",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "FloorCoolDelta",
        "mode": "link",
        "links": [
            "0034a105fd356a46",
            "04681d5d9dd62456"
        ],
        "x": 2195,
        "y": 1360,
        "wires": []
    },
    {
        "id": "751a714439c831d4",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "DHWHeatDelta",
        "links": [
            "e60199296e7cde7b"
        ],
        "x": 2195,
        "y": 1400,
        "wires": []
    },
    {
        "id": "90109b95306f9bfd",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "HeaterDelayTime",
        "links": [
            "2218fb7f9c3db48d"
        ],
        "x": 2195,
        "y": 1440,
        "wires": []
    },
    {
        "id": "b716db861e8f424d",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "HeaterStartDelta",
        "links": [
            "2cbea65d0779e81a"
        ],
        "x": 2195,
        "y": 1480,
        "wires": []
    },
    {
        "id": "6ecde2f5829ff329",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "HeaterStopDelta",
        "links": [
            "bb66afd28bb43f61"
        ],
        "x": 2195,
        "y": 1520,
        "wires": []
    },
    {
        "id": "a34f3895492bdb0b",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "PanasonicMainScheduler",
        "links": [
            "fd4587f96473755f",
            "e8d5ff3e213ef505"
        ],
        "x": 2195,
        "y": 1560,
        "wires": []
    },
    {
        "id": "a3cb54c6121cf8ef",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1060,
        "wires": [
            [
                "24adfa00d0c84637"
            ]
        ]
    },
    {
        "id": "51f1764ce6fbd8b1",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1280,
        "wires": [
            [
                "fbfa4c829171ca15"
            ]
        ]
    },
    {
        "id": "f82414f6079cee26",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1320,
        "wires": [
            [
                "ee04f58ddf2b3f32"
            ]
        ]
    },
    {
        "id": "db96b90be8932e0a",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1360,
        "wires": [
            [
                "d9303af1404278c0"
            ]
        ]
    },
    {
        "id": "9756e5a9b716ae97",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1400,
        "wires": [
            [
                "0e74c767a47d2cf8"
            ]
        ]
    },
    {
        "id": "cc43946102e053b2",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1440,
        "wires": [
            [
                "7508e892b1b76281"
            ]
        ]
    },
    {
        "id": "a4a44f2b59a5a5cf",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1480,
        "wires": [
            [
                "fa5cb59968c54d87"
            ]
        ]
    },
    {
        "id": "0798e12ef47695a6",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1520,
        "wires": [
            [
                "62c988876e63bd3d"
            ]
        ]
    },
    {
        "id": "47b9c4f0569d0664",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1560,
        "wires": [
            [
                "96f77d72e0d09d0b"
            ]
        ]
    },
    {
        "id": "8c120546f2678ef0",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "links": [
            "011d067460eddf40"
        ],
        "x": 2295,
        "y": 260,
        "wires": []
    },
    {
        "id": "570216c6ac37740d",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var2a         = global.get('Quiet_Mode_Level',\"file\");\nlet msg1={};\n\nif(var2a === undefined)     {return null;}\nelse                        {msg1.payload = var2a;\n                            msg1.topic = \"Quiet Mode\"; \n                            return msg1;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 260,
        "wires": [
            [
                "06972d082b4edb12"
            ]
        ],
        "outputLabels": [
            "Quiet Mode"
        ]
    },
    {
        "id": "0208ec1c75aee83b",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('Operating_Mode_State',\"file\");\nlet msg1={};\n\nif (var1 === undefined)      {\n                                return null;\n                            }\n\nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'Operation Mode'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 340,
        "wires": [
            [
                "9f3e792fa9556646"
            ]
        ],
        "outputLabels": [
            "Operation Mode"
        ]
    },
    {
        "id": "e4554e610825af0a",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var Heatpump_State                    = global.get('Heatpump_State',\"file\");\nlet msg1={};\n\nif (Heatpump_State === undefined)      \n    {\n        return null;    \n    }\n\nelse\n    {\n        msg1.payload = Heatpump_State;\n        msg1.topic = 'Heatpump State'; \n        return msg1;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 200,
        "wires": [
            [
                "80ebb669c4d1bb74",
                "59a6e3a342814b35"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "ea12012042d7f94f",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('PumpMaxFlowSetting',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            var1 = (var1-64) / (254-64) * 100;\n                            msg1.payload = var1;\n                            msg1.topic = 'PumpMaxFlowSetting'; \n                            \n\n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 620,
        "wires": [
            [
                "4ef40e6a332b66c9",
                "d1e9f271ab245c3c"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "900964365bc3c801",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('HolidayMode',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'HolidayMode'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 700,
        "wires": [
            [
                "15ceb9e2a7d0fbb0"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "af6a64b5b0304ccd",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('PowerfulMode',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'PowerfulMode'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 740,
        "wires": [
            [
                "ca2185dbae028593"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "3823e94cbb9eea94",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('ForceDHW',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'ForceDHW'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 960,
        "wires": [
            [
                "fde361a7c1b89194"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "b3a84db57ea88e4d",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('DHW_Target_Temp',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'DHW_Target_Temp'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1020,
        "wires": [
            [
                "22d9b5306c32e0a0"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "454ccc604b58ec07",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('ForceDefrost',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'ForceDefrost'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1060,
        "wires": [
            [
                "2af6d2733b382ccd"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "996d525c5219261b",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('SetZones',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'SetZones'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1280,
        "wires": [
            [
                "f311fa24f1f2eff1"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "5a50af13f106e619",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1100,
        "wires": [
            [
                "5615407948b0659a",
                "e746c2626c1df614",
                "6d020e33561c33f7"
            ]
        ]
    },
    {
        "id": "e746c2626c1df614",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "ForceSterilization",
        "mode": "link",
        "links": [
            "6226f8037ab37406",
            "ace33c56590ccc4d"
        ],
        "x": 2195,
        "y": 1100,
        "wires": []
    },
    {
        "id": "c4e9ab182c12950d",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var var1                    = global.get('SetForceSterilization',\"file\");\nlet msg1={};\n\nif(var1 === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = var1;\n                            msg1.topic = 'SetForceSterilization'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1100,
        "wires": [
            [
                "6d020e33561c33f7"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "cbb8e05268e0b804",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "HEAT SP lower limit",
        "label": "SP lower limit",
        "tooltip": "Set the lowest allowed water temperature setpoint.",
        "group": "32e927aa7dc43b2a",
        "order": 9,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "20",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 1800,
        "y": 1160,
        "wires": [
            [
                "3aaf7c56d6e89e4b"
            ]
        ]
    },
    {
        "id": "a33eb5a40c901bc6",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "HEAT SP upper limit",
        "label": "SP upper limit",
        "tooltip": "Set the highest allowed water temperature setpoint.",
        "group": "32e927aa7dc43b2a",
        "order": 10,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "21",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 1800,
        "y": 1200,
        "wires": [
            [
                "7d36ea7ba101ae3b"
            ]
        ]
    },
    {
        "id": "abb144dfe8f3fac3",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var HEAT_SP_lower_limit                    = global.get('HEAT_SP_lower_limit',\"file\");\nlet msg1={};\n\nif(HEAT_SP_lower_limit === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = HEAT_SP_lower_limit;\n                            msg1.topic = 'HEAT_SP_lower_limit'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n\nif (global.get('HEAT_SP_lower_limit',\"file\")===undefined)\n    {\n        global.set('HEAT_SP_lower_limit',20,\"file\");\n    }",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1160,
        "wires": [
            [
                "cbb8e05268e0b804"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "767e5ea3e3d74218",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "var HEAT_SP_upper_limit                    = global.get('HEAT_SP_upper_limit',\"file\");\nlet msg1={};\n\nif(HEAT_SP_upper_limit === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = HEAT_SP_upper_limit;\n                            msg1.topic = 'HEAT_SP_upper_limit'; \n                            return msg1;\n                            }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nif (global.get('HEAT_SP_upper_limit',\"file\")===undefined)\n    {\n        global.set('HEAT_SP_upper_limit',100,\"file\");\n    }\n",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1200,
        "wires": [
            [
                "a33eb5a40c901bc6"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "3aaf7c56d6e89e4b",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1160,
        "wires": [
            [
                "b3a78c2dd8516eae"
            ]
        ]
    },
    {
        "id": "7d36ea7ba101ae3b",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 1200,
        "wires": [
            [
                "4cd968e37828a56e"
            ]
        ]
    },
    {
        "id": "b3a78c2dd8516eae",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "HEAT SP lower limit",
        "links": [
            "2a8312727abe76b3"
        ],
        "x": 2195,
        "y": 1160,
        "wires": []
    },
    {
        "id": "4cd968e37828a56e",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "HEAT SP upper limit",
        "links": [
            "3fab9c839d56fb6e"
        ],
        "x": 2195,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d53e6e94224a71a8",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3970,
        "y": 220,
        "wires": []
    },
    {
        "id": "7e884e8968ef4414",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "TOP62 - panasonic_heat_pump/main/Fan1_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan1_Motor_Speed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 1040,
        "wires": [
            [
                "b98aa4a2de18c545"
            ]
        ]
    },
    {
        "id": "281ff13fefe3c954",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "TOP63 - panasonic_heat_pump/main/Fan2_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan2_Motor_Speed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 1160,
        "wires": [
            [
                "419c79e5b556e99b"
            ]
        ]
    },
    {
        "id": "b98aa4a2de18c545",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "group": "47608011c629d4a1",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "Fan1",
        "label": "Fan 1",
        "format": "{{msg.payload}} RPM",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 1040,
        "wires": []
    },
    {
        "id": "2045ac2fb303a584",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "group": "47608011c629d4a1",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "Compressor runtime",
        "label": "Compressor runtime",
        "format": "{{msg.payload}} Min",
        "layout": "row-spread",
        "className": "",
        "x": 960,
        "y": 980,
        "wires": []
    },
    {
        "id": "a772d2026681f718",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "set HeatPump Power state",
        "links": [
            "5701fbba24da9674",
            "712675fbf9eebbb4",
            "1405869d83334a42",
            "c7702ce870636ce5",
            "6c8db992920f63e7",
            "80cc25379d181149"
        ],
        "x": 1645,
        "y": 160,
        "wires": [
            [
                "59a6e3a342814b35"
            ]
        ]
    },
    {
        "id": "372cb6d71716d9dd",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "Store information",
        "func": "var ss_chart = msg;\nglobal.set(\"ss_chart\", ss_chart,\"file\") || [];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3950,
        "y": 1840,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "a515de9398570253",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "Load information",
        "func": "let msg1={};\nmsg1 = global.get(\"ss_chart\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3440,
        "y": 1780,
        "wires": [
            [
                "3a082226d5ea31c8"
            ]
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "ba0cdca2b49676aa",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 3270,
        "y": 1780,
        "wires": [
            [
                "a515de9398570253"
            ]
        ]
    },
    {
        "id": "a774464a96bfae2b",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 3950,
        "y": 1800,
        "wires": [
            [
                "372cb6d71716d9dd"
            ]
        ]
    },
    {
        "id": "bdaa5beb6a03a784",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "b577e22f72c47989",
        "name": "Store information",
        "func": "var rtc_chart = msg;\nglobal.set(\"rtc_chart\", rtc_chart,\"file\") || [];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4190,
        "y": 1540,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "fdf0433c7da9344a",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "b577e22f72c47989",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 4180,
        "y": 1500,
        "wires": [
            [
                "bdaa5beb6a03a784"
            ]
        ]
    },
    {
        "id": "6a80ed713dd2c778",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "Load information",
        "func": "let msg1={};\nmsg1 = global.get(\"rtc_chart\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3810,
        "y": 1480,
        "wires": [
            [
                "8fe75e3b31b2c535"
            ]
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "4414591a125a0d81",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 3640,
        "y": 1480,
        "wires": [
            [
                "6a80ed713dd2c778"
            ]
        ]
    },
    {
        "id": "baf753b8cd513411",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "c3827f64106d8787",
        "name": "Store information",
        "func": "var war_chart = msg;\nglobal.set(\"war_chart\", war_chart,\"file\") || [];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4180,
        "y": 540,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "51f2e65505d50a9c",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "c3827f64106d8787",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 4170,
        "y": 500,
        "wires": [
            [
                "baf753b8cd513411"
            ]
        ]
    },
    {
        "id": "8ca9702cd1fc76c9",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "Load information",
        "func": "let msg1={};\nmsg1 = global.get(\"war_chart\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3950,
        "y": 360,
        "wires": [
            [
                "7be56a800b9fcf2b"
            ]
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "f7d8d68abe563615",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "on boot",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "trigger",
        "payloadType": "str",
        "x": 3920,
        "y": 320,
        "wires": [
            [
                "8ca9702cd1fc76c9"
            ]
        ]
    },
    {
        "id": "4c4bbced9b193fe8",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "TOP15 - panasonic_heat_pump/main/Heat_Energy_Production",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Production",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1520,
        "wires": [
            [
                "bccc2f35ca625c20"
            ]
        ]
    },
    {
        "id": "25cb728a24f379e3",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "group": "a88e295848403708",
        "order": 2,
        "width": 26,
        "height": 8,
        "label": "Energy",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#056647",
            "#d1102b",
            "#0082cd",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1040,
        "y": 1600,
        "wires": [
            [
                "e47056c87a41e95a"
            ]
        ]
    },
    {
        "id": "68b56da3282ab9be",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "topic": "panasonic_heat_pump/main/Defrosting_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 1880,
        "wires": [
            [
                "a167b98e3a26ba21"
            ]
        ]
    },
    {
        "id": "c5f9acc27407296d",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "TOP40 - panasonic_heat_pump/main/DHW_Energy_Production",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Production",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1640,
        "wires": [
            [
                "9d1efffae054be5f"
            ]
        ]
    },
    {
        "id": "e533c0df3ffb50b8",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "TOP67 - panasonic_heat_pump/main/Compressor_Current",
        "topic": "panasonic_heat_pump/main/Compressor_Current",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 1820,
        "wires": [
            [
                "2be703d3fa6abbb5"
            ]
        ]
    },
    {
        "id": "a784229e2b2fc2db",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "group": "a88e295848403708",
        "order": 4,
        "width": 26,
        "height": 7,
        "label": "Efficiency",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 1940,
        "wires": [
            [
                "bb4c4ff51d32852c"
            ]
        ]
    },
    {
        "id": "f402bbd959151e26",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "COP calculated",
        "links": [
            "d3b670a5bad37254",
            "d387b7f300bf2191"
        ],
        "x": 820,
        "y": 1980,
        "wires": [
            [
                "a784229e2b2fc2db"
            ]
        ],
        "l": true
    },
    {
        "id": "86f71c7ce0c26911",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "TOP53 - panasonic_heat_pump/main/Eva_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Eva_Outlet_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 2040,
        "wires": [
            [
                "55cb9087a1fa52da"
            ]
        ]
    },
    {
        "id": "c235f1b422987934",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Current [A]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1820,
        "wires": [
            [
                "a784229e2b2fc2db"
            ]
        ]
    },
    {
        "id": "9f8ab375fd2d5f34",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Defrost State [-]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1880,
        "wires": [
            [
                "a784229e2b2fc2db"
            ]
        ]
    },
    {
        "id": "e17dc7a8865d30f7",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EVA outlet [°C]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 2040,
        "wires": [
            [
                "a784229e2b2fc2db"
            ]
        ]
    },
    {
        "id": "48d80364299cd944",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 970,
        "y": 1760,
        "wires": [
            [
                "a784229e2b2fc2db"
            ]
        ]
    },
    {
        "id": "84b03ecd7a0fe3f6",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Energy Production [HEAT]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1520,
        "wires": [
            [
                "25cb728a24f379e3"
            ]
        ]
    },
    {
        "id": "01e3354ceab81ba3",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Energy Consumption [HEAT]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1560,
        "wires": [
            [
                "25cb728a24f379e3",
                "e2d9817bab3bdf8e"
            ]
        ]
    },
    {
        "id": "fb3a305db7843da7",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Energy Production [DHW]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1640,
        "wires": [
            [
                "25cb728a24f379e3"
            ]
        ]
    },
    {
        "id": "0c804c93a39a9006",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Energy Consumption [DHW]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1700,
        "wires": [
            [
                "25cb728a24f379e3",
                "c2baac5a5c8773a9"
            ]
        ]
    },
    {
        "id": "e2d9817bab3bdf8e",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "Energy Consumption [HEAT]",
        "mode": "link",
        "links": [
            "0a964a94cb194778",
            "644ab58ff8db1099",
            "8cfd78f878b481c0",
            "09413c5fb62794f0"
        ],
        "x": 1085,
        "y": 1560,
        "wires": []
    },
    {
        "id": "c2baac5a5c8773a9",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "Energy Consumption [DHW]",
        "mode": "link",
        "links": [
            "20730213898479e0",
            "bcef6fbbc58113a6",
            "65b74d229815f083",
            "4d9976602e173a3b"
        ],
        "x": 1085,
        "y": 1700,
        "wires": []
    },
    {
        "id": "a553a4f68032bffa",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "links": [
            "b8cc7d5dac332386"
        ],
        "x": 235,
        "y": 1560,
        "wires": [
            [
                "c9864f89a4612f06"
            ]
        ]
    },
    {
        "id": "bccc2f35ca625c20",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1520,
        "wires": [
            [
                "84b03ecd7a0fe3f6"
            ]
        ]
    },
    {
        "id": "9d1efffae054be5f",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1640,
        "wires": [
            [
                "fb3a305db7843da7"
            ]
        ]
    },
    {
        "id": "f4d5818cacef07eb",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1700,
        "wires": [
            [
                "0c804c93a39a9006"
            ]
        ]
    },
    {
        "id": "2be703d3fa6abbb5",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1820,
        "wires": [
            [
                "c235f1b422987934"
            ]
        ]
    },
    {
        "id": "a167b98e3a26ba21",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1880,
        "wires": [
            [
                "9f8ab375fd2d5f34"
            ]
        ]
    },
    {
        "id": "55cb9087a1fa52da",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 2040,
        "wires": [
            [
                "e17dc7a8865d30f7"
            ]
        ]
    },
    {
        "id": "c9864f89a4612f06",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 1560,
        "wires": [
            [
                "01e3354ceab81ba3"
            ]
        ]
    },
    {
        "id": "80de4ef3c61f641a",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "rtc_off",
        "label": "",
        "tooltip": "Turn heatpump OFF when the Room Actual is xx °C above the Room Setpoint.",
        "group": "af26718b91621f02",
        "order": 25,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_off",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+20",
        "step": "0.1",
        "className": "",
        "x": 3190,
        "y": 1160,
        "wires": [
            [
                "7d2dfd43b50940c0",
                "133c17e0534f745e"
            ]
        ]
    },
    {
        "id": "bad23e4fdb495436",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 24,
        "width": 4,
        "height": 1,
        "name": "off",
        "label": "OFF: x °C > SetPoint:",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 2990,
        "y": 1420,
        "wires": []
    },
    {
        "id": "5d25c6457e081421",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "rtc_on",
        "label": "",
        "tooltip": "Turn heatpump ON when the Room Actual is xx °C below the Room Setpoint.",
        "group": "af26718b91621f02",
        "order": 27,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_on",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-20",
        "max": "2",
        "step": "0.1",
        "className": "",
        "x": 3190,
        "y": 1340,
        "wires": [
            [
                "7d2dfd43b50940c0",
                "133c17e0534f745e"
            ]
        ]
    },
    {
        "id": "6d3f481aaa3c5d9e",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 26,
        "width": 4,
        "height": 1,
        "name": "on",
        "label": "ON: x °C < SetPoint:",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 2990,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6c2e3e52b5c5031f",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "spacer 1x2",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4110,
        "y": 1160,
        "wires": []
    },
    {
        "id": "0f07048ebb903935",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "DHW_Target_Temp",
        "mode": "link",
        "links": [
            "b057826d31d24adf",
            "43d8738dec50dfb7"
        ],
        "x": 795,
        "y": 120,
        "wires": []
    },
    {
        "id": "691099cf98991b53",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "Dash - DHW (SP) link in",
        "links": [
            "0446ed3c16eadbe7",
            "900ca2a0e2694b1a",
            "8339e07a5f353522",
            "c50593739ea98afa",
            "93557709b1849c5c"
        ],
        "x": 415,
        "y": 80,
        "wires": [
            [
                "e55a57ba3591d9b3"
            ]
        ]
    },
    {
        "id": "213ef2905f57d68e",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "",
        "func": "global.set(\"chart-water-heat\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "838c79fe0ac1265a",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "",
        "func": "global.set(\"chart-water-dhw\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "c57b3258ba408cdd",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "",
        "func": "global.set(\"chart-kamertemperatuur\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "92b8e5a2ba78144d",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "load",
        "func": "let msg1={};\nmsg1 = global.get(\"chart-kamertemperatuur\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2200,
        "wires": [
            [
                "3e07e48ce677a44a"
            ]
        ]
    },
    {
        "id": "f6419690ac785bd9",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "load",
        "func": "let msg1={};\nmsg1 = global.get(\"chart-water-heat\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2260,
        "wires": [
            [
                "4f4727fe4411a36b"
            ]
        ]
    },
    {
        "id": "cedfedcaef9174da",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "load",
        "func": "let msg1={};\nmsg1 = global.get(\"chart-water-dhw\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2340,
        "wires": [
            [
                "1c37d2587fe54c74"
            ]
        ]
    },
    {
        "id": "03f2a1618ffa9f78",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "ef927cebced24aed",
        "name": "start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 2240,
        "wires": [
            [
                "92b8e5a2ba78144d",
                "f6419690ac785bd9",
                "cedfedcaef9174da"
            ]
        ]
    },
    {
        "id": "2735f7483f5ac8bb",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3410,
        "y": 220,
        "wires": [
            [
                "1b3ea0ab4c870ba5",
                "a420b20de6b2ada1",
                "5b6bca440f428676",
                "146a111549c43249"
            ]
        ]
    },
    {
        "id": "bbda492523718613",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3530,
        "y": 1000,
        "wires": [
            [
                "6165e2de9d2695b1",
                "fd69c0842a9d63cf",
                "40b2569942fe4353",
                "7d2dfd43b50940c0"
            ]
        ]
    },
    {
        "id": "61197514d15763f9",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 3310,
        "y": 1880,
        "wires": [
            [
                "878d2c583a0e53ce",
                "99868ef9b40d0be7",
                "bd3320d9437db028",
                "f24e08164f3adbcc"
            ]
        ]
    },
    {
        "id": "05f6401aa0329b2b",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "ForceDHW IN",
        "links": [
            "ebac652429960e8c"
        ],
        "x": 1625,
        "y": 940,
        "wires": [
            [
                "fde361a7c1b89194"
            ]
        ]
    },
    {
        "id": "ebac652429960e8c",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "ForceDHW out",
        "mode": "link",
        "links": [
            "05f6401aa0329b2b"
        ],
        "x": 795,
        "y": 240,
        "wires": []
    },
    {
        "id": "72c312c10eda5067",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "name": "",
        "mode": "link",
        "links": [
            "cc201d2b1a4948f9",
            "0e12f9702f321baf"
        ],
        "x": 795,
        "y": 180,
        "wires": []
    },
    {
        "id": "bffd799064f16e5f",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 700,
        "wires": [
            [
                "8d67e4b94d19ae38"
            ]
        ]
    },
    {
        "id": "55671ed84534c41a",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 740,
        "wires": [
            [
                "0b4166e29cb85045"
            ]
        ]
    },
    {
        "id": "1dd17dd31530ea92",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2090,
        "y": 420,
        "wires": [
            [
                "b3f7f9ca1ec60e83"
            ]
        ]
    },
    {
        "id": "b505ce644cfd53f0",
        "type": "bar-chart-data",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "bar-chart DHW COP-12months",
        "x_interval": "months",
        "x_size": "12",
        "unit": "",
        "precision": 2,
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 930,
        "y": 2940,
        "wires": [
            [
                "7225676c4c158b93"
            ]
        ]
    },
    {
        "id": "49197010980651fe",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "Once per 15minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 260,
        "y": 3160,
        "wires": [
            [
                "609c62d23c30ec24"
            ]
        ]
    },
    {
        "id": "609c62d23c30ec24",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "Function - bucket 1 + 2 combined",
        "func": "var dhw = global.get(\"COP_DHW_24m\",\"file\");\nvar heat = global.get(\"COP_HEAT_24m\",\"file\"); \n\nif (dhw === undefined || heat === undefined)                          // check if all is valid.\n    {\n        return null;\n    }\n\nelse\n    {\n        let msg1={}, msg2={};\n        var exit = false;\n        \n        msg1 = dhw;\n        msg2 = heat;\n        \n        var varlabels   = msg2.payload[0].labels;\n        var varData1    = msg1.payload[0].data[0];\n        if (varData1 === undefined)     {exit = true;}\n        var varData2    = msg2.payload[0].data[0];\n        if (varData2 === undefined)     {exit = true;}\n        \n        var varSeries1     = msg1.payload[0].series[0];\n        var varSeries2     = msg2.payload[0].series[0];\n        \n        var m={};\n            m.labels    = varlabels;\n            m.series    = [varSeries1, varSeries2];\n            m.data      = [varData1, varData2];\n        \n        \n        if (exit == false) \n            {\n                return {payload:[m]};\n            }\n        \n        else\n            {\n                return null;\n            }\n    }\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 3160,
        "wires": [
            [
                "f03363ab31e23fa4"
            ],
            [],
            []
        ],
        "outputLabels": [
            "graaddagen_calc",
            "heat",
            "dhw"
        ]
    },
    {
        "id": "526983f803aaaffe",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "Bucket 1 + 2  combined to chart",
        "info": "",
        "x": 270,
        "y": 3120,
        "wires": []
    },
    {
        "id": "c35353743ee9aecd",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "Load bar-chart data",
        "func": "var heat = global.get(\"COP_HEAT_24m\",\"file\");\nvar dhw = global.get(\"COP_DHW_24m\",\"file\");\n\n//var dhw = {\"payload\":[{\"labels\":[\"2021-06\",\"2021-07\",\"2021-08\",\"2021-09\",\"2021-10\",\"2021-11\",\"2021-12\",\"2022-01\",\"2022-02\",\"2022-03\",\"2022-04\",\"2022-05\"],\"series\":[\"DHW\"],\"data\":[[0,0,0,0,0,0,0,0,0,0,0,4]]}],\"topic\":\"DHW\",\"_msgid\":\"1edf034010248bca\",\"_event\":\"node:5787c91b303f2538\",\"bar_keys\":[\"202106\",\"202107\",\"202108\",\"202109\",\"202110\",\"202111\",\"202112\",\"202201\",\"202202\",\"202203\",\"202204\",\"202205\"],\"data_counter\":[{\"202205\":1114}],\"topics\":[\"DHW\"],\"DHW_last\":0,\"data_min\":null,\"data_max\":null,\"data_sum\":null,\"settings\":{\"unit\":\"\",\"x_size\":\"12\",\"precision\":2,\"is_meter_reading\":false,\"agg_by\":\"avg\"},\"info\":\"data restored\"};\n\nmsg1 = heat;\nmsg2 = dhw;\n\nif (heat === undefined) \n    {\n        \n        if (dhw === undefined)\n            {\n                return [null,null];\n            }\n        else\n            {\n                return [null,msg2];\n            }\n    }\nelse\n    {\n        if (dhw === undefined)\n            {\n                return [msg1,null];\n            }\n        else\n            {\n                return [msg1,msg2];\n            }\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2740,
        "wires": [
            [
                "8a1e0c8dd68d798d"
            ],
            [
                "b505ce644cfd53f0"
            ]
        ],
        "outputLabels": [
            "COP_HEAT_24m",
            "COP_DHW_24m"
        ]
    },
    {
        "id": "45b5b3a215358c26",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "Restore after boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "trigger",
        "x": 230,
        "y": 2740,
        "wires": [
            [
                "c35353743ee9aecd"
            ]
        ]
    },
    {
        "id": "83edb6bd4fa36941",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 210,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "224179f31e1b39cf",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "31 Days information",
        "info": "",
        "x": 210,
        "y": 2700,
        "wires": []
    },
    {
        "id": "f03363ab31e23fa4",
        "type": "ui_chart",
        "z": "5866a177cdfb0882",
        "g": "db4a1d787f4b0c26",
        "name": "COP DHW + COP HEAT (24m)",
        "group": "a88e295848403708",
        "order": 6,
        "width": 26,
        "height": 7,
        "label": "COP / month (24)",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#007585",
            "#de425b",
            "#f59b56",
            "#fff18f",
            "#89bf77",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1290,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "3a693f1a3ac01999",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 390,
        "y": 3220,
        "wires": [
            [
                "b505ce644cfd53f0"
            ]
        ]
    },
    {
        "id": "105e3b8e6c61c434",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "",
        "links": [
            "d3b670a5bad37254"
        ],
        "x": 145,
        "y": 2840,
        "wires": [
            [
                "828dce18302cc5b4"
            ]
        ]
    },
    {
        "id": "7ca4a277069a6621",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "",
        "links": [
            "d387b7f300bf2191"
        ],
        "x": 145,
        "y": 2940,
        "wires": [
            [
                "0db73b1f6a296601"
            ]
        ]
    },
    {
        "id": "91befa8c0031f1bc",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 2840,
        "wires": [
            [
                "8a1e0c8dd68d798d"
            ]
        ]
    },
    {
        "id": "fbc0c5e972470aef",
        "type": "delay",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 2940,
        "wires": [
            [
                "b505ce644cfd53f0"
            ]
        ]
    },
    {
        "id": "7225676c4c158b93",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "370bd0fbbbb8db1d",
        "name": "Store information to COP_DHW_24m",
        "func": "var myArray210 = msg;\nglobal.set(\"COP_DHW_24m\", myArray210,\"file\");\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2940,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "291b027cdd86a232",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "7171661642381ba7",
        "name": "Store information to COP_HEAT_24m",
        "func": "var myArray4 = msg;\nglobal.set(\"COP_HEAT_24m\", myArray4,\"file\");\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 2840,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "63e4f9528a665bfd",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 710,
        "y": 3040,
        "wires": []
    },
    {
        "id": "0db73b1f6a296601",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 2940,
        "wires": [
            [
                "fbc0c5e972470aef"
            ]
        ]
    },
    {
        "id": "828dce18302cc5b4",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HEAT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 2840,
        "wires": [
            [
                "91befa8c0031f1bc"
            ]
        ]
    },
    {
        "id": "8a1e0c8dd68d798d",
        "type": "bar-chart-data",
        "z": "5866a177cdfb0882",
        "g": "589b9c5c9bd5aab9",
        "name": "bar-chart HEAT COP-12months",
        "x_interval": "months",
        "x_size": "12",
        "unit": "",
        "precision": "2",
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 930,
        "y": 2840,
        "wires": [
            [
                "291b027cdd86a232"
            ]
        ]
    },
    {
        "id": "ff16b05d9647ef7a",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "47608011c629d4a1",
        "name": "Line - Water",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Water details</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "59a6e3a342814b35",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Heatpump power",
        "label": "Heatpump power",
        "tooltip": "",
        "group": "47608011c629d4a1",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1850,
        "y": 160,
        "wires": [
            [
                "e431fbafac457e57"
            ]
        ]
    },
    {
        "id": "e431fbafac457e57",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2070,
        "y": 180,
        "wires": [
            [
                "59a6e3a342814b35",
                "80ebb669c4d1bb74",
                "0464c0bffa5b501d"
            ]
        ]
    },
    {
        "id": "fa892549e2893608",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "47608011c629d4a1",
        "name": "Line - Water",
        "order": 8,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "e169dd8effcb9c7e",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "4c977d73c5080527",
        "group": "f4d34b6388e64ca9",
        "name": "Line",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 730,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "b8b31693901c1687",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "f073195c855749be",
        "group": "ba668149f2e70274",
        "name": "Line",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 850,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "75bebea1be7e5290",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "spacer 6x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3990,
        "y": 160,
        "wires": []
    },
    {
        "id": "896c5820c49d4fbf",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "c7d23e4a20ddaedf",
        "name": "Line",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4050,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "824332b0eadf8964",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "c7d23e4a20ddaedf",
        "name": "Line",
        "order": 19,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4050,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "eca3ed879799503a",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "a88e295848403708",
        "name": "Line",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 3360,
        "wires": [
            []
        ]
    },
    {
        "id": "cd5045353fd23c44",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "a88e295848403708",
        "name": "Line",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "2886d78c6ea387f1",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "a88e295848403708",
        "name": "Line",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "c9558bbce1976ec3",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "Create table in context",
        "func": "let sctab = [];\nflow.set(\"sctab\", sctab);\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "d76c46f7799aa7cc",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "Start",
        "payloadType": "str",
        "x": 1930,
        "y": 2300,
        "wires": [
            [
                "c9558bbce1976ec3"
            ]
        ]
    },
    {
        "id": "b9f0be2a62ab43ca",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::logs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "f001acc4b67ff6b7",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::logs",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2240,
        "y": 2060,
        "wires": [
            [
                "95dcb5870f12cc89"
            ]
        ]
    },
    {
        "id": "5bde50d2926cd49d",
        "type": "ui_button",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "Refresh",
        "group": "6ac295fb9be91d87",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "If the list is empty, try refreshing it.",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1980,
        "y": 2060,
        "wires": [
            [
                "f001acc4b67ff6b7"
            ]
        ]
    },
    {
        "id": "2fbd2aebc412d60d",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "group": "6ac295fb9be91d87",
        "order": 4,
        "width": 13,
        "height": 1,
        "name": "Flow version",
        "label": "Flow version 20.6",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1310,
        "y": 2000,
        "wires": []
    },
    {
        "id": "ff2c1f020a12ad2c",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "group": "6ac295fb9be91d87",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "filler",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1450,
        "y": 2300,
        "wires": []
    },
    {
        "id": "a5aadc7eea67c95e",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "7acb3a2bfbb56892",
        "name": "Add word to scrolling table",
        "func": "let pay = msg.payload;\n\n// Read scrolling table from context\nlet sctab = flow.get(\"sctab\");\n\nif (sctab === undefined || pay === undefined)\n{\n    return null;\n    \n}\n\nelse\n{\n    // Modify scrolling table by adding msg.payload as first element\n    let size = sctab.unshift(pay);\n    \n    // Remove last element from scrolling table\n    if (size >37) sctab.pop();\n    \n    // Update context for scrolling text\n    flow.set(\"sctab\",sctab);\n    \n    // Shalow copy updated scrolling table to msg.payload\n    msg.payload = [...sctab];\n    \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 2180,
        "wires": [
            [
                "95dcb5870f12cc89",
                "b9f0be2a62ab43ca"
            ]
        ]
    },
    {
        "id": "4955712907d9e185",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "7acb3a2bfbb56892",
        "name": "",
        "topic": "panasonic_heat_pump/commands/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1380,
        "y": 2180,
        "wires": [
            [
                "1d264b5f8284bb77"
            ]
        ]
    },
    {
        "id": "4cbd899752cb10d0",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "7acb3a2bfbb56892",
        "name": "",
        "func": "var DateTime    = msg.time;\nvar Source      = msg.topic;\nvar Value       = msg.payload;\nmsg1 = {};\nmsg1.payload = (DateTime + \"    -    \" + Source + \":  \" + Value);\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 2180,
        "wires": [
            [
                "a5aadc7eea67c95e"
            ]
        ]
    },
    {
        "id": "1d264b5f8284bb77",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "7acb3a2bfbb56892",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "$now('[D01]/[M01] [H01]:[m01].[s01]', '+0200')",
                "tot": "jsonata"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "panasonic_heat_pump/commands/",
                "fromt": "str",
                "to": "MQTT Command - ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 2180,
        "wires": [
            [
                "4cbd899752cb10d0"
            ]
        ]
    },
    {
        "id": "2961fd82e93eaa0a",
        "type": "ui_button",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "Clear",
        "group": "6ac295fb9be91d87",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "If the list is empty, try refreshing it.",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "clear",
        "payload": " ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1930,
        "y": 2240,
        "wires": [
            [
                "a5aadc7eea67c95e",
                "c9558bbce1976ec3"
            ]
        ]
    },
    {
        "id": "e6e586cf0f7db4a2",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "group": "6ac295fb9be91d87",
        "order": 7,
        "width": 1,
        "height": 1,
        "name": "filler",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 2320,
        "wires": []
    },
    {
        "id": "2c1431de1b755c18",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "group": "6ac295fb9be91d87",
        "order": 9,
        "width": 1,
        "height": 1,
        "name": "filler",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1330,
        "y": 2300,
        "wires": []
    },
    {
        "id": "23ceb02f81db1b2c",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "Input LOGS",
        "links": [
            "657c16826cbdb9e7",
            "d9c715475aa39aca",
            "91f006142bfd8525",
            "8a5aae0865ff61e4",
            "ea2d3df9c09fafcc",
            "282345d4cc3e0885",
            "0be3e7aabef0e51c",
            "733a23bbef65ef55",
            "eb2fc0b7cd899461",
            "5ba4569119772a84",
            "5b8a32e638268c5f",
            "fb6b8c54295278e6",
            "62b4d538e461efe9",
            "246757b0d4390b0d",
            "5f1112aeeffe3dbe"
        ],
        "x": 1310,
        "y": 2120,
        "wires": [
            [
                "b89abacae12f43a7"
            ]
        ],
        "l": true
    },
    {
        "id": "b89abacae12f43a7",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "$now('[D01]/[M01] [H01]:[m01].[s01]', '+0200')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 2120,
        "wires": [
            [
                "4cbd899752cb10d0"
            ]
        ]
    },
    {
        "id": "bb8da0c1e5a21312",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "SYSTEM",
        "payload": "Start",
        "payloadType": "str",
        "x": 1320,
        "y": 2080,
        "wires": [
            [
                "8a5aae0865ff61e4"
            ]
        ]
    },
    {
        "id": "8a5aae0865ff61e4",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "ToLogs",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c",
            "80d8ab8ea57ab276"
        ],
        "x": 1525,
        "y": 2080,
        "wires": []
    },
    {
        "id": "95dcb5870f12cc89",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "group": "6ac295fb9be91d87",
        "order": 3,
        "width": 20,
        "height": 17,
        "name": "",
        "label": "",
        "format": "{{msg.payload[0]}}<br/>{{msg.payload[1]}}<br/>{{msg.payload[2]}}<br/>{{msg.payload[3]}}<br/>{{msg.payload[4]}}<br/>{{msg.payload[5]}}<br/>{{msg.payload[6]}}<br/>{{msg.payload[7]}}<br/>{{msg.payload[8]}}<br/>{{msg.payload[9]}}<br/>{{msg.payload[10]}}<br/>{{msg.payload[11]}}<br/>{{msg.payload[12]}}<br/>{{msg.payload[13]}}<br/>{{msg.payload[14]}}<br/>{{msg.payload[15]}}<br/>{{msg.payload[16]}}<br/>{{msg.payload[17]}}<br/>{{msg.payload[18]}}<br/>{{msg.payload[19]}}<br/>{{msg.payload[20]}}<br/>{{msg.payload[21]}}<br/>{{msg.payload[22]}}<br/>{{msg.payload[23]}}<br/>{{msg.payload[24]}}<br/>{{msg.payload[25]}}<br/>{{msg.payload[26]}}<br/>{{msg.payload[27]}}<br/>{{msg.payload[28]}}<br/>{{msg.payload[29]}}<br/>{{msg.payload[30]}}<br/>{{msg.payload[31]}}<br/>{{msg.payload[32]}}<br/>{{msg.payload[33]}}<br/>{{msg.payload[34]}}<br/>{{msg.payload[35]}}<br/>{{msg.payload[36]}}<br/>",
        "layout": "row-left",
        "className": "",
        "x": 2470,
        "y": 2180,
        "wires": []
    },
    {
        "id": "775220b9790203af",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "group": "6ac295fb9be91d87",
        "name": "",
        "order": 2,
        "width": 20,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 3px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n<right></right> \n</html>\n\n\n<style>\n    [node-id=\"d4787944cad86813\"] p.value {\n        font-weight: normal;\n    }\n    [node-id=\"d4787944cad86813\"] p.label {\n        font-weight: bold;\n    }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2480,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "c4d63901477882f1",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "trigger",
        "x": 140,
        "y": 1600,
        "wires": [
            [
                "96b90be275acf8c8",
                "45806e023a52e120"
            ]
        ]
    },
    {
        "id": "96b90be275acf8c8",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "func": "let msg1={}\nmsg1 = flow.get(\"chart_energy\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1600,
        "wires": [
            [
                "25cb728a24f379e3"
            ]
        ]
    },
    {
        "id": "e47056c87a41e95a",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "func": "flow.set(\"chart_energy\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "bb4c4ff51d32852c",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "func": "flow.set(\"chart_efficiency\",msg,\"file\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "45806e023a52e120",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "",
        "func": "let msg1={}\nmsg1 = flow.get(\"chart_efficiency\",\"file\");\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1940,
        "wires": [
            [
                "a784229e2b2fc2db"
            ]
        ]
    },
    {
        "id": "47bc8e4922e5da40",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "New day log line",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "------------------------------------------------------------------------------------------------",
        "payloadType": "str",
        "x": 1890,
        "y": 2120,
        "wires": [
            [
                "a5aadc7eea67c95e"
            ]
        ]
    },
    {
        "id": "61f15ea35fbb0ca9",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "Runtime",
        "func": "// compressor runnint time\nvar start = context.get(\"compressor_start\");\nlet msg1={};\n\nif (msg.payload > 0)\n    {\n    if (start !== undefined && start != null)\n        {\n            var current_time = new Date().getTime();\n            TimeElapsed = ((current_time - start)/1000/60);\n            msg1.payload = TimeElapsed;\n            msg1.payload = Number(msg1.payload).toFixed(0);\n            msg1.payload = parseFloat(msg1.payload);\n            global.set(\"compressor_runtime\",msg1.payload);                  \n            return msg1;                                                        // Value of time elapsed\n        \n        }\n    else\n    \n        {\n            start = new Date().getTime();\n            context.set(\"compressor_start\",start);\n            return null;\n            \n        }\n    }\nelse\n    {\n        context.set(\"compressor_start\",undefined);\n        global.set(\"compressor_runtime\",0);                  \n        return null;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 980,
        "wires": [
            [
                "d0e2e8a0a826f066"
            ]
        ]
    },
    {
        "id": "d0e2e8a0a826f066",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 980,
        "wires": [
            [
                "2045ac2fb303a584",
                "d93353d328296fc3"
            ]
        ]
    },
    {
        "id": "7fa36f769ef4e859",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "war_wt3",
        "label": "",
        "tooltip": "",
        "group": "463138d4bf845cca",
        "order": 19,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt3",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "55",
        "step": 1,
        "className": "",
        "x": 3360,
        "y": 380,
        "wires": [
            [
                "6a035cc0365c187c",
                "146a111549c43249"
            ]
        ]
    },
    {
        "id": "725025f5186f97ec",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "war_ot3",
        "label": "",
        "tooltip": "",
        "group": "463138d4bf845cca",
        "order": 18,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot3",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-20",
        "max": "55",
        "step": 1,
        "className": "",
        "x": 3200,
        "y": 380,
        "wires": [
            [
                "6a035cc0365c187c",
                "146a111549c43249"
            ]
        ]
    },
    {
        "id": "8df765750123144c",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "warm spacer 2x1",
        "label": "Warm",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4280,
        "y": 120,
        "wires": []
    },
    {
        "id": "8f600dc3e12a5af7",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 14,
        "width": 2,
        "height": 1,
        "name": "Inter spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4270,
        "y": 160,
        "wires": []
    },
    {
        "id": "8add64806a9b768c",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "name": "Line - Setup ",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4310,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "dc47e3de677dd8ab",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 17,
        "width": 2,
        "height": 1,
        "name": "Cold 2x1",
        "label": "Cold",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4250,
        "y": 200,
        "wires": []
    },
    {
        "id": "399a12cd39007ade",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "Weather spacer 2x1",
        "label": "Weather",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4300,
        "y": 340,
        "wires": []
    },
    {
        "id": "5aa1dfdf89cc382a",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "name": "Line - Setup ",
        "order": 20,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4290,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4627373cacc729e7",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 9,
        "width": 1,
        "height": 4,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 4130,
        "y": 340,
        "wires": []
    },
    {
        "id": "ede37e7e06d62d2d",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1x2",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4110,
        "y": 1120,
        "wires": []
    },
    {
        "id": "db725d7eaf875ba4",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "name": "Line - Setup ",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4190,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "8b4e3f72b8002c9a",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "name": "Line - Setup ",
        "order": 22,
        "width": 5,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Turn on/off HP (optional)</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4190,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "d98647f9bcfc8ce5",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "group": "af26718b91621f02",
        "name": "Line - Setup ",
        "order": 28,
        "width": 7,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>RTC results</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4190,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "ad8a47695289e208",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1940,
        "y": 1020,
        "wires": [
            [
                "a1988fd5b64b9138"
            ]
        ]
    },
    {
        "id": "43d8738dec50dfb7",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "links": [
            "0f07048ebb903935"
        ],
        "x": 1625,
        "y": 1000,
        "wires": [
            [
                "22d9b5306c32e0a0"
            ]
        ]
    },
    {
        "id": "93557709b1849c5c",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "mode": "link",
        "links": [
            "691099cf98991b53"
        ],
        "x": 2195,
        "y": 1020,
        "wires": []
    },
    {
        "id": "24d9661f4ddabd43",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1400,
        "wires": [
            [
                "9756e5a9b716ae97"
            ]
        ]
    },
    {
        "id": "d5417c789a2d741c",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1440,
        "wires": [
            [
                "cc43946102e053b2"
            ]
        ]
    },
    {
        "id": "1ae6e3383669ca96",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1480,
        "wires": [
            [
                "a4a44f2b59a5a5cf"
            ]
        ]
    },
    {
        "id": "d72d36208a501ecb",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1520,
        "wires": [
            [
                "0798e12ef47695a6"
            ]
        ]
    },
    {
        "id": "cf5f05f860a8889f",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1360,
        "wires": [
            [
                "db96b90be8932e0a"
            ]
        ]
    },
    {
        "id": "d41af73e6d6d3554",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1960,
        "y": 1320,
        "wires": [
            [
                "f82414f6079cee26"
            ]
        ]
    },
    {
        "id": "cb10d15cfa5100d3",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "c3827f64106d8787",
        "group": "4e2c919e44d5664c",
        "name": "Line - Setup ",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4180,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "ee91daf750f8d47c",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "4c977d73c5080527",
        "name": "Check operation mode",
        "func": "var OM = global.get('Operating_Mode_State',\"file\");\nlet msg1={};\nif (OM == 0 || OM == 2 || OM == 3 || OM == 4 || OM == 6)\n{\n    msg1.payload = OM;\n    return [msg,msg1];\n}\nelse\n{\n    msg.payload = 1;\n    return msg;}\n\n\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1380,
        "wires": [
            [
                "8a295d94145833fa"
            ],
            []
        ]
    },
    {
        "id": "cdbdb41b6560c60b",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "group": "6ac295fb9be91d87",
        "order": 1,
        "width": 20,
        "height": 1,
        "name": "filler",
        "label": "[Date] [Time] - [Source] or [SET command]: [Value/Text]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2470,
        "y": 2080,
        "wires": []
    },
    {
        "id": "937bab7333c667b9",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "links": [
            "b8828738e4fc6e15"
        ],
        "x": 1405,
        "y": 1360,
        "wires": [
            [
                "2bedcec616d6ded1"
            ]
        ]
    },
    {
        "id": "1f5ee4264b7b4cbb",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "6e87c271f3b4c5e5",
        "name": "link in 1",
        "links": [
            "49a95f1d3ad9841a"
        ],
        "x": 235,
        "y": 1700,
        "wires": [
            [
                "f4d5818cacef07eb"
            ]
        ]
    },
    {
        "id": "9845734f771c578a",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "",
        "topic": "panasonic_heat_pump/LWT",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1360,
        "y": 2420,
        "wires": [
            [
                "adcb4cce2abc550f"
            ]
        ]
    },
    {
        "id": "adcb4cce2abc550f",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1570,
        "y": 2420,
        "wires": [
            [
                "09f21a10bce2701a"
            ]
        ]
    },
    {
        "id": "09f21a10bce2701a",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "msg",
                "to": "$now('[D01]/[M01] [H01]:[m01].[s01]', '+0200')",
                "tot": "jsonata"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "panasonic_heat_pump/LWT",
                "fromt": "str",
                "to": "SYSTEM - HEISHAMON Connection - ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 2420,
        "wires": [
            [
                "4cbd899752cb10d0"
            ]
        ]
    },
    {
        "id": "fd278bf4d649809b",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "Heishamon connection status",
        "info": "",
        "x": 1360,
        "y": 2380,
        "wires": []
    },
    {
        "id": "6adfc58db087514b",
        "type": "mqtt in",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "TOP76 - panasonic_heat_pump/main/Heating_Mode",
        "topic": "panasonic_heat_pump/main/Heating_Mode",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1430,
        "y": 2480,
        "wires": [
            [
                "de99936f44427db1"
            ]
        ]
    },
    {
        "id": "de99936f44427db1",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "function 1",
        "func": "if (msg.payload == 0)\n    {\n        msg.payload = \"Heatpump is not in DIRECT mode but WAR mode. This does not work nice together with this flow. stil experimental !!\";\n        msg.topic = \"SYSTEM WARNING\";\n        return msg;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 2480,
        "wires": [
            [
                "fb6b8c54295278e6"
            ]
        ]
    },
    {
        "id": "fb6b8c54295278e6",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 1835,
        "y": 2480,
        "wires": []
    },
    {
        "id": "dccdea3a4f9da78b",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "function 2",
        "func": "if (msg.payload == \"Start\")\n    {flow.set(\"persistency_test\",msg,\"file\");}\n\nvar stored_value = flow.get(\"persistency_test\",\"file\")\n\n\n\nif (stored_value !== undefined)\n    {return null;}\nelse \n        {\n        msg.payload = \"Persistent storage is not configured correctly. This flow will not function correctly until you do!\";\n        msg.topic = \"SYSTEM WARNING\";\n        return msg;\n        }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 2600,
        "wires": [
            [
                "91f006142bfd8525"
            ]
        ]
    },
    {
        "id": "2194ac9210dfbba2",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "SYSTEM",
        "payload": "Persistence",
        "payloadType": "str",
        "x": 1360,
        "y": 2600,
        "wires": [
            [
                "dccdea3a4f9da78b"
            ]
        ]
    },
    {
        "id": "80d8ab8ea57ab276",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "link in 4",
        "links": [
            "8a5aae0865ff61e4"
        ],
        "x": 1515,
        "y": 2560,
        "wires": [
            [
                "dccdea3a4f9da78b"
            ]
        ]
    },
    {
        "id": "91f006142bfd8525",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 1835,
        "y": 2600,
        "wires": []
    },
    {
        "id": "d62ed0039e2f885b",
        "type": "comment",
        "z": "5866a177cdfb0882",
        "g": "2aec1d3c6476c263",
        "name": "Persistent storage check",
        "info": "",
        "x": 1350,
        "y": 2560,
        "wires": []
    },
    {
        "id": "419c79e5b556e99b",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "group": "47608011c629d4a1",
        "order": 12,
        "width": 6,
        "height": 1,
        "name": "Fan2",
        "label": "Fan 2",
        "format": "{{msg.payload}} RPM",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f58d698744a36e40",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "RTC gui changes to function trigger",
        "mode": "link",
        "links": [
            "55084c6542a092da"
        ],
        "x": 4475,
        "y": 1060,
        "wires": []
    },
    {
        "id": "6ee7e4a50eebc6ec",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "WAR gui changes to function trigger",
        "mode": "link",
        "links": [
            "41c984b1c5fa41e8",
            "83bb8e9c13b649dd"
        ],
        "x": 3495,
        "y": 580,
        "wires": []
    },
    {
        "id": "49f086712e863549",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "SS gui changes to function trigger",
        "mode": "link",
        "links": [
            "7b967769c6a6b68c"
        ],
        "x": 3655,
        "y": 2020,
        "wires": []
    },
    {
        "id": "7d2dfd43b50940c0",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "num",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 4380,
        "y": 1060,
        "wires": [
            [
                "f58d698744a36e40"
            ]
        ]
    },
    {
        "id": "146a111549c43249",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3360,
        "y": 580,
        "wires": [
            [
                "6ee7e4a50eebc6ec"
            ]
        ]
    },
    {
        "id": "f24e08164f3adbcc",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3560,
        "y": 2020,
        "wires": [
            [
                "49f086712e863549"
            ]
        ]
    },
    {
        "id": "4196f37ccc104434",
        "type": "debug",
        "z": "5866a177cdfb0882",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3980,
        "y": 2160,
        "wires": []
    },
    {
        "id": "666f983c3fa05020",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3520,
        "y": 2120,
        "wires": [
            [
                "b33510df6b0f5959"
            ]
        ]
    },
    {
        "id": "b33510df6b0f5959",
        "type": "function",
        "z": "5866a177cdfb0882",
        "name": "set.F_SS_stage2",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"F_SS_stage2\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3710,
        "y": 2120,
        "wires": [
            [
                "4196f37ccc104434",
                "f60e1a2d2aaa4327"
            ]
        ]
    },
    {
        "id": "f60e1a2d2aaa4327",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "89acf9bcfcf5b9b1"
        ],
        "x": 3935,
        "y": 2120,
        "wires": []
    },
    {
        "id": "87387f7eb15f30b6",
        "type": "inject",
        "z": "5866a177cdfb0882",
        "name": "1 Trigger / 30 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 2840,
        "y": 2120,
        "wires": [
            [
                "b618b2938c6930f0",
                "45c6dd73281ece69"
            ]
        ]
    },
    {
        "id": "b618b2938c6930f0",
        "type": "function",
        "z": "5866a177cdfb0882",
        "name": "Load on boot SS",
        "func": "\nvar F_SS_stage2     = global.get('F_SS_stage2',\"file\");\n\nlet msg1={};\n\nmsg1.payload = F_SS_stage2; msg1.topic = \"F_SS_stage2\";\nreturn [msg1];        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n\n\n\n// Code added here will be run once\n// whenever the node is started.\n\n\n\nvar F_SS_stage2     = global.get('F_SS_stage2',\"file\");\nif (F_SS_stage2===undefined)    \n    {\n        global.set('F_SS_stage2',15,\"file\");\n    }",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 2120,
        "wires": [
            [
                "f4e7322c53f05c0a"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off"
        ]
    },
    {
        "id": "f4e7322c53f05c0a",
        "type": "ui_dropdown",
        "z": "5866a177cdfb0882",
        "name": "",
        "label": "",
        "tooltip": "default: 15 minutes",
        "place": "Select option",
        "group": "2724d44e267a522a",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "5 minutes",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 minutes",
                "value": 10,
                "type": "num"
            },
            {
                "label": "15 minutes",
                "value": 15,
                "type": "num"
            },
            {
                "label": "20 minutes",
                "value": 20,
                "type": "num"
            },
            {
                "label": "25 minutes",
                "value": 25,
                "type": "num"
            },
            {
                "label": "30 minutes",
                "value": 30,
                "type": "num"
            },
            {
                "label": "45 minutes",
                "value": 45,
                "type": "num"
            },
            {
                "label": "1 hour",
                "value": 60,
                "type": "num"
            },
            {
                "label": "1 hour 15 minutes",
                "value": 75,
                "type": "num"
            },
            {
                "label": "1 hour 30 minutes",
                "value": 90,
                "type": "num"
            },
            {
                "label": "1 hour 45 minutes",
                "value": 105,
                "type": "num"
            },
            {
                "label": "2 hours",
                "value": 120,
                "type": "num"
            },
            {
                "label": "3 hours",
                "value": 180,
                "type": "num"
            },
            {
                "label": "4 hours",
                "value": 240,
                "type": "num"
            },
            {
                "label": "5 hours",
                "value": 300,
                "type": "num"
            },
            {
                "label": "6 hours",
                "value": 360,
                "type": "num"
            },
            {
                "label": "7 hours",
                "value": 420,
                "type": "num"
            },
            {
                "label": "8 hours",
                "value": 480,
                "type": "num"
            },
            {
                "label": "9 hours",
                "value": 540,
                "type": "num"
            },
            {
                "label": "10 hours",
                "value": 600,
                "type": "num"
            },
            {
                "label": "11 hours",
                "value": 660,
                "type": "num"
            },
            {
                "label": "12 hours",
                "value": 720,
                "type": "num"
            },
            {
                "label": "24 hours",
                "value": 1440,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3260,
        "y": 2120,
        "wires": [
            [
                "666f983c3fa05020"
            ]
        ]
    },
    {
        "id": "45c6dd73281ece69",
        "type": "function",
        "z": "5866a177cdfb0882",
        "name": "Load on boot SS",
        "func": "\nvar F_SS_stage2_limit     = global.get('F_SS_stage2_limit',\"file\");\n    \n\nlet msg1={};\n\nmsg1.payload = F_SS_stage2_limit; msg1.topic = \"F_SS_stage2_limit\";\nreturn [msg1];        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nvar F_SS_stage2_limit     = global.get('F_SS_stage2_limit',\"file\");\nif (F_SS_stage2_limit===undefined)    \n    {\n        global.set('F_SS_stage2_limit',1,\"file\");\n    }\n",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 2260,
        "wires": [
            [
                "e7578b5b2c2a9fc3"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off"
        ]
    },
    {
        "id": "e7578b5b2c2a9fc3",
        "type": "ui_numeric",
        "z": "5866a177cdfb0882",
        "name": "Cap SP increase",
        "label": "SP increase cap",
        "tooltip": "Limit the allowed increase of the SP, compared to the Starting SP",
        "group": "2724d44e267a522a",
        "order": 8,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 3290,
        "y": 2260,
        "wires": [
            [
                "01da106dcd14e4a1"
            ]
        ]
    },
    {
        "id": "01da106dcd14e4a1",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3520,
        "y": 2260,
        "wires": [
            [
                "3a5cfeeecc531b88"
            ]
        ]
    },
    {
        "id": "3a5cfeeecc531b88",
        "type": "function",
        "z": "5866a177cdfb0882",
        "name": "set.F_SS_stage2_limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"F_SS_stage2_limit\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3720,
        "y": 2260,
        "wires": [
            [
                "f60e1a2d2aaa4327"
            ]
        ]
    },
    {
        "id": "6b1892eda3de23c3",
        "type": "ui_switch",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "RTC on/off2",
        "label": "",
        "tooltip": "Enable / Disable option to turn on/off the heatpump above or below these temperature",
        "group": "af26718b91621f02",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3650,
        "y": 1060,
        "wires": [
            [
                "ef5c6c4461e7d606"
            ]
        ]
    },
    {
        "id": "ef5c6c4461e7d606",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "set.F_RTC_on_off2",
        "func": "\nmsg.topic = \"Function - RTC turn off/on pump\";\nglobal.set(\"F_RTC_on_off2\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3830,
        "y": 1060,
        "wires": [
            [
                "486531746269118b"
            ]
        ]
    },
    {
        "id": "486531746269118b",
        "type": "rbe",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3990,
        "y": 1060,
        "wires": [
            [
                "7d2dfd43b50940c0"
            ]
        ]
    },
    {
        "id": "351f8f498d70dc04",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "Current runtime",
        "label": "Current/last runtime",
        "format": "{{msg.payload}} Min",
        "layout": "row-spread",
        "className": "",
        "x": 3060,
        "y": 2320,
        "wires": []
    },
    {
        "id": "d93353d328296fc3",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "3544f341b388c8c3",
        "name": "Compressor runtime",
        "mode": "link",
        "links": [
            "61fe4c37b290da27"
        ],
        "x": 1035,
        "y": 1020,
        "wires": []
    },
    {
        "id": "61fe4c37b290da27",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "name": "link in 5",
        "links": [
            "d93353d328296fc3"
        ],
        "x": 2945,
        "y": 2320,
        "wires": [
            [
                "351f8f498d70dc04"
            ]
        ]
    },
    {
        "id": "1a4e3ffcee9ac114",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "Starting SP",
        "label": "Starting SP",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3050,
        "y": 2360,
        "wires": []
    },
    {
        "id": "2351f60ffaca1a2a",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "name": "link in 6",
        "links": [
            "b2a20155fbe7c2cb"
        ],
        "x": 2885,
        "y": 2360,
        "wires": [
            [
                "1a4e3ffcee9ac114"
            ]
        ]
    },
    {
        "id": "d144ccdd3db144fc",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "order": 16,
        "width": 6,
        "height": 1,
        "name": "Final SP",
        "label": "Final SP",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3040,
        "y": 2400,
        "wires": []
    },
    {
        "id": "96c44db76a91f148",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Minimum runtime",
        "label": "Minimum runtime",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 3150,
        "y": 2160,
        "wires": []
    },
    {
        "id": "5b7fbbf180aa42bb",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "Compressor",
        "label": "Frequency",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "className": "",
        "x": 3510,
        "y": 2340,
        "wires": []
    },
    {
        "id": "977ad5d0ab99b77e",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "name": "Line",
        "order": 5,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3690,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "5ca4647bc3763580",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "name": "Line",
        "order": 9,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Compressor</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3690,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "439ff50b2888eeda",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "order": 15,
        "width": 6,
        "height": 1,
        "name": "Function - Current correction (SS)",
        "label": "Current correction",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3300,
        "y": 2400,
        "wires": []
    },
    {
        "id": "7ea75bf1be7b416b",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "name": "Line",
        "order": 12,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Result</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3690,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "c78ed9e779ab2070",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "name": "",
        "links": [
            "89c0dace84e9e862"
        ],
        "x": 3085,
        "y": 2460,
        "wires": [
            [
                "83e5c54e21d1e1e2"
            ]
        ]
    },
    {
        "id": "83e5c54e21d1e1e2",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "group": "2724d44e267a522a",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "T outlet (PV)",
        "label": "T outlet (PV)",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3250,
        "y": 2460,
        "wires": []
    },
    {
        "id": "5c84e5e2278bd4fb",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "name": "link in 7",
        "links": [
            "e007b69a884b060f"
        ],
        "x": 3365,
        "y": 2340,
        "wires": [
            [
                "5b7fbbf180aa42bb"
            ]
        ]
    },
    {
        "id": "1679216f35634441",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "e06eb2ab51f8ba38",
        "name": "Line - Setup ",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Backup-Heater</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2470,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "007a174682051ada",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "e06eb2ab51f8ba38",
        "name": "Line - Setup ",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2350,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "a79b872e50bd79db",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "c7d23e4a20ddaedf",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "SP (WAR) - Home HEAT Functions tab",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-right",
        "className": "",
        "x": 3630,
        "y": 540,
        "wires": []
    },
    {
        "id": "85a64541ba4f7616",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "Color",
        "func": "var war_state          = global.get('Correction_0_WAR_on_off',\"file\");\n    if (war_state === undefined)    {return null;}\n\nlet msg1={};\n\n\n    if (war_state == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (war_state == 1) \n        {\n            msg1.color = \"\";\n        }\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3390,
        "y": 540,
        "wires": [
            [
                "a79b872e50bd79db"
            ]
        ]
    },
    {
        "id": "d1e9f271ab245c3c",
        "type": "ui_slider",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "91122444622f238a",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 1630,
        "y": 520,
        "wires": [
            [
                "0dfee3882bc06741",
                "7d0cd14f9565caf2"
            ]
        ]
    },
    {
        "id": "4ef40e6a332b66c9",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "91122444622f238a",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Current value",
        "format": "{{msg.payload  | number: 0}} %",
        "layout": "row-spread",
        "className": "",
        "x": 2360,
        "y": 620,
        "wires": []
    },
    {
        "id": "0b27f00820a8be16",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "91122444622f238a",
        "name": "Line - Setup ",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Pump max flow</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1650,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "0dfee3882bc06741",
        "type": "ui_button",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "group": "91122444622f238a",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "SET {{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Pump_Max_Flow",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 1810,
        "y": 520,
        "wires": [
            [
                "9148db0267cd6ca0",
                "817eab424cbe54b8"
            ]
        ]
    },
    {
        "id": "7d0cd14f9565caf2",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pump_Max_Flow",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 480,
        "wires": [
            [
                "905e817be8ae342c"
            ]
        ]
    },
    {
        "id": "9148db0267cd6ca0",
        "type": "change",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 520,
        "wires": [
            [
                "0dfee3882bc06741"
            ]
        ]
    },
    {
        "id": "905e817be8ae342c",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "num",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2150,
        "y": 480,
        "wires": [
            [
                "9148db0267cd6ca0"
            ]
        ]
    },
    {
        "id": "37e5e4afb68c6428",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "link in 9",
        "links": [
            "db915179dc9e59bd"
        ],
        "x": 1495,
        "y": 620,
        "wires": [
            [
                "ea12012042d7f94f"
            ]
        ]
    },
    {
        "id": "f0358e59b78f1eb8",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "4404bf36f6bca7c1",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Model",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2370,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1851bb467a05d06a",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "4404bf36f6bca7c1",
        "name": "Line - panasonic",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Panasonic information</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2020,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "e7db804704a7653c",
        "type": "ui_template",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "4404bf36f6bca7c1",
        "name": "Line - 1",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1820,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "b46bb5543c33cb6b",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].model;\n                            msg1.topic = 'Model'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1680,
        "wires": [
            [
                "f0358e59b78f1eb8"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "cb31369b84adaaa8",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].power;\n                            msg1.topic = 'Power'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1720,
        "wires": [
            [
                "dd43e003f8ed68fa"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "dd43e003f8ed68fa",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "4404bf36f6bca7c1",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}} kW",
        "layout": "row-spread",
        "className": "",
        "x": 2370,
        "y": 1720,
        "wires": []
    },
    {
        "id": "ee42d0fc4ddda0ef",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].phase;\n                            msg1.topic = 'Phase'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1760,
        "wires": [
            [
                "60122a0767c5862b"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "60122a0767c5862b",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "4404bf36f6bca7c1",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2370,
        "y": 1760,
        "wires": []
    },
    {
        "id": "66b0268a4d987e01",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "group": "4404bf36f6bca7c1",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2370,
        "y": 1800,
        "wires": []
    },
    {
        "id": "93f39094cecfa074",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "5c49f3cb8f8ec4b0",
        "name": "Load on boot",
        "func": "panasonic = global.get('panasonic',\"file\");\nlet msg1={};\n\nif(panasonic === undefined)      {\n                            return null;    \n                            }\n                            \nelse                        {\n                            msg1.payload = panasonic.payload[0].type;\n                            msg1.topic = 'Type'; \n                            return msg1;\n                            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1800,
        "wires": [
            [
                "66b0268a4d987e01"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "883e900c6a8f4789",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "link in 10",
        "links": [
            "15cc5a5193aca837"
        ],
        "x": 2995,
        "y": 1460,
        "wires": [
            [
                "3c6ce12b13c760a7"
            ]
        ]
    },
    {
        "id": "133c17e0534f745e",
        "type": "trigger",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 3460,
        "y": 1240,
        "wires": [
            [
                "ba612124460f35fd",
                "a38c5b576949dc2b"
            ]
        ]
    },
    {
        "id": "6da02c9fe23882ec",
        "type": "link in",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "WAR chart trigger",
        "links": [
            "b46cfcf8ce6d8f91"
        ],
        "x": 3045,
        "y": 500,
        "wires": [
            [
                "6a6841f1d397e72f"
            ]
        ]
    },
    {
        "id": "693c5e9e55ae7359",
        "type": "mqtt out",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "SET16 SetCurves",
        "topic": "panasonic_heat_pump/commands/SetCurves",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 4170,
        "y": 620,
        "wires": []
    },
    {
        "id": "8178504d6991a1b1",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "Confirm",
        "func": "\nif (msg.payload == 'Sure') \n    {\n            \n        var war_ot1         = global.get('war_ot1',\"file\");                 // Outside temperature high         (warm outside)\n        var war_ot2         = global.get('war_ot2',\"file\");                 // Outside temperature intermediate (intermediate outside temperature)\n        //var war_ot3         = global.get('war_ot3',\"file\");                 // Outside temperature low          (cold outside)\n        var war_wt1         = global.get('war_wt1',\"file\");                 // Water temperature low            (cold water)\n        var war_wt2         = global.get('war_wt2',\"file\");                 // Water temperature intermediate   (intermediate water temperature)\n        //var war_wt3         = global.get('war_wt3',\"file\");                 // Water temperature high           (warm water)\n        \n        let msg1    ={};    //  pin 1 - export JSON\n        let msg99   ={};    //  pin 2 - output to log\n        \n        msg1.topic = \"JSON_ZONE1_HEAT\"\n        msg1.payload = {\n                        \t\"zone1\": {\n                        \t\t\"heat\": {\n                        \t\t\t\"target\": {\n                        \t\t\t\t\"high\": war_wt1,\n                        \t\t\t\t\"low\": war_wt2\n                        \t\t\t},\n                        \t\t\t\"outside\": {\n                        \t\t\t\t\"high\": war_ot1,\n                        \t\t\t\t\"low\": war_ot2\n                        \t\t\t}\n                        \t\t}\n                        \t}\n                        }\n        msg99.topic = \"SYSTEM\";\n        msg99.payload = \"Exported settings with WAR temperature profile to Panasonic heatpump\";\n        \n        node.send([msg1,msg99]);\n    }\nreturn null;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 640,
        "wires": [
            [
                "10308aa4b107175e"
            ],
            [
                "5f1112aeeffe3dbe"
            ]
        ],
        "outputLabels": [
            "export JSON",
            "output to log"
        ]
    },
    {
        "id": "4f4dd70baa91ad29",
        "type": "ui_button",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "",
        "group": "463138d4bf845cca",
        "order": 27,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Export",
        "tooltip": "This will send the above temperature profile to the Panasonic heatpump.",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Export current profile to heatpump?",
        "payloadType": "str",
        "topic": "Please confirm",
        "topicType": "str",
        "x": 3310,
        "y": 640,
        "wires": [
            [
                "dd25cb0d5cfa1a33"
            ]
        ]
    },
    {
        "id": "dd25cb0d5cfa1a33",
        "type": "ui_toast",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "Abort",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Deploy?",
        "x": 3600,
        "y": 640,
        "wires": [
            [
                "8178504d6991a1b1"
            ]
        ]
    },
    {
        "id": "10308aa4b107175e",
        "type": "json",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 3950,
        "y": 620,
        "wires": [
            [
                "693c5e9e55ae7359"
            ]
        ]
    },
    {
        "id": "d75c6b47296ce5d9",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 28,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4030,
        "y": 200,
        "wires": []
    },
    {
        "id": "99d6c8ae3cc124b9",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 23,
        "width": 1,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4010,
        "y": 180,
        "wires": []
    },
    {
        "id": "d6deeaf6af28e924",
        "type": "ui_text",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "group": "463138d4bf845cca",
        "order": 26,
        "width": 4,
        "height": 1,
        "name": "spacer 1x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4010,
        "y": 120,
        "wires": []
    },
    {
        "id": "5f1112aeeffe3dbe",
        "type": "link out",
        "z": "5866a177cdfb0882",
        "g": "d87b8ea5bea4191d",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 3915,
        "y": 660,
        "wires": []
    },
    {
        "id": "6455c3fd3d979985",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "78460edf5398e987",
        "name": "Color",
        "func": "var Correction_1_RTC_on_off          = global.get('Correction_1_RTC_on_off',\"file\");\n\n\nlet msg1={};\n\n\n    if (Correction_1_RTC_on_off == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (Correction_1_RTC_on_off == 1) \n        {\n            msg1.color = \"\";\n        }\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3030,
        "y": 1540,
        "wires": [
            [
                "a4a706f98516e948"
            ]
        ]
    },
    {
        "id": "ae0726a3fb3988c0",
        "type": "function",
        "z": "5866a177cdfb0882",
        "g": "07a9900d991d6958",
        "name": "Color",
        "func": "var Correction_2_softstart_on_off          = global.get('Correction_2_softstart_on_off',\"file\");\n\n\nlet msg1={};\n\n\n    if (Correction_2_softstart_on_off == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (Correction_2_softstart_on_off == 1) \n        {\n            msg1.color = \"\";\n        }\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 1920,
        "wires": [
            [
                "4e3b738f5eaa538c"
            ]
        ]
    },
    {
        "id": "17763558ebd7bc3c",
        "type": "tab",
        "label": "WP Control",
        "disabled": false,
        "info": "\n---\n\n"
    },
    {
        "id": "d3d6355b7dbd97a8",
        "type": "group",
        "z": "17763558ebd7bc3c",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "1ba676583358876b",
            "a0f07fd25bd54374",
            "91474574722dff1f",
            "83da087c371c7013",
            "a16b4250ac72b44d",
            "12be90e115a6d387",
            "b78349309e61e08c",
            "426a5bf45b75f9e2",
            "dcd88a5e256ffcf2",
            "de3df7e85651d8bc",
            "aec0be3b8fd42f02",
            "0f9f5ebbd7e8d5e6",
            "a208a7b62bfbd70a",
            "aa375b22b201327c",
            "965f889315deee31",
            "acc3e1eb1e701ba9",
            "361ead41e223ee80",
            "311f186bc11546e8",
            "761262646aa2321e",
            "b28231a4f9a9adac",
            "08e53dc3a24810cc",
            "f9a2000df65f6d32",
            "44f39872967fbf5c",
            "9dec08c727e1186a",
            "1e999a6198a012fa",
            "dbe19f612430ee1e",
            "c3b751357bcb0875",
            "efc4b2203780e7e9",
            "c7702ce870636ce5",
            "e0aacaf5319aeea7",
            "9eaf74dc0e22a6a4",
            "db538b2ea7b65f22",
            "1ac44510b7470b4e",
            "89c0dace84e9e862",
            "9c7253d3cba1818f",
            "f286caa8f446a1b8",
            "bca820021ef1d99c",
            "3bc507a8873d14da",
            "d849dba115b90935",
            "4afdd4d77fefa8b4",
            "b2cc8b2fe9aa99c8",
            "23802c7b9332a6e3",
            "c979888f7e20fb05",
            "83f3760ca7d1909d",
            "8128a08a740c3248",
            "18db6a5e58c7c8c4",
            "eb203845fcbe317d",
            "1faa7391f40dac58",
            "ef3dcc4cbb2d80cf",
            "82747bcc17e8ba92",
            "625ad24513767482",
            "a59933214d639698",
            "c237f9ead87df667",
            "ce6a0a65562e3ca7",
            "e007b69a884b060f",
            "2e726da4560da549",
            "ded273086ff63949",
            "aecfb70a549752a8",
            "b8cc7d5dac332386",
            "011d067460eddf40",
            "2a8312727abe76b3",
            "3fab9c839d56fb6e",
            "6b3a8913e00d3b29",
            "177ab2eb4ccfc1d3",
            "b90a288eb11425db",
            "e04388d83dce1926",
            "fa50164523f6e480",
            "6a3f44e3d0b5f6f4",
            "49a95f1d3ad9841a",
            "13f5647f03f64e88",
            "2bd5c222c7d4c4d4"
        ],
        "x": 94,
        "y": 1739,
        "w": 1442,
        "h": 1342
    },
    {
        "id": "3652f4419eab43a0",
        "type": "group",
        "z": "17763558ebd7bc3c",
        "name": "REQUIRED INPUTS FOR FUNCTIONS",
        "style": {
            "fill": "#ffffbf",
            "label": true,
            "stroke": "#ff0000"
        },
        "nodes": [
            "d7f096a9d8df7a13",
            "1f9b6862937c501f",
            "c70e9d6f86da0679",
            "9cd2242433db528e",
            "295824db4703a6e0",
            "624e0da42530bdae",
            "5597559da70476dd",
            "db87b6195bdd3330",
            "832a67b45a9628ed",
            "8a4028b5740a3dbe",
            "07a87068af5e5e3e",
            "7f07e4666d9bccbe",
            "d503c63d3e69a9e1",
            "6e2873ec4d6fc673",
            "3bed1722a86638b5",
            "3692b2e195b3bd33",
            "3741d74fd5cd5d25",
            "c7d4c4ec6b4571e6",
            "da79170f9de0f540",
            "7e177718e622a62e",
            "5b8a32e638268c5f",
            "98e963de49772192",
            "8b06680ffbec0315",
            "b8522e89af164e96",
            "ed03f727d99a6cd3",
            "0eb2c53109f2fc15"
        ],
        "x": 114,
        "y": 59,
        "w": 2072,
        "h": 422
    },
    {
        "id": "28bb45a2666f6668",
        "type": "group",
        "z": "17763558ebd7bc3c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "abfb810893124c8f",
            "a8c717f365df7ddb",
            "b2d169e04c5ab339",
            "216593b59cc26530",
            "367590ac9df916bb",
            "369dddac66b0beaf",
            "8f9cd9ab5ddb606b",
            "2c5d8d5f82e25b9d",
            "7463c409a280781b",
            "5e82fbce693ece13",
            "4fd03980c0c45aba",
            "3469894785389b69",
            "b82f772d33931666",
            "9315b3ddc054884b",
            "77f0e10c3c752749",
            "b1ca5534e437a827",
            "02d942616c457725",
            "ff9de88b8dd2ccac",
            "f60d0a8b122acd7b",
            "b12815979af8daff",
            "7be406d685602992",
            "e3785c89d9cfea23",
            "4601e257c79298bd",
            "c34c0a1d2b801444",
            "612fa06c85db220d",
            "04681d5d9dd62456",
            "e60199296e7cde7b",
            "2ed8794a71d1d33d",
            "7012f8fbb9b8beac",
            "357e0eccfc3dbaf4",
            "c33a80f7951c9da9",
            "37e288675af74c04",
            "cb6c919d361031b8",
            "394b97622598c24d",
            "e761e759a2a33314",
            "2218fb7f9c3db48d",
            "2cbea65d0779e81a",
            "bb66afd28bb43f61",
            "fd4587f96473755f",
            "5304274e9e66bac2",
            "a9e414d69b244f7d",
            "192ce54224d5a716",
            "6226f8037ab37406",
            "ea9c0fc813d950a5",
            "b77836faee9c889e",
            "a91f3c0287cb150b",
            "f67b4a28d8ff7330",
            "87497a8381d1ae44",
            "07772c3783ff4118",
            "862ce713b857025e",
            "fa28cc892ad704b6",
            "e8b05fdeb8e33212",
            "1a53f800d174be7a",
            "2aade3b3dd3ca9c4",
            "42bf23d3c646096e",
            "f2a06eb79adcfc90",
            "0f899856dbb1b7a3",
            "db915179dc9e59bd",
            "ddb841ba332e8aa1"
        ],
        "x": 94,
        "y": 3119,
        "w": 1162,
        "h": 982
    },
    {
        "id": "e4f580c10318e468",
        "type": "group",
        "z": "17763558ebd7bc3c",
        "name": "COP calculation function",
        "style": {
            "label": true
        },
        "nodes": [
            "8cb0089f9666becb",
            "eeae20b55b3d659d",
            "d3b670a5bad37254",
            "d387b7f300bf2191"
        ],
        "x": 1604,
        "y": 2159,
        "w": 502,
        "h": 122
    },
    {
        "id": "9c29bca78a8a1b4b",
        "type": "group",
        "z": "17763558ebd7bc3c",
        "name": "NightRuduction logic",
        "style": {
            "label": true
        },
        "nodes": [
            "806e5414355b6ba0",
            "2ac428581507ebcd",
            "8353adc11c76852d",
            "80f27521586ee747",
            "b6c347a9d1eb45dc",
            "43d8acff9545baf1",
            "a378f30d0ea1e84d",
            "5d14ce76c8c9d04b",
            "19996f2ab784830b",
            "e3566b54a1154e42",
            "19f0e9b8751d9c04",
            "a7af04354fc3a4d5",
            "15c22917f82b9e09",
            "5ec47380bdf53973",
            "3447a0e444da5011",
            "eb2fc0b7cd899461",
            "370b3565f472c1ae",
            "4ffd061d60371256",
            "a84d5e1f42075324"
        ],
        "x": 94,
        "y": 4159,
        "w": 1292,
        "h": 302
    },
    {
        "id": "aec12fd9e13cc233",
        "type": "group",
        "z": "17763558ebd7bc3c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3b291f037be93697",
            "bcd27365ca11cd11",
            "6f076cc013694465",
            "e7b8e3f0e0750976",
            "efdb6a7410cd1193",
            "41bb1ff37fc643f8",
            "049464969a85d7b4",
            "a2cde1047e27236b",
            "e01097a85d49966e",
            "f1003d49e2e4f358",
            "759a1f4e9f295ba1",
            "18003218fe20c4f2",
            "be1f03974f99ba5d",
            "f3cac33ba1dd2312",
            "d7904046f6ca4ad0",
            "90e8ce91cf776f78",
            "ac98b9a85342ec0a",
            "ab125f9d67e1d8f4",
            "0034a105fd356a46",
            "b8828738e4fc6e15",
            "676b1485ccaa0748",
            "3a635ae8da83e53e",
            "a197703cde8178b3",
            "637326188b256f36",
            "9270efc38c14930e",
            "ae2863162894fe8f",
            "396e1bf96a123f74",
            "fb92a985f9691dfe",
            "7b6bc6b92232e5d1",
            "9d2a246ebb882924"
        ],
        "x": 2348,
        "y": 53,
        "w": 1738,
        "h": 888
    },
    {
        "id": "60cbc2b8598a58fa",
        "type": "group",
        "z": "17763558ebd7bc3c",
        "name": "FUNCTIONS",
        "style": {
            "fill": "#ffbfbf",
            "fill-opacity": "0.75",
            "label": true
        },
        "nodes": [
            "85245f5021952bd8",
            "65e6c2375df1e228",
            "0d996033de2ed84e",
            "2ade66982bca360c",
            "923a260a80d944a3",
            "cb987aa12172f46f",
            "f5e069070e6c5a52",
            "41c984b1c5fa41e8",
            "7d9a4452a2907a9a",
            "89acf9bcfcf5b9b1",
            "c5506b5fe3e4d571",
            "dfd89c997d9209bf",
            "adef30c4c6fd9e18",
            "3ef9612c73e00018",
            "a487bd4a5ecaa280",
            "293acdfb42807b2a",
            "a572111794098720",
            "10ecf65755102b8f",
            "f9ee471b53568fa9",
            "cb47302c2194f2f3",
            "d9d59760031361d8",
            "16260c5c569c28d0",
            "62b4d538e461efe9",
            "8d50df28d6f551d3",
            "dec1bfecd6b9d7e8",
            "77428c19ad69a747",
            "83f1108c9a23f3ac",
            "7a0db9d14f6116a5",
            "2e5a70c158f9fdde",
            "43b8685d93ab900c",
            "e6391924c41804d1",
            "3dd1bf63c615f171",
            "913a79bc7b035d32",
            "612499563cacf8a0",
            "db5e2cc553cf0b9f",
            "b2dabf0cbdb5aafc",
            "5d02c82706b21ca5",
            "c8848aaf15391ca1",
            "80cc25379d181149",
            "614f9a16ee9ae8c7",
            "4301c3318e9d2ba2",
            "7bac0e2f88026507",
            "2903271707cab5ae",
            "0e6803dcf771c7c4",
            "51428283538c6581",
            "f654e83ab1f79df5",
            "7a9ab12b9cb74828",
            "72a08d6ff4c98dba",
            "55084c6542a092da",
            "9af91516a04cf420",
            "279667b8d3397253",
            "6c1d28493c64e6af",
            "74ef15b8f7faf2d2",
            "7b967769c6a6b68c",
            "410eb68eb31cf311",
            "00e9f06e7ce99f6c",
            "b2a20155fbe7c2cb",
            "15cc5a5193aca837",
            "26ae5115695e9aec",
            "5bf8eece83fbad65",
            "2d086602d8518c05"
        ],
        "x": 144,
        "y": 619,
        "w": 1822,
        "h": 982
    },
    {
        "id": "396e1bf96a123f74",
        "type": "group",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "Relative humidity > Dewpoint calculation",
        "style": {
            "label": true
        },
        "nodes": [
            "676bdd75e8f733d7",
            "9dd999b1fc29b9f0",
            "065fef5c8fcaf5cf",
            "96e9f79c5bcacfa2",
            "9daaa9f6e618fd7d",
            "f1c0fec675eba115",
            "c13453ac13a31b63"
        ],
        "x": 2374,
        "y": 79,
        "w": 1172,
        "h": 162
    },
    {
        "id": "1ba676583358876b",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP0 - panasonic_heat_pump/main/Heatpump_State",
        "topic": "panasonic_heat_pump/main/Heatpump_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 1880,
        "wires": [
            [
                "aec0be3b8fd42f02",
                "625ad24513767482"
            ]
        ]
    },
    {
        "id": "a0f07fd25bd54374",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP1 - panasonic_heat_pump/main/Pump_Flow",
        "topic": "panasonic_heat_pump/main/Pump_Flow",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "0f9f5ebbd7e8d5e6"
            ]
        ]
    },
    {
        "id": "91474574722dff1f",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP2 - panasonic_heat_pump/main/Force_DHW_State",
        "topic": "panasonic_heat_pump/main/Force_DHW_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 2000,
        "wires": [
            [
                "b28231a4f9a9adac"
            ]
        ]
    },
    {
        "id": "83da087c371c7013",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP5 - panasonic_heat_pump/main/Main_Inlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Inlet_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 2120,
        "wires": [
            [
                "f9a2000df65f6d32"
            ]
        ]
    },
    {
        "id": "a16b4250ac72b44d",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP6 - panasonic_heat_pump/main/Main_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Outlet_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 2180,
        "wires": [
            [
                "44f39872967fbf5c"
            ]
        ]
    },
    {
        "id": "12be90e115a6d387",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "d": true,
        "g": "d3d6355b7dbd97a8",
        "name": "TOP7 - panasonic_heat_pump/main/Main_Target_Temp",
        "topic": "panasonic_heat_pump/main/Main_Target_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 2240,
        "wires": [
            [
                "9dec08c727e1186a"
            ]
        ]
    },
    {
        "id": "b78349309e61e08c",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP4 - panasonic_heat_pump/main/Operating_Mode_State",
        "topic": "panasonic_heat_pump/main/Operating_Mode_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 440,
        "y": 2060,
        "wires": [
            [
                "a208a7b62bfbd70a"
            ]
        ]
    },
    {
        "id": "426a5bf45b75f9e2",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP20 - panasonic_heat_pump/main/ThreeWay_Valve_State",
        "topic": "panasonic_heat_pump/main/ThreeWay_Valve_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 440,
        "y": 2300,
        "wires": [
            [
                "1e999a6198a012fa"
            ]
        ]
    },
    {
        "id": "dcd88a5e256ffcf2",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP70 - panasonic_heat_pump/main/Sterilization_Temp",
        "topic": "panasonic_heat_pump/main/Sterilization_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 2480,
        "wires": [
            [
                "efc4b2203780e7e9"
            ]
        ]
    },
    {
        "id": "de3df7e85651d8bc",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP69 - panasonic_heat_pump/main/Sterilization_State",
        "topic": "panasonic_heat_pump/main/Sterilization_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 2420,
        "wires": [
            [
                "965f889315deee31"
            ]
        ]
    },
    {
        "id": "2e726da4560da549",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Read values from Heishamon and put them in global variables and link out",
        "info": "",
        "x": 380,
        "y": 1780,
        "wires": []
    },
    {
        "id": "aec0be3b8fd42f02",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 1880,
        "wires": [
            [
                "acc3e1eb1e701ba9"
            ]
        ]
    },
    {
        "id": "0f9f5ebbd7e8d5e6",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 1940,
        "wires": [
            [
                "761262646aa2321e"
            ]
        ]
    },
    {
        "id": "a208a7b62bfbd70a",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 2060,
        "wires": [
            [
                "08e53dc3a24810cc"
            ]
        ]
    },
    {
        "id": "aa375b22b201327c",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 2360,
        "wires": [
            [
                "dbe19f612430ee1e"
            ]
        ]
    },
    {
        "id": "965f889315deee31",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 2420,
        "wires": [
            [
                "c3b751357bcb0875"
            ]
        ]
    },
    {
        "id": "acc3e1eb1e701ba9",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Heatpump_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Heatpump_State';\n\nvar Heatpump_State = global.get(\"Heatpump_State\",\"file\");\n\nif (msg.payload != Heatpump_State)\n{\n    global.set(\"Heatpump_State\",msg.payload,\"file\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1880,
        "wires": [
            [
                "c7702ce870636ce5"
            ]
        ]
    },
    {
        "id": "361ead41e223ee80",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "string to number.fixed",
        "info": "",
        "x": 1220,
        "y": 1800,
        "wires": []
    },
    {
        "id": "311f186bc11546e8",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set global variable",
        "info": "",
        "x": 1210,
        "y": 1840,
        "wires": []
    },
    {
        "id": "761262646aa2321e",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Pump_Flow",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Pump_Flow';\nglobal.set(\"Pump_Flow\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1940,
        "wires": [
            [
                "e0aacaf5319aeea7"
            ]
        ]
    },
    {
        "id": "b28231a4f9a9adac",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Force_DHW_State",
        "func": "var current = global.get(\"Force_DHW_State\");\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Force_DHW_State';\n\nif (current != msg.payload)\n{\n    global.set(\"Force_DHW_State\",msg.payload);\n    return msg;\n}\n\nelse\n{\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2000,
        "wires": [
            [
                "9eaf74dc0e22a6a4"
            ]
        ]
    },
    {
        "id": "08e53dc3a24810cc",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Operating_Mode_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Operating_Mode_State';\nglobal.set(\"Operating_Mode_State\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2060,
        "wires": [
            [
                "db538b2ea7b65f22"
            ]
        ]
    },
    {
        "id": "f9a2000df65f6d32",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Main_Inlet_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Main_Inlet_Temp\"\nglobal.set(\"Main_Inlet_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2120,
        "wires": [
            [
                "1ac44510b7470b4e"
            ]
        ]
    },
    {
        "id": "44f39872967fbf5c",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Main_Outlet_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Main_Outlet_Temp';\nglobal.set(\"Main_Outlet_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2180,
        "wires": [
            [
                "89c0dace84e9e862"
            ]
        ]
    },
    {
        "id": "9dec08c727e1186a",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Target_Z1_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Main_Target_Temp';\nglobal.set(\"Main_Target_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2240,
        "wires": [
            [
                "9c7253d3cba1818f"
            ]
        ]
    },
    {
        "id": "1e999a6198a012fa",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.ThreeWay_Valve_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'ThreeWay_Valve_State';\nglobal.set(\"ThreeWay_Valve_State\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2300,
        "wires": [
            [
                "f286caa8f446a1b8"
            ]
        ]
    },
    {
        "id": "dbe19f612430ee1e",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Quiet_Mode_Level",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Quiet_Mode_Level';\nglobal.set(\"Quiet_Mode_Level\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2360,
        "wires": [
            [
                "bca820021ef1d99c"
            ]
        ]
    },
    {
        "id": "c3b751357bcb0875",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Sterilization_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Sterilization_State';\nglobal.set(\"Sterilization_State\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2420,
        "wires": [
            [
                "3bc507a8873d14da"
            ]
        ]
    },
    {
        "id": "efc4b2203780e7e9",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Sterilization_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Sterilization_Temp';\nglobal.set(\"Sterilization_Temp\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2480,
        "wires": [
            [
                "d849dba115b90935"
            ]
        ]
    },
    {
        "id": "c7702ce870636ce5",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Heatpump_State",
        "mode": "link",
        "links": [
            "a772d2026681f718"
        ],
        "x": 1495,
        "y": 1880,
        "wires": []
    },
    {
        "id": "e0aacaf5319aeea7",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Pump_Flow",
        "links": [
            "eeae20b55b3d659d",
            "63dd2a9008447047",
            "5eef2d3a1816ae18"
        ],
        "x": 1495,
        "y": 1940,
        "wires": []
    },
    {
        "id": "9eaf74dc0e22a6a4",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Force_DHW_State",
        "links": [
            "5eef2d3a1816ae18",
            "5f3bf84b25568561"
        ],
        "x": 1495,
        "y": 2000,
        "wires": []
    },
    {
        "id": "db538b2ea7b65f22",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Operating_Mode_State",
        "links": [
            "5eef2d3a1816ae18",
            "5f3bf84b25568561"
        ],
        "x": 1495,
        "y": 2060,
        "wires": []
    },
    {
        "id": "1ac44510b7470b4e",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Main_Inlet_Temp",
        "links": [
            "46f32bd056749232",
            "eeae20b55b3d659d",
            "5eef2d3a1816ae18"
        ],
        "x": 1495,
        "y": 2120,
        "wires": []
    },
    {
        "id": "89c0dace84e9e862",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Main_Outlet_Temp",
        "links": [
            "eeae20b55b3d659d",
            "5eef2d3a1816ae18",
            "7dde426dba02597b",
            "c78ed9e779ab2070"
        ],
        "x": 1495,
        "y": 2180,
        "wires": []
    },
    {
        "id": "9c7253d3cba1818f",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Main_Target_Temp",
        "links": [
            "820e7c017560f3fd",
            "5eef2d3a1816ae18",
            "9164505967cf30be"
        ],
        "x": 1495,
        "y": 2240,
        "wires": []
    },
    {
        "id": "f286caa8f446a1b8",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "ThreeWay_Valve_State",
        "links": [
            "5eef2d3a1816ae18",
            "c270b43b23f974d8",
            "e111252a28b9b3c9",
            "5f3bf84b25568561",
            "32693e0b1629f74a",
            "18003218fe20c4f2"
        ],
        "x": 1495,
        "y": 2300,
        "wires": []
    },
    {
        "id": "bca820021ef1d99c",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Quiet_Mode_Level",
        "links": [
            "5eef2d3a1816ae18",
            "5f3bf84b25568561"
        ],
        "x": 1495,
        "y": 2360,
        "wires": []
    },
    {
        "id": "3bc507a8873d14da",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Sterilization_State",
        "links": [
            "5eef2d3a1816ae18",
            "5f3bf84b25568561"
        ],
        "x": 1495,
        "y": 2420,
        "wires": []
    },
    {
        "id": "d849dba115b90935",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Sterilization_Temp",
        "links": [
            "5eef2d3a1816ae18"
        ],
        "x": 1495,
        "y": 2480,
        "wires": []
    },
    {
        "id": "4afdd4d77fefa8b4",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "links": [
            "1696d196c804632d"
        ],
        "x": 635,
        "y": 2540,
        "wires": [
            [
                "2bd5c222c7d4c4d4"
            ]
        ]
    },
    {
        "id": "b2cc8b2fe9aa99c8",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.WoonkamerSP",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'WoonkamerSP';\nglobal.set(\"WoonkamerSP\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2540,
        "wires": [
            [
                "82747bcc17e8ba92"
            ]
        ]
    },
    {
        "id": "d7f096a9d8df7a13",
        "type": "debug",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2070,
        "y": 440,
        "wires": []
    },
    {
        "id": "1f9b6862937c501f",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "T_woonkamer_BT",
        "links": [
            "5eef2d3a1816ae18",
            "1556c8702bb4d292",
            "02f25651d70831c9",
            "13ef5341a6b8f4e8",
            "7d9a4452a2907a9a"
        ],
        "x": 2015,
        "y": 400,
        "wires": []
    },
    {
        "id": "23802c7b9332a6e3",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP9 - panasonic_heat_pump/main/DHW_Target_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Target_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 2600,
        "wires": [
            [
                "83f3760ca7d1909d"
            ]
        ]
    },
    {
        "id": "c979888f7e20fb05",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP10 - panasonic_heat_pump/main/DHW_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 2660,
        "wires": [
            [
                "18db6a5e58c7c8c4"
            ]
        ]
    },
    {
        "id": "83f3760ca7d1909d",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 2600,
        "wires": [
            [
                "8128a08a740c3248"
            ]
        ]
    },
    {
        "id": "8128a08a740c3248",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.DHW_Target_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'DHW_Target_Temp';\nglobal.set(\"DHW_Target_Temp\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2600,
        "wires": [
            [
                "eb203845fcbe317d"
            ]
        ]
    },
    {
        "id": "18db6a5e58c7c8c4",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.DHW_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'DHW_Temp';\nglobal.set(\"DHW_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2660,
        "wires": [
            [
                "1faa7391f40dac58"
            ]
        ]
    },
    {
        "id": "eb203845fcbe317d",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "DHW_Target_Temp",
        "mode": "link",
        "links": [
            "c041fd31297cd74b"
        ],
        "x": 1495,
        "y": 2600,
        "wires": []
    },
    {
        "id": "1faa7391f40dac58",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "DHW_Temp",
        "links": [
            "e63851b03004dabb",
            "5eef2d3a1816ae18",
            "94ce26fbb380ca23",
            "c6997c53221fb9a0"
        ],
        "x": 1495,
        "y": 2660,
        "wires": []
    },
    {
        "id": "ef3dcc4cbb2d80cf",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Source: Panasonic MQTT",
        "info": "",
        "x": 370,
        "y": 1840,
        "wires": []
    },
    {
        "id": "82747bcc17e8ba92",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "WoonkamerSP_custom",
        "links": [
            "5eef2d3a1816ae18",
            "02f25651d70831c9",
            "7d9a4452a2907a9a"
        ],
        "x": 1495,
        "y": 2540,
        "wires": []
    },
    {
        "id": "625ad24513767482",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 960,
        "y": 1840,
        "wires": [
            [
                "acc3e1eb1e701ba9"
            ]
        ]
    },
    {
        "id": "a59933214d639698",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "topic": "panasonic_heat_pump/main/Compressor_Freq",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 2780,
        "wires": [
            [
                "c237f9ead87df667"
            ]
        ]
    },
    {
        "id": "c237f9ead87df667",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 2780,
        "wires": [
            [
                "ce6a0a65562e3ca7"
            ]
        ]
    },
    {
        "id": "ce6a0a65562e3ca7",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.compressor_frequency",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'compressor_frequency';\nglobal.set(\"compressor_frequency\",msg.payload,\"file\");\nglobal.set(\"compressor_frequency\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2780,
        "wires": [
            [
                "e007b69a884b060f"
            ]
        ]
    },
    {
        "id": "e007b69a884b060f",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "compressor_frequency",
        "links": [
            "5eef2d3a1816ae18",
            "96ebe58652c06e4e",
            "87c545af2ed49c31",
            "6672c414d234331c",
            "89acf9bcfcf5b9b1",
            "5c84e5e2278bd4fb"
        ],
        "x": 1495,
        "y": 2780,
        "wires": []
    },
    {
        "id": "8cb0089f9666becb",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "e4f580c10318e468",
        "name": "COP_calculated",
        "func": "var runtime =   global.get('compressor_runtime')||0;                                    // Get the global variable for absorbed energy of the heatpump\n\nif (runtime < 2 )                                                                       // If compressor is on too short, end here. Choosen a 1 minute delay.\n    {\n        return null;\n    }\n    \nelse                                                                                    // if not, continue.\n    {\n        var Main_Outlet_Temp=global.get('Main_Outlet_Temp');                            // Get the global variable for water Outlet temperature\n        var Main_Inlet_Temp=global.get('Main_Inlet_Temp');                              // Get the global variable for water inlet temperature\n        var Pump_Flow=global.get('Pump_Flow');                                          // Get the global variable for water flow\n        var Energy_Consumption;                                                         // declare variable\n        var COP_calculated;                                                             // declare variable\n        var Watt_heat_c;                                                                // declare variable\n        var ThreeWay_Valve_State=global.get('ThreeWay_Valve_State');                    // Get the global variable for 3-way valve position.   0=HEAT / 1=DHW\n        \n        if (ThreeWay_Valve_State == 0)\n            {\n                Energy_Consumption = global.get('Heat_Energy_Consumption')||0;      // Get the global variable for absorbed energy of the heatpump heat\n            }\n        \n        if (ThreeWay_Valve_State == 1)\n            {\n                Energy_Consumption = global.get('DHW_Energy_Consumption')||0;       // Get the global variable for absorbed energy of the heatpump dhw\n            }\n        \n         \n        \n        \n        let msg1={},msg2={};\n\n        \n        \n        if (ThreeWay_Valve_State == 0 && Main_Outlet_Temp !== undefined && Main_Inlet_Temp !== undefined && Pump_Flow !== undefined)    //  HEAT mode\n            {\n                \n                Watt_heat_c             = (Main_Outlet_Temp - Main_Inlet_Temp) * 4.187 * (Pump_Flow / 60) * 1000;\n                COP_calculated          = Watt_heat_c / Energy_Consumption;\n                msg1.payload            = COP_calculated\n                msg1.topic              = \"COP_HEAT\";\n                msg1.payload            = Number(msg1.payload).toFixed(2);\n                msg1.payload            = parseFloat(msg1.payload);\n                \n                if (msg1.payload > 0) \n                    {\n                        return [msg1,null];\n                    }\n                if (msg1.payload === undefined)\n                    {\n                        return [null,null];\n                    }\n                else \n                    {\n                        msg1.payload = 0;\n                        return [msg1,null];\n                    }\n                \n            }\n\n        if (ThreeWay_Valve_State == 1 && Main_Outlet_Temp !== undefined && Main_Inlet_Temp !== undefined && Pump_Flow !== undefined)    // DHW mode\n            {\n                \n                Watt_heat_c             = (Main_Outlet_Temp - Main_Inlet_Temp) * 4.187 * (Pump_Flow / 60) * 1000;\n                COP_calculated          = Watt_heat_c / Energy_Consumption;\n                msg2.payload            = COP_calculated\n                msg2.topic              = \"COP_DHW\";\n                msg2.payload            = Number(msg2.payload).toFixed(2);\n                msg2.payload            = parseFloat(msg2.payload);\n                \n                if (msg2.payload > 0) \n                    {\n                        return [null,msg2];\n                    }\n                if (msg2.payload === undefined)\n                    {\n                        return [null,null];\n                    }\n                else\n                    {\n                        msg2.payload = 0;\n                        return [null,msg2];\n                    }\n            }\n    }\n    \n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 2220,
        "wires": [
            [
                "d3b670a5bad37254"
            ],
            [
                "d387b7f300bf2191"
            ]
        ],
        "outputLabels": [
            "COP HEAT [-]",
            "COP DHW [-]"
        ]
    },
    {
        "id": "ded273086ff63949",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP16 - panasonic_heat_pump/main/Heat_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Consumption",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 2840,
        "wires": [
            [
                "aecfb70a549752a8"
            ]
        ]
    },
    {
        "id": "aecfb70a549752a8",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.Heat_Energy_Consumption",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Heat_Energy_Consumption';\nglobal.set(\"Heat_Energy_Consumption\",msg.payload,);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2840,
        "wires": [
            [
                "b8cc7d5dac332386"
            ]
        ]
    },
    {
        "id": "b8cc7d5dac332386",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "Heat_Energy_Consumption",
        "mode": "link",
        "links": [
            "a553a4f68032bffa",
            "b7d8864b9b2d4308",
            "34d959963d0e068a",
            "e6ea853dc5ace9bb",
            "857891f927155d13",
            "54ee6a2c638d4db0",
            "35439402440fe5ce",
            "a0189b7182dca441",
            "4fd3947f1f3ca1e1",
            "4f2af928ceac2afd",
            "b24f95487a5295cb"
        ],
        "x": 1495,
        "y": 2840,
        "wires": []
    },
    {
        "id": "eeae20b55b3d659d",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "e4f580c10318e468",
        "name": "",
        "links": [
            "89c0dace84e9e862",
            "e0aacaf5319aeea7",
            "1ac44510b7470b4e"
        ],
        "x": 1645,
        "y": 2220,
        "wires": [
            [
                "8cb0089f9666becb"
            ]
        ]
    },
    {
        "id": "d3b670a5bad37254",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "e4f580c10318e468",
        "name": "COP HEAT",
        "mode": "link",
        "links": [
            "105e3b8e6c61c434",
            "f402bbd959151e26"
        ],
        "x": 2065,
        "y": 2200,
        "wires": []
    },
    {
        "id": "c70e9d6f86da0679",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "TOP33 - panasonic_heat_pump/main/Room_Thermostat_Temp",
        "topic": "panasonic_heat_pump/main/Room_Thermostat_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 870,
        "y": 440,
        "wires": [
            [
                "6e2873ec4d6fc673"
            ]
        ]
    },
    {
        "id": "9cd2242433db528e",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "CONNECT >> Custom sensor - livingroom temperature",
        "links": [
            "5b8382118c6c3e1e"
        ],
        "x": 340,
        "y": 360,
        "wires": [
            [
                "8b06680ffbec0315",
                "0eb2c53109f2fc15"
            ]
        ],
        "l": true
    },
    {
        "id": "295824db4703a6e0",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "You can use your own custom external sensors",
        "info": "",
        "x": 320,
        "y": 100,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "624e0da42530bdae",
        "type": "debug",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2070,
        "y": 220,
        "wires": []
    },
    {
        "id": "5597559da70476dd",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "filter T_outside",
        "func": "var TOP14               = global.get('TOP14_Outside_Temp');                      // The default heatpump outside temperature sensor\nvar T_outside_custom    = global.get('T_outside_custom');                        // Custom outside temperature sensor\n\n\nlet msg1={};\n\nif (T_outside_custom === undefined)\n    {\n        T_outside = TOP14;\n    }\nelse\n    {\n        T_outside = T_outside_custom;\n    }\n\n\nmsg1.payload = T_outside;\nmsg1.payload = Number(msg1.payload).toFixed(1);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic = 'T_outside';\n\nvar stored_value        = global.get('T_outside',\"file\");\n\nif (stored_value != T_outside)\n{\n    global.set(\"T_outside\",msg1.payload,\"file\");\n    \n}\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 220,
        "wires": [
            [
                "3741d74fd5cd5d25"
            ]
        ]
    },
    {
        "id": "db87b6195bdd3330",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "T_outside",
        "links": [
            "5eef2d3a1816ae18",
            "02f25651d70831c9",
            "6401ec360e3666b2",
            "6a3c45d7a5c5ab3d",
            "6c1d28493c64e6af"
        ],
        "x": 2015,
        "y": 180,
        "wires": []
    },
    {
        "id": "832a67b45a9628ed",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "TOP14 - panasonic_heat_pump/main/Outside_Temp",
        "topic": "panasonic_heat_pump/main/Outside_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 910,
        "y": 220,
        "wires": [
            [
                "07a87068af5e5e3e"
            ]
        ]
    },
    {
        "id": "8a4028b5740a3dbe",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "CONNECT >> Custom sensor - outside temperature",
        "links": [
            "3a1c7ae1443e0666"
        ],
        "x": 330,
        "y": 140,
        "wires": [
            [
                "7e177718e622a62e",
                "ed03f727d99a6cd3"
            ]
        ],
        "l": true
    },
    {
        "id": "abfb810893124c8f",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3220,
        "wires": [
            [
                "a8c717f365df7ddb"
            ]
        ]
    },
    {
        "id": "a8c717f365df7ddb",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.PumpMaxFlowSetting",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'PumpMaxFlowSetting';\nglobal.set(\"PumpMaxFlowSetting\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "b2d169e04c5ab339",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "afa016c8c8bf6f66"
        ],
        "x": 595,
        "y": 3200,
        "wires": [
            [
                "abfb810893124c8f"
            ]
        ]
    },
    {
        "id": "216593b59cc26530",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3280,
        "wires": [
            [
                "367590ac9df916bb"
            ]
        ]
    },
    {
        "id": "367590ac9df916bb",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.HolidayMode",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HolidayMode';\nglobal.set(\"HolidayMode\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "369dddac66b0beaf",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3340,
        "wires": [
            [
                "8f9cd9ab5ddb606b"
            ]
        ]
    },
    {
        "id": "8f9cd9ab5ddb606b",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.PowerfulMode",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'PowerfulMode';\nglobal.set(\"PowerfulMode\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "2c5d8d5f82e25b9d",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "3347423e986c456f"
        ],
        "x": 595,
        "y": 3260,
        "wires": [
            [
                "216593b59cc26530"
            ]
        ]
    },
    {
        "id": "7463c409a280781b",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "3319341e875c1c34"
        ],
        "x": 595,
        "y": 3320,
        "wires": [
            [
                "369dddac66b0beaf"
            ]
        ]
    },
    {
        "id": "5e82fbce693ece13",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3400,
        "wires": [
            [
                "4fd03980c0c45aba"
            ]
        ]
    },
    {
        "id": "4fd03980c0c45aba",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.ForceDHW",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'ForceDHW';\nglobal.set(\"ForceDHW\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "3469894785389b69",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "29bf105c977fa4a2"
        ],
        "x": 135,
        "y": 3400,
        "wires": [
            [
                "5e82fbce693ece13"
            ]
        ]
    },
    {
        "id": "b82f772d33931666",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3460,
        "wires": [
            [
                "9315b3ddc054884b"
            ]
        ]
    },
    {
        "id": "9315b3ddc054884b",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.ForceDefrost",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'ForceDefrost';\nglobal.set(\"ForceDefrost\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "77f0e10c3c752749",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "976dea314b622c06"
        ],
        "x": 595,
        "y": 3440,
        "wires": [
            [
                "b82f772d33931666"
            ]
        ]
    },
    {
        "id": "b1ca5534e437a827",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3520,
        "wires": [
            [
                "02d942616c457725"
            ]
        ]
    },
    {
        "id": "02d942616c457725",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.SetZones",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'SetZones';\nglobal.set(\"SetZones\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "ff9de88b8dd2ccac",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3580,
        "wires": [
            [
                "f60d0a8b122acd7b"
            ]
        ]
    },
    {
        "id": "f60d0a8b122acd7b",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.FloorHeatDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'FloorHeatDelta';\nglobal.set(\"FloorHeatDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 3580,
        "wires": [
            []
        ]
    },
    {
        "id": "b12815979af8daff",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3700,
        "wires": [
            [
                "7be406d685602992",
                "f2a06eb79adcfc90"
            ]
        ]
    },
    {
        "id": "7be406d685602992",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.FloorCoolDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'FloorCoolDelta';\nglobal.set(\"FloorCoolDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "e3785c89d9cfea23",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3760,
        "wires": [
            [
                "4601e257c79298bd"
            ]
        ]
    },
    {
        "id": "4601e257c79298bd",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.DHWHeatDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'DHWHeatDelta';\nglobal.set(\"DHWHeatDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 3760,
        "wires": [
            []
        ]
    },
    {
        "id": "c34c0a1d2b801444",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "80f72faade28b47c"
        ],
        "x": 595,
        "y": 3500,
        "wires": [
            [
                "b1ca5534e437a827"
            ]
        ]
    },
    {
        "id": "612fa06c85db220d",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "86d484889622b393"
        ],
        "x": 595,
        "y": 3560,
        "wires": [
            [
                "ff9de88b8dd2ccac"
            ]
        ]
    },
    {
        "id": "04681d5d9dd62456",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "1f33d0225e34752f"
        ],
        "x": 595,
        "y": 3680,
        "wires": [
            [
                "b12815979af8daff"
            ]
        ]
    },
    {
        "id": "e60199296e7cde7b",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "751a714439c831d4"
        ],
        "x": 595,
        "y": 3740,
        "wires": [
            [
                "e3785c89d9cfea23"
            ]
        ]
    },
    {
        "id": "2ed8794a71d1d33d",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3820,
        "wires": [
            [
                "7012f8fbb9b8beac"
            ]
        ]
    },
    {
        "id": "7012f8fbb9b8beac",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.HeaterDelayTime",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HeaterDelayTime';\nglobal.set(\"HeaterDelayTime\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3820,
        "wires": [
            []
        ]
    },
    {
        "id": "357e0eccfc3dbaf4",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3880,
        "wires": [
            [
                "c33a80f7951c9da9"
            ]
        ]
    },
    {
        "id": "c33a80f7951c9da9",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.HeaterStartDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HeaterStartDelta';\nglobal.set(\"HeaterStartDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3880,
        "wires": [
            []
        ]
    },
    {
        "id": "37e288675af74c04",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3940,
        "wires": [
            [
                "cb6c919d361031b8"
            ]
        ]
    },
    {
        "id": "cb6c919d361031b8",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.HeaterStopDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HeaterStopDelta';\nglobal.set(\"HeaterStopDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3940,
        "wires": [
            []
        ]
    },
    {
        "id": "394b97622598c24d",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 4000,
        "wires": [
            [
                "e761e759a2a33314"
            ]
        ]
    },
    {
        "id": "e761e759a2a33314",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.PanasonicMainScheduler",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'PanasonicMainScheduler';\nglobal.set(\"PanasonicMainScheduler\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 4000,
        "wires": [
            []
        ]
    },
    {
        "id": "2218fb7f9c3db48d",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "90109b95306f9bfd"
        ],
        "x": 595,
        "y": 3800,
        "wires": [
            [
                "2ed8794a71d1d33d"
            ]
        ]
    },
    {
        "id": "2cbea65d0779e81a",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "b716db861e8f424d"
        ],
        "x": 595,
        "y": 3860,
        "wires": [
            [
                "357e0eccfc3dbaf4"
            ]
        ]
    },
    {
        "id": "bb66afd28bb43f61",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "6ecde2f5829ff329"
        ],
        "x": 595,
        "y": 3920,
        "wires": [
            [
                "37e288675af74c04"
            ]
        ]
    },
    {
        "id": "fd4587f96473755f",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "a34f3895492bdb0b"
        ],
        "x": 595,
        "y": 3980,
        "wires": [
            [
                "394b97622598c24d"
            ]
        ]
    },
    {
        "id": "5304274e9e66bac2",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "Put settings from GUI - DASH into variables",
        "info": "",
        "x": 390,
        "y": 3160,
        "wires": []
    },
    {
        "id": "011d067460eddf40",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "links": [
            "609f82934b0df3ba",
            "8c120546f2678ef0"
        ],
        "x": 195,
        "y": 2360,
        "wires": [
            [
                "aa375b22b201327c"
            ]
        ]
    },
    {
        "id": "192ce54224d5a716",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "set.SetForceSterilization",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'SetForceSterilization';\nglobal.set(\"SetForceSterilization\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 4060,
        "wires": [
            []
        ]
    },
    {
        "id": "a9e414d69b244f7d",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 4060,
        "wires": [
            [
                "192ce54224d5a716"
            ]
        ]
    },
    {
        "id": "6226f8037ab37406",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "links": [
            "e746c2626c1df614"
        ],
        "x": 135,
        "y": 4060,
        "wires": [
            [
                "a9e414d69b244f7d"
            ]
        ]
    },
    {
        "id": "2a8312727abe76b3",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "links": [
            "b3a78c2dd8516eae"
        ],
        "x": 215,
        "y": 2980,
        "wires": [
            [
                "6b3a8913e00d3b29"
            ]
        ]
    },
    {
        "id": "3fab9c839d56fb6e",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "links": [
            "4cd968e37828a56e"
        ],
        "x": 215,
        "y": 3040,
        "wires": [
            [
                "177ab2eb4ccfc1d3"
            ]
        ]
    },
    {
        "id": "6b3a8913e00d3b29",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.HEAT_SP_lower_limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HEAT_SP_lower_limit';\nglobal.set(\"HEAT_SP_lower_limit\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "177ab2eb4ccfc1d3",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.HEAT_SP_upper_limit",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'HEAT_SP_upper_limit';\nglobal.set(\"HEAT_SP_upper_limit\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "07a87068af5e5e3e",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "set.TOP14_Outside_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\n\nvar stored_value = global.get('TOP14_Outside_Temp');\n\nif (stored_value != msg.payload)    {global.set(\"TOP14_Outside_Temp\",msg.payload); }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 220,
        "wires": [
            [
                "5597559da70476dd"
            ]
        ]
    },
    {
        "id": "a91f3c0287cb150b",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP98 - panasonic_heat_pump/main/Heater_Stop_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Stop_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 3940,
        "wires": [
            [
                "37e288675af74c04"
            ]
        ]
    },
    {
        "id": "b77836faee9c889e",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP97 - panasonic_heat_pump/main/Heater_Start_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Start_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 3880,
        "wires": [
            [
                "357e0eccfc3dbaf4"
            ]
        ]
    },
    {
        "id": "ea9c0fc813d950a5",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP96 - panasonic_heat_pump/main/Heater_Delay_Time",
        "topic": "panasonic_heat_pump/main/Heater_Delay_Time",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 3820,
        "wires": [
            [
                "2ed8794a71d1d33d"
            ]
        ]
    },
    {
        "id": "f67b4a28d8ff7330",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP22 - panasonic_heat_pump/main/DHW_Heat_Delta",
        "topic": "panasonic_heat_pump/main/DHW_Heat_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 3760,
        "wires": [
            [
                "e3785c89d9cfea23"
            ]
        ]
    },
    {
        "id": "87497a8381d1ae44",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP23 - panasonic_heat_pump/main/Heat_Delta",
        "topic": "panasonic_heat_pump/main/Heat_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 3580,
        "wires": [
            [
                "ff9de88b8dd2ccac"
            ]
        ]
    },
    {
        "id": "07772c3783ff4118",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP24 - panasonic_heat_pump/main/Cool_Delta",
        "topic": "panasonic_heat_pump/main/Cool_Delta",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 3700,
        "wires": [
            [
                "b12815979af8daff"
            ]
        ]
    },
    {
        "id": "fa28cc892ad704b6",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP17 - panasonic_heat_pump/main/Powerful_Mode_Time",
        "topic": "panasonic_heat_pump/main/Powerful_Mode_Time",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 3340,
        "wires": [
            [
                "369dddac66b0beaf"
            ]
        ]
    },
    {
        "id": "862ce713b857025e",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP19 - panasonic_heat_pump/main/Holiday_Mode_State",
        "topic": "panasonic_heat_pump/main/Holiday_Mode_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 3280,
        "wires": [
            [
                "216593b59cc26530"
            ]
        ]
    },
    {
        "id": "b90a288eb11425db",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP18 - panasonic_heat_pump/main/Quiet_Mode_Level",
        "topic": "panasonic_heat_pump/main/Quiet_Mode_Level",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 2360,
        "wires": [
            [
                "aa375b22b201327c"
            ]
        ]
    },
    {
        "id": "e8b05fdeb8e33212",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP13 - panasonic_heat_pump/main/Main_Schedule_State",
        "topic": "panasonic_heat_pump/main/Main_Schedule_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 4000,
        "wires": [
            [
                "394b97622598c24d"
            ]
        ]
    },
    {
        "id": "1a53f800d174be7a",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP94 - panasonic_heat_pump/main/Zones_State",
        "topic": "panasonic_heat_pump/main/Zones_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 3520,
        "wires": [
            [
                "b1ca5534e437a827"
            ]
        ]
    },
    {
        "id": "2aade3b3dd3ca9c4",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "topic": "panasonic_heat_pump/main/Defrosting_State",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 3460,
        "wires": [
            [
                "b82f772d33931666"
            ]
        ]
    },
    {
        "id": "806e5414355b6ba0",
        "type": "ui_numeric",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "Night reduction",
        "label": "Reduce tempreature with",
        "tooltip": "Value is the correction on current SP",
        "group": "32e927aa7dc43b2a",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "night_reduction_correction",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "-10",
        "max": "0",
        "step": "1",
        "className": "",
        "x": 800,
        "y": 4420,
        "wires": [
            [
                "5ec47380bdf53973"
            ]
        ]
    },
    {
        "id": "2ac428581507ebcd",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "set.NightReduction_correction",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"NightReduction_correction\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 4420,
        "wires": [
            []
        ]
    },
    {
        "id": "8353adc11c76852d",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "1 Trigger / 30 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 4280,
        "wires": [
            [
                "80f27521586ee747"
            ]
        ]
    },
    {
        "id": "80f27521586ee747",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "Load on boot nachtverlaging",
        "func": "var on_off      = global.get('nightreduction_on_off',\"file\");\nvar correction  = global.get('NightReduction_correction',\"file\");\n    if (correction === undefined)\n        {\n            correction = 0;\n        }\nvar var1        = global.get('NightReduction_current_value',\"file\");\n\nlet msg1={}, msg2={},msg3={};\n\n\nmsg1.payload = var1;\nmsg2.payload = on_off;\nmsg3.payload = correction;\n\nif(var1 === undefined) {msg2=null,msg3=null;}\nif(on_off === undefined) {msg2=null,msg3=null;}\n\nif(on_off == 1)\n    {\n    global.set(\"NightReduction_current_value\",correction,\"file\");\n    msg1.payload = correction;\n    }\n\nif(on_off == 0)\n    {\n    global.set(\"NightReduction_current_value\",0,\"file\");\n    msg1.payload = 0;\n    }\n\n\n\nreturn [msg1,msg2,msg3];\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nif (global.get('nightreduction_on_off',\"file\")===undefined)\n    {\n        global.set('nightreduction_on_off',0,\"file\")\n    }\n    \n\nif (global.get('NightReduction_correction',\"file\")===undefined)\n    {\n        global.set('NightReduction_correction',0,\"file\");\n    }",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 4280,
        "wires": [
            [
                "a84d5e1f42075324"
            ],
            [
                "a378f30d0ea1e84d"
            ],
            [
                "806e5414355b6ba0"
            ]
        ],
        "outputLabels": [
            "NightReduction_current_value",
            "nightreduction_on_off",
            "NightReduction_correction"
        ]
    },
    {
        "id": "b6c347a9d1eb45dc",
        "type": "ui_text",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "group": "c7d23e4a20ddaedf",
        "order": 16,
        "width": 2,
        "height": 1,
        "name": "nightreduction read",
        "label": "",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-spread",
        "className": "",
        "x": 810,
        "y": 4240,
        "wires": []
    },
    {
        "id": "43d8acff9545baf1",
        "type": "ui_text",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "group": "c7d23e4a20ddaedf",
        "order": 15,
        "width": 3,
        "height": 1,
        "name": "text nightreduction",
        "label": "NightReduction",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 4240,
        "wires": []
    },
    {
        "id": "a378f30d0ea1e84d",
        "type": "ui_switch",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "Night reduction",
        "label": "",
        "tooltip": "Turn on/off the Night reduction function. Configure in \"Scheduler\" menu. ",
        "group": "c7d23e4a20ddaedf",
        "order": 14,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 800,
        "y": 4320,
        "wires": [
            [
                "a7af04354fc3a4d5"
            ]
        ]
    },
    {
        "id": "5d14ce76c8c9d04b",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "set.nightreduction_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"nightreduction_on_off\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 4320,
        "wires": [
            []
        ]
    },
    {
        "id": "19996f2ab784830b",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "geprogrammeerde reductie",
        "info": "",
        "x": 830,
        "y": 4380,
        "wires": []
    },
    {
        "id": "e3566b54a1154e42",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "current value",
        "info": "",
        "x": 790,
        "y": 4200,
        "wires": []
    },
    {
        "id": "19f0e9b8751d9c04",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "toggle",
        "info": "",
        "x": 770,
        "y": 4280,
        "wires": []
    },
    {
        "id": "a7af04354fc3a4d5",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 4320,
        "wires": [
            [
                "5d14ce76c8c9d04b",
                "80f27521586ee747",
                "15c22917f82b9e09",
                "3447a0e444da5011",
                "4ffd061d60371256"
            ]
        ]
    },
    {
        "id": "15c22917f82b9e09",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "nightreduction_on_off",
        "mode": "link",
        "links": [
            "73ee925b927ed0c6",
            "3ab7a10b46379da2",
            "adef30c4c6fd9e18"
        ],
        "x": 1115,
        "y": 4280,
        "wires": []
    },
    {
        "id": "5ec47380bdf53973",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 4420,
        "wires": [
            [
                "2ac428581507ebcd",
                "4ffd061d60371256"
            ]
        ]
    },
    {
        "id": "fa50164523f6e480",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 2900,
        "wires": [
            [
                "6a3f44e3d0b5f6f4"
            ]
        ]
    },
    {
        "id": "6a3f44e3d0b5f6f4",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "set.DHW_Energy_Consumption",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'DHW_Energy_Consumption';\nglobal.set(\"DHW_Energy_Consumption\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2900,
        "wires": [
            [
                "49a95f1d3ad9841a"
            ]
        ]
    },
    {
        "id": "e04388d83dce1926",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP41 - panasonic_heat_pump/main/DHW_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Consumption",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 420,
        "y": 2900,
        "wires": [
            [
                "fa50164523f6e480"
            ]
        ]
    },
    {
        "id": "d387b7f300bf2191",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "e4f580c10318e468",
        "name": "COP DHW",
        "mode": "link",
        "links": [
            "7ca4a277069a6621",
            "f402bbd959151e26"
        ],
        "x": 2065,
        "y": 2240,
        "wires": []
    },
    {
        "id": "3447a0e444da5011",
        "type": "change",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NR Function - NightReduction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 4240,
        "wires": [
            [
                "eb2fc0b7cd899461"
            ]
        ]
    },
    {
        "id": "eb2fc0b7cd899461",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 1335,
        "y": 4240,
        "wires": []
    },
    {
        "id": "7f07e4666d9bccbe",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "set.T_outside_custom",
        "func": "let msg99={};\n\nif (msg.payload == \"check\") \n        {\n            global.set(\"T_outside_custom\",undefined)\n            msg99.topic = \"SETUP - Sensors\";\n            msg99.payload = \"Custom outside temperature sensor reset.\";\n    \n            return [null,msg99];\n        }\n        \n      \n\nif (msg.payload == \"too_old\") \n    {\n        global.set(\"T_outside_custom\",undefined);\n\n        msg99.topic = \"SETUP - Sensors\";\n        msg99.payload = \"Custom outside temperature sensor not found. Using TOP14\";\n\n        return [null,msg99];\n    }\n\n\nelse\n    {\n        msg.payload = Number(msg.payload).toFixed(1);\n        msg.payload = parseFloat(msg.payload);\n        \n        if (msg.payload < -1000)                                                // rough sanity check\n            {\n                global.set(\"T_outside_custom\",undefined);\n                return null;\n            }\n        \n        var stored_value = global.get('T_outside_custom');\n        if (stored_value != msg.payload)            {global.set(\"T_outside_custom\",msg.payload);}\n\n        msg99.topic = \"SETUP - Sensors\";\n        msg99.payload = \"Custom outside temperature sensor FOUND\";\n        \n        return [msg,msg99];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 180,
        "wires": [
            [
                "5597559da70476dd"
            ],
            [
                "98e963de49772192"
            ]
        ],
        "outputLabels": [
            "payload",
            "to log"
        ]
    },
    {
        "id": "d503c63d3e69a9e1",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "set.T_room_custom",
        "func": "let msg99={};        \n\nif (msg.payload == \"check\") \n        {\n            global.set(\"T_room_custom\",undefined);\n            msg99.topic = \"SETUP - Sensors\";\n            msg99.payload = \"Custom room temperature sensor reset.\";\n            return [null,msg99];\n        }\n\n\n\nif (msg.payload == \"too_old\") \n    {\n        global.set(\"T_room_custom\",undefined);\n\n        msg99.topic = \"SETUP - Sensors\";\n        msg99.payload = \"Custom room temperature sensor not found. Using TOP33\";\n\n        return [null,msg99];\n    }\n\n\nelse\n    {\n        msg.payload = Number(msg.payload).toFixed(2);\n        msg.payload = parseFloat(msg.payload);\n        \n        if (msg.payload < -1000)                                                // rough sanity check\n            {\n                global.set(\"T_room_custom\",undefined);\n                return null;\n            }\n        \n        var stored_value = global.get('T_room_custom');\n        if (stored_value != msg.payload)            {global.set(\"T_room_custom\",msg.payload);}\n\n        msg99.topic = \"SETUP - Sensors\";\n        msg99.payload = \"Custom room temperature sensor FOUND\";\n        \n        return [msg,msg99];\n    }\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 400,
        "wires": [
            [
                "3bed1722a86638b5"
            ],
            [
                "b8522e89af164e96"
            ]
        ]
    },
    {
        "id": "6e2873ec4d6fc673",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "set.TOP33_Room_Thermostat_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nvar stored_value = global.get('TOP33_Room_Thermostat_Temp');\nif (stored_value != msg.payload)\n{\n    global.set(\"TOP33_Room_Thermostat_Temp\",msg.payload);\n    \n}\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 440,
        "wires": [
            [
                "3bed1722a86638b5"
            ]
        ]
    },
    {
        "id": "3bed1722a86638b5",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "filter T_room",
        "func": "var TOP33               = global.get('TOP33_Room_Thermostat_Temp');             // The default heatpump outside temperature sensor\nvar T_room_custom       = global.get('T_room_custom');                          // Custom outside temperature sensor\nvar T_room;\n\nlet msg1={};\n\nif (T_room_custom === undefined)\n    {\n        T_room = TOP33;\n    }\nelse\n    {\n        T_room = T_room_custom;\n    }\n\n\nmsg1.payload = T_room;\nmsg1.payload = Number(msg1.payload).toFixed(2);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic = 'T_room';\n\nvar stored_value        = global.get('T_room');\n\nif (stored_value != T_room)\n{\n    global.set(\"T_room\",msg1.payload);\n    \n}\n\nreturn msg1;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 440,
        "wires": [
            [
                "c7d4c4ec6b4571e6"
            ]
        ]
    },
    {
        "id": "3692b2e195b3bd33",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "You can use your own custom external sensors",
        "info": "",
        "x": 320,
        "y": 320,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "3741d74fd5cd5d25",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 220,
        "wires": [
            [
                "624e0da42530bdae",
                "db87b6195bdd3330"
            ]
        ]
    },
    {
        "id": "c7d4c4ec6b4571e6",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 440,
        "wires": [
            [
                "d7f096a9d8df7a13",
                "1f9b6862937c501f"
            ]
        ]
    },
    {
        "id": "7e177718e622a62e",
        "type": "trigger",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "op1": "",
        "op2": "too_old",
        "op1type": "nul",
        "op2type": "str",
        "duration": "12",
        "extend": true,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "7f07e4666d9bccbe"
            ]
        ]
    },
    {
        "id": "da79170f9de0f540",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "check",
        "payloadType": "str",
        "x": 610,
        "y": 300,
        "wires": [
            [
                "7e177718e622a62e",
                "8b06680ffbec0315",
                "7f07e4666d9bccbe",
                "d503c63d3e69a9e1"
            ]
        ]
    },
    {
        "id": "5b8a32e638268c5f",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 2125,
        "y": 320,
        "wires": []
    },
    {
        "id": "98e963de49772192",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1650,
        "y": 180,
        "wires": [
            [
                "5b8a32e638268c5f"
            ]
        ]
    },
    {
        "id": "8b06680ffbec0315",
        "type": "trigger",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "op1": "",
        "op2": "too_old",
        "op1type": "nul",
        "op2type": "str",
        "duration": "12",
        "extend": true,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1030,
        "y": 400,
        "wires": [
            [
                "d503c63d3e69a9e1"
            ]
        ]
    },
    {
        "id": "b8522e89af164e96",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1650,
        "y": 400,
        "wires": [
            [
                "5b8a32e638268c5f"
            ]
        ]
    },
    {
        "id": "ed03f727d99a6cd3",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 140,
        "wires": [
            [
                "7f07e4666d9bccbe"
            ]
        ]
    },
    {
        "id": "0eb2c53109f2fc15",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "3652f4419eab43a0",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 360,
        "wires": [
            [
                "d503c63d3e69a9e1"
            ]
        ]
    },
    {
        "id": "3b291f037be93697",
        "type": "mqtt out",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "SET6 SetZ1CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1CoolRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 3910,
        "y": 480,
        "wires": []
    },
    {
        "id": "bcd27365ca11cd11",
        "type": "ui_numeric",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "label": "COOL (SP)",
        "tooltip": "",
        "group": "e343dae676c69b2b",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "5",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 3170,
        "y": 480,
        "wires": [
            [
                "6f076cc013694465",
                "90e8ce91cf776f78"
            ]
        ]
    },
    {
        "id": "6f076cc013694465",
        "type": "trigger",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3360,
        "y": 480,
        "wires": [
            [
                "e7b8e3f0e0750976"
            ]
        ]
    },
    {
        "id": "e7b8e3f0e0750976",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3510,
        "y": 480,
        "wires": [
            [
                "049464969a85d7b4",
                "3a635ae8da83e53e"
            ]
        ]
    },
    {
        "id": "efdb6a7410cd1193",
        "type": "debug",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3830,
        "y": 400,
        "wires": []
    },
    {
        "id": "41bb1ff37fc643f8",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "TOP28 - panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2610,
        "y": 480,
        "wires": [
            [
                "efdb6a7410cd1193",
                "a2cde1047e27236b",
                "a197703cde8178b3"
            ]
        ]
    },
    {
        "id": "049464969a85d7b4",
        "type": "debug",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3830,
        "y": 440,
        "wires": []
    },
    {
        "id": "a2cde1047e27236b",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2980,
        "y": 480,
        "wires": [
            [
                "bcd27365ca11cd11",
                "90e8ce91cf776f78"
            ]
        ]
    },
    {
        "id": "e01097a85d49966e",
        "type": "ui_text",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "group": "e343dae676c69b2b",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "COOL Status",
        "label": "COOL Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3170,
        "y": 360,
        "wires": []
    },
    {
        "id": "f1003d49e2e4f358",
        "type": "change",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "OFF",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2980,
        "y": 360,
        "wires": [
            [
                "e01097a85d49966e"
            ]
        ]
    },
    {
        "id": "759a1f4e9f295ba1",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "Check operation mode",
        "func": "var OM = global.get('Operating_Mode_State',\"file\");\nlet msg1={};\nif (OM == 1 || OM == 5 || OM == 7 || OM == 8)\n{\n    msg1.payload = OM;\n    return [msg,msg1];\n}\nelse\n{\n    msg.payload = 1;\n    return msg;}\n\n\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 360,
        "wires": [
            [
                "f1003d49e2e4f358"
            ],
            []
        ]
    },
    {
        "id": "18003218fe20c4f2",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "links": [
            "f286caa8f446a1b8"
        ],
        "x": 2475,
        "y": 360,
        "wires": [
            [
                "759a1f4e9f295ba1"
            ]
        ]
    },
    {
        "id": "be1f03974f99ba5d",
        "type": "ui_template",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "group": "e343dae676c69b2b",
        "name": "Line - Setup ",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3170,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "676bdd75e8f733d7",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "396e1bf96a123f74",
        "name": "",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.topic == \"RH\")\n{\n    context.set('RH',msg.payload);\n}\nif (msg.topic == \"Temperature\")\n{\n    context.set('Temperature',msg.payload);\n}\n\n\nvar RH = context.get('RH');\nvar T = context.get('Temperature');\n\nif (RH !== undefined && T !== undefined)\n{\n    var Td = T - (( 100-RH ) / 5);\n    let msg1={};\n    msg1.payload = Td;\n    msg1.payload = Number(msg1.payload).toFixed(1);\n    msg1.payload = parseFloat(msg1.payload);\n\n    msg1.topic = \"Dew Point (°C)\";\n    flow.set(\"dew_point\",msg1);\n    return msg1;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3180,
        "y": 160,
        "wires": [
            [
                "96e9f79c5bcacfa2",
                "9daaa9f6e618fd7d",
                "9270efc38c14930e"
            ]
        ]
    },
    {
        "id": "9dd999b1fc29b9f0",
        "type": "change",
        "z": "17763558ebd7bc3c",
        "g": "396e1bf96a123f74",
        "name": "RH",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "RH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2990,
        "y": 120,
        "wires": [
            [
                "676bdd75e8f733d7"
            ]
        ]
    },
    {
        "id": "065fef5c8fcaf5cf",
        "type": "change",
        "z": "17763558ebd7bc3c",
        "g": "396e1bf96a123f74",
        "name": "Temperature",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Temperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2970,
        "y": 200,
        "wires": [
            [
                "676bdd75e8f733d7",
                "9daaa9f6e618fd7d"
            ]
        ]
    },
    {
        "id": "96e9f79c5bcacfa2",
        "type": "debug",
        "z": "17763558ebd7bc3c",
        "g": "396e1bf96a123f74",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3430,
        "y": 160,
        "wires": []
    },
    {
        "id": "9daaa9f6e618fd7d",
        "type": "ui_chart",
        "z": "17763558ebd7bc3c",
        "g": "396e1bf96a123f74",
        "name": "",
        "group": "9dedfacf1bbd23a2",
        "order": 1,
        "width": 11,
        "height": 10,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3410,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "f1c0fec675eba115",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "396e1bf96a123f74",
        "name": "CONNECT >> Custom sensor - Humidity (for humidity dewpoint)",
        "links": [
            "b70243b30a7c5db8"
        ],
        "x": 2630,
        "y": 120,
        "wires": [
            [
                "9dd999b1fc29b9f0",
                "fb92a985f9691dfe"
            ]
        ],
        "l": true
    },
    {
        "id": "c13453ac13a31b63",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "396e1bf96a123f74",
        "name": "CONNECT >> Custom sensor - Temperature  (for humidity dewpoint)",
        "links": [
            "21b7700ac74fcbe8"
        ],
        "x": 2640,
        "y": 200,
        "wires": [
            [
                "065fef5c8fcaf5cf",
                "7b6bc6b92232e5d1"
            ]
        ],
        "l": true
    },
    {
        "id": "f3cac33ba1dd2312",
        "type": "ui_text",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "group": "5f98c22d95c413a9",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "COOL Status",
        "label": "COOL Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3170,
        "y": 660,
        "wires": []
    },
    {
        "id": "d7904046f6ca4ad0",
        "type": "ui_template",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "group": "5f98c22d95c413a9",
        "name": "Line - Setup ",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3170,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "90e8ce91cf776f78",
        "type": "ui_numeric",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "label": "COOL (SP)",
        "tooltip": "",
        "group": "5f98c22d95c413a9",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "5",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 3170,
        "y": 740,
        "wires": [
            [
                "ac98b9a85342ec0a"
            ]
        ]
    },
    {
        "id": "ac98b9a85342ec0a",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3350,
        "y": 740,
        "wires": [
            [
                "bcd27365ca11cd11",
                "9d2a246ebb882924"
            ]
        ]
    },
    {
        "id": "ab125f9d67e1d8f4",
        "type": "ui_numeric",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "Floor Cool Delta",
        "label": "Floor Cool Delta",
        "tooltip": "Set floor cooling delta in degrees C",
        "group": "5f98c22d95c413a9",
        "order": 4,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 3180,
        "y": 780,
        "wires": [
            [
                "676b1485ccaa0748"
            ]
        ]
    },
    {
        "id": "0034a105fd356a46",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "cool input",
        "links": [
            "1f33d0225e34752f",
            "42bf23d3c646096e"
        ],
        "x": 3035,
        "y": 780,
        "wires": [
            [
                "ab125f9d67e1d8f4"
            ]
        ]
    },
    {
        "id": "b8828738e4fc6e15",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "mode": "link",
        "links": [
            "937bab7333c667b9"
        ],
        "x": 3485,
        "y": 780,
        "wires": []
    },
    {
        "id": "676b1485ccaa0748",
        "type": "trigger",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3360,
        "y": 780,
        "wires": [
            [
                "b8828738e4fc6e15",
                "9d2a246ebb882924"
            ]
        ]
    },
    {
        "id": "42bf23d3c646096e",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "Source TOP24 cool_delta",
        "mode": "link",
        "links": [
            "0034a105fd356a46"
        ],
        "x": 1215,
        "y": 3660,
        "wires": []
    },
    {
        "id": "f2a06eb79adcfc90",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 3660,
        "wires": [
            [
                "42bf23d3c646096e"
            ]
        ]
    },
    {
        "id": "3a635ae8da83e53e",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "func": "var FloorCoolDelta                      = global.get('FloorCoolDelta',\"file\");\nvar Z1_Cool_Request_Temp                = global.get(\"Z1_Cool_Request_Temp\");\nvar dew_point                           = flow.get(\"dew_point\");\n\nlet msg1={};\n\n\nif (FloorCoolDelta !== undefined && Z1_Cool_Request_Temp !== undefined && dew_point !== undefined)\n{\n    dew_point                               = dew_point.payload;\n    if (msg.payload >= (dew_point + FloorCoolDelta))\n        {\n            return msg;\n            \n        }\n    \n    else\n        {\n            msg.payload = (dew_point + FloorCoolDelta);\n            msg.payload = Math.ceil(msg.payload);\n            return msg;\n            \n        }\n\n}\nelse \n{\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 480,
        "wires": [
            [
                "3b291f037be93697"
            ]
        ]
    },
    {
        "id": "a197703cde8178b3",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2950,
        "y": 520,
        "wires": [
            [
                "637326188b256f36"
            ]
        ]
    },
    {
        "id": "637326188b256f36",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "set.Z1_Cool_Request_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = 'Z1_Cool_Request_Temp';\nglobal.set(\"Z1_Cool_Request_Temp\",msg.payload);\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2880,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "9270efc38c14930e",
        "type": "ui_text",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "group": "5f98c22d95c413a9",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Calculated DewPoint",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3200,
        "y": 900,
        "wires": []
    },
    {
        "id": "ae2863162894fe8f",
        "type": "ui_template",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "group": "5f98c22d95c413a9",
        "name": "Line - Setup ",
        "order": 5,
        "width": 6,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3170,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "fb92a985f9691dfe",
        "type": "ui_text",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "group": "5f98c22d95c413a9",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 3700,
        "y": 120,
        "wires": []
    },
    {
        "id": "7b6bc6b92232e5d1",
        "type": "ui_text",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "group": "5f98c22d95c413a9",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Room Temperature",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3730,
        "y": 200,
        "wires": []
    },
    {
        "id": "49a95f1d3ad9841a",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "DHW_Energy_Consumption",
        "mode": "link",
        "links": [
            "1f5ee4264b7b4cbb"
        ],
        "x": 1495,
        "y": 2900,
        "wires": []
    },
    {
        "id": "13f5647f03f64e88",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "TOP27 - panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 570,
        "y": 2260,
        "wires": [
            [
                "9dec08c727e1186a"
            ]
        ]
    },
    {
        "id": "9d2a246ebb882924",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "aec12fd9e13cc233",
        "name": "COOL gui changes to function trigger2",
        "mode": "link",
        "links": [],
        "x": 3685,
        "y": 640,
        "wires": []
    },
    {
        "id": "370b3565f472c1ae",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "NR gui changes to function trigger",
        "mode": "link",
        "links": [
            "adef30c4c6fd9e18"
        ],
        "x": 1335,
        "y": 4380,
        "wires": []
    },
    {
        "id": "85245f5021952bd8",
        "type": "complete",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "scope": [
            "cb987aa12172f46f"
        ],
        "uncaught": false,
        "x": 310,
        "y": 1360,
        "wires": [
            [
                "c8848aaf15391ca1"
            ]
        ]
    },
    {
        "id": "65e6c2375df1e228",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 740,
        "wires": [
            [
                "0d996033de2ed84e"
            ]
        ]
    },
    {
        "id": "0d996033de2ed84e",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Function WAR2DIRECT",
        "func": "// All these functions ONLY need to be executed when the heatpump is in HEAT mode. \nlet msg1    ={};        //  pin 1 - SP_WAR (function on)\nlet msg99   ={};        //  pin 2 - Log information\nlet msg3    ={};        //  pin 4 - SP_WAR (function off)\n//\n//                          [msg1, msg99, msg3]\n//******************************************************************************\nvar ThreeWay_Valve_State=global.get('ThreeWay_Valve_State');                    // Get the global variable for current possition of the three way valve. ROOM or DHW mode. (0=HEAT / 1=DHW)\nvar Operating_Mode      =global.get('Operating_Mode_State',\"file\")\nvar current_sp          =global.get('Main_Target_Temp');                        // TOP27\nvar war_state           =global.get('Correction_0_WAR_on_off',\"file\");          // Get the global variable. Used to see if the WAR function is enabled.\n    if (war_state === undefined){war_state=0;}\n\n//******************************************************************************\nvar war_ot1         = global.get('war_ot1',\"file\");                             // Outside temperature high         (warm outside)\nvar war_ot2         = global.get('war_ot2',\"file\");                             // Outside temperature intermediate (intermediate outside temperature)\nvar war_ot3         = global.get('war_ot3',\"file\");                             // Outside temperature low          (cold outside)\nvar war_wt1         = global.get('war_wt1',\"file\");                             // Water temperature low            (cold water)\nvar war_wt2         = global.get('war_wt2',\"file\");                             // Water temperature intermediate   (intermediate water temperature)\nvar war_wt3         = global.get('war_wt3',\"file\");                             // Water temperature high           (warm water)\n\n//******************************************************************************\nvar check = (war_ot1+war_ot2+war_ot3+war_wt1+war_wt2+war_wt3);\nif (isNaN(check) || check === undefined)     // if the variables are added to eachother and the result is Not a Number, produce an error message.\n    {   msg99.payload = \"Profile temperatures are not correctly set in the dashboard. Waiting for Panasonic import or user input\"; \n        msg99.topic = \"Function WAR\";\n        return [null,msg99,null];\n    }\n\n\nvar SP_start       = global.get('SP_DIRECT_virt',\"file\");                  // Get the global variable for SP_DIRECT_virt. Value is set through the dashboard\nif (SP_start === undefined) \n    {\n        SP_start = 20;\n    }\n\nvar war_Tb          = global.get('T_outside',\"file\");           // Outdoor temperature.\nif (isNaN(war_Tb) || war_Tb === undefined || war_Tb < -50)                      // if the variable is Not a Number, produce an error message.\n    {\n        msg99.payload = \"T_outside is not valid. Waiting for correct value.\"; \n        msg99.topic = \"Function WAR\";\n        return [null,msg99,null];\n    }\n\nvar F_WAR_old_SP    = global.get('F_WAR_SP');\n    if (F_WAR_old_SP === undefined) \n        {\n            F_WAR_old_SP=\"empty\";\n            global.set('F_WAR_SP',SP_start);\n        }\n\n////////////////////////////////////////////////////////////////////////////////\n//      Calculation of the NR WAR Setpoint\n////////////////////////////////////////////////////////////////////////////////\n\nvar SP_war;                                                     // set empty starting variable\n\nif (war_Tb => war_ot1) \n    {SP_war = war_wt1;}                                         // Range 1\n\nif (war_Tb < war_ot1 && war_Tb > war_ot2)                       // Range 2\n    {SP_war = (((war_wt1-war_wt2)*((war_Tb-war_ot1)/(war_ot1-war_ot2)))+war_wt1);}\n\n\nif (war_Tb <= war_ot2 && war_Tb > war_ot3)                      // Range 3\n    {SP_war = (((war_wt2-war_wt3)*((war_Tb-war_ot2)/(war_ot2-war_ot3)))+war_wt2);}\n\nif (war_Tb <= war_ot3)                                          // Range 4\n    {SP_war = war_wt3;}                                            \n\nSP_war = Number(SP_war).toFixed(0);\nSP_war = parseFloat(SP_war);\n\n\n\n\n////////////////////////////////////////////////////////////////////////////////\n//      SET27 = 0 >>> External Thermostate being used\n////////////////////////////////////////////////////////////////////////////////\nif (current_sp == 0)\n    {\n        if (war_state==1)\n            {\n                global.set('Correction_0_WAR_on_off',0,\"file\")\n                msg99.payload = \"RoomThermostat found. Using internal Panasonic WAR function. NodeRed WAR function is disabled\"; \n                msg99.topic = \"Function WAR\";\n                return [null,msg99,null];\n            }\n        msg99.payload = \"RoomThermostat found. Using internal Panasonic WAR function. NodeRed WAR function is disabled\"; \n        msg99.topic = \"Function WAR\";\n        return [null,msg99,null];\n    }\n    \n////////////////////////////////////////////////////////////////////////////////\n//      SET27 > 0 >>> WAR Function\n////////////////////////////////////////////////////////////////////////////////\nelse\n    {\n        if (ThreeWay_Valve_State==1 || Operating_Mode === undefined || current_sp == 0 || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)\n            {\n                return null;                                                        // If state is 1 (DHW mode), correction 0 is direclty exported to the message and the function ends here.\n            }\n        else\n            {\n\n                if (war_state==0)                                               // If the state is 1 (enabled), AND outside temperature contains a value.\n                                                                                                // Only if above conditions are met, we will go through the calculation.\n                    {\n                        msg1.payload = SP_war;                                  // Get the global variable for SP_DIRECT_virt. Value is set through the dashboard\n                        msg1.topic='SP_war';\n                        global.set('F_WAR_SP',SP_start);\n                        \n                        return [msg1,null,null]\n                        \n                    }\n\n                    \n                if (war_state==1)\n                    {\n                        msg1.payload = SP_war;                                                         // required\n                        msg1.topic='SP_war';\n                        \n                        if (SP_war == F_WAR_old_SP)\n                            {\n                                return [msg1,null,null]\n                            }\n                        else\n                            {\n                                global.set('F_WAR_SP',SP_war);\n\n                                msg99.payload   = \"Setpoint change: From \" + F_WAR_old_SP + \" to \" + SP_war + \" °C\"; \n                                msg99.topic     = \"Function WAR\";\n                                \n                                return [msg1,msg99,null];\n                            }\n                    }\n                    ////////////////////////////////////////////////////////////////////////////////\n            }\n    }",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 720,
        "wires": [
            [
                "cb47302c2194f2f3"
            ],
            [
                "8d50df28d6f551d3"
            ],
            [
                "410eb68eb31cf311"
            ]
        ],
        "outputLabels": [
            "SP_WAR (function on)",
            "ToLog",
            "SP_WAR (function off)"
        ],
        "info": "# ALL IN ONE FUNCTION\n\nThis function takes care of WAR, RTC and SoftStart. Comments are within"
    },
    {
        "id": "2ade66982bca360c",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Function RTC correction",
        "func": "var Operating_Mode      =global.get('Operating_Mode_State',\"file\")\n\nif (Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)\n    {   \n        return null;\n    }\n\nelse \n{   \n    let msg1={}; \n    let msg2={};\n    let msg99={}; msg99.topic = \"Function RTC\"\n    let msg3={};\n    \n    \n    \n    var rtc_state               =   global.get('Correction_1_RTC_on_off',\"file\");         // Get the global variable. Used to see if the RTC function is enabled.\n\n    var F_RTC_old_correction    =   global.get('F_RTC_correction');\n        if (F_RTC_old_correction === undefined)     {F_RTC_old_correction=0;}\n    \n    var F_WAR_SP                =   global.get('F_WAR_SP'); \n    \n    if (rtc_state == 0)                         \n        {\n            rtc_correction = 0;               // If RTC is disabled, set correction to 0. end if\n            msg1.payload = rtc_correction; \n            msg1.topic = \"rtc_correction\";\n            \n            msg2.payload = F_WAR_SP + rtc_correction; \n            msg2.topic = \"SP RTC result\";\n            \n            msg3.payload = F_WAR_SP;\n            msg3.topic = \"Start SP\";\n            \n            global.set('F_RTC_correction',rtc_correction);\n            return [msg1,msg2,null,msg3]; \n            \n        }\n    \n    else\n        {\n    \n        // Declaration of variables including their values.    \n        var rtc_correction  = 0;                                                // declare local variable, start with value zero\n        var rtc_PV          = global.get('T_room');                             // Get the global variable. THe room temperature for RoomTemperatureCompensation you want to control.\n        var rtc_SP          = global.get('WoonkamerSP',\"file\");                 // Virtual target temperature setpoint for RTC. Set in Dashboard. \n        var rtc_Tb          = global.get('T_outside',\"file\");                   // Outdoor temperature.\n    \n        var rtc_dT          = (rtc_PV-rtc_SP);                                  // local variable for calculated temperature difference. If > 0 it is too warm, If < 0 it is too cold. \n        \n        //\n        // below are the variables containing the temperature ranges.\n        var rtc_t1          = global.get('rtc_t1',\"file\");                      // Range +3\n        var rtc_t2          = global.get('rtc_t2',\"file\");                      // Range +2\n        var rtc_t3          = global.get('rtc_t3',\"file\");                      // Range +1\n        \n        var rtc_t4          = global.get('rtc_t4',\"file\");                      // Range -1\n        var rtc_t5          = global.get('rtc_t5',\"file\");                      // Range -2\n        var rtc_t6          = global.get('rtc_t6',\"file\");                      // Range -3\n\n        if (rtc_t1 === undefined)                                   // Range +3\n            {\n                global.set('rtc_t1',1.5,\"file\");\n            }\n        if (rtc_t2 === undefined)                                   // Range +2\n            {\n                global.set('rtc_t2',1,\"file\");\n            }\n        if (rtc_t3 === undefined)                                   // Range +1\n            {\n                global.set('rtc_t3',0.5,\"file\");\n            }\n        if (rtc_t4 === undefined)                                   // Range -1\n            {\n                global.set('rtc_t4',-0.5,\"file\");\n            }\n        if (rtc_t5 === undefined)                                   // Range -2\n            {\n                global.set('rtc_t5',-1,\"file\");\n            }\n        if (rtc_t6 === undefined)                                   // Range -3\n            {\n                global.set('rtc_t6',-1.5,\"file\");\n            }\n\n        if (isNaN(rtc_t1+rtc_t2+rtc_t3+rtc_t4+rtc_t5+rtc_t6))               // if the variables are added to eachother and the result is Not a Number, produce an error message.\n            {\n                msg99.payload = \"RTC function temperatures are not correctly set in the dashboard. Please correct this in the GUI.\"\n                return [null,null,msg99,null]\n                \n            }\n        \n        // ADJUST THE VALUES BELOW TO YOUR OWN SITUATION\n    \n        if (rtc_dT >= rtc_t1) {rtc_correction = rtc_correction -1;}             // It is way too hot.\n        if (rtc_dT >= rtc_t2) {rtc_correction = rtc_correction -1;}             // It is too hot.\n        if (rtc_dT >= rtc_t3) {rtc_correction = rtc_correction -1;}             // It is a little too hot.\n    \n        if (rtc_dT < rtc_t3 && rtc_dT > rtc_t4) {rtc_correction = 0;}             // It is right in the middle.\n    \n        if (rtc_Tb < 18)                                                        // Extra check to justify increasing the setpoint this much.\n            {\n            if (rtc_dT <= rtc_t6) {rtc_correction = rtc_correction +1;}          // It is way too cold\n            if (rtc_dT <= rtc_t5) {rtc_correction = rtc_correction +1;}          // It is too cold.\n            }\n        if (rtc_dT <= rtc_t4) {rtc_correction = rtc_correction +1;}              // It is a little too cold\n    \n    /////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////\n        }\n//******************************************************************************        \n    if (F_RTC_old_correction == rtc_correction)\n        {\n            \n            msg2.payload = F_WAR_SP + rtc_correction; \n            msg2.topic = \"SP RTC result\";\n            \n            msg3.payload = F_WAR_SP;\n            msg3.topic = \"Start SP\";\n            return [null,msg2,null,msg3]; \n        }\n    \n    else\n        {\n\n            \n            msg1.payload = rtc_correction; msg1.topic = \"rtc_correction\";\n            \n            msg2.payload = F_WAR_SP + rtc_correction; \n            msg2.topic = \"SP RTC result\";\n            \n            msg3.payload = F_WAR_SP;\n            msg3.topic = \"Start SP\";\n            \n            global.set('F_RTC_correction',msg1.payload)\n            \n            msg99.payload = \"Correction change: From \" + F_RTC_old_correction + \" to \" + rtc_correction + \" °C\";\n            \n            \n            return [msg1,msg2,msg99,msg3]; \n        }\n    \n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n\nvar rtc_t1          = global.get('rtc_t1',\"file\");                      // Range +3\nvar rtc_t2          = global.get('rtc_t2',\"file\");                      // Range +2\nvar rtc_t3          = global.get('rtc_t3',\"file\");                      // Range +1\n\nvar rtc_t4          = global.get('rtc_t4',\"file\");                      // Range -1\nvar rtc_t5          = global.get('rtc_t5',\"file\");                      // Range -2\nvar rtc_t6          = global.get('rtc_t6',\"file\");                      // Range -3\n",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 840,
        "wires": [
            [
                "d9d59760031361d8"
            ],
            [
                "dec1bfecd6b9d7e8"
            ],
            [
                "26ae5115695e9aec"
            ],
            [
                "15cc5a5193aca837"
            ]
        ],
        "outputLabels": [
            "rtc_correction",
            "SP RTC result",
            "ToLog",
            "Start SP"
        ]
    },
    {
        "id": "923a260a80d944a3",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 820,
        "wires": [
            [
                "2ade66982bca360c"
            ]
        ]
    },
    {
        "id": "cb987aa12172f46f",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Function SoftStart",
        "func": "\n//////////////////////////////// SOFTSTART /////////////////////////////////////\n// Declaration of variables including their values.\nlet msg1={}, msg2={}, msg3={}, msg4={},msg5={},msg99={};\nvar ThreeWay_Valve_State= global.get('ThreeWay_Valve_State');\nvar F_SS_state          = global.get('Correction_2_softstart_on_off',\"file\");    // Get the global variable. Used to see if the softstart function is enabled.\nvar F_SS_correction     = 0;\nvar F_SS_old_correction = global.get('F_SS_correction');\n    if (F_SS_old_correction===undefined)    {F_SS_old_correction='n/a'}\nvar ss_Hz               = global.get('compressor_frequency');                       // Get the global variable for current compressor frequency\nvar Operating_Mode      =global.get('Operating_Mode_State',\"file\")\nvar SP_start            = global.get('F_WAR_SP');                           //  Setpoint after WAR calculation\nvar F_RTC_correction    = global.get('F_RTC_correction');                //  Correction of the RTC function \n        if (F_RTC_correction===undefined) {F_RTC_correction=0}\nvar F_NR_correction     = global.get('F_NR_correction');                 //  Correction of the NightReduction function\n        if (F_NR_correction===undefined) {F_NR_correction=0}\nvar F_SS_SP_start       = SP_start + F_RTC_correction + F_NR_correction;    //  Calculate the starting temperature (SP) for the SoftStart function        \n\n\n//\n\n//***********************************************************************************\nif (F_SS_state == 0 || ss_Hz == 0 || ThreeWay_Valve_State != 0 || Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)                     //  Check if the function is enabled. Check if the compressor is running. Check if 3wayvalvue is in HEAT mode(0).\n    {\n//        F_SS_correction = 0;                                                        //  If the function is off, or the compressor is off, set  correction to zero\n        global.set('F_SS_correction',F_SS_correction);                              //  Set the correctionvalue\n        context.set(\"StartTime\",undefined);\n        msg1.payload = F_SS_correction; msg1.topic = 'Compressor off. F_SS_correction 0';\n        msg2.payload = F_SS_SP_start;\n        msg2.topic = \"F_SS_SP_start\";\n        return [msg1,null,msg2];\n    }\n//***********************************************************************************\n//\nelse\n    {\n\n        var F_SS_new_SP;                                                            //  declare an empty variable\n        var ss_PV_Ta            = global.get('Main_Outlet_Temp');                   //  PV (Ta/outlet) Temperature of water.\n        var ss_PV_Tr            = global.get('Main_Inlet_Temp');                    //  PV (Tr/inlet) Temperature of water\n        var T = '';\n        var C = '';\n//\n//***********************************************************************************\n/////// Timer how long the compressoris on. Runtime //////////\n        var CurrentTime = new Date().getTime();\n        var StartTime = context.get(\"StartTime\");\n        if (StartTime === undefined)\n            {\n                StartTime = CurrentTime;\n                context.set(\"StartTime\",StartTime);\n            }\n        TimeElapsed = ((CurrentTime - StartTime)/1000);\n        TimeElapsed = parseFloat(TimeElapsed.toFixed(0));\n//***********************************************************************************\n        msg4.payload = TimeElapsed;\n        msg4.topic = 'TimeElapsed';\n//***********************************************************************************\n// Stage 1 - Pump just started\n        \n        if (TimeElapsed < 150)\n            {\n                F_SS_correction = -3;                                               //  Set the starting correction to -3\n                F_SS_new_SP = F_SS_SP_start + F_SS_correction;                      //  Calculate the NEW SP.\n                T = ' - stage 1 (STARTUP)';\n                if (ss_PV_Ta > F_SS_new_SP + 2)                                     //  Check if the NEW SP is not too low (2C below SP) \n                    {\n\n                        F_SS_new_SP             = ss_PV_Ta -2;                      //  NEW SP\n                        F_SS_correction         = F_SS_new_SP - F_SS_SP_start;      //  NEW CORRECTION\n                        T = ' - stage 1 (CATCH)';\n                    }\n            }\n\n//***********************************************************************************\n//      Stage 2 - waiting for pump to relax\n        var F_SS_stage2 = global.get('F_SS_stage2',\"file\");\n        var F_SS_stage2_limit = global.get('F_SS_stage2_limit',\"file\");\n        F_SS_stage2 = F_SS_stage2 * 60;                         // convert minutes to seconds\n        \n        \n        if (TimeElapsed >= 150 && TimeElapsed < (F_SS_stage2))\n            {\n                F_SS_new_SP                     = ss_PV_Ta -1;                      //  NEW SP\n                    if (F_SS_new_SP < F_SS_SP_start -3)\n                        {\n                            F_SS_new_SP = F_SS_SP_start -3;\n                        }\n                F_SS_correction                 = F_SS_new_SP - F_SS_SP_start;      //  NEW CORRECTION\n                \n//                if (F_SS_correction < F_SS_old_correction)                      // after stage 1, only increase the setpoint, do not lower it again. \n//                    {F_SS_correction = F_SS_old_correction;}\n                    \n                if (F_SS_correction > F_SS_stage2_limit)\n                    {\n                        F_SS_correction = F_SS_stage2_limit;\n                        F_SS_new_SP = F_SS_SP_start + F_SS_stage2_limit;\n                        C = ' (Capped)'\n                    }\n                T = ' - stage 2 (STABLE)';\n            }\n\n//***********************************************************************************\n//      Stage 3 - Pump has relaxed. Remove correction, back to original setpoint\n        if (TimeElapsed >= F_SS_stage2)\n            {\n            ////////////////////////\n                    F_SS_correction             = 0;                                //  NEW CORRECTION\n                    F_SS_new_SP                 = F_SS_SP_start                     //  NEW SP\n                    T = ' - stage 3 (ENDING)';\n            }\n    }\n//***********************************************************************************\n//\n\n\nglobal.set('F_SS_correction',F_SS_correction);\n\nif (F_SS_old_correction == F_SS_correction)\n    {return [null,null];}\n    \n\n\nelse\n    {\n        msg1.payload = F_SS_correction; msg1.topic = 'F_SS_correction ' + T;\n        \n        msg2.payload = F_SS_SP_start;\n        msg2.topic = \"F_SS_SP_start\";\n        \n        msg99.payload = \"Correction\" + T + \" from \" + F_SS_old_correction + \" to \" + F_SS_correction + \" °C\" + C; \n        msg99.topic = \"Function SoftStart\";\n        \n        //***********************************************************************************\n        return [msg1,msg99,msg2]\n    }\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1120,
        "wires": [
            [
                "2d086602d8518c05"
            ],
            [
                "8d50df28d6f551d3"
            ],
            [
                "b2a20155fbe7c2cb"
            ]
        ],
        "outputLabels": [
            "F_SS_correction",
            "ToLog",
            "SS_Start SP"
        ]
    },
    {
        "id": "f5e069070e6c5a52",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 1160,
        "wires": [
            [
                "cb987aa12172f46f"
            ]
        ]
    },
    {
        "id": "41c984b1c5fa41e8",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "link in WAR2DIRECT function",
        "links": [
            "6ee7e4a50eebc6ec"
        ],
        "x": 245,
        "y": 740,
        "wires": [
            [
                "279667b8d3397253"
            ]
        ]
    },
    {
        "id": "7d9a4452a2907a9a",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "link in RTC Function",
        "links": [
            "82747bcc17e8ba92",
            "1f9b6862937c501f"
        ],
        "x": 245,
        "y": 840,
        "wires": [
            [
                "293acdfb42807b2a"
            ]
        ]
    },
    {
        "id": "89acf9bcfcf5b9b1",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Link in SoftStart function",
        "links": [
            "6b9529e74ff02c53",
            "f60e1a2d2aaa4327",
            "e007b69a884b060f"
        ],
        "x": 245,
        "y": 1120,
        "wires": [
            [
                "cb987aa12172f46f"
            ]
        ]
    },
    {
        "id": "c5506b5fe3e4d571",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Function NightReduction",
        "func": "\n////////////////////////////////////////////////////////////////////////////////\n// Night Reduction\nvar Operating_Mode      =global.get('Operating_Mode_State',\"file\")\nif (Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)\n    {\n        return null;\n    }\nelse\n    {\n        var nr_corr = global.get('NightReduction_current_value',\"file\");\n            if (nr_corr === undefined) {nr_corr=0}\n        \n        ////////////////////////////////////////////////////////////////////////////////\n        \n        var NR_onoff = global.get('nightreduction_on_off',\"file\");                   \n            if (NR_onoff === undefined) {NR_onoff=0}\n        \n        \n        let msg1={}, msg99={};\n        msg1.payload = nr_corr; msg1.topic = \"nr_correction\";\n        global.set('F_NR_correction',msg1.payload)\n        \n        \n        msg99.payload = \"New correction: \" + nr_corr + \" °C\"; msg99.topic = \"Function NightReduction\";\n        \n        \n        return [msg1,msg99];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 980,
        "wires": [
            [],
            [
                "8d50df28d6f551d3"
            ]
        ],
        "outputLabels": [
            "nr_correction",
            "ToLog"
        ]
    },
    {
        "id": "dfd89c997d9209bf",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 1020,
        "wires": [
            [
                "c5506b5fe3e4d571"
            ]
        ]
    },
    {
        "id": "adef30c4c6fd9e18",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "link in Nightreduction Function",
        "links": [
            "370b3565f472c1ae",
            "8f2a6c190a6d40f5",
            "15c22917f82b9e09"
        ],
        "x": 245,
        "y": 980,
        "wires": [
            [
                "a572111794098720"
            ]
        ]
    },
    {
        "id": "3ef9612c73e00018",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Calculate new SP",
        "func": "/*\nThis function has the purpose to regularly check the actual SP from the heatpump against the calculated setpoint in from the dashboard/functions. \nOnly when there is a deviation between the two, the new setpoint gets sent through MQTT to SET5.\n*/\n//*****************************************************************************\nlet msg1={},msg2={},msg3={},msg4={},msg5={},msg99={};\n\n\nvar SP_Final            =global.get('SP_DIRECT_virt',\"file\");\n\nvar F_WAR_onoff         =global.get('Correction_0_WAR_on_off',\"file\");\n    if (F_WAR_onoff === undefined) {F_WAR_onoff=0;}\n    \nvar F_WAR_SP            =global.get('F_WAR_SP');\n\nvar F_RTC_state         =global.get('Correction_1_RTC_on_off',\"file\");\n        if (F_RTC_state === undefined) {F_RTC_state=0;}\n        \nvar F_RTC_correction    =global.get('F_RTC_correction');\n\nvar F_SS_state          =global.get('Correction_2_softstart_on_off',\"file\");\n        if (F_SS_state === undefined) {F_SS_state=0;}\nvar F_SS_correction     =global.get('F_SS_correction');\n\nvar F_NR_state          =global.get('nightreduction_on_off',\"file\");\n        if (F_NR_state === undefined) {F_NR_state=0;}\nvar F_NR_correction     =global.get('F_NR_correction');\n\nvar current_sp          =global.get('Main_Target_Temp');\nvar Operating_Mode      =global.get('Operating_Mode_State',\"file\")\n\nvar HEAT_SP_lower_limit =global.get('HEAT_SP_lower_limit',\"file\")\n\nvar HEAT_SP_upper_limit =global.get('HEAT_SP_upper_limit',\"file\")\n\n\n\n//*****************************************************************************\nif (SP_Final === undefined || current_sp === undefined || Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)                         // check if all variables are present befor checking\n            // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    {\n        return null;\n    }\n//*****************************************************************************\n//*****************************************************************************\nelse if (current_sp == 0)\n    {\n        if (F_RTC_state == 0)   {F_RTC_correction = 0;}\n        if (F_SS_state == 0)    {F_SS_correction = 0;}\n        if (F_NR_state == 0)    {F_NR_correction = 0;}\n        \n        msg2.payload = F_RTC_correction + F_SS_correction + F_NR_correction;\n        if (msg2.payload < -5)  {msg2.payload = -5;}\n        if (msg2.payload > 5)   {msg2.payload = 5;}\n        msg2.topic = \"Shift\";\n        return [null,null,msg2]\n    }\n//*****************************************************************************\n//*****************************************************************************\nelse\n    {\n        if (F_WAR_onoff==1)                 {SP_Final   =F_WAR_SP;}\n        if (F_RTC_state==1)                 {SP_Final   =SP_Final   + F_RTC_correction;}\n        if (F_NR_state==1)                  {SP_Final   =SP_Final   + F_NR_correction;}\n        if (F_SS_state==1)                  {SP_Final   =SP_Final   + F_SS_correction;}\n        if (SP_Final<HEAT_SP_lower_limit)   {SP_Final   =HEAT_SP_lower_limit}\n        if (SP_Final>HEAT_SP_upper_limit)   {SP_Final   =HEAT_SP_upper_limit}\n        if (SP_Final<20)                    {SP_Final   =20;}\n    \n//*****************************************************************************\n\n        msg1.payload    = SP_Final;                             msg1.topic  = \"SP_Final\";\n        global.set('SP_Final',SP_Final,\"file\")\n        \n        msg99.payload   = \"New final SP: \" + SP_Final + \" °C\";  msg99.topic = \"Result Functions\";        // ToLog\n\n\n\n//*****************************************************************************\n\n        if (SP_Final ==  current_sp)                                            // Check only if there is a difference between SP and current value, a signal should be sent.\n            {\n                return [msg1,null,null];\n            }\n        else\n            {\n                return [msg1,msg99,null];\n            }\n    }\n    \n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1360,
        "wires": [
            [
                "16260c5c569c28d0",
                "77428c19ad69a747"
            ],
            [],
            [
                "7a9ab12b9cb74828"
            ]
        ],
        "outputLabels": [
            "SP_Final",
            "ToLog",
            "Shift to SET5"
        ]
    },
    {
        "id": "a487bd4a5ecaa280",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 700,
        "wires": [
            [
                "72a08d6ff4c98dba"
            ]
        ]
    },
    {
        "id": "293acdfb42807b2a",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 840,
        "wires": [
            [
                "2ade66982bca360c",
                "612499563cacf8a0"
            ]
        ]
    },
    {
        "id": "a572111794098720",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 510,
        "y": 980,
        "wires": [
            [
                "c5506b5fe3e4d571"
            ]
        ]
    },
    {
        "id": "10ecf65755102b8f",
        "type": "mqtt out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "SP Ta corrected - SET5 (SetZ1HeatRequestTemperature)",
        "topic": "panasonic_heat_pump/commands/SetZ1HeatRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 1730,
        "y": 1420,
        "wires": []
    },
    {
        "id": "4ffd061d60371256",
        "type": "trigger",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1160,
        "y": 4380,
        "wires": [
            [
                "370b3565f472c1ae"
            ]
        ]
    },
    {
        "id": "f9ee471b53568fa9",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Correction_2_softstart",
        "links": [
            "f988e3387b29083f",
            "02f25651d70831c9"
        ],
        "x": 1325,
        "y": 1080,
        "wires": []
    },
    {
        "id": "cb47302c2194f2f3",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "SP_WAR (function on)",
        "mode": "link",
        "links": [
            "02f25651d70831c9",
            "2b51e541d071409f",
            "11338381e8665522"
        ],
        "x": 1295,
        "y": 700,
        "wires": []
    },
    {
        "id": "d9d59760031361d8",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Correction_1_RTC",
        "links": [
            "4319ac5a3d23e95a",
            "fd52b3f21356b4b4",
            "02f25651d70831c9"
        ],
        "x": 1295,
        "y": 800,
        "wires": []
    },
    {
        "id": "16260c5c569c28d0",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "SP_Final",
        "links": [
            "fcd346cdb7719575",
            "5eef2d3a1816ae18",
            "e330f5a1b7ad039c",
            "02f25651d70831c9"
        ],
        "x": 1345,
        "y": 1320,
        "wires": []
    },
    {
        "id": "62b4d538e461efe9",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 1275,
        "y": 1560,
        "wires": []
    },
    {
        "id": "8d50df28d6f551d3",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1170,
        "y": 1560,
        "wires": [
            [
                "62b4d538e461efe9"
            ]
        ]
    },
    {
        "id": "dec1bfecd6b9d7e8",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "SP RTC result",
        "mode": "link",
        "links": [
            "bd47c6c1df5d3cf2"
        ],
        "x": 1315,
        "y": 840,
        "wires": []
    },
    {
        "id": "77428c19ad69a747",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1170,
        "y": 1340,
        "wires": [
            [
                "7a0db9d14f6116a5",
                "43b8685d93ab900c"
            ]
        ]
    },
    {
        "id": "83f1108c9a23f3ac",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Compare SP",
        "func": "/*\nThis function has the purpose to regularly check the actual SP from the heatpump against the calculated setpoint in from the dashboard/functions. \nOnly when there is a deviation between the two, the new setpoint gets sent through MQTT to SET5.\n*/\n\nvar SP_Final=global.get('SP_Final',\"file\");\nvar current_sp=global.get('Main_Target_Temp');  \nvar Operating_Mode      =global.get('Operating_Mode_State',\"file\")\n\n\n//*****************************************************************************\nif (SP_Final === undefined || current_sp === undefined || current_sp == 0 || Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==3 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)                         // check if all variables are present befor checking\n            // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    {\n        if (current_sp == 0)\n            {\n                let msg99={};\n                msg99.payload = \"EXPERIMENTAL Warning: Your heatpump seems to be setup to use an external roomthermostat. > internal WAR\"; msg99.topic = \"SYSTEM\";\n                return [null,msg99]\n            }\n        return [null,null];\n    }\n\nelse\n    {\n        \n        if (SP_Final ==  current_sp)                                            // Check only if there is a difference between SP and current value, a signal should be sent.\n            {\n                msg.payload = 99;\n                return [msg,null];\n            }\n            \n        else\n            {\n                return null;\n/*\n                msg.payload = SP_Final;\n                msg.topic = \"SP_Final\";\n                return msg;\n*/\n\n            }\n\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1420,
        "wires": [
            [
                "7a0db9d14f6116a5",
                "2e5a70c158f9fdde"
            ],
            [
                "8d50df28d6f551d3"
            ]
        ]
    },
    {
        "id": "7a0db9d14f6116a5",
        "type": "trigger",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "99",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1370,
        "y": 1420,
        "wires": [
            [
                "7a9ab12b9cb74828"
            ]
        ]
    },
    {
        "id": "2e5a70c158f9fdde",
        "type": "trigger",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "99",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 740,
        "y": 1420,
        "wires": [
            [
                "83f1108c9a23f3ac"
            ]
        ]
    },
    {
        "id": "43b8685d93ab900c",
        "type": "change",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "trigger",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1420,
        "wires": [
            [
                "2e5a70c158f9fdde"
            ]
        ]
    },
    {
        "id": "e6391924c41804d1",
        "type": "complete",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "scope": [
            "0d996033de2ed84e"
        ],
        "uncaught": false,
        "x": 300,
        "y": 880,
        "wires": [
            [
                "db5e2cc553cf0b9f"
            ]
        ]
    },
    {
        "id": "3dd1bf63c615f171",
        "type": "complete",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "scope": [
            "2ade66982bca360c",
            "612499563cacf8a0"
        ],
        "uncaught": false,
        "x": 300,
        "y": 1020,
        "wires": [
            [
                "b2dabf0cbdb5aafc"
            ]
        ]
    },
    {
        "id": "913a79bc7b035d32",
        "type": "complete",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "scope": [
            "c5506b5fe3e4d571"
        ],
        "uncaught": false,
        "x": 300,
        "y": 1160,
        "wires": [
            [
                "5d02c82706b21ca5"
            ]
        ]
    },
    {
        "id": "612499563cacf8a0",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Function RTC on / off",
        "func": "////////////////////////////////////////////////////////////////////////////\n////////////////////////// RTC - ON/OFF function ///////////////////////////\n//\n//\n//  This function has the goal to act when the temperature in the room is too high.\n//  It can either turn off the heatpump, or take the [heat]-mode out of the current operating mode.\n//  \nvar Operating_Mode              =global.get('Operating_Mode_State',\"file\");\n//  Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n//\nvar rtc_state                   =global.get('Correction_1_RTC_on_off',\"file\");         // Get the global variable. Used to see if the RTC function is enabled.\n    if (rtc_state===undefined)  {rtc_state=0;}\n//\nvar F_RTC_on_off2               =global.get('F_RTC_on_off2',\"file\");\n    if (F_RTC_on_off2 === undefined)    {F_RTC_on_off2=0;}         // Get the global variable. Used to see if the RTC function is enabled through GUI.\n\nif (rtc_state == 0 || F_RTC_on_off2 == 0 || Operating_Mode === undefined || Operating_Mode==1 || Operating_Mode==5 || Operating_Mode==7 || Operating_Mode==8)     //  First IF\n    {   \n        return null;\n    }\n\nelse \n    {   \n        // Declaration of variables including their values.    \n        var rtc_PV          = global.get('T_room');                             // Get the global variable. THe room temperature for RoomTemperatureCompensation you want to control.\n        var rtc_SP          = global.get('WoonkamerSP',\"file\");                 // Virtual target temperature setpoint for RTC. Set in Dashboard. \n        var rtc_dT          = (rtc_PV-rtc_SP);                                  // local variable for calculated temperature difference. If > 0 it is too warm, If < 0 it is too cold. \n        \n        var Heatpump_State  = global.get('Heatpump_State',\"file\");              // get current state of the heatpump. on or off (1 or 0)\n        \n        // below are the variables containing the temperature ranges.\n        var rtc_off         = global.get('rtc_off',\"file\");                     // Range turn heatpump off\n            if (rtc_off === undefined)  \n                {\n                    rtc_off = 10;\n                    global.set('rtc_off',10,\"file\");\n                }\n        var rtc_on          = global.get('rtc_on',\"file\");                      // Range turn heatpump on\n            if (rtc_on === undefined)   \n                {\n                    rtc_on = -10;\n                    global.set('rtc_on',-10,\"file\");\n                }\n        \n\n        \n        var F_rtc_on_off_active             = global.get('F_rtc_on_off_active',\"file\");\n            if (F_rtc_on_off_active===undefined)    {F_rtc_on_off_active=0;}\n        var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n        \n        let msg1    ={};        //  pin 1 - Output to power pump on/off \n        let msg2    ={};        //  pin 2 - Output to Operating Mode\n        let msg99   ={};        //  pin 3 - Messages to Log\n            msg99.topic     = \"Function RTC\";\n        //*****************************************************************************\n        // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n        if (rtc_off <= rtc_on)\n            {\n                node.warn('RTC function: Current OFF temperature is lower than the ON temperature. You must correct this !! ');\n                msg99.payload   = \"ERROR: Current OFF temperature is lower than the ON temperature. You must correct this !!\"; \n                return [null,null,msg99];\n            }\n        //*****************************************************************************\n        \n        if (rtc_dT > rtc_off && Heatpump_State == 1 && F_rtc_on_off_active == 0 && Operating_Mode != 3)                    // It is waaaaaay way too hot, heatpump is on and function has not already triggered.\n            {\n                //  Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if (Operating_Mode == 0 || Operating_Mode == 2)\n                                            {\n                                                global.set('F_rtc_on_off_active',1,\"file\");\n                                                msg1.payload=0;\n                                                msg1.topic=\"new_heatpump_power\";\n                                                msg99.payload = \"on/off - Turn off power\";\n                                                return [msg1,null,msg99]; \n                                            }\n                                            \n                if (Operating_Mode == 4 || Operating_Mode == 6)    \n                                            {\n                                                if (F_stored_next_operating_mode === undefined)\n                                                    {\n                                                        global.set('F_stored_next_operating_mode',Operating_Mode,\"file\");\n                                                    }\n                                                global.set('F_rtc_on_off_active',1,\"file\");\n                                                msg2.payload=3;\n                                                msg2.topic=\"new_Operating_Mode\";\n                                                msg99.payload = \"on/off - Operating mode from \" + Operating_Mode + \" to 3\";\n                                                return [null,msg2,msg99]; \n                                            }\n                                            \n            }\n        //*****************************************************************************\n        if (rtc_dT < rtc_on && F_rtc_on_off_active == 1)                             // It is cold enough again, turn on heatpump\n            {\n                if (Heatpump_State == 0)    {\n                                                global.set('F_rtc_on_off_active',0,\"file\");\n                                                msg1.payload=1;\n                                                msg1.topic=\"new_heatpump_power\";\n                                                msg99.payload = \"on/off - Turn on power\";\n                                                return [msg1,null,msg99]; \n                                            }\n                                        \n                if (Heatpump_State == 1)    {\n                                                global.set('F_rtc_on_off_active',0,\"file\");\n                                                msg2.payload = F_stored_next_operating_mode;\n                                                msg2.topic=\"new_Operating_Mode\";\n                                                msg99.payload = \"on/off - Restored to OM \" + F_stored_next_operating_mode;\n                                                \n                                                global.set('F_stored_next_operating_mode',undefined,\"file\");\n                                                return [null,msg2,msg99]; \n                                            }\n                \n            }  \n//******************************************************************************\n    }",
        "outputs": 3,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//global.set('F_stored_next_operating_mode',4,\"file\");",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 900,
        "wires": [
            [
                "80cc25379d181149"
            ],
            [
                "614f9a16ee9ae8c7"
            ],
            [
                "8d50df28d6f551d3"
            ]
        ],
        "outputLabels": [
            "Output to pump on/off ",
            "Output to Operating Mode",
            "Messages to Log"
        ]
    },
    {
        "id": "db5e2cc553cf0b9f",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 880,
        "wires": [
            [
                "2ade66982bca360c",
                "612499563cacf8a0"
            ]
        ]
    },
    {
        "id": "b2dabf0cbdb5aafc",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1020,
        "wires": [
            [
                "c5506b5fe3e4d571"
            ]
        ]
    },
    {
        "id": "5d02c82706b21ca5",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1160,
        "wires": [
            [
                "cb987aa12172f46f"
            ]
        ]
    },
    {
        "id": "c8848aaf15391ca1",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 1360,
        "wires": [
            [
                "3ef9612c73e00018"
            ]
        ]
    },
    {
        "id": "ac60e761f8dc92e8",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "global.set('F_stored_next_operating_mode',4,\"file\");",
        "func": "global.set('F_stored_next_operating_mode',4,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "396fe54ed7916f38",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2140,
        "y": 1300,
        "wires": [
            [
                "fa1086f7efea2638"
            ]
        ]
    },
    {
        "id": "fa1086f7efea2638",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "global.set('F_stored_next_operating_mode',0,\"file\");",
        "func": "global.set('F_stored_next_operating_mode',0,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "b0538442256d6c93",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "global.set('F_stored_next_operating_mode',2,\"file\");",
        "func": "global.set('F_stored_next_operating_mode',2,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "285920bce8933a3b",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "global.set('F_stored_next_operating_mode',6,\"file\");",
        "func": "global.set('F_stored_next_operating_mode',6,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "7985e5c2f270c550",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2140,
        "y": 1340,
        "wires": [
            [
                "b0538442256d6c93"
            ]
        ]
    },
    {
        "id": "462844f6fa112d66",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2140,
        "y": 1380,
        "wires": [
            [
                "ac60e761f8dc92e8"
            ]
        ]
    },
    {
        "id": "241d224acf5413f2",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2140,
        "y": 1420,
        "wires": [
            [
                "285920bce8933a3b"
            ]
        ]
    },
    {
        "id": "7d86c41cf22f6436",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "global.set('F_rtc_on_off_active',0,\"file\");",
        "func": "global.set('F_rtc_on_off_active',0,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "537d97cc35a5e0c9",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2140,
        "y": 1500,
        "wires": [
            [
                "7d86c41cf22f6436"
            ]
        ]
    },
    {
        "id": "3d8efab55e0d1f83",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "global.set('F_rtc_on_off_active',1,\"file\");",
        "func": "global.set('F_rtc_on_off_active',1,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "1f1096e3b935b645",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2140,
        "y": 1540,
        "wires": [
            [
                "3d8efab55e0d1f83"
            ]
        ]
    },
    {
        "id": "9cb1e4578e63aba2",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "RTC on/off ( dT boven rtc)off",
        "func": "global.set('rtc_off',0,\"file\");\nglobal.set('rtc_on',-10,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "8298f43414636bc9",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2120,
        "y": 1620,
        "wires": [
            [
                "9cb1e4578e63aba2"
            ]
        ]
    },
    {
        "id": "f1c80ab5e65e0985",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "RTC on/off (dT onder rtc_on)",
        "func": "global.set('rtc_off',10,\"file\");\nglobal.set('rtc_on',5,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "a172c61106eddfeb",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2120,
        "y": 1660,
        "wires": [
            [
                "f1c80ab5e65e0985"
            ]
        ]
    },
    {
        "id": "bb54747f09608c51",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "global.set('F_stored_next_operating_mode',undefined,\"file\");",
        "func": "global.set('F_stored_next_operating_mode',undefined,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "53d14b55acccbfdf",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2140,
        "y": 1260,
        "wires": [
            [
                "bb54747f09608c51"
            ]
        ]
    },
    {
        "id": "80cc25379d181149",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "a772d2026681f718"
        ],
        "x": 1295,
        "y": 900,
        "wires": []
    },
    {
        "id": "614f9a16ee9ae8c7",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "587abf5315fb17fc"
        ],
        "x": 1295,
        "y": 940,
        "wires": []
    },
    {
        "id": "4301c3318e9d2ba2",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Result",
        "info": "",
        "x": 290,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7bac0e2f88026507",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "ToLog",
        "info": "",
        "x": 1170,
        "y": 1520,
        "wires": []
    },
    {
        "id": "2903271707cab5ae",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "FUNCTIONS",
        "info": "",
        "x": 930,
        "y": 660,
        "wires": []
    },
    {
        "id": "0e6803dcf771c7c4",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Triggers",
        "info": "",
        "x": 230,
        "y": 660,
        "wires": []
    },
    {
        "id": "51428283538c6581",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f654e83ab1f79df5",
        "type": "comment",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "SUM OF ALL FUNCTIONS",
        "info": "",
        "x": 970,
        "y": 1320,
        "wires": []
    },
    {
        "id": "6c1d28493c64e6af",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "link in 8",
        "links": [
            "db87b6195bdd3330"
        ],
        "x": 245,
        "y": 700,
        "wires": [
            [
                "a487bd4a5ecaa280"
            ]
        ]
    },
    {
        "id": "7a9ab12b9cb74828",
        "type": "mqtt out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "SP Ta corrected - SET5 (SetZ1HeatRequestTemperature)",
        "topic": "panasonic_heat_pump/commands/SetZ1HeatRequestTemperature",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 1730,
        "y": 1380,
        "wires": []
    },
    {
        "id": "72a08d6ff4c98dba",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 700,
        "wires": [
            [
                "0d996033de2ed84e"
            ]
        ]
    },
    {
        "id": "55084c6542a092da",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "link in RTC Function",
        "links": [
            "f58d698744a36e40"
        ],
        "x": 245,
        "y": 800,
        "wires": [
            [
                "9af91516a04cf420"
            ]
        ]
    },
    {
        "id": "9af91516a04cf420",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 800,
        "wires": [
            [
                "2ade66982bca360c",
                "612499563cacf8a0"
            ]
        ]
    },
    {
        "id": "279667b8d3397253",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 740,
        "wires": [
            [
                "0d996033de2ed84e"
            ]
        ]
    },
    {
        "id": "74ef15b8f7faf2d2",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 1080,
        "wires": [
            [
                "cb987aa12172f46f"
            ]
        ]
    },
    {
        "id": "7b967769c6a6b68c",
        "type": "link in",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Link in SoftStart function",
        "links": [
            "49f086712e863549",
            "6b9529e74ff02c53"
        ],
        "x": 245,
        "y": 1080,
        "wires": [
            [
                "74ef15b8f7faf2d2"
            ]
        ]
    },
    {
        "id": "410eb68eb31cf311",
        "type": "change",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 740,
        "wires": [
            [
                "00e9f06e7ce99f6c"
            ]
        ]
    },
    {
        "id": "00e9f06e7ce99f6c",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "Turn WAR functin off again.",
        "mode": "link",
        "links": [
            "b6ed90c95d2f90da"
        ],
        "x": 1495,
        "y": 740,
        "wires": []
    },
    {
        "id": "1fea7e86a5a61e8b",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "name": "TOP92 - panasonic_heat_pump/main/Heat_Pump_Model",
        "topic": "panasonic_heat_pump/main/Heat_Pump_Model",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 4680,
        "wires": [
            [
                "bed3575ecb7ab79b"
            ]
        ]
    },
    {
        "id": "0f899856dbb1b7a3",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "TOP95 - panasonic_heat_pump/main/Max_Pump_Duty",
        "topic": "panasonic_heat_pump/main/Max_Pump_Duty",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 3220,
        "wires": [
            [
                "abfb810893124c8f",
                "ddb841ba332e8aa1"
            ]
        ]
    },
    {
        "id": "db915179dc9e59bd",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "Max_Pump_Duty_Currentvalue",
        "mode": "link",
        "links": [
            "37e5e4afb68c6428"
        ],
        "x": 975,
        "y": 3180,
        "wires": []
    },
    {
        "id": "ddb841ba332e8aa1",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "28bb45a2666f6668",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 3180,
        "wires": [
            [
                "db915179dc9e59bd"
            ]
        ]
    },
    {
        "id": "8ef3101cc4e83705",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "Heatpump type",
        "func": "panasonic = global.get('Panasonic',\"file\");\nif (panasonic===undefined)\n    {\n        if (msg.payload == 0) {model = 'WH-MDC05H3E5';}\n        if (msg.payload == 1) {model = 'WH-MDC07H3E5';}\n        if (msg.payload == 2) {model = 'WH-UX09HE5';}\n        if (msg.payload == 3) {model = 'WH-UD09HE8';}\n        if (msg.payload == 4) {model = 'WH-UX09HE8';}\n        if (msg.payload == 5) {model = 'WH-UX12HE8';}\n        if (msg.payload == 6) {model = 'WH-UX16HE8';}\n        if (msg.payload == 7) {model = 'WH-UD05HE5';}\n        if (msg.payload == 8) {model = 'WH-UD09JE5';}\n        if (msg.payload == 9) {model = 'WH-MDC05J3E5';}\n        if (msg.payload == 10) {model = 'WH-MDC09H3E5';}\n        if (msg.payload == 11) {model = 'WH-MXC09H3E5';}\n        if (msg.payload == 12) {model = 'WH-UD09JE5';}\n        if (msg.payload == 13) {model = 'WH-UX12HE8';}\n        if (msg.payload == 14) {model = 'WH-UQ09HE8';}\n        if (msg.payload == 15) {model = 'WH-UD09HE5';}\n        if (msg.payload == 16) {model = 'WH-UD09HE5';}\n        if (msg.payload == 17) {model = 'WH-UD05JE5';}\n        if (msg.payload == 18) {model = 'WH-UD07JE5';}\n        if (msg.payload == 19) {model = 'WH-UD07HE5-1';}\n        if (msg.payload == 20) {model = 'WH-MDC07J3E5';}\n        if (msg.payload == 21) {model = 'WH-MDC09J3E5';}\n        if (msg.payload == 22) {model = 'WH-UD05JE5';}\n        if (msg.payload == 255) {model = 'unknown';}\n        \n        //**********************************************************************\n        \n        if (msg.payload == 0) {power = '5';}\n        if (msg.payload == 1) {power = '7';}\n        if (msg.payload == 2) {power = '9';}\n        if (msg.payload == 3) {power = '9';}\n        if (msg.payload == 4) {power = '9';}\n        if (msg.payload == 5) {power = '12';}\n        if (msg.payload == 6) {power = '16';}\n        if (msg.payload == 7) {power = '5';}\n        if (msg.payload == 8) {power = '9';}\n        if (msg.payload == 9) {power = '5';}\n        if (msg.payload == 10) {power = '9';}\n        if (msg.payload == 11) {power = '9';}\n        if (msg.payload == 12) {power = '9';}\n        if (msg.payload == 13) {power = '12';}\n        if (msg.payload == 14) {power = '9';}\n        if (msg.payload == 15) {power = '9';}\n        if (msg.payload == 16) {power = '9';}\n        if (msg.payload == 17) {power = '5';}\n        if (msg.payload == 18) {power = '7';}\n        if (msg.payload == 19) {power = '7';}\n        if (msg.payload == 20) {power = '7';}\n        if (msg.payload == 21) {power = '9';}\n        if (msg.payload == 22) {power = '5';}\n        if (msg.payload == 255) {power = 'unknown';}\n        \n        //**********************************************************************\n        \n        if (msg.payload == 0) {phase = '1';}\n        if (msg.payload == 1) {phase = '1';}\n        if (msg.payload == 2) {phase = '1';}\n        if (msg.payload == 3) {phase = '3';}\n        if (msg.payload == 4) {phase = '3';}\n        if (msg.payload == 5) {phase = '3';}\n        if (msg.payload == 6) {phase = '3';}\n        if (msg.payload == 7) {phase = '1';}\n        if (msg.payload == 8) {phase = '1';}\n        if (msg.payload == 9) {phase = '1';}\n        if (msg.payload == 10) {phase = '1';}\n        if (msg.payload == 11) {phase = '1';}\n        if (msg.payload == 12) {phase = '1';}\n        if (msg.payload == 13) {phase = '3';}\n        if (msg.payload == 14) {phase = '3';}\n        if (msg.payload == 15) {phase = '1';}\n        if (msg.payload == 16) {phase = '1';}\n        if (msg.payload == 17) {phase = '1';}\n        if (msg.payload == 18) {phase = '1';}\n        if (msg.payload == 19) {phase = '1';}\n        if (msg.payload == 20) {phase = '1';}\n        if (msg.payload == 21) {phase = '1';}\n        if (msg.payload == 22) {phase = '1';}\n        if (msg.payload == 255) {phase = 'unknown';}\n\n        if (msg.payload == 0) {type = 'HP';}\n        if (msg.payload == 1) {type = 'HP';}\n        if (msg.payload == 2) {type = 'T-CAP';}\n        if (msg.payload == 3) {type = 'HP';}\n        if (msg.payload == 4) {type = 'T-CAP';}\n        if (msg.payload == 5) {type = 'T-CAP';}\n        if (msg.payload == 6) {type = 'T-CAP';}\n        if (msg.payload == 7) {type = 'HP';}\n        if (msg.payload == 8) {type = 'HP';}\n        if (msg.payload == 9) {type = 'HP';}\n        if (msg.payload == 10) {type = 'HP';}\n        if (msg.payload == 11) {type = 'T-CAP';}\n        if (msg.payload == 12) {type = 'HP - All-In-One';}\n        if (msg.payload == 13) {type = 'T-CAP - All-In-One';}\n        if (msg.payload == 14) {type = 'T-CAP - Super Quiet';}\n        if (msg.payload == 15) {type = 'HP';}\n        if (msg.payload == 16) {type = 'HP - All-In-One';}\n        if (msg.payload == 17) {type = 'HP - All-In-One';}\n        if (msg.payload == 18) {type = 'HP';}\n        if (msg.payload == 19) {type = 'HP';}\n        if (msg.payload == 20) {type = 'HP';}\n        if (msg.payload == 21) {type = 'HP';}\n        if (msg.payload == 22) {type = 'HP';}\n        if (msg.payload == 255) {type = 'unknown';}\n\n        var panasonic={};\n            panasonic.type = type;\n            panasonic.phase = phase;\n            panasonic.power = power;\n            panasonic.model = model;\n        \n        global.set('panasonic',{payload:[panasonic]},\"file\");\n        return msg;\n    }\n\n\nelse\n    {\n        return null\n    }\n    \n    \n\n/*\n        var varlabels = msg1.payload[0].labels;\n        var varkwh_data_heat        = msg1.payload[0].data[0];\n        var varkwh_data_dhw         = msg3.payload[0].data[0];\n        var vargraaddagen_data      = msg2.payload[0].data[0];\n        var m={};\n            m.labels    = varlabels;\n            m.series    = ['DegreeDays (°C)', 'Energy consumption HEAT (kWh)',  'Energy consumption DHW (kWh)'];\n            m.data      = [vargraaddagen_data, varkwh_data_heat, varkwh_data_dhw];\n        \n        return {payload:[m]};\n\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 4680,
        "wires": [
            []
        ]
    },
    {
        "id": "bed3575ecb7ab79b",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 630,
        "y": 4680,
        "wires": [
            [
                "8ef3101cc4e83705"
            ]
        ]
    },
    {
        "id": "b2a20155fbe7c2cb",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "SS_Start_SP",
        "mode": "link",
        "links": [
            "2351f60ffaca1a2a"
        ],
        "x": 1375,
        "y": 1180,
        "wires": []
    },
    {
        "id": "15cc5a5193aca837",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "OUT_RTC_Start_SP",
        "mode": "link",
        "links": [
            "883e900c6a8f4789"
        ],
        "x": 1155,
        "y": 860,
        "wires": []
    },
    {
        "id": "26ae5115695e9aec",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1410,
        "y": 860,
        "wires": [
            [
                "8d50df28d6f551d3"
            ]
        ]
    },
    {
        "id": "2bd5c222c7d4c4d4",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "d3d6355b7dbd97a8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 2540,
        "wires": [
            [
                "b2cc8b2fe9aa99c8"
            ]
        ]
    },
    {
        "id": "5bf8eece83fbad65",
        "type": "inject",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 630,
        "y": 920,
        "wires": [
            [
                "612499563cacf8a0"
            ]
        ]
    },
    {
        "id": "1055c816d0b21553",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "name": "TOP29 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 4780,
        "wires": [
            [
                "b758728ae007c639"
            ]
        ]
    },
    {
        "id": "4f0447af5e532d6f",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "name": "TOP30 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 4820,
        "wires": [
            [
                "b758728ae007c639"
            ]
        ]
    },
    {
        "id": "91e1151b60bc9a35",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "name": "TOP31 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 4860,
        "wires": [
            [
                "b758728ae007c639"
            ]
        ]
    },
    {
        "id": "dc036a2e660127ec",
        "type": "mqtt in",
        "z": "17763558ebd7bc3c",
        "name": "TOP32 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 4900,
        "wires": [
            [
                "b758728ae007c639"
            ]
        ]
    },
    {
        "id": "5e56ba56cb2fd474",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "name": "function 3",
        "func": "var war_ot1         = global.get('war_ot1',\"file\");                 // Outside temperature high         (warm outside)\nvar war_ot2         = global.get('war_ot2',\"file\");                 // Outside temperature intermediate (intermediate outside temperature)\nvar war_ot3         = global.get('war_ot3',\"file\");                 // Outside temperature low          (cold outside)\n\nvar war_wt1         = global.get('war_wt1',\"file\");                 // Water temperature low            (cold water)\nvar war_wt2         = global.get('war_wt2',\"file\");                 // Water temperature intermediate   (intermediate water temperature)\nvar war_wt3         = global.get('war_wt3',\"file\");                 // Water temperature high           (warm water)\nlet msg99={};\n\n/*\n                weer    buiten      water\n                warm    war_ot1     war_wt1\n                        war_ot2     war_wt2\n                cold    war_ot3     war_wt3\n*/\n\nif ((war_ot1+war_ot2+war_ot3+war_wt1+war_wt2+war_wt3)>-1000)\n    {\n        msg99.topic=\"SYSTEM\";\n        msg99.payload=\"WAR settings OK\";\n        return [null,msg99]\n    }\n\nmsg99.topic=\"Function - WAR\";\nif (war_wt1===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp\")\n            {\n                global.set('war_wt1',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP29 from Panasonic (Z1_Heat_Curve_Target_High_Temp)\";\n                return [msg,msg99]\n            }\n    }\n    \nif (war_wt2===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp\")\n            {\n                global.set('war_wt2',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP30 from Panasonic (Z1_Heat_Curve_Target_Low_Temp)\";\n                if (war_wt3===undefined)\n                    {\n                        global.set('war_wt3',msg.payload,\"file\");\n                    }\n                return [msg,msg99]\n            }\n    }\n\nif (war_ot1===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp\")\n            {\n                global.set('war_ot1',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP31 from Panasonic (Z1_Heat_Curve_Outside_High_Temp)\";\n                return [msg,msg99]\n            }\n    }\nif (war_ot2===undefined)\n    {\n        if (msg.topic==\"panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp\")\n            {\n                global.set('war_ot2',msg.payload,\"file\");\n                msg99.payload=\"Imported TOP32 from Panasonic (Z1_Heat_Curve_Outside_Low_Temp)\";\n                if (war_ot3===undefined)\n                    {\n                        global.set('war_ot3',msg.payload-1,\"file\");\n                    }\n                return [msg,msg99]\n            }\n    }\n\nreturn null;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 4840,
        "wires": [
            [
                "123d7b6352639620"
            ],
            [
                "87bd21b4647187d2"
            ]
        ],
        "outputLabels": [
            "",
            "ToLog"
        ]
    },
    {
        "id": "246757b0d4390b0d",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 1185,
        "y": 4860,
        "wires": []
    },
    {
        "id": "87bd21b4647187d2",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1050,
        "y": 4860,
        "wires": [
            [
                "246757b0d4390b0d"
            ]
        ]
    },
    {
        "id": "123d7b6352639620",
        "type": "trigger",
        "z": "17763558ebd7bc3c",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1060,
        "y": 4820,
        "wires": [
            [
                "b46cfcf8ce6d8f91"
            ]
        ]
    },
    {
        "id": "b46cfcf8ce6d8f91",
        "type": "link out",
        "z": "17763558ebd7bc3c",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "6da02c9fe23882ec"
        ],
        "x": 1185,
        "y": 4820,
        "wires": []
    },
    {
        "id": "2d086602d8518c05",
        "type": "rbe",
        "z": "17763558ebd7bc3c",
        "g": "60cbc2b8598a58fa",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1230,
        "y": 1080,
        "wires": [
            [
                "f9ee471b53568fa9"
            ]
        ]
    },
    {
        "id": "b758728ae007c639",
        "type": "delay",
        "z": "17763558ebd7bc3c",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 4840,
        "wires": [
            [
                "5e56ba56cb2fd474"
            ]
        ]
    },
    {
        "id": "a84d5e1f42075324",
        "type": "function",
        "z": "17763558ebd7bc3c",
        "g": "9c29bca78a8a1b4b",
        "name": "Color",
        "func": "var nightreduction_on_off          = global.get('nightreduction_on_off',\"file\");\n\n\nlet msg1={};\n\n\n    if (nightreduction_on_off == 0) \n        {\n            msg1.color = \"gray\";\n        }\n\n\n    if (nightreduction_on_off == 1) \n        {\n            msg1.color = \"\";\n        }\nmsg1.payload = msg.payload;\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 4220,
        "wires": [
            [
                "b6c347a9d1eb45dc"
            ]
        ]
    },
    {
        "id": "4c0c2d379e4d32dc",
        "type": "tab",
        "label": "WP Scheduler",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e7a828f31de83797",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5b25319c19085d8b",
            "62ed8b3ae7c011c3",
            "07ea1961826e94b7",
            "b488aff15ed36874",
            "55b3f47c73b2c573",
            "99f4efda6cc18d8e",
            "3cecc393ea1560b6",
            "04ed9a6edffbba6a",
            "7dbd6b03483e96d1",
            "16ca6d1491c8c435",
            "243e97f40eea392d",
            "43802ec4607fee88",
            "48fe3bf9f1e8f860",
            "04286d432b4f7e5d",
            "390ef931c52a9276",
            "df30401d7516186e"
        ],
        "x": 714,
        "y": 99,
        "w": 2152,
        "h": 159.5
    },
    {
        "id": "e5fee419914cd9dc",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "af30a8f36c40c020",
            "ec508019a9a6b07d",
            "8d6479e24b83b5e8",
            "fd75f9b0c76c8507",
            "b02e7aa3d475c213",
            "59e0bbedebd93c6f",
            "5c4f88e0ab756b07",
            "07ab907a4c7247f3",
            "6a3c2d99ca264c12",
            "7750301f670e7ae1",
            "fa6f4a8ad64e5403",
            "a3dd33070ea14a86",
            "77c66b72fdbc6f67",
            "f98da5ae3e9d0c56",
            "5943c642ad73bb50",
            "2c8993ab6f5ca9b5",
            "c7dbf7342c7ab688",
            "76cea5dd65da7823"
        ],
        "x": 2334,
        "y": 1979,
        "w": 1352,
        "h": 242
    },
    {
        "id": "33a2df59b3ca66d1",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4ea7dd7c43de702c",
            "8f2a1fda72dce235",
            "6fe6ecb6ba182408",
            "c0951d4a5f51ba05",
            "c2fb7c8c2e4f4891",
            "5609c8d5e338f27f",
            "e478fec27c5711bf",
            "1c33329301d5b817",
            "a5afeac157ae9254"
        ],
        "x": 714,
        "y": 261.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "579c0642d8c536dd",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bf63e731930c3cb8",
            "f90647f345b2baac",
            "c02a60f4e8be6639",
            "17de65789aadacd3",
            "0c726f3e18010422",
            "88abec913607caa2",
            "dd233e56d4c8ec54",
            "a3f8aec43c85c9fd",
            "d1446a99a55f3c85"
        ],
        "x": 714,
        "y": 421.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "faf63ba8179ae107",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2bc534b1152e2eab",
            "64a240b33f1bce52",
            "41059cba46659375",
            "95f7755f75244f9d",
            "42e951daefcb301f",
            "4516d0ceab59a537",
            "378ee150c49c4cc9",
            "5360b716631a61d2",
            "4d8246d8f03fdcda"
        ],
        "x": 714,
        "y": 581.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "9f1b7431e6967ba3",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ce4feb306389f347",
            "46d0e0092b20ca42",
            "6ea1b2a0feb6b4ff",
            "29cf8d0673109942",
            "5a055bcf05906c27",
            "b34d1ebf6791855c",
            "2c57f91a1a4dc2a6",
            "f80b9366afdc9cca",
            "14adc6cb473fbde8"
        ],
        "x": 714,
        "y": 741.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "386be4e4d903823c",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "94bd3246533a067e",
            "5265298305ac351c",
            "a67ab4c27d9807e4",
            "41b133b6e8c1d5a1",
            "a2e39e4ade07156a",
            "e5da7b910af0145b",
            "b9b9c4c200f53e82",
            "f61dbc10f551a975",
            "401bf78ce28550d9"
        ],
        "x": 714,
        "y": 901.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "37ba99406ed1e1b3",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "367d7afa3fb3f2ed",
            "5bba12a0a5b6c065",
            "a133d11a84212d2f",
            "9a312ad87bdef632",
            "6d049bcd94323e04",
            "b01493047f65a53a",
            "af7aa7943074abd1",
            "925a13979a88c5cb",
            "7bbd757593433841"
        ],
        "x": 714,
        "y": 1061.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "da5d1b83a9f65031",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f77b6c65a79740df",
            "a449081612684eaf",
            "7e3b5e0706a2cadc",
            "34c92260d0f72ded",
            "49dee351813dd77a",
            "a5b5aa78ff1d0fdc",
            "193843e0e6340aad",
            "deb8d5d863b94430",
            "67dc374c49f22e42"
        ],
        "x": 714,
        "y": 1221.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "41960e3b75b7b6aa",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d30b504cc4d488c9",
            "4a275ddc0144acd4",
            "44cac5e044500600",
            "1b2f6b33baa98c75",
            "f2cc2d55538f24b3",
            "df7802bec7b3aa31",
            "d7c5c2a36b5e198a",
            "ac945b91239870dc",
            "eaa4d4d2aebb1b6c"
        ],
        "x": 714,
        "y": 1381.5,
        "w": 2152,
        "h": 157
    },
    {
        "id": "7c1d5874a9022a88",
        "type": "group",
        "z": "4c0c2d379e4d32dc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "578f37537a1899df",
            "ea8a0df334d99b6a",
            "113f50e0e6e2c985",
            "b3e12010dead0fe9",
            "04ac43d9bb4c60cd",
            "39ea25741bfd3fc1",
            "28fad57bd2a8a66a",
            "37dbab40290e29f6",
            "057e25ed209f376e"
        ],
        "x": 714,
        "y": 1541.5,
        "w": 2172,
        "h": 157
    },
    {
        "id": "5b25319c19085d8b",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "name": "Hour1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 180,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "62ed8b3ae7c011c3",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "name": "Day1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 180,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "07ea1961826e94b7",
        "type": "ui_text",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "group": "b55af41fd927bf28",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Day",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1670,
        "y": 140,
        "wires": []
    },
    {
        "id": "b488aff15ed36874",
        "type": "ui_text",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "group": "b55af41fd927bf28",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Hour",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1950,
        "y": 140,
        "wires": []
    },
    {
        "id": "55b3f47c73b2c573",
        "type": "ui_text",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "group": "b55af41fd927bf28",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Minutes",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2240,
        "y": 140,
        "wires": []
    },
    {
        "id": "99f4efda6cc18d8e",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "name": "Minutes1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 180,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "3cecc393ea1560b6",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "name": "switch1",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_1_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "04ed9a6edffbba6a",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "name": "text input1",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_1_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 180,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "7dbd6b03483e96d1",
        "type": "ui_text",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "group": "b55af41fd927bf28",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Description",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1370,
        "y": 140,
        "wires": []
    },
    {
        "id": "16ca6d1491c8c435",
        "type": "ui_text",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "group": "b55af41fd927bf28",
        "order": 6,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Action",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2510,
        "y": 140,
        "wires": []
    },
    {
        "id": "243e97f40eea392d",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "name": "Action1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 13,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction on",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_1_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 180,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "9606b1419e074a98",
        "type": "inject",
        "z": "4c0c2d379e4d32dc",
        "name": "1 Trigger / 30 seconds",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 2180,
        "wires": [
            [
                "dbaf296f9221a1bc",
                "1053684c2d523d05",
                "8fc07a0495a4908d"
            ]
        ]
    },
    {
        "id": "dbaf296f9221a1bc",
        "type": "moment",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "topic": "DayOfTheWeek",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "dddd",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 440,
        "y": 2140,
        "wires": [
            [
                "9851788ba0037791"
            ]
        ]
    },
    {
        "id": "1053684c2d523d05",
        "type": "moment",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "topic": "Hour",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 410,
        "y": 2180,
        "wires": [
            [
                "9851788ba0037791"
            ]
        ]
    },
    {
        "id": "8fc07a0495a4908d",
        "type": "moment",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "topic": "Minute",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "mm",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 410,
        "y": 2220,
        "wires": [
            [
                "9851788ba0037791"
            ]
        ]
    },
    {
        "id": "9851788ba0037791",
        "type": "join",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 590,
        "y": 2180,
        "wires": [
            [
                "b96984ebbd09d4ae"
            ]
        ]
    },
    {
        "id": "618b882f6c424b8c",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2140,
        "wires": [
            [
                "7c5d37b18ec26696"
            ]
        ]
    },
    {
        "id": "a18ea7f82dcac797",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2180,
        "wires": [
            [
                "c88d23b99da31594"
            ]
        ]
    },
    {
        "id": "893266081e75c6bd",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "mode": "link",
        "links": [
            "2c8993ab6f5ca9b5"
        ],
        "x": 2025,
        "y": 2140,
        "wires": []
    },
    {
        "id": "345778a538046aa0",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "mode": "link",
        "links": [
            "c7dbf7342c7ab688"
        ],
        "x": 2025,
        "y": 2180,
        "wires": []
    },
    {
        "id": "ab3bc82856756b2f",
        "type": "inject",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "fbb12e8a86b7521d"
            ]
        ]
    },
    {
        "id": "609f82934b0df3ba",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "name": "Quiet Mode Planning",
        "mode": "link",
        "links": [
            "26aba23a915ba45a",
            "011d067460eddf40"
        ],
        "x": 2025,
        "y": 2220,
        "wires": []
    },
    {
        "id": "478c67efb4a811b8",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "name": "OperationMode Planning",
        "links": [
            "587abf5315fb17fc"
        ],
        "x": 2025,
        "y": 2260,
        "wires": []
    },
    {
        "id": "67d291b1b04c125e",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2220,
        "wires": [
            [
                "609f82934b0df3ba",
                "2c513b2951c5e4f4"
            ]
        ]
    },
    {
        "id": "a77404fb8474f809",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2260,
        "wires": [
            [
                "478c67efb4a811b8",
                "a25886a49344ece0"
            ]
        ]
    },
    {
        "id": "244be7dfba6da950",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "Exit to Quiet Mode (Direct)",
        "info": "",
        "x": 2170,
        "y": 2220,
        "wires": []
    },
    {
        "id": "22992364c48a0257",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "Exit to Operation Mode (Direct)",
        "info": "",
        "x": 2190,
        "y": 2260,
        "wires": []
    },
    {
        "id": "af30a8f36c40c020",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Schedule execution",
        "func": "// >> trigger 1\n// DHW / Sterilisation? This is defined in the topic\n// Topic: DHW or topic: Sterilization\n// payload 1 > initiate sequence. \n\n// Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n\n// Declaration of the variables. \nlet msg1={}, msg2={}, msg3={}, msg4={};\n// msg1     Output towards Operation mode\n// msg2     Output towards Force DHW mode on/off\n// msg3     output towards Force Sterilization on/off\n// msg4     empty\n\n\nvar ThreeWay_Valve_State=global.get('ThreeWay_Valve_State');                    // valvue position\n\nvar DHW_Temp=global.get('DHW_Temp');                                            // Current temperature of DHW vessel. \nvar DHW_Target_Temp=global.get('DHW_Target_Temp',\"file\");                       // Programmed DHW target temperature\nvar Force_DHW_State=global.get('Force_DHW_State');                              // Current DHW state (on / off). \n\nvar Operating_Mode_State=global.get('Operating_Mode_State',\"file\");             // get Current OperationMode\nvar new_OM;                                                                     // create empty variable.\n\nvar Sterilization_State=global.get('Sterilization_State');                      // Current sterilization state (on / off)\nvar Sterilization_Temp=global.get('Sterilization_Temp',\"file\");                 // Programmed sterilization target temperature\nvar DHW_treshold=global.get('DHW_treshold',\"file\");                             // Programmed treshold DHW tank temperature set from GUI\n////////////////////////////////////////////////////////////////////////////////\n//                           START OF THE CYCLE                               //\n////////////////////////////////////////////////////////////////////////////////\n\n// START Force DHW cycle\nif (msg.topic == 'DHW' && msg.payload == 1 && DHW_Temp < DHW_treshold)          // There is a temperature condition to start DHW heating or not. Change to your own desire.\n    {\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if (Operating_Mode_State==0){new_OM = 4;}\n                if (Operating_Mode_State==1){new_OM = 5;}\n                if (Operating_Mode_State==2){new_OM = 6;}\n                if (Operating_Mode_State==3){new_OM = 3;}\n                if (Operating_Mode_State==4){new_OM = 4;}\n                if (Operating_Mode_State==5){new_OM = 5;}\n                if (Operating_Mode_State==6){new_OM = 6;}\n                if (Operating_Mode_State==7){new_OM = 8;}\n                if (Operating_Mode_State==8){new_OM = 8;}\n                \n                \n                msg1.payload = new_OM;                                          // set operationmode to add DHW mode\n                msg2.payload = 1;                                               // Turn on Force DHW mode\n                if (Operating_Mode_State!=new_OM)\n                    {return [msg1, msg2];}\n                else {return [null, msg2];}\n    }\n\n// START Force Sterilization cycle\nif (msg.topic == 'Sterilization' && msg.payload == 1)                           \n    {\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if (Operating_Mode_State==0){new_OM = 4;}\n                if (Operating_Mode_State==1){new_OM = 5;}\n                if (Operating_Mode_State==2){new_OM = 6;}\n                if (Operating_Mode_State==3){new_OM = 3;}\n                if (Operating_Mode_State==4){new_OM = 4;}\n                if (Operating_Mode_State==5){new_OM = 5;}\n                if (Operating_Mode_State==6){new_OM = 6;}\n                if (Operating_Mode_State==7){new_OM = 8;}\n                if (Operating_Mode_State==8){new_OM = 8;}\n                \n                \n                msg1.payload = new_OM;                                               // set operationmode to 3: DHW-Only\n                msg2.payload = 1;                                               // Turn on Force DHW mode\n                msg3.payload = 1;                                               // Turn on Force Sterilization mode\n                \n                if (Operating_Mode_State!=new_OM)\n                    {return [msg1, msg2, msg3];}\n                else\n                    {return [null, msg2, msg3];}\n                \n                \n    }\n\n////////////////////////////////////////////////////////////////////////////////\n//                           END OF THE CYCLE                                 //\n////////////////////////////////////////////////////////////////////////////////\n\n\n// END DHW cycle (Automatic)\nif (Force_DHW_State == 1 && Sterilization_State == 0 && DHW_Temp >= DHW_Target_Temp)\n    {\n                \n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if (Operating_Mode_State==0){new_OM = 0;}\n                if (Operating_Mode_State==1){new_OM = 1;}\n                if (Operating_Mode_State==2){new_OM = 2;}\n                if (Operating_Mode_State==3){new_OM = 0;}\n                if (Operating_Mode_State==4){new_OM = 0;}\n                if (Operating_Mode_State==5){new_OM = 1;}\n                if (Operating_Mode_State==6){new_OM = 2;}\n                if (Operating_Mode_State==7){new_OM = 7;}\n                if (Operating_Mode_State==8){new_OM = 7;}  \n                \n                if (Operating_Mode_State!=new_OM)\n                {setTimeout(function(){\n                    node.status({fill:\"red\", shape:\"ring\", text:\"\"});\n                    msg1.payload = new_OM;                                      // set operationmode to remove DHW\n                    node.send([msg1,null,null,null]);                           // send msg1 only, other outputs are null\n                    }, 5000);}\n                msg2.payload = 0;                                               // Turn off Force DHW mode\n                return [null, msg2];\n    }\n\n\n// END Sterilization cycle (Automatic)\nif (Sterilization_State == 1 && DHW_Temp >= Sterilization_Temp)\n    {\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if (Operating_Mode_State==0){new_OM = 0;}\n                if (Operating_Mode_State==1){new_OM = 1;}\n                if (Operating_Mode_State==2){new_OM = 2;}\n                if (Operating_Mode_State==3){new_OM = 0;}\n                if (Operating_Mode_State==4){new_OM = 0;}\n                if (Operating_Mode_State==5){new_OM = 1;}\n                if (Operating_Mode_State==6){new_OM = 2;}\n                if (Operating_Mode_State==7){new_OM = 7;}\n                if (Operating_Mode_State==8){new_OM = 7;} \n                \n                if (Operating_Mode_State!=new_OM)\n                {setTimeout(function(){\n                    node.status({fill:\"red\", shape:\"ring\", text:\"\"});\n                    msg1.payload = new_OM;                                      // set operationmode to remove DHW\n                    node.send([msg1,null,null,null]);                           // send msg1 only, other outputs are null\n                    }, 5000);\n                }\n                setTimeout(function(){\n                    node.status({fill:\"red\", shape:\"ring\", text:\"\"});\n                    msg2.payload = 0;                                           // Turn off Force DHW mode \n                    node.send([null,msg2,null,null]);                           // send msg2 only, other outputs are null\n                    }, 2000);\n\n                msg3.payload = 0;                                               // Turn off Force Sterilization mode\n                return [null, null, msg3];\n    }\n\n\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3050,
        "y": 2160,
        "wires": [
            [
                "07ab907a4c7247f3",
                "e6c5758ec2d767f9"
            ],
            [
                "5c4f88e0ab756b07"
            ],
            [
                "59e0bbedebd93c6f"
            ],
            []
        ],
        "outputLabels": [
            "Operation mode",
            "Force DHW",
            "Force Sterilization",
            "empty"
        ]
    },
    {
        "id": "ec508019a9a6b07d",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "ForceDHW_Scheduler",
        "links": [
            "836e024c750878de"
        ],
        "x": 3415,
        "y": 2140,
        "wires": []
    },
    {
        "id": "8d6479e24b83b5e8",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "FoceSterilization_Scheduler",
        "links": [
            "0e12f9702f321baf",
            "ace33c56590ccc4d"
        ],
        "x": 3415,
        "y": 2180,
        "wires": []
    },
    {
        "id": "fd75f9b0c76c8507",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Exit to Force DHW mode",
        "info": "",
        "x": 3550,
        "y": 2140,
        "wires": []
    },
    {
        "id": "b02e7aa3d475c213",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Exit to Sterilization Mode",
        "info": "",
        "x": 3550,
        "y": 2180,
        "wires": []
    },
    {
        "id": "59e0bbedebd93c6f",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3280,
        "y": 2180,
        "wires": [
            [
                "8d6479e24b83b5e8",
                "db14aaa2f1c0277b"
            ]
        ]
    },
    {
        "id": "5c4f88e0ab756b07",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3280,
        "y": 2140,
        "wires": [
            [
                "ec508019a9a6b07d",
                "18dbf40918dd651d"
            ]
        ]
    },
    {
        "id": "07ab907a4c7247f3",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "OperationMode_Scheduler",
        "links": [
            "587abf5315fb17fc"
        ],
        "x": 3415,
        "y": 2100,
        "wires": []
    },
    {
        "id": "6a3c2d99ca264c12",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Exit to Operation Mode",
        "info": "",
        "x": 3540,
        "y": 2100,
        "wires": []
    },
    {
        "id": "7750301f670e7ae1",
        "type": "inject",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Check each minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "trigger",
        "payload": "1",
        "payloadType": "num",
        "x": 2820,
        "y": 2100,
        "wires": [
            [
                "af30a8f36c40c020"
            ]
        ]
    },
    {
        "id": "fa6f4a8ad64e5403",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Planning for forced DHW runs",
        "info": "",
        "x": 2560,
        "y": 2140,
        "wires": []
    },
    {
        "id": "a3dd33070ea14a86",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Function for execution of plan",
        "info": "",
        "x": 3080,
        "y": 2100,
        "wires": []
    },
    {
        "id": "77c66b72fdbc6f67",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Planning for Forced Sterilization runs",
        "info": "",
        "x": 2580,
        "y": 2180,
        "wires": []
    },
    {
        "id": "f98da5ae3e9d0c56",
        "type": "change",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Topic Sterilization",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Sterilization",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2830,
        "y": 2180,
        "wires": [
            [
                "af30a8f36c40c020"
            ]
        ]
    },
    {
        "id": "5943c642ad73bb50",
        "type": "change",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Topic DHW",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2810,
        "y": 2140,
        "wires": [
            [
                "af30a8f36c40c020"
            ]
        ]
    },
    {
        "id": "2c8993ab6f5ca9b5",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Planning_ForceDHW_topic",
        "links": [
            "893266081e75c6bd"
        ],
        "x": 2375,
        "y": 2140,
        "wires": [
            [
                "5943c642ad73bb50"
            ]
        ]
    },
    {
        "id": "c7dbf7342c7ab688",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "Planning_ForceSterilization_topic",
        "links": [
            "345778a538046aa0"
        ],
        "x": 2375,
        "y": 2180,
        "wires": [
            [
                "f98da5ae3e9d0c56"
            ]
        ]
    },
    {
        "id": "713c56f5c73bd777",
        "type": "ui_numeric",
        "z": "4c0c2d379e4d32dc",
        "name": "Allow DHW-run below",
        "label": "Allow only below",
        "tooltip": "Manually set a DHW temperature threshold above which no DHW is needed. (If this not required, set to higher value than DHW target temperature)",
        "group": "32e927aa7dc43b2a",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 780,
        "y": 2400,
        "wires": [
            [
                "c49b726d49d32db8"
            ]
        ]
    },
    {
        "id": "72c850b7048fac84",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "set.DHW_treshold",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"DHW_treshold\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 2400,
        "wires": [
            [
                "12bc179b6809330c"
            ]
        ]
    },
    {
        "id": "4e4bc424f3b44af5",
        "type": "inject",
        "z": "4c0c2d379e4d32dc",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2400,
        "wires": [
            [
                "d0dace17fccc6005"
            ]
        ]
    },
    {
        "id": "d0dace17fccc6005",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Load on boot",
        "func": "var var1          = global.get('DHW_treshold',\"file\");\nif (var1===undefined)\n    {\n        var1=100;\n        global.set('DHW_treshold',100,\"file\");\n    }\nvar var2          = global.get('NightReduction_correction',\"file\");\nif (var2===undefined)\n    {\n        var2=0;\n        global.set('NightReduction_correction',0,\"file\");\n    }\n\nlet msg1={}, msg2={};\n\nmsg1.payload = var1;\nmsg2.payload = var2;\n\n\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2400,
        "wires": [
            [
                "713c56f5c73bd777"
            ],
            []
        ],
        "outputLabels": [
            "DHW_treshold",
            ""
        ]
    },
    {
        "id": "12bc179b6809330c",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "name": "DHW_Treshold",
        "mode": "link",
        "links": [],
        "x": 1665,
        "y": 2400,
        "wires": []
    },
    {
        "id": "f152ab7ef6b3808d",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "DHW_threshold ",
        "info": "",
        "x": 1360,
        "y": 2360,
        "wires": []
    },
    {
        "id": "76cea5dd65da7823",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "g": "e5fee419914cd9dc",
        "name": "There is more logic required to execute Force DHW / sterilization runs. Multiple items switches",
        "info": "",
        "x": 2680,
        "y": 2020,
        "wires": []
    },
    {
        "id": "abc358081291bb25",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "This Block retreives the GUI input and pushes it to variables",
        "info": "",
        "x": 280,
        "y": 60,
        "wires": []
    },
    {
        "id": "4319033ca73f6589",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "Evaluate each timestamp",
        "info": "",
        "x": 1190,
        "y": 2100,
        "wires": []
    },
    {
        "id": "fc0d6e2e9904f7c8",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "If timestamp matches >> output ",
        "info": "",
        "x": 1690,
        "y": 2060,
        "wires": []
    },
    {
        "id": "639513e6916a9f7c",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "create a timestamp every 30 seconds",
        "info": "",
        "x": 250,
        "y": 2000,
        "wires": []
    },
    {
        "id": "43802ec4607fee88",
        "type": "ui_text",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "group": "b55af41fd927bf28",
        "order": 1,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Enable",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1080,
        "y": 140,
        "wires": []
    },
    {
        "id": "fbb12e8a86b7521d",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Schedule_xx topics",
        "func": "// variables to load on boot and periodically for dasboard\n\nvar var1          = \"Schedule_1\"\nvar var2          = \"Schedule_2\"\nvar var3          = \"Schedule_3\"\nvar var4          = \"Schedule_4\"\nvar var5          = \"Schedule_5\"\nvar var6          = \"Schedule_6\"\nvar var7          = \"Schedule_7\"\nvar var8          = \"Schedule_8\"\nvar var9          = \"Schedule_9\"\nvar var10         = \"Schedule_10\"\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \nmsg7.payload = var7;    msg8.payload = var8;    msg9.payload = var9;    msg10.payload = var10;\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 180,
        "wires": [
            [
                "1a0724961518ba4e"
            ],
            [
                "1a0724961518ba4e"
            ],
            [
                "1a0724961518ba4e"
            ],
            [
                "1a0724961518ba4e"
            ],
            [
                "1a0724961518ba4e"
            ],
            [
                "1a0724961518ba4e"
            ],
            [
                "1a0724961518ba4e"
            ],
            [
                "1a0724961518ba4e"
            ],
            [
                "1a0724961518ba4e"
            ],
            [
                "1a0724961518ba4e"
            ]
        ],
        "outputLabels": [
            "Schedule_1_Description",
            "Schedule_1_day",
            "Schedule_1_hour",
            "Schedule_1_minutes",
            "Schedule_1_state",
            "Schedule_1_topic",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "1a0724961518ba4e",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "GET global / topics",
        "func": "// variables to load on boot for dasboard\n\nschedule_topic = msg.payload\n\n\nvar var1    = global.get(schedule_topic+'_Description',\"file\");\nvar var2    = global.get(schedule_topic+'_day',\"file\");\nvar var3    = global.get(schedule_topic+'_hour',\"file\");\nvar var4    = global.get(schedule_topic+'_minutes',\"file\");\nvar var5    = global.get(schedule_topic+'_state',\"file\");\nvar var6    = global.get(schedule_topic+'_action',\"file\");\nvar var7    = global.get(schedule_topic+'_override',\"file\");\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={};\n\n\n\nmsg1.payload = var1;\nmsg2.payload = var2;    \nmsg3.payload = var3;    \nmsg4.payload = var4;    \nmsg5.payload = var5;    \nmsg6.payload = var6;    \nmsg7.payload = var7;    \n//msg8.payload = var8;    \n//msg9.payload = var9;    \n//msg10.payload = var10;\n\n\nmsg1.topic = schedule_topic+'_Description';\nmsg2.topic = schedule_topic+'_day';\nmsg3.topic = schedule_topic+'_hour';\nmsg4.topic = schedule_topic+'_minutes';\nmsg5.topic = schedule_topic+'_state';\nmsg6.topic = schedule_topic+'_action';\nmsg7.topic = schedule_topic+'_override';\n//msg8.topic = schedule_topic+'';\n//msg9.topic = schedule_topic;\n//msg10.topic = schedule_topic;\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 160,
        "wires": [
            [
                "9f3610f1aa320255"
            ],
            [
                "9f3610f1aa320255"
            ],
            [
                "9f3610f1aa320255"
            ],
            [
                "9f3610f1aa320255"
            ],
            [
                "9f3610f1aa320255"
            ],
            [
                "9f3610f1aa320255"
            ],
            [
                "9f3610f1aa320255"
            ]
        ],
        "outputLabels": [
            "Schedule_1_Description",
            "Schedule_1_day",
            "Schedule_1_hour",
            "Schedule_1_minutes",
            "Schedule_1_state",
            "Schedule_1_topic",
            "Schedule_x_override"
        ]
    },
    {
        "id": "48fe3bf9f1e8f860",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "name": "Schedule_1_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_1_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_1_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 180,
        "wires": [
            [
                "3cecc393ea1560b6"
            ],
            [
                "04ed9a6edffbba6a"
            ],
            [
                "62ed8b3ae7c011c3"
            ],
            [
                "5b25319c19085d8b"
            ],
            [
                "99f4efda6cc18d8e"
            ],
            [
                "243e97f40eea392d"
            ],
            [
                "df30401d7516186e"
            ]
        ]
    },
    {
        "id": "9f3610f1aa320255",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "name": "Scheduler_Load on boot",
        "mode": "link",
        "links": [
            "04286d432b4f7e5d",
            "abafb2efcd2f804a",
            "1c33329301d5b817",
            "a3f8aec43c85c9fd",
            "5360b716631a61d2",
            "f80b9366afdc9cca",
            "f61dbc10f551a975",
            "925a13979a88c5cb",
            "deb8d5d863b94430",
            "ac945b91239870dc",
            "37dbab40290e29f6"
        ],
        "x": 615,
        "y": 160,
        "wires": []
    },
    {
        "id": "04286d432b4f7e5d",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 180,
        "wires": [
            [
                "48fe3bf9f1e8f860"
            ]
        ]
    },
    {
        "id": "df30401d7516186e",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "name": "Override1",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_1_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 180,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "390ef931c52a9276",
        "type": "ui_text",
        "z": "4c0c2d379e4d32dc",
        "g": "e7a828f31de83797",
        "group": "b55af41fd927bf28",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Override",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 2780,
        "y": 140,
        "wires": []
    },
    {
        "id": "4ea7dd7c43de702c",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "33a2df59b3ca66d1",
        "name": "Hour2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 340,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "8f2a1fda72dce235",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "33a2df59b3ca66d1",
        "name": "Day2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 340,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "6fe6ecb6ba182408",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "33a2df59b3ca66d1",
        "name": "Minutes2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 19,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 340,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "c0951d4a5f51ba05",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "33a2df59b3ca66d1",
        "name": "switch2",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 15,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_2_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 340,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "c2fb7c8c2e4f4891",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "33a2df59b3ca66d1",
        "name": "text input2",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 16,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_2_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 340,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "5609c8d5e338f27f",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "33a2df59b3ca66d1",
        "name": "Action2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 20,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction On",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction Off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_2_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 340,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "e478fec27c5711bf",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "33a2df59b3ca66d1",
        "name": "Schedule_2_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_2_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_2_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 340,
        "wires": [
            [
                "c0951d4a5f51ba05"
            ],
            [
                "c2fb7c8c2e4f4891"
            ],
            [
                "8f2a1fda72dce235"
            ],
            [
                "4ea7dd7c43de702c"
            ],
            [
                "6fe6ecb6ba182408"
            ],
            [
                "5609c8d5e338f27f"
            ],
            [
                "a5afeac157ae9254"
            ]
        ]
    },
    {
        "id": "1c33329301d5b817",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "33a2df59b3ca66d1",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 340,
        "wires": [
            [
                "e478fec27c5711bf"
            ]
        ]
    },
    {
        "id": "a5afeac157ae9254",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "33a2df59b3ca66d1",
        "name": "Override2",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 21,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_2_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 340,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "940c388b944a0b85",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "set.Schedule_x_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "0a1c64d2a3af0048",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "set.Schedule_x_Description",
        "func": "global.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "f907e90d6478ed60",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "set.Schedule_x_day",
        "func": "\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "8e1e5865acacf4a3",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "set.Schedule_x_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "d9126f2cd4541513",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "set.Schedule_x_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "6aba6ae3257ad7ed",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "set.Schedule_x_action",
        "func": "global.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "cfb6747df8007a94",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "set.Schedule_x_override",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(msg.topic,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3010,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "bf63e731930c3cb8",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "579c0642d8c536dd",
        "name": "Hour3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 25,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 500,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "f90647f345b2baac",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "579c0642d8c536dd",
        "name": "Day3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 24,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 500,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "c02a60f4e8be6639",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "579c0642d8c536dd",
        "name": "Minutes3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 26,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 500,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "17de65789aadacd3",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "579c0642d8c536dd",
        "name": "switch3",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 22,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_3_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 500,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "0c726f3e18010422",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "579c0642d8c536dd",
        "name": "text input3",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 23,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_3_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 500,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "88abec913607caa2",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "579c0642d8c536dd",
        "name": "Action3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 27,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction on",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_3_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 500,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "dd233e56d4c8ec54",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "579c0642d8c536dd",
        "name": "Schedule_3_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_3_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_3_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 500,
        "wires": [
            [
                "17de65789aadacd3"
            ],
            [
                "0c726f3e18010422"
            ],
            [
                "f90647f345b2baac"
            ],
            [
                "bf63e731930c3cb8"
            ],
            [
                "c02a60f4e8be6639"
            ],
            [
                "88abec913607caa2"
            ],
            [
                "d1446a99a55f3c85"
            ]
        ]
    },
    {
        "id": "a3f8aec43c85c9fd",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "579c0642d8c536dd",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 500,
        "wires": [
            [
                "dd233e56d4c8ec54"
            ]
        ]
    },
    {
        "id": "d1446a99a55f3c85",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "579c0642d8c536dd",
        "name": "Override3",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 28,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_3_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 500,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "2bc534b1152e2eab",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "faf63ba8179ae107",
        "name": "Hour4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 32,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 660,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "64a240b33f1bce52",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "faf63ba8179ae107",
        "name": "Day4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 31,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 660,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "41059cba46659375",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "faf63ba8179ae107",
        "name": "Minutes4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 33,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 660,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "95f7755f75244f9d",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "faf63ba8179ae107",
        "name": "switch4",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 29,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_4_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 660,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "42e951daefcb301f",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "faf63ba8179ae107",
        "name": "text input4",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 30,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_4_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 660,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "4516d0ceab59a537",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "faf63ba8179ae107",
        "name": "Action4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 34,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction on",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_4_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 660,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "378ee150c49c4cc9",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "faf63ba8179ae107",
        "name": "Schedule_4_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_4_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_4_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 660,
        "wires": [
            [
                "95f7755f75244f9d"
            ],
            [
                "42e951daefcb301f"
            ],
            [
                "64a240b33f1bce52"
            ],
            [
                "2bc534b1152e2eab"
            ],
            [
                "41059cba46659375"
            ],
            [
                "4516d0ceab59a537"
            ],
            [
                "4d8246d8f03fdcda"
            ]
        ]
    },
    {
        "id": "5360b716631a61d2",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "faf63ba8179ae107",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 660,
        "wires": [
            [
                "378ee150c49c4cc9"
            ]
        ]
    },
    {
        "id": "4d8246d8f03fdcda",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "faf63ba8179ae107",
        "name": "Override4",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 35,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_4_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 660,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "ce4feb306389f347",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "9f1b7431e6967ba3",
        "name": "Hour5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 39,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 820,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "46d0e0092b20ca42",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "9f1b7431e6967ba3",
        "name": "Day5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 38,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 820,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "6ea1b2a0feb6b4ff",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "9f1b7431e6967ba3",
        "name": "Minutes5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 40,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 820,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "29cf8d0673109942",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "9f1b7431e6967ba3",
        "name": "switch5",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 36,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_5_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 820,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "5a055bcf05906c27",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "9f1b7431e6967ba3",
        "name": "text input5",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 37,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_5_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 820,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "b34d1ebf6791855c",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "9f1b7431e6967ba3",
        "name": "Action5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 41,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction on",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_5_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 820,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "2c57f91a1a4dc2a6",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "9f1b7431e6967ba3",
        "name": "Schedule_5_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_5_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_5_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 820,
        "wires": [
            [
                "29cf8d0673109942"
            ],
            [
                "5a055bcf05906c27"
            ],
            [
                "46d0e0092b20ca42"
            ],
            [
                "ce4feb306389f347"
            ],
            [
                "6ea1b2a0feb6b4ff"
            ],
            [
                "b34d1ebf6791855c"
            ],
            [
                "14adc6cb473fbde8"
            ]
        ]
    },
    {
        "id": "f80b9366afdc9cca",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "9f1b7431e6967ba3",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 820,
        "wires": [
            [
                "2c57f91a1a4dc2a6"
            ]
        ]
    },
    {
        "id": "14adc6cb473fbde8",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "9f1b7431e6967ba3",
        "name": "Override5",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 42,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_5_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 820,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "94bd3246533a067e",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "386be4e4d903823c",
        "name": "Hour6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 46,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 980,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "5265298305ac351c",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "386be4e4d903823c",
        "name": "Day6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 45,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 980,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "a67ab4c27d9807e4",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "386be4e4d903823c",
        "name": "Minutes6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 47,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 980,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "41b133b6e8c1d5a1",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "386be4e4d903823c",
        "name": "switch6",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 43,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_6_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 980,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "a2e39e4ade07156a",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "386be4e4d903823c",
        "name": "text input6",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 44,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_6_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 980,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "e5da7b910af0145b",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "386be4e4d903823c",
        "name": "Action6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 48,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction on",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_6_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 980,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "b9b9c4c200f53e82",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "386be4e4d903823c",
        "name": "Schedule_6_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_6_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_6_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 980,
        "wires": [
            [
                "41b133b6e8c1d5a1"
            ],
            [
                "a2e39e4ade07156a"
            ],
            [
                "5265298305ac351c"
            ],
            [
                "94bd3246533a067e"
            ],
            [
                "a67ab4c27d9807e4"
            ],
            [
                "e5da7b910af0145b"
            ],
            [
                "401bf78ce28550d9"
            ]
        ]
    },
    {
        "id": "f61dbc10f551a975",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "386be4e4d903823c",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 980,
        "wires": [
            [
                "b9b9c4c200f53e82"
            ]
        ]
    },
    {
        "id": "401bf78ce28550d9",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "386be4e4d903823c",
        "name": "Override6",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 49,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_6_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 980,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "367d7afa3fb3f2ed",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "37ba99406ed1e1b3",
        "name": "Hour7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 53,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 1140,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "5bba12a0a5b6c065",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "37ba99406ed1e1b3",
        "name": "Day7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 52,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1140,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "a133d11a84212d2f",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "37ba99406ed1e1b3",
        "name": "Minutes7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 54,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 1140,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "9a312ad87bdef632",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "37ba99406ed1e1b3",
        "name": "switch7",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 50,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_7_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1140,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "6d049bcd94323e04",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "37ba99406ed1e1b3",
        "name": "text input7",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 51,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_7_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1140,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "b01493047f65a53a",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "37ba99406ed1e1b3",
        "name": "Action7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 55,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction on",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_7_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 1140,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "af7aa7943074abd1",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "37ba99406ed1e1b3",
        "name": "Schedule_7_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_7_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_7_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 1140,
        "wires": [
            [
                "9a312ad87bdef632"
            ],
            [
                "6d049bcd94323e04"
            ],
            [
                "5bba12a0a5b6c065"
            ],
            [
                "367d7afa3fb3f2ed"
            ],
            [
                "a133d11a84212d2f"
            ],
            [
                "b01493047f65a53a"
            ],
            [
                "7bbd757593433841"
            ]
        ]
    },
    {
        "id": "925a13979a88c5cb",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "37ba99406ed1e1b3",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 1140,
        "wires": [
            [
                "af7aa7943074abd1"
            ]
        ]
    },
    {
        "id": "7bbd757593433841",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "37ba99406ed1e1b3",
        "name": "Override7",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 56,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_7_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 1140,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "f77b6c65a79740df",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "da5d1b83a9f65031",
        "name": "Hour8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 60,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 1300,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "a449081612684eaf",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "da5d1b83a9f65031",
        "name": "Day8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 59,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1300,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "7e3b5e0706a2cadc",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "da5d1b83a9f65031",
        "name": "Minutes8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 61,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 1300,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "34c92260d0f72ded",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "da5d1b83a9f65031",
        "name": "switch8",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 57,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_8_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1300,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "49dee351813dd77a",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "da5d1b83a9f65031",
        "name": "text input8",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 58,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_8_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1300,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "a5b5aa78ff1d0fdc",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "da5d1b83a9f65031",
        "name": "Action8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 62,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction on",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_8_action",
        "topicType": "str",
        "className": "",
        "x": 2510,
        "y": 1300,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "193843e0e6340aad",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "da5d1b83a9f65031",
        "name": "Schedule_8_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_8_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_8_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "34c92260d0f72ded"
            ],
            [
                "49dee351813dd77a"
            ],
            [
                "a449081612684eaf"
            ],
            [
                "f77b6c65a79740df"
            ],
            [
                "7e3b5e0706a2cadc"
            ],
            [
                "a5b5aa78ff1d0fdc"
            ],
            [
                "67dc374c49f22e42"
            ]
        ]
    },
    {
        "id": "deb8d5d863b94430",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "da5d1b83a9f65031",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 1300,
        "wires": [
            [
                "193843e0e6340aad"
            ]
        ]
    },
    {
        "id": "67dc374c49f22e42",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "da5d1b83a9f65031",
        "name": "Override8",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 63,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_8_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 1300,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "d30b504cc4d488c9",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "41960e3b75b7b6aa",
        "name": "Hour9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 67,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_hour",
        "topicType": "str",
        "className": "",
        "x": 1950,
        "y": 1460,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "4a275ddc0144acd4",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "41960e3b75b7b6aa",
        "name": "Day9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 66,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1460,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "44cac5e044500600",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "41960e3b75b7b6aa",
        "name": "Minutes9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 68,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_minutes",
        "topicType": "str",
        "className": "",
        "x": 2240,
        "y": 1460,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "1b2f6b33baa98c75",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "41960e3b75b7b6aa",
        "name": "switch9",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 64,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_9_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1460,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "f2cc2d55538f24b3",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "41960e3b75b7b6aa",
        "name": "text input9",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 65,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_9_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1460,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "df7802bec7b3aa31",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "41960e3b75b7b6aa",
        "name": "Action9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 69,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction on",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_9_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 1460,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "d7c5c2a36b5e198a",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "41960e3b75b7b6aa",
        "name": "Schedule_9_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_9_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_9_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 1460,
        "wires": [
            [
                "1b2f6b33baa98c75"
            ],
            [
                "f2cc2d55538f24b3"
            ],
            [
                "4a275ddc0144acd4"
            ],
            [
                "d30b504cc4d488c9"
            ],
            [
                "44cac5e044500600"
            ],
            [
                "df7802bec7b3aa31"
            ],
            [
                "eaa4d4d2aebb1b6c"
            ]
        ]
    },
    {
        "id": "ac945b91239870dc",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "41960e3b75b7b6aa",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 1460,
        "wires": [
            [
                "d7c5c2a36b5e198a"
            ]
        ]
    },
    {
        "id": "eaa4d4d2aebb1b6c",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "41960e3b75b7b6aa",
        "name": "Override9",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 70,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_9_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2780,
        "y": 1460,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "578f37537a1899df",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "7c1d5874a9022a88",
        "name": "Hour10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 74,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_hour",
        "topicType": "str",
        "className": "",
        "x": 1960,
        "y": 1620,
        "wires": [
            [
                "8e1e5865acacf4a3"
            ]
        ]
    },
    {
        "id": "ea8a0df334d99b6a",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "7c1d5874a9022a88",
        "name": "Day10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 73,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_day",
        "topicType": "str",
        "className": "",
        "x": 1670,
        "y": 1620,
        "wires": [
            [
                "f907e90d6478ed60"
            ]
        ]
    },
    {
        "id": "113f50e0e6e2c985",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "7c1d5874a9022a88",
        "name": "Minutes10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 75,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_minutes",
        "topicType": "str",
        "className": "",
        "x": 2250,
        "y": 1620,
        "wires": [
            [
                "d9126f2cd4541513"
            ]
        ]
    },
    {
        "id": "b3e12010dead0fe9",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "7c1d5874a9022a88",
        "name": "switch10",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 71,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_10_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 1620,
        "wires": [
            [
                "940c388b944a0b85"
            ]
        ]
    },
    {
        "id": "04ac43d9bb4c60cd",
        "type": "ui_text_input",
        "z": "4c0c2d379e4d32dc",
        "g": "7c1d5874a9022a88",
        "name": "text input10",
        "label": "",
        "tooltip": "",
        "group": "b55af41fd927bf28",
        "order": 72,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Schedule_10_Description",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1370,
        "y": 1620,
        "wires": [
            [
                "0a1c64d2a3af0048"
            ]
        ]
    },
    {
        "id": "39ea25741bfd3fc1",
        "type": "ui_dropdown",
        "z": "4c0c2d379e4d32dc",
        "g": "7c1d5874a9022a88",
        "name": "Action10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "b55af41fd927bf28",
        "order": 76,
        "width": 5,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "HeatPump on",
                "value": "HP_turn_on",
                "type": "str"
            },
            {
                "label": "HeatPump off",
                "value": "HP_turn_off",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)",
                "value": "OperationMode7",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto(Cool)+DHW",
                "value": "OperationMode8",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "z",
                "type": "str"
            },
            {
                "label": "Nightreduction on",
                "value": "NightReductionOn",
                "type": "str"
            },
            {
                "label": "Nightreduction off",
                "value": "NightReductionOff",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Schedule_10_action",
        "topicType": "str",
        "className": "",
        "x": 2520,
        "y": 1620,
        "wires": [
            [
                "6aba6ae3257ad7ed"
            ]
        ]
    },
    {
        "id": "28fad57bd2a8a66a",
        "type": "switch",
        "z": "4c0c2d379e4d32dc",
        "g": "7c1d5874a9022a88",
        "name": "Schedule_10_",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Schedule_10_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_Description",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_hour",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_minutes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_action",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Schedule_10_override",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 880,
        "y": 1620,
        "wires": [
            [
                "b3e12010dead0fe9"
            ],
            [
                "04ac43d9bb4c60cd"
            ],
            [
                "ea8a0df334d99b6a"
            ],
            [
                "578f37537a1899df"
            ],
            [
                "113f50e0e6e2c985"
            ],
            [
                "39ea25741bfd3fc1"
            ],
            [
                "057e25ed209f376e"
            ]
        ]
    },
    {
        "id": "37dbab40290e29f6",
        "type": "link in",
        "z": "4c0c2d379e4d32dc",
        "g": "7c1d5874a9022a88",
        "name": "",
        "links": [
            "9f3610f1aa320255"
        ],
        "x": 755,
        "y": 1620,
        "wires": [
            [
                "28fad57bd2a8a66a"
            ]
        ]
    },
    {
        "id": "057e25ed209f376e",
        "type": "ui_switch",
        "z": "4c0c2d379e4d32dc",
        "g": "7c1d5874a9022a88",
        "name": "Override10",
        "label": "",
        "tooltip": "When the heatpump is off, should the scheduler turn it on and execute the schedule? (off=no / on=yes)",
        "group": "b55af41fd927bf28",
        "order": 77,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Schedule_10_override",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2790,
        "y": 1620,
        "wires": [
            [
                "cfb6747df8007a94"
            ]
        ]
    },
    {
        "id": "7c5d37b18ec26696",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1920,
        "y": 2140,
        "wires": [
            [
                "893266081e75c6bd"
            ]
        ]
    },
    {
        "id": "c88d23b99da31594",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1920,
        "y": 2180,
        "wires": [
            [
                "345778a538046aa0"
            ]
        ]
    },
    {
        "id": "b96984ebbd09d4ae",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Schedule_xx topics",
        "func": "// variables to load on boot and periodically for dasboard\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={};\n\nmsg1.topic          = \"Schedule_1\"\nmsg2.topic          = \"Schedule_2\"\nmsg3.topic          = \"Schedule_3\"\nmsg4.topic          = \"Schedule_4\"\nmsg5.topic          = \"Schedule_5\"\nmsg6.topic          = \"Schedule_6\"\nmsg7.topic          = \"Schedule_7\"\nmsg8.topic          = \"Schedule_8\"\nmsg9.topic          = \"Schedule_9\"\nmsg10.topic         = \"Schedule_10\"\n\nmsg1.payload = msg.payload;    \nmsg2.payload = msg.payload;    \nmsg3.payload = msg.payload;    \nmsg4.payload = msg.payload;    \nmsg5.payload = msg.payload;    \nmsg6.payload = msg.payload;   \nmsg7.payload = msg.payload;    \nmsg8.payload = msg.payload;    \nmsg9.payload = msg.payload;    \nmsg10.payload = msg.payload;\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];\n",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2180,
        "wires": [
            [
                "59c4770a5a4b267a"
            ],
            [
                "59c4770a5a4b267a"
            ],
            [
                "59c4770a5a4b267a"
            ],
            [
                "59c4770a5a4b267a"
            ],
            [
                "59c4770a5a4b267a"
            ],
            [
                "59c4770a5a4b267a"
            ],
            [
                "59c4770a5a4b267a"
            ],
            [
                "59c4770a5a4b267a"
            ],
            [
                "59c4770a5a4b267a"
            ],
            [
                "59c4770a5a4b267a"
            ]
        ],
        "outputLabels": [
            "Schedule_1_Description",
            "Schedule_1_day",
            "Schedule_1_hour",
            "Schedule_1_minutes",
            "Schedule_1_state",
            "Schedule_1_topic",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "72309446fe85b2b0",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "Scheduler in Dashboard",
        "info": "",
        "x": 820,
        "y": 60,
        "wires": []
    },
    {
        "id": "59c4770a5a4b267a",
        "type": "no-op",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "x": 995,
        "y": 2180,
        "wires": [
            [
                "08ed068d4be15019"
            ]
        ],
        "l": false
    },
    {
        "id": "712675fbf9eebbb4",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "name": "Power on Planning",
        "mode": "link",
        "links": [
            "a772d2026681f718"
        ],
        "x": 2025,
        "y": 2100,
        "wires": []
    },
    {
        "id": "04961221eac5ebfc",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2140,
        "wires": [
            [
                "618b882f6c424b8c"
            ]
        ],
        "l": false
    },
    {
        "id": "07716a578edc1a77",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2180,
        "wires": [
            [
                "a18ea7f82dcac797"
            ]
        ],
        "l": false
    },
    {
        "id": "7a0950ebf8093b34",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2220,
        "wires": [
            [
                "67d291b1b04c125e"
            ]
        ],
        "l": false
    },
    {
        "id": "7c2780fd969826ac",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2260,
        "wires": [
            [
                "a77404fb8474f809"
            ]
        ],
        "l": false
    },
    {
        "id": "08ed068d4be15019",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Function schedule",
        "func": "var topic   =   msg.topic;\n\nvar state   =   global.get(topic+'_state',\"file\")||0;                              // Get state of the agenda item. \n\n\nif      (state == 0)                                                            // Is it disabled? \n        {return [null, null, null, null, null, null];}                          // output null to all pins and exit. else to continue.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var day_check       =global.get(topic+'_day',\"file\");                   // get schedule variables.\n        var hour_check      =global.get(topic+'_hour',\"file\");                  // get schedule variables.\n        var minutes_check   =global.get(topic+'_minutes',\"file\");               // get schedule variables.\n\n        var solar_block_scheduler           =global.get('solar_block_scheduler',\"file\");\n        var SolarFunction_active            =global.get('SolarFunction_active',\"file\");\n        var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n        var block_it = false;\n        if (solar_block_scheduler == true && SolarFunction_active == 1)\n            {\n                block_it = true;\n                \n            }\n        \n\n                                                                                // Check the programmed day compared current day.\n        if (day_check.includes(msg.payload[0]))         {day_check = { payload: 1, topic: \"DayOfTheWeek\"};}\n        else                                            {day_check = { payload: 0, topic: \"DayOfTheWeek\"};}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == hour_check)               {hour_check = { payload: 1, topic: \"Hour\"};}\n        else                                            {hour_check = { payload: 0, topic: \"Hour\"};}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == minutes_check)            {minutes_check = { payload: 1, topic: \"Minutes\"};}\n        else                                            {minutes_check = { payload: 0, topic: \"Minutes\"};}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (day_check.payload == 1 && hour_check.payload == 1 && minutes_check.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                let msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n                msg1.payload = 99; msg2.payload = 99; msg3.payload = 99; msg4.payload = 99; msg5.payload = 99; msg6.payload = 99; \n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                //  Override the current powerstate of heat pump? //////////////\n                //\n                var override    =   global.get(topic+'_override',\"file\");       // get the current override state.\n                var HP_state    = global.get('Heatpump_State',\"file\");          // get the current state of the heatpump. Is it on or off.\n                ////////////////////////////////////////////////////////////////\n                if  (override == 1 && HP_state == 0)                            // check if the override state is enabled, AND currently heatpump state is off\n                    {\n                        msg1 = { payload: 1, topic: \"override\" };\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                //\n                var action  =   global.get(topic+'_action',\"file\");             // get the action\n                ////////////////////////////////////////////////////////////////\n                \n                if  (action == \"HP_turn_on\" && HP_state == 0)                   // check the action\n                    {\n                        msg1 = { payload: 1, topic: \"Turn ON HeatPump\" };       // Operation Mode action? >> to Operation MOde output pin 1\n                    }\n                if  (action == \"HP_turn_off\" && HP_state == 1 && block_it === false)                                   // check the action\n                    {\n                        msg1 = { payload: 0, topic: \"Turn OFF HeatPump\" };      // Operation Mode action? >> to Operation MOde output pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                if  (action == \"DHW\")                                           // check the action if DHW (=Force DHW)\n                    {\n                        msg2 = { payload: 1, topic: \"DHW\" };                     // DHW action? >> to DHW output pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                if  (action == \"Sterilization\" && block_it === false)                                 // check the action\n                    {\n                        msg3 = { payload: 1, topic:  \"Sterilization\" };         // Sterilization action? >> to Sterilization output pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////                \n                if  (action == \"QM_0\")                                          // check the action\n                    {\n                        msg4 = { payload: 0, topic: \"Quiet Mode 0\" };           // QuietMode action? >> to Quiet MOde output pin 4\n                    }\n                if  (action == \"QM_1\")                                          // check the action\n                    {\n                        msg4 = { payload: 1, topic: \"Quiet Mode 1\" };           // QuietMode action? >> to Quiet MOde output pin 4\n                    }\n                if  (action == \"QM_2\")                                          // check the action\n                    {\n                        msg4 = { payload: 2, topic: \"Quiet Mode 2\" };           // QuietMode action? >> to Quiet MOde output pin 4\n                    }\n                if  (action == \"QM_3\")                                          // check the action\n                    {\n                        msg4 = { payload: 3, topic: \"Quiet Mode 3\" };           // QuietMode action? >> to Quiet MOde output pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                if  (action == \"OperationMode0\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 0, topic: \"Operation Mode 0\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        if (F_stored_next_operating_mode !== undefined) {global.set('F_stored_next_operating_mode',0,\"file\");}\n                    }                \n                if  (action == \"OperationMode1\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 1, topic: \"Operation Mode 1\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        if (F_stored_next_operating_mode !== undefined) {global.set('F_stored_next_operating_mode',1,\"file\");}\n                    }                \n                if  (action == \"OperationMode2\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 2, topic: \"Operation Mode 2\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        if (F_stored_next_operating_mode !== undefined) {global.set('F_stored_next_operating_mode',2,\"file\");}\n                    }                \n                if  (action == \"OperationMode3\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 3, topic: \"Operation Mode 3\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        if (F_stored_next_operating_mode !== undefined) {global.set('F_stored_next_operating_mode',3,\"file\");}\n                    }                \n                if  (action == \"OperationMode4\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 4, topic: \"Operation Mode 4\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        if (F_stored_next_operating_mode !== undefined) {global.set('F_stored_next_operating_mode',4,\"file\");}\n                    }   \n                if  (action == \"OperationMode5\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 5, topic: \"Operation Mode 5\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        if (F_stored_next_operating_mode !== undefined) {global.set('F_stored_next_operating_mode',5,\"file\");}\n                    }                   \n                if  (action == \"OperationMode6\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 6, topic: \"Operation Mode 6\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        if (F_stored_next_operating_mode !== undefined) {global.set('F_stored_next_operating_mode',6,\"file\");}\n                    }   \n                if  (action == \"OperationMode7\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 7, topic: \"Operation Mode 7\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        if (F_stored_next_operating_mode !== undefined) {global.set('F_stored_next_operating_mode',7,\"file\");}\n                    }   \n                if  (action == \"OperationMode8\")                                // check the action\n                    {\n                        if (F_stored_next_operating_mode === undefined) {msg5 = { payload: 8, topic: \"Operation Mode 8\" };}       // Operation Mode action? >> to Operation MOde output pin 5\n                        if (F_stored_next_operating_mode !== undefined) {global.set('F_stored_next_operating_mode',8,\"file\");}\n                    }   \n\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n                //\n                ////////////////////////////////////////////////////////////////\n                if  (action == \"NightReductionOn\")                              // check the action\n                    {\n                        var correction = global.get(\"NightReduction_correction\",\"file\");           // get the nightreduction correction.\n                        global.set(\"NightReduction_current_value\",correction,\"file\");\n                        global.set(\"nightreduction_on_off\",1,\"file\");\n                        msg6 = { payload: correction, topic: \"Nightreduction\" };\n                    }\n                if  (action == \"NightReductionOff\")                             // check the action\n                    {\n                        global.set(\"NightReduction_current_value\",0,\"file\");\n                        global.set(\"nightreduction_on_off\",0,\"file\");\n                        msg6 = { payload: 0, topic: \"Nightreduction\" };\n                    }\n                ////////////////////////////////////////////////////////////////\n                //\n                //\n                //\n                //\n            return [msg1, msg2, msg3, msg4, msg5, msg6];\n\n            }   \n        else\n            {   \n                return [null, null, null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 6,
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2180,
        "wires": [
            [
                "db72b548f3b6be26"
            ],
            [
                "8ead17901959019a"
            ],
            [
                "681c26b565ef9e79"
            ],
            [
                "604bafb96b19b6ff"
            ],
            [
                "7c0a32616a85d99d"
            ],
            [
                "263b8c915137c688"
            ]
        ],
        "outputLabels": [
            "override / power on/off",
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode",
            "NightReduction"
        ]
    },
    {
        "id": "6df907edf29c3048",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "Scheduler - Allow DHW below",
        "info": "",
        "x": 220,
        "y": 2360,
        "wires": []
    },
    {
        "id": "8f2a6c190a6d40f5",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "name": "NightReduction Scheduler",
        "mode": "link",
        "links": [
            "73ee925b927ed0c6",
            "3ab7a10b46379da2",
            "adef30c4c6fd9e18"
        ],
        "x": 2025,
        "y": 2300,
        "wires": []
    },
    {
        "id": "44a6da0f6113a5e1",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1585,
        "y": 2300,
        "wires": [
            [
                "4bef1ec01a0a206b"
            ]
        ],
        "l": false
    },
    {
        "id": "4bef1ec01a0a206b",
        "type": "delay",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2300,
        "wires": [
            [
                "8f2a6c190a6d40f5",
                "d2acacf168b33e7f"
            ]
        ]
    },
    {
        "id": "e7fbf7199ca4b831",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "Exit to power on/off (override)",
        "info": "",
        "x": 2180,
        "y": 2100,
        "wires": []
    },
    {
        "id": "f5cfd2c833c845ae",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "Exit to Nightreduction (Direct)",
        "info": "",
        "x": 2180,
        "y": 2300,
        "wires": []
    },
    {
        "id": "96a19932f8e59a97",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": ">>>>>>>>>>>>>>>>>>>>>>",
        "info": "",
        "x": 2180,
        "y": 2140,
        "wires": []
    },
    {
        "id": "da9eecf952559c66",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": ">>>>>>>>>>>>>>>>>>>>>>",
        "info": "",
        "x": 2180,
        "y": 2180,
        "wires": []
    },
    {
        "id": "cf2d629bfe0ad7dd",
        "type": "change",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Power",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3790,
        "y": 2060,
        "wires": [
            [
                "733a23bbef65ef55"
            ]
        ]
    },
    {
        "id": "2c513b2951c5e4f4",
        "type": "change",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Quiet Mode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3790,
        "y": 2220,
        "wires": [
            [
                "733a23bbef65ef55"
            ]
        ]
    },
    {
        "id": "a25886a49344ece0",
        "type": "change",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Operation Mode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3790,
        "y": 2260,
        "wires": [
            [
                "733a23bbef65ef55"
            ]
        ]
    },
    {
        "id": "d2acacf168b33e7f",
        "type": "change",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - NightReduction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3790,
        "y": 2300,
        "wires": [
            [
                "733a23bbef65ef55"
            ]
        ]
    },
    {
        "id": "733a23bbef65ef55",
        "type": "link out",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 3985,
        "y": 2160,
        "wires": []
    },
    {
        "id": "18dbf40918dd651d",
        "type": "change",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Force DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3790,
        "y": 2140,
        "wires": [
            [
                "733a23bbef65ef55"
            ]
        ]
    },
    {
        "id": "db14aaa2f1c0277b",
        "type": "change",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Force Sterilization",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3790,
        "y": 2180,
        "wires": [
            [
                "733a23bbef65ef55"
            ]
        ]
    },
    {
        "id": "e6c5758ec2d767f9",
        "type": "change",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduler - Operation Mode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3790,
        "y": 2100,
        "wires": [
            [
                "733a23bbef65ef55"
            ]
        ]
    },
    {
        "id": "db72b548f3b6be26",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Filter",
        "func": "if (msg.payload != 99)\n{return msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2100,
        "wires": [
            [
                "712675fbf9eebbb4",
                "cf2d629bfe0ad7dd"
            ]
        ]
    },
    {
        "id": "8ead17901959019a",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Filter",
        "func": "if (msg.payload != 99)\n{return msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2140,
        "wires": [
            [
                "04961221eac5ebfc"
            ]
        ]
    },
    {
        "id": "681c26b565ef9e79",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Filter",
        "func": "if (msg.payload != 99)\n{return msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2180,
        "wires": [
            [
                "07716a578edc1a77"
            ]
        ]
    },
    {
        "id": "604bafb96b19b6ff",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Filter",
        "func": "if (msg.payload != 99)\n{return msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2220,
        "wires": [
            [
                "7a0950ebf8093b34"
            ]
        ]
    },
    {
        "id": "7c0a32616a85d99d",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Filter",
        "func": "if (msg.payload != 99)\n{return msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2260,
        "wires": [
            [
                "7c2780fd969826ac"
            ]
        ]
    },
    {
        "id": "263b8c915137c688",
        "type": "function",
        "z": "4c0c2d379e4d32dc",
        "name": "Filter",
        "func": "if (msg.payload != 99)\n{return msg;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2300,
        "wires": [
            [
                "44a6da0f6113a5e1"
            ]
        ]
    },
    {
        "id": "94ba79923d83a642",
        "type": "comment",
        "z": "4c0c2d379e4d32dc",
        "name": "To LOGS",
        "info": "",
        "x": 4000,
        "y": 2100,
        "wires": []
    },
    {
        "id": "c49b726d49d32db8",
        "type": "rbe",
        "z": "4c0c2d379e4d32dc",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1090,
        "y": 2400,
        "wires": [
            [
                "72c850b7048fac84"
            ]
        ]
    },
    {
        "id": "092bcb21b66e6efd",
        "type": "tab",
        "label": "WP degreedays",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a29b49e7761376d4",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "name": "Combined bar-chart",
        "style": {
            "label": true
        },
        "nodes": [
            "0b06bbd2db8f7134",
            "3daeb7f57b7b2528",
            "32ae391f7722abc8",
            "55fba547f08d20ed",
            "b774693b251631b0",
            "401797e218d58f65",
            "f0e4272d8b7ed899",
            "f1837cb5abef59ab",
            "c71ebdbe1e43c8e2",
            "33296e448de2ca05",
            "e2732b90363524ae",
            "c95ba39a0275f364"
        ],
        "x": 54,
        "y": 1119,
        "w": 1388,
        "h": 602
    },
    {
        "id": "0e7a60e56d2e356c",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "name": "Source information",
        "style": {
            "label": true
        },
        "nodes": [
            "9c78459735c1d8ed",
            "7b173523edd6477b",
            "575f2612885da383",
            "6a69b7a756d95605",
            "ff403868a2b0b4b5"
        ],
        "x": 54,
        "y": 39,
        "w": 832,
        "h": 122
    },
    {
        "id": "ae195c9b153c8de3",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "name": "W to kWh usage conversion [HEAT]",
        "style": {
            "label": true
        },
        "nodes": [
            "34d959963d0e068a",
            "a2a74efa95ec73f1",
            "d1432d4fa0331142"
        ],
        "x": 64,
        "y": 199,
        "w": 872,
        "h": 82
    },
    {
        "id": "a50d1896999121bc",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "name": "Combined bar-chart",
        "style": {
            "label": true
        },
        "nodes": [
            "a37a4b4b3a9a9cbc",
            "6feed5dc1889d9af",
            "3bd7db1101d5c226",
            "71b677cb4ba617f8",
            "afb10b853f16e12a",
            "66b3f6af46eb91fd",
            "728dbe5cb7020e4a",
            "2fdd1557c21bb621",
            "740ad196ddc6d783",
            "efb81b69ef149eb5",
            "b9fb5f59019806d4",
            "78dd892cf7dbd527"
        ],
        "x": 54,
        "y": 439,
        "w": 1388,
        "h": 622
    },
    {
        "id": "ae82bae127051220",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "name": "W to kWh usage conversion [DHW]",
        "style": {
            "label": true
        },
        "nodes": [
            "65b74d229815f083",
            "c043f8f3ae97f71b",
            "f49662089485a4cd"
        ],
        "x": 54,
        "y": 299,
        "w": 872,
        "h": 82
    },
    {
        "id": "32ae391f7722abc8",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "Bucket 2 - Degree days calculation",
        "style": {
            "fill": "#00876C",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "ee5eb35747601030",
            "c189a23069301037",
            "1b69b5f3af5c95de",
            "214fa1d1981e9bdb"
        ],
        "x": 84,
        "y": 1439,
        "w": 1332,
        "h": 82
    },
    {
        "id": "b774693b251631b0",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "Bucket 1 - kWh calculation",
        "style": {
            "fill": "#F59B56",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "7b15632bd0d24b94",
            "8ac18db650e61d9a",
            "8214ad499ffdd476",
            "d22bee67660e3573"
        ],
        "x": 84,
        "y": 1339,
        "w": 1332,
        "h": 82
    },
    {
        "id": "3bd7db1101d5c226",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "Bucket 2 - Degree days calculation",
        "style": {
            "fill": "#00876C",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "9e0ccb7533aa3197",
            "7f715c9e8f0a5412",
            "05bccd94b8ad88b5",
            "cc8c4b16091de734"
        ],
        "x": 84,
        "y": 779,
        "w": 1332,
        "h": 82
    },
    {
        "id": "afb10b853f16e12a",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "Bucket 1 - kWh calculation HEAT",
        "style": {
            "fill": "#F59B56",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "175bc5c6b74991e3",
            "704310369e413594",
            "b2e67f5d200fe5cd",
            "865d430840855ace"
        ],
        "x": 84,
        "y": 679,
        "w": 1332,
        "h": 82
    },
    {
        "id": "efb81b69ef149eb5",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "Bucket 2 - kWh calculation DHW",
        "style": {
            "fill": "#DE425B",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "84c7e18031d5910f",
            "b110d098b2875197",
            "c5ed6d9ca6044f52",
            "83012c8039507f51"
        ],
        "x": 84,
        "y": 579,
        "w": 1322,
        "h": 82
    },
    {
        "id": "33296e448de2ca05",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "",
        "style": {
            "fill": "#DE425B",
            "fill-opacity": "0.5",
            "label": true
        },
        "nodes": [
            "d3927a92b8b94017",
            "b7a6329b8cba3e0e",
            "fc337671cdfcbcc2",
            "eb0a5662f4c15579"
        ],
        "x": 84,
        "y": 1239,
        "w": 1332,
        "h": 82
    },
    {
        "id": "b9fb5f59019806d4",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "09627e119082c14d"
        ],
        "x": 1134,
        "y": 919,
        "w": 272,
        "h": 82
    },
    {
        "id": "e2732b90363524ae",
        "type": "group",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1199b61f89d1d2e6"
        ],
        "x": 1134,
        "y": 1579,
        "w": 272,
        "h": 82
    },
    {
        "id": "34d959963d0e068a",
        "type": "link in",
        "z": "092bcb21b66e6efd",
        "g": "ae195c9b153c8de3",
        "name": "",
        "links": [
            "b8cc7d5dac332386"
        ],
        "x": 105,
        "y": 240,
        "wires": [
            [
                "a2a74efa95ec73f1"
            ]
        ]
    },
    {
        "id": "a2a74efa95ec73f1",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "ae195c9b153c8de3",
        "name": "Energy_Consumption_HEAT_kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit;\n\n    var LastMessage = msg.payload;\n    var LastTopic= msg.topic;\n    \n    if (PreviousTime === undefined) \n        {\n            context.set('PreviousTime',CurrentTime);\n            exit = true;\n        }\n        \n    else if (PreviousMessage === undefined) \n        {\n            context.set('PreviousMessage',msg.payload);\n            exit = true;\n        }\n    else if (PreviousTopic === undefined) \n        {\n            context.set('PreviousTopic',msg.topic);\n            exit = true;\n        }\n    \n    else {\n                \n            TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n            context.set('PreviousTime',CurrentTime);\n            context.set('PreviousMessage',msg.payload);\n            context.set('PreviousTopic',msg.topic);\n            msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n            msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n            \n            \n            msg1.payload = (TimeElapsed + \"  Seconds\");\n            temp = parseFloat(TimeElapsed.toFixed(0));\n            msg2.payload = temp;\n            msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n            msg5.payload = (PreviousMessage * ( temp / 3600000 ));   //  Calculation to Wh portion\n            Number(msg5.payload).toFixed(4);\n            msg5.topic = 'Energy_Consumption_HEAT_kWh';\n       }\n    if (exit === true)\n        {return null;}\n    else     \n        {return msg5;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 240,
        "wires": [
            [
                "d1432d4fa0331142"
            ]
        ],
        "outputLabels": [
            "Energy_Consumption_HEAT_kWh"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "ee5eb35747601030",
        "type": "bar-chart-data",
        "z": "092bcb21b66e6efd",
        "g": "32ae391f7722abc8",
        "name": "bar-chart-data degreedays-31d",
        "x_interval": "days",
        "x_size": "31",
        "unit": "",
        "precision": "2",
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 850,
        "y": 1480,
        "wires": [
            [
                "1b69b5f3af5c95de"
            ]
        ]
    },
    {
        "id": "8ac18db650e61d9a",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "b774693b251631b0",
        "name": "Store information to kwh_HEAT_31d",
        "func": "var myArray4 = msg;\nglobal.set(\"kwh_HEAT_31d\", myArray4,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1380,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "0b06bbd2db8f7134",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "Once per 15minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 220,
        "y": 1620,
        "wires": [
            [
                "3daeb7f57b7b2528"
            ]
        ]
    },
    {
        "id": "3daeb7f57b7b2528",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "Function - bucket 1 + 2 +3 combined",
        "func": "var myArray1 = global.get(\"kwh_HEAT_31d\",\"file\");\nvar myArray2 = global.get(\"degreedays_31d\",\"file\");\nvar myArray3 = global.get(\"kwh_DHW_31d\",\"file\");\nif (myArray1 === undefined || myArray2 === undefined || myArray3 === undefined)\n    {\n        return null;\n        \n    }\n\nelse\n    {\n        let msg1={}, msg2={}, msg3={};\n        \n        msg1 = myArray1;\n        msg2 = myArray2;\n        msg3 = myArray3;\n        \n        var varlabels           = msg1.payload[0].labels;\n        var varkwh_heat_data    = msg1.payload[0].data[0];\n        var vargraaddagen_data  = msg2.payload[0].data[0];\n        var varkwh_dhw_data     = msg3.payload[0].data[0];\n        \n        var m={};\n            m.labels    = varlabels;\n            m.series    = ['DegreeDays (°C)', 'Energy consumption HEAT (kWh)', 'Energy consumption DHW (kWh)'];\n            m.data      = [vargraaddagen_data, varkwh_heat_data, varkwh_dhw_data];\n        \n        return {payload:[m]};\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1620,
        "wires": [
            [
                "1199b61f89d1d2e6"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "c189a23069301037",
        "type": "link in",
        "z": "092bcb21b66e6efd",
        "g": "32ae391f7722abc8",
        "name": "",
        "links": [
            "ff403868a2b0b4b5"
        ],
        "x": 125,
        "y": 1480,
        "wires": [
            [
                "214fa1d1981e9bdb"
            ]
        ]
    },
    {
        "id": "1b69b5f3af5c95de",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "32ae391f7722abc8",
        "name": "Store information to degreedays_31d",
        "func": "var myArray5 = msg;\nglobal.set(\"degreedays_31d\", myArray5,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1480,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "9c78459735c1d8ed",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "g": "0e7a60e56d2e356c",
        "name": "Interval 5m",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "7b173523edd6477b",
                "575f2612885da383"
            ]
        ]
    },
    {
        "id": "7b173523edd6477b",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "0e7a60e56d2e356c",
        "name": "T_outside",
        "func": "/////\n\n///////////////////////////// MSG = T_outside //////////////////////////////////\n\n\nvar T_outside = global.get('T_outside',\"file\");\nif (T_outside === undefined)\n    {   \n        return null;\n    }\n    \nelse\n    {\n\n        msg.payload = T_outside;\n        msg.topic = 'T_outside';\n        Number(msg.payload).toFixed(1);\n        return msg;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            [
                "6a69b7a756d95605"
            ]
        ],
        "outputLabels": [
            "T_outside"
        ]
    },
    {
        "id": "575f2612885da383",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "0e7a60e56d2e356c",
        "name": "graaddagen_calc",
        "func": "/////\n\n///////////////////////////// Calculate T_outside //////////////////////////////\n\n\nvar T_outside = global.get('T_outside',\"file\");\nif (T_outside === undefined)\n    {   \n        return null;\n    }\n    \nelse\n    {\n        \n////\n\n///////////////////////////// MSG = graaddagen_calc ////////////////////////////\n\n        let msg1={};\n\n        var graaddagen_calc = 18 - T_outside;\n        \n        if (graaddagen_calc < 0)    {graaddagen_calc = 0;}\n                \n        msg1.topic = 'graaddagen_calc';\n        msg1.payload = graaddagen_calc;\n        Number(msg1.payload).toFixed(1);\n        \n        global.set(\"graaddagen_calc\", msg1.payload, \"file\");\n\n        return msg1;\n    }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "ff403868a2b0b4b5"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "6a69b7a756d95605",
        "type": "link out",
        "z": "092bcb21b66e6efd",
        "g": "0e7a60e56d2e356c",
        "name": "T_outside",
        "mode": "link",
        "links": [],
        "x": 845,
        "y": 80,
        "wires": []
    },
    {
        "id": "ff403868a2b0b4b5",
        "type": "link out",
        "z": "092bcb21b66e6efd",
        "g": "0e7a60e56d2e356c",
        "name": "graaddagen_calc",
        "mode": "link",
        "links": [
            "e64edede4c04268f",
            "1db4f55d0a2fdbcd",
            "c189a23069301037",
            "a555a16e72eecd16",
            "a123dbb3ab4abb67",
            "23bc7334d7c99f01",
            "e9d32f77223020a8",
            "458b037edd12c828",
            "b27f3362361c5e64",
            "978657d3c3a0f2cb",
            "7771da8a0a8b3592",
            "7f715c9e8f0a5412",
            "7c5168cdea10e6fd"
        ],
        "x": 845,
        "y": 120,
        "wires": []
    },
    {
        "id": "f1837cb5abef59ab",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 170,
        "y": 1680,
        "wires": [
            [
                "1199b61f89d1d2e6"
            ]
        ]
    },
    {
        "id": "55fba547f08d20ed",
        "type": "comment",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "Bucket 1 + 2 + 3 combined to chart",
        "info": "",
        "x": 240,
        "y": 1580,
        "wires": []
    },
    {
        "id": "7b15632bd0d24b94",
        "type": "bar-chart-data",
        "z": "092bcb21b66e6efd",
        "g": "b774693b251631b0",
        "name": "bar-chart HEAT kwh-31d",
        "x_interval": "days",
        "x_size": "31",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 1380,
        "wires": [
            [
                "8ac18db650e61d9a"
            ]
        ]
    },
    {
        "id": "1199b61f89d1d2e6",
        "type": "ui_chart",
        "z": "092bcb21b66e6efd",
        "g": "e2732b90363524ae",
        "name": "kWh + Degree Days (31d)",
        "group": "f96935cb150b5251",
        "order": 2,
        "width": 15,
        "height": 8,
        "label": "31 days",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00876c",
            "#de425b",
            "#f59b56",
            "#fff18f",
            "#89bf77",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "401797e218d58f65",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "Load bar-chart data",
        "func": "var myArray1 = global.get(\"kwh_HEAT_31d\",\"file\");\nvar myArray2 = global.get(\"degreedays_31d\",\"file\");\nvar myArray3 = global.get(\"kwh_DHW_31d\",\"file\");\n\nlet msg1={}, msg2={}, msg3={};\nmsg1 = myArray1;\nmsg2 = myArray2;\nmsg3 = myArray3;\n\nreturn [msg1,msg2,msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1200,
        "wires": [
            [
                "7b15632bd0d24b94"
            ],
            [
                "ee5eb35747601030"
            ],
            [
                "b7a6329b8cba3e0e"
            ]
        ],
        "outputLabels": [
            "kwh_HEAT_31d",
            "degreedays_31d",
            "kwh_DHW_31d"
        ]
    },
    {
        "id": "f0e4272d8b7ed899",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "Restore after boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "trigger",
        "x": 190,
        "y": 1200,
        "wires": [
            [
                "401797e218d58f65"
            ]
        ]
    },
    {
        "id": "99e1ce721e40f139",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 1250,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d1432d4fa0331142",
        "type": "link out",
        "z": "092bcb21b66e6efd",
        "g": "ae195c9b153c8de3",
        "name": "kWh HEAT value (live)",
        "mode": "link",
        "links": [
            "b2e67f5d200fe5cd",
            "8214ad499ffdd476",
            "ce5d0b3236face62"
        ],
        "x": 810,
        "y": 240,
        "wires": [],
        "inputLabels": [
            "kWh value (live)"
        ],
        "l": true
    },
    {
        "id": "8214ad499ffdd476",
        "type": "link in",
        "z": "092bcb21b66e6efd",
        "g": "b774693b251631b0",
        "name": "",
        "links": [
            "d1432d4fa0331142"
        ],
        "x": 125,
        "y": 1380,
        "wires": [
            [
                "d22bee67660e3573"
            ]
        ]
    },
    {
        "id": "d22bee67660e3573",
        "type": "delay",
        "z": "092bcb21b66e6efd",
        "g": "b774693b251631b0",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 1380,
        "wires": [
            [
                "7b15632bd0d24b94"
            ]
        ]
    },
    {
        "id": "214fa1d1981e9bdb",
        "type": "delay",
        "z": "092bcb21b66e6efd",
        "g": "32ae391f7722abc8",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 1480,
        "wires": [
            [
                "ee5eb35747601030"
            ]
        ]
    },
    {
        "id": "a37a4b4b3a9a9cbc",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "Once per 5minutes",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "trigger",
        "x": 220,
        "y": 960,
        "wires": [
            [
                "6feed5dc1889d9af"
            ]
        ]
    },
    {
        "id": "6feed5dc1889d9af",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "Function - bucket 1 + 2 + 3 combined",
        "func": "var myArray3 = global.get(\"kwh_HEAT_24h\",\"file\");\nvar myArray4 = global.get(\"degreedays_24h\",\"file\");\nvar myArray1 = global.get(\"kwh_DHW_24h\",\"file\");\nif (myArray3 === undefined || myArray4 === undefined || myArray1 === undefined)\n    {\n        return null;\n    }\n        \nelse\n    {\n        let msg1={}, msg2={}, msg3={};\n        msg1 = myArray3;\n        msg2 = myArray4;\n        msg3 = myArray1;\n        \n        var varlabels = msg1.payload[0].labels;\n        var varkwh_data_heat        = msg1.payload[0].data[0];\n        var varkwh_data_dhw         = msg3.payload[0].data[0];\n        var vargraaddagen_data      = msg2.payload[0].data[0];\n        var m={};\n            m.labels    = varlabels;\n            m.series    = ['DegreeDays (°C)', 'Energy consumption HEAT (kWh)',  'Energy consumption DHW (kWh)'];\n            m.data      = [vargraaddagen_data, varkwh_data_heat, varkwh_data_dhw];\n        \n        return {payload:[m]};\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 960,
        "wires": [
            [
                "09627e119082c14d"
            ]
        ],
        "outputLabels": [
            "graaddagen_calc"
        ]
    },
    {
        "id": "9e0ccb7533aa3197",
        "type": "bar-chart-data",
        "z": "092bcb21b66e6efd",
        "g": "3bd7db1101d5c226",
        "name": "bar-chart-data degreedays-24h",
        "x_interval": "hours",
        "x_size": "24",
        "unit": "",
        "precision": "2",
        "is_meter_reading": "False",
        "agg_by": "avg",
        "x": 850,
        "y": 820,
        "wires": [
            [
                "05bccd94b8ad88b5"
            ]
        ]
    },
    {
        "id": "7f715c9e8f0a5412",
        "type": "link in",
        "z": "092bcb21b66e6efd",
        "g": "3bd7db1101d5c226",
        "name": "",
        "links": [
            "ff403868a2b0b4b5"
        ],
        "x": 125,
        "y": 820,
        "wires": [
            [
                "cc8c4b16091de734"
            ]
        ]
    },
    {
        "id": "05bccd94b8ad88b5",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "3bd7db1101d5c226",
        "name": "Store information to degreedays_24h",
        "func": "var myArray5 = msg;\nglobal.set(\"degreedays_24h\", myArray5,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 820,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "cc8c4b16091de734",
        "type": "delay",
        "z": "092bcb21b66e6efd",
        "g": "3bd7db1101d5c226",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 820,
        "wires": [
            [
                "9e0ccb7533aa3197"
            ]
        ]
    },
    {
        "id": "71b677cb4ba617f8",
        "type": "comment",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "Bucket 1 + 2 + 3 combined to chart",
        "info": "",
        "x": 240,
        "y": 920,
        "wires": []
    },
    {
        "id": "09627e119082c14d",
        "type": "ui_chart",
        "z": "092bcb21b66e6efd",
        "g": "b9fb5f59019806d4",
        "name": "kWh + Degree Days (24h)",
        "group": "f96935cb150b5251",
        "order": 4,
        "width": 15,
        "height": 8,
        "label": "24 hours",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00876c",
            "#de425b",
            "#f59b56",
            "#fff18f",
            "#89bf77",
            "#ffa056",
            "#8dddd0",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "175bc5c6b74991e3",
        "type": "bar-chart-data",
        "z": "092bcb21b66e6efd",
        "g": "afb10b853f16e12a",
        "name": "bar-chart HEAT kwh-24h",
        "x_interval": "hours",
        "x_size": "24",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 720,
        "wires": [
            [
                "704310369e413594"
            ]
        ]
    },
    {
        "id": "704310369e413594",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "afb10b853f16e12a",
        "name": "Store information to kwh_HEAT_24h",
        "func": "var myArray4 = msg;\nglobal.set(\"kwh_HEAT_24h\", myArray4,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 720,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "b2e67f5d200fe5cd",
        "type": "link in",
        "z": "092bcb21b66e6efd",
        "g": "afb10b853f16e12a",
        "name": "",
        "links": [
            "d1432d4fa0331142"
        ],
        "x": 125,
        "y": 720,
        "wires": [
            [
                "865d430840855ace"
            ]
        ]
    },
    {
        "id": "865d430840855ace",
        "type": "delay",
        "z": "092bcb21b66e6efd",
        "g": "afb10b853f16e12a",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 720,
        "wires": [
            [
                "175bc5c6b74991e3"
            ]
        ]
    },
    {
        "id": "66b3f6af46eb91fd",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "Load bar-chart data",
        "func": "var myArray3 = global.get(\"kwh_HEAT_24h\",\"file\");\nvar myArray4 = global.get(\"degreedays_24h\",\"file\");\nvar myArray1 = global.get(\"kwh_DHW_24h\",\"file\");\n\nlet msg1={}, msg2={}, msg3={};\nmsg1 = myArray3;\nmsg2 = myArray4;\nmsg3 = myArray1;\n\nreturn [msg1,msg2,msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 520,
        "wires": [
            [
                "175bc5c6b74991e3"
            ],
            [
                "9e0ccb7533aa3197"
            ],
            [
                "c5ed6d9ca6044f52"
            ]
        ],
        "outputLabels": [
            "kwh_31d",
            "degreedays_31d",
            ""
        ]
    },
    {
        "id": "728dbe5cb7020e4a",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "Restore after boot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "trigger",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "66b3f6af46eb91fd"
            ]
        ]
    },
    {
        "id": "2fdd1557c21bb621",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "09627e119082c14d",
                "175bc5c6b74991e3",
                "c5ed6d9ca6044f52",
                "9e0ccb7533aa3197"
            ]
        ]
    },
    {
        "id": "16255a667733c352",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 1250,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c71ebdbe1e43c8e2",
        "type": "comment",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "31 Days information",
        "info": "",
        "x": 170,
        "y": 1160,
        "wires": []
    },
    {
        "id": "740ad196ddc6d783",
        "type": "comment",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "24 hours information",
        "info": "",
        "x": 170,
        "y": 480,
        "wires": []
    },
    {
        "id": "65b74d229815f083",
        "type": "link in",
        "z": "092bcb21b66e6efd",
        "g": "ae82bae127051220",
        "name": "",
        "links": [
            "c2baac5a5c8773a9"
        ],
        "x": 95,
        "y": 340,
        "wires": [
            [
                "c043f8f3ae97f71b"
            ]
        ]
    },
    {
        "id": "c043f8f3ae97f71b",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "ae82bae127051220",
        "name": "Energy_Consumption_DHW_kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit;\n\n    var LastMessage = msg.payload;\n    var LastTopic= msg.topic;\n    \n    if (PreviousTime === undefined) \n        {\n            context.set('PreviousTime',CurrentTime);\n            exit = true;\n        }\n        \n    else if (PreviousMessage === undefined) \n        {\n            context.set('PreviousMessage',msg.payload);\n            exit = true;\n        }\n    else if (PreviousTopic === undefined) \n        {\n            context.set('PreviousTopic',msg.topic);\n            exit = true;\n        }\n    \n    else {\n                \n            TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n            context.set('PreviousTime',CurrentTime);\n            context.set('PreviousMessage',msg.payload);\n            context.set('PreviousTopic',msg.topic);\n            msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n            msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n            \n            \n            msg1.payload = (TimeElapsed + \"  Seconds\");\n            temp = parseFloat(TimeElapsed.toFixed(0));\n            msg2.payload = temp;\n            msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n            msg5.payload = (PreviousMessage * ( temp / 3600000 ));   //  Calculation to Wh portion\n            Number(msg5.payload).toFixed(4);\n            msg5.topic = 'Energy_Consumption_DHW_kWh';\n       }\n    if (exit === true)\n        {return null;}\n    else     \n        {return msg5;}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "f49662089485a4cd"
            ]
        ],
        "outputLabels": [
            "Energy_Consumption_HEAT_kWh"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "f49662089485a4cd",
        "type": "link out",
        "z": "092bcb21b66e6efd",
        "g": "ae82bae127051220",
        "name": "kWh DHW value (live)",
        "mode": "link",
        "links": [
            "84c7e18031d5910f",
            "eb0a5662f4c15579",
            "22538d89f57d30fe"
        ],
        "x": 800,
        "y": 340,
        "wires": [],
        "inputLabels": [
            "kWh value (live)"
        ],
        "l": true
    },
    {
        "id": "c5ed6d9ca6044f52",
        "type": "bar-chart-data",
        "z": "092bcb21b66e6efd",
        "g": "efb81b69ef149eb5",
        "name": "bar-chart DHW kwh-24h",
        "x_interval": "hours",
        "x_size": "24",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 620,
        "wires": [
            [
                "83012c8039507f51"
            ]
        ]
    },
    {
        "id": "83012c8039507f51",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "efb81b69ef149eb5",
        "name": "Store information to kwh_DHW_24h",
        "func": "var myArray1 = msg;\nglobal.set(\"kwh_DHW_24h\", myArray1,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 620,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "84c7e18031d5910f",
        "type": "link in",
        "z": "092bcb21b66e6efd",
        "g": "efb81b69ef149eb5",
        "name": "",
        "links": [
            "f49662089485a4cd"
        ],
        "x": 125,
        "y": 620,
        "wires": [
            [
                "b110d098b2875197"
            ]
        ]
    },
    {
        "id": "b110d098b2875197",
        "type": "delay",
        "z": "092bcb21b66e6efd",
        "g": "efb81b69ef149eb5",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 620,
        "wires": [
            [
                "c5ed6d9ca6044f52"
            ]
        ]
    },
    {
        "id": "eb0a5662f4c15579",
        "type": "link in",
        "z": "092bcb21b66e6efd",
        "g": "33296e448de2ca05",
        "name": "",
        "links": [
            "f49662089485a4cd"
        ],
        "x": 125,
        "y": 1280,
        "wires": [
            [
                "fc337671cdfcbcc2"
            ]
        ]
    },
    {
        "id": "fc337671cdfcbcc2",
        "type": "delay",
        "z": "092bcb21b66e6efd",
        "g": "33296e448de2ca05",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "b7a6329b8cba3e0e"
            ]
        ]
    },
    {
        "id": "b7a6329b8cba3e0e",
        "type": "bar-chart-data",
        "z": "092bcb21b66e6efd",
        "g": "33296e448de2ca05",
        "name": "bar-chart DHW kwh-31d",
        "x_interval": "days",
        "x_size": "31",
        "unit": "",
        "precision": "3",
        "is_meter_reading": "False",
        "agg_by": "sum",
        "x": 830,
        "y": 1280,
        "wires": [
            [
                "d3927a92b8b94017"
            ]
        ]
    },
    {
        "id": "d3927a92b8b94017",
        "type": "function",
        "z": "092bcb21b66e6efd",
        "g": "33296e448de2ca05",
        "name": "Store information to kwh_DHW_31d",
        "func": "var myArray1 = msg;\nglobal.set(\"kwh_DHW_31d\", myArray1,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1280,
        "wires": [
            []
        ],
        "outputLabels": [
            "graaddagen 24h"
        ]
    },
    {
        "id": "78dd892cf7dbd527",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "g": "a50d1896999121bc",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 310,
        "y": 1020,
        "wires": [
            [
                "9e0ccb7533aa3197",
                "175bc5c6b74991e3",
                "c5ed6d9ca6044f52"
            ]
        ]
    },
    {
        "id": "c95ba39a0275f364",
        "type": "inject",
        "z": "092bcb21b66e6efd",
        "g": "a29b49e7761376d4",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 310,
        "y": 1680,
        "wires": [
            [
                "ee5eb35747601030",
                "7b15632bd0d24b94",
                "b7a6329b8cba3e0e"
            ]
        ]
    },
    {
        "id": "dfa4ad756569757c",
        "type": "ui_template",
        "z": "092bcb21b66e6efd",
        "group": "f96935cb150b5251",
        "name": "Line",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1590,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "c2b53dc9fc0f0732",
        "type": "ui_template",
        "z": "092bcb21b66e6efd",
        "group": "f96935cb150b5251",
        "name": "Line",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 10px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 2px solid #a39d99;\n    box-shadow: 0 0 5px #a39d99\";\n\t>\n\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1590,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "88941c7ebbe79320",
        "type": "tab",
        "label": "WP Solar",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0fc7460ece9ba178",
        "type": "group",
        "z": "88941c7ebbe79320",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "86b1d9d1af4f254c",
            "1384670926afe875",
            "1d2684039872ac41",
            "79eb5c3a63164be0",
            "fcf21a95f6e96992",
            "371945619889792a",
            "9489af26d87fa6f7",
            "f63d1038aded6f3c",
            "2fc6286338725b94",
            "51b71d75adbe47cc",
            "099705dcc9a607ec",
            "e2c886d73017ba7d",
            "fa0f657d8343add3",
            "d758ad14a5c371d1",
            "db99a74ac9754a0b",
            "9ffd97efe2bd8210",
            "3694b44fc765b0a2",
            "4bd0e3ee2a16fd74",
            "02ceb85184c22bec",
            "c8160e62e2af120c",
            "6c0a545530dd4ed0",
            "cd1ea2840479452d",
            "a7f9994b1da2a51c"
        ],
        "x": 74,
        "y": 19,
        "w": 1392,
        "h": 668
    },
    {
        "id": "9e2c34031105062b",
        "type": "group",
        "z": "88941c7ebbe79320",
        "name": "SOLAR functions",
        "style": {
            "label": true
        },
        "nodes": [
            "52743d4340d5f598",
            "e7bbc96091a99dea",
            "36bd6f9ed6bbeccd",
            "c0a59e1efc1b13f2",
            "198ae547f1548522",
            "f919b3cebfe144d0",
            "d48040a3dc661f69",
            "90b4a10d71ce650b",
            "2360cc7a346b3025",
            "74aa172502a3471c",
            "587e05719658c8b9",
            "5a49bfc801e0249e",
            "f489206101a611c7",
            "2bfdf5f18f51a8c9",
            "be1d7db87d92baf8",
            "17c336f2de837f34",
            "3750760cd8fb563f",
            "b2fd6cbe99bd39b5",
            "39d823f7b19d33ed",
            "b7e97a8b876df843",
            "e0d11fbe4036b1a2",
            "00807cb14c48fcca",
            "e93d248d9d09c707",
            "146f12480a56cfe3",
            "94ce26fbb380ca23",
            "e98533330b77eac7",
            "c041fd31297cd74b",
            "74d21693a16c32dd",
            "c534d4a4825d88e1",
            "31b1cb8310e1dffc",
            "0be3e7aabef0e51c",
            "d6a99e7446fec859",
            "e808d692a856d5db",
            "c0cc87dbd1879df7",
            "d3b820a7a9c93987",
            "753dd75310f0bc83",
            "8603172634558642",
            "8e15e09a2e32aa6f",
            "183ceaeca552c78b",
            "dff3db02b78c3ce8",
            "6f97b70161c412e0",
            "90624fa2c216bf5d",
            "ffeb80a9107548d9",
            "ac9fdd3c58875d7c",
            "f13b60c6ea1a7ba5",
            "986c05b277a7cb4a",
            "31cc0777af7b97e7",
            "2f1318fa8ad9113c",
            "5edd2f5b433056a8"
        ],
        "x": 54,
        "y": 1693,
        "w": 1332,
        "h": 1228
    },
    {
        "id": "6bd94724e4c90346",
        "type": "group",
        "z": "88941c7ebbe79320",
        "name": "Switching logic",
        "style": {
            "label": true
        },
        "nodes": [
            "901a2b16e1783e82",
            "cbb9e4ad1aed2ee8",
            "0446ed3c16eadbe7",
            "dfe0ac23d956b098",
            "89f0b8222cc45cab",
            "1405869d83334a42",
            "0a9cac54262558cf",
            "cda71137e216af25"
        ],
        "x": 94,
        "y": 2979,
        "w": 902,
        "h": 202
    },
    {
        "id": "6f1057c2d4c3d1ae",
        "type": "group",
        "z": "88941c7ebbe79320",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "6099069f41b972d9",
            "9697f1849bdfde2f",
            "b57b5922f7cb5980",
            "5233f742652fbe5d",
            "a15760c8fb254347",
            "f1e9bc9122d59bc2",
            "58653979bc3c26d0",
            "f227529cf807dfb0",
            "ef19602ecc6e061c",
            "3551ae1501b02a48",
            "3804d1594f457822",
            "909329e4d6347de7",
            "30025e7d32995ebb",
            "af57143f512e2258",
            "012b6d2cac68cbf4",
            "4dd044bb826d3590",
            "425ae3d60697ebbb",
            "3a8e8accbfadb5c9",
            "f3832e1ec734431a",
            "42ee0952114adcdd",
            "c2831cc87255c1a5"
        ],
        "x": 74,
        "y": 699,
        "w": 1332,
        "h": 688
    },
    {
        "id": "9489af26d87fa6f7",
        "type": "group",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "This groups function: Calculate result of the day",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "37d25e4afb636efd",
            "f34dcc49159f7122",
            "7952974e6e550696",
            "7697737e67ce7a54",
            "c8fc2524833656a6",
            "64a5c09a392331c8",
            "900ca2a0e2694b1a",
            "ea2d3df9c09fafcc",
            "3e10866012f02659"
        ],
        "x": 114,
        "y": 459,
        "w": 812,
        "h": 202
    },
    {
        "id": "f63d1038aded6f3c",
        "type": "group",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "",
        "style": {
            "fill": "#ff0000",
            "fill-opacity": "0.55",
            "label": true
        },
        "nodes": [
            "8e0871b1a4bd6749"
        ],
        "x": 314,
        "y": 319,
        "w": 232,
        "h": 82
    },
    {
        "id": "58653979bc3c26d0",
        "type": "group",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "",
        "style": {
            "fill": "#ff0000",
            "fill-opacity": "0.55",
            "label": true
        },
        "nodes": [
            "c9ad604be7e118c8"
        ],
        "x": 274,
        "y": 1039,
        "w": 232,
        "h": 82
    },
    {
        "id": "e98533330b77eac7",
        "type": "group",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "fd3df89bd076cc96",
            "1a4c312d89f7dc7c",
            "41a08a3ba37f3daa",
            "6cc0fb9de7eaa2b9",
            "56d65da2cbe1b4cd",
            "e286dcc4acdecf2e",
            "805f3e534a023eb4",
            "9a811202e803a249",
            "c5cc9b917833cab0",
            "d0af720694680d47",
            "760ec6ab0ba0b36e",
            "d7fc61fd8f5d5bb3",
            "d275e8468d159090",
            "ad26cc34783ad684",
            "f39ccdd7b24fdcc7",
            "753d436cc66a8e81",
            "1dea44fb135025ef",
            "394e4b11ddb13355",
            "8476282a71c24e49",
            "1a8acaf415177718"
        ],
        "x": 434,
        "y": 1719,
        "w": 392,
        "h": 1122
    },
    {
        "id": "f227529cf807dfb0",
        "type": "group",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ae3cbaa866099ef1",
            "cbf0c363a1f8e325",
            "2d87ee27dea371b2",
            "fd3fef5ba1f4e82e",
            "cf4394032666da63",
            "c96b1fcec8143842",
            "ec878c0e335d4cbb"
        ],
        "x": 154,
        "y": 1199,
        "w": 732,
        "h": 162
    },
    {
        "id": "56d65da2cbe1b4cd",
        "type": "ui_dropdown",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "Power detection method",
        "label": "Power detection method",
        "tooltip": "",
        "place": "Select option",
        "group": "4cf2088c86f83c5a",
        "order": 9,
        "width": 9,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Power Live (kW)",
                "value": "kW",
                "type": "str"
            },
            {
                "label": "Today's export (kWh)",
                "value": "kWh_prod",
                "type": "str"
            },
            {
                "label": "Today's result (kWh)",
                "value": "kWh_result",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 590,
        "y": 2160,
        "wires": [
            [
                "f489206101a611c7",
                "1a8acaf415177718"
            ]
        ]
    },
    {
        "id": "e286dcc4acdecf2e",
        "type": "ui_numeric",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "DHW temperature setpoint - low",
        "label": "DHW temperature setpoint - low",
        "tooltip": "This setpoint is active below the {{msg.threshold}} limit",
        "group": "4cf2088c86f83c5a",
        "order": 7,
        "width": 9,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "75",
        "step": 1,
        "className": "",
        "x": 610,
        "y": 1980,
        "wires": [
            [
                "e0d11fbe4036b1a2"
            ]
        ]
    },
    {
        "id": "805f3e534a023eb4",
        "type": "ui_numeric",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "DHW temperature setpoint - high",
        "label": "DHW temperature setpoint - high",
        "tooltip": "This setpoint is active above the {{msg.threshold}} limit",
        "group": "4cf2088c86f83c5a",
        "order": 8,
        "width": 9,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "75",
        "step": 1,
        "className": "",
        "x": 620,
        "y": 2100,
        "wires": [
            [
                "2bfdf5f18f51a8c9"
            ]
        ]
    },
    {
        "id": "9a811202e803a249",
        "type": "ui_numeric",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "Solar Production Threshold",
        "label": "Threshold",
        "tooltip": "",
        "group": "4cf2088c86f83c5a",
        "order": 10,
        "width": 9,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} {{detection_method}}",
        "min": "-30",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 600,
        "y": 2320,
        "wires": [
            [
                "c5cc9b917833cab0",
                "be1d7db87d92baf8"
            ]
        ]
    },
    {
        "id": "c5cc9b917833cab0",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "threshold",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2040,
        "wires": [
            [
                "e286dcc4acdecf2e",
                "805f3e534a023eb4"
            ]
        ]
    },
    {
        "id": "d0af720694680d47",
        "type": "ui_switch",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "Fallback to SP low below threshold",
        "label": "Fallback to SP low below 0 W?",
        "tooltip": "Default = disable (no).",
        "group": "4cf2088c86f83c5a",
        "order": 11,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 620,
        "y": 2420,
        "wires": [
            [
                "17c336f2de837f34"
            ]
        ]
    },
    {
        "id": "7952974e6e550696",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9489af26d87fa6f7",
        "name": "Function schedule export",
        "func": "\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\nvar start_today_export  = flow.get(\"start_today_export\");                       //\nvar total_kwh_export    = flow.get('total_kwh_export');                         //\nvar solar_state         = global.get('solar_state',\"file\");                     //\nvar DHW_SP_LOW      = global.get('DHW_SP_LOW',\"file\");                          //\nvar DHW_Target_Temp = global.get('DHW_Target_Temp',\"file\");                     //\n\nlet msg1={};                // pin 1: kwh\nlet msg2={};                // pin 2: SP_DHW\nlet msg99={};               // pin 3: to log\n\nmsg99.topic = \"Function (Solar)\";\n\nif (total_kwh_export === undefined) {total_kwh_export = flow.get('total_kwh_export',\"file\");}\nif (total_kwh_export === undefined) {total_kwh_export = msg.payload;}\nif (total_kwh_export === undefined) {total_kwh_export = 0;}\n\n\nif (start_today_export === undefined)       {start_today_export = flow.get(\"start_today_export\",\"file\")}                               // if start today export is not available, set current \nif (start_today_export === undefined)\n    {\n        start_today_export = total_kwh_export;\n        flow.set(\"start_today_export\",total_kwh_export);\n        flow.set(\"start_today_export\",total_kwh_export,\"file\");\n        \n    }   \n\n\n\nif (msg.topic == \"time\" && solar_state == 0)                                                        // When @ midnight, reset start_today_export to 0.\n    {\n\n        global.set(\"SolarFunction_active\",0,\"file\");        \n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        \n        if (total_kwh_export !== undefined)\n            {\n                flow.set('start_today_export',total_kwh_export,\"file\");\n                flow.set('start_today_export',total_kwh_export);\n            }\n\n        return [msg,null,null];\n\n    }\n\n\n\n\nif (msg.topic == \"time\" && solar_state == 1)                                                        // When @ midnight, reset start_today_export to 0.\n    {\n        \n\n        global.set(\"SolarFunction_active\",0,\"file\");        \n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        \n        if (total_kwh_export !== undefined)\n            {\n                flow.set('start_today_export',total_kwh_export,\"file\");\n                flow.set('start_today_export',total_kwh_export);\n            }\n\n        if (DHW_Target_Temp != DHW_SP_LOW)\n            {\n                \n                msg2.payload = DHW_SP_LOW;\n                msg99.payload       = \"New day; Reset Solar function. Set DHW SP to \" + DHW_SP_LOW;\n                return [msg, msg2, msg99];\n            }\n        else \n            {\n                msg99.payload       = \"New day; Reset Solar function. DHW SP already SP_LOW\";\n                return [msg,null,msg99];\n            }\n    }\n\nelse if (msg.topic == \"start\")\n    {\n        msg1.payload = total_kwh_export - start_today_export;\n        msg1.payload = Number(msg1.payload).toFixed(2);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.topic = \"kWh\";\n        return [msg1,null,null];\n    }\nelse\n    {\n        var until_now       =   (msg.payload - start_today_export);            // calculate todays production in kWh\n        msg.payload = until_now;\n        msg.payload = Number(msg.payload).toFixed(2);\n        msg.payload = parseFloat(msg.payload);\n        msg.topic = \"kWh\";\n        return [msg,null,null];\n    }\n    ",
        "outputs": 3,
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "c8fc2524833656a6"
            ],
            [
                "900ca2a0e2694b1a"
            ],
            [
                "ea2d3df9c09fafcc"
            ]
        ],
        "outputLabels": [
            "kWh today",
            "DHW_SP_LOW",
            "to log"
        ]
    },
    {
        "id": "7697737e67ce7a54",
        "type": "delay",
        "z": "88941c7ebbe79320",
        "g": "9489af26d87fa6f7",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 540,
        "wires": [
            [
                "7952974e6e550696"
            ]
        ]
    },
    {
        "id": "760ec6ab0ba0b36e",
        "type": "ui_switch",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "Solar functions",
        "label": "Solar functions",
        "tooltip": "Turn on/off the Solar energy function.",
        "group": "4cf2088c86f83c5a",
        "order": 5,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 560,
        "y": 1880,
        "wires": [
            [
                "753d436cc66a8e81"
            ]
        ]
    },
    {
        "id": "d7fc61fd8f5d5bb3",
        "type": "ui_template",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "group": "4cf2088c86f83c5a",
        "name": "Line - Setup ",
        "order": 6,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Setup</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "36bd6f9ed6bbeccd",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Input - Current power production",
        "links": [
            "86b1d9d1af4f254c"
        ],
        "x": 215,
        "y": 2840,
        "wires": [
            [
                "146f12480a56cfe3",
                "ffeb80a9107548d9"
            ]
        ]
    },
    {
        "id": "86b1d9d1af4f254c",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "P1 Output - Power production (W)",
        "mode": "link",
        "links": [
            "4047483a87ea6ec9",
            "36bd6f9ed6bbeccd",
            "901a2b16e1783e82"
        ],
        "x": 1200,
        "y": 260,
        "wires": [],
        "l": true
    },
    {
        "id": "1384670926afe875",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "GRID PRODUCTION (EXPORT)",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "1d2684039872ac41",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "Expected input is a value in Watt or kiloWatt.",
        "info": "",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "64a5c09a392331c8",
        "type": "no-op",
        "z": "88941c7ebbe79320",
        "g": "9489af26d87fa6f7",
        "name": "IN",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "7697737e67ce7a54"
            ]
        ]
    },
    {
        "id": "c8fc2524833656a6",
        "type": "no-op",
        "z": "88941c7ebbe79320",
        "g": "9489af26d87fa6f7",
        "name": "OUT",
        "x": 850,
        "y": 500,
        "wires": [
            [
                "371945619889792a"
            ]
        ]
    },
    {
        "id": "79eb5c3a63164be0",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "1 >> CONNECT your P1 power production / export to this node",
        "links": [
            "c8359b76aff8f00e"
        ],
        "x": 750,
        "y": 100,
        "wires": [
            [
                "a7f9994b1da2a51c"
            ]
        ],
        "l": true
    },
    {
        "id": "8e0871b1a4bd6749",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "f63d1038aded6f3c",
        "name": "Correction function",
        "func": "var F_Solar_export_correction;\n\nif (msg.topic == \"correction\")\n    {\n        F_Solar_export_correction = msg.payload;\n        global.set('F_Solar_export_correction',F_Solar_export_correction,\"file\");\n        \n        return null;\n    }\nelse\n    {\n    F_Solar_export_correction = global.get('F_Solar_export_correction',\"file\");   \n        if (F_Solar_export_correction === undefined)\n            {\n                F_Solar_import_correction = -1;\n            }\n        let msg1={};\n        msg1.payload = msg.payload;\n        \n        msg1.payload = Number(msg1.payload).toFixed(4);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.payload = Math.abs(msg1.payload);\n        \n        msg1.payload = msg1.payload * -1 * F_Solar_export_correction; \n        msg1.payload = Number(msg1.payload).toFixed(0);\n        msg1.topic = \"W\";\n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 360,
        "wires": [
            [
                "86b1d9d1af4f254c",
                "fcf21a95f6e96992",
                "9ffd97efe2bd8210"
            ]
        ]
    },
    {
        "id": "d275e8468d159090",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "DASHBOARD",
        "info": "",
        "x": 550,
        "y": 1760,
        "wires": []
    },
    {
        "id": "fcf21a95f6e96992",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "GRID power production W to kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\nmsg6 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit = false;\n\n//  First run checks. If some variables are undefined, set current values and exit.\nif (PreviousTime === undefined) {context.set('PreviousTime',CurrentTime);       exit = true;}\nif (PreviousMessage === undefined) {context.set('PreviousMessage',msg.payload); exit = true;}\nif (PreviousTopic === undefined)  {context.set('PreviousTopic',msg.topic);    exit = true;}\n\nif (exit === true)              // IF 1\n    {   \n        return null;            // This output will automatically be skipped, next calculation will be ok.\n        \n    }\n\nelse                        // ELSE 2\n    {\n        var LastMessage = msg.payload;\n        var LastTopic= msg.topic;\n        \n        TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n        context.set('PreviousTime',CurrentTime);\n        context.set('PreviousMessage',msg.payload);\n        context.set('PreviousTopic',msg.topic);\n        msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n        msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n        \n        \n        msg1.payload = (TimeElapsed + \"  Seconds\");\n        temp = parseFloat(TimeElapsed.toFixed(0));\n        msg2.payload = temp;\n        msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n        msg5.payload = (PreviousMessage * ( temp / 3600000 ));                  //  Calculation to Wh portion\n        Number(msg5.payload).toFixed(4);\n        msg5.topic = 'GRID power production kWh';                               // msg5 = latest kWh part.\n    \n    \n    ///////////////////////////////////////////////////////////////////////////\n    // Calculation from kWh part > total kWh of today\n        var total_kwh_export = flow.get(\"total_kwh_export\");\n        if (total_kwh_export === undefined)        {flow.get(\"total_kwh_export\",\"file\");}\n        if (total_kwh_export === undefined)        {total_kwh_export = 0;}\n        \n        msg6.payload = msg5.payload + total_kwh_export;                                // msg6 = kWh total from the start of operation\n        msg6.topic = 'GRID power production kWh';\n        msg6.payload = Number(msg6.payload).toFixed(3);\n        msg6.payload = parseFloat(msg6.payload);\n        flow.set('total_kwh_export',msg6.payload);\n       \n    ////////////////////////////////////////////////////////////////////////////\n        return [msg6];\n    \n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 360,
        "wires": [
            [
                "64a5c09a392331c8",
                "2fc6286338725b94",
                "099705dcc9a607ec"
            ]
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "371945619889792a",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "P1 Output - Power production Today (kWh)",
        "mode": "link",
        "links": [
            "f2de7a857ebb62ca",
            "a27c417c537a6b65",
            "901a2b16e1783e82",
            "ac70051e197c0cad"
        ],
        "x": 1170,
        "y": 540,
        "wires": [],
        "l": true
    },
    {
        "id": "c0a59e1efc1b13f2",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "set variable DHW_SP_HIGH",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::DHW_SP_HIGH",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "198ae547f1548522",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "set variable solar_detection_method",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_detection_method",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "f919b3cebfe144d0",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_detection_method',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'DHWHeatDelta'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2160,
        "wires": [
            [
                "56d65da2cbe1b4cd"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "d48040a3dc661f69",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1880,
        "wires": [
            [
                "f919b3cebfe144d0",
                "90b4a10d71ce650b",
                "74aa172502a3471c",
                "587e05719658c8b9",
                "3750760cd8fb563f",
                "00807cb14c48fcca",
                "e93d248d9d09c707",
                "e808d692a856d5db"
            ]
        ]
    },
    {
        "id": "90b4a10d71ce650b",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Load on boot",
        "func": "var variable                    = global.get('DHW_SP_HIGH',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'DHW_SP_HIGH'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2100,
        "wires": [
            [
                "805f3e534a023eb4"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "2360cc7a346b3025",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "set variable solar_threshold",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_threshold",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "74aa172502a3471c",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_state',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'solar_state'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1880,
        "wires": [
            [
                "760ec6ab0ba0b36e",
                "74d21693a16c32dd"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "587e05719658c8b9",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_fallback',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'solar_fallback'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2420,
        "wires": [
            [
                "d0af720694680d47"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "5a49bfc801e0249e",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "set variable solar_fallback",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_fallback",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "f489206101a611c7",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2160,
        "wires": [
            [
                "198ae547f1548522"
            ]
        ]
    },
    {
        "id": "2bfdf5f18f51a8c9",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2100,
        "wires": [
            [
                "c0a59e1efc1b13f2"
            ]
        ]
    },
    {
        "id": "be1d7db87d92baf8",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2280,
        "wires": [
            [
                "2360cc7a346b3025"
            ]
        ]
    },
    {
        "id": "17c336f2de837f34",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2380,
        "wires": [
            [
                "5a49bfc801e0249e"
            ]
        ]
    },
    {
        "id": "3750760cd8fb563f",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Load on boot",
        "func": "var variable                    = global.get('DHW_SP_LOW',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'DHW_SP_LOW'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1980,
        "wires": [
            [
                "e286dcc4acdecf2e"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "b2fd6cbe99bd39b5",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "set variable solar_state",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_state",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "39d823f7b19d33ed",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 1840,
        "wires": [
            [
                "b2fd6cbe99bd39b5"
            ]
        ]
    },
    {
        "id": "e0d11fbe4036b1a2",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 1980,
        "wires": [
            [
                "b7e97a8b876df843"
            ]
        ]
    },
    {
        "id": "b7e97a8b876df843",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "set variable DHW_SP_LOW",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::DHW_SP_LOW",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "901a2b16e1783e82",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "g": "6bd94724e4c90346",
        "name": "",
        "links": [
            "86b1d9d1af4f254c",
            "371945619889792a",
            "6099069f41b972d9",
            "ef19602ecc6e061c",
            "7106cff42229d7b0"
        ],
        "x": 145,
        "y": 3080,
        "wires": [
            [
                "dfe0ac23d956b098"
            ]
        ]
    },
    {
        "id": "cbb9e4ad1aed2ee8",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "g": "6bd94724e4c90346",
        "name": "kWh",
        "info": "",
        "x": 170,
        "y": 3020,
        "wires": []
    },
    {
        "id": "0446ed3c16eadbe7",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "6bd94724e4c90346",
        "name": "",
        "mode": "link",
        "links": [
            "691099cf98991b53"
        ],
        "x": 955,
        "y": 3020,
        "wires": []
    },
    {
        "id": "dfe0ac23d956b098",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "6bd94724e4c90346",
        "name": "kWh trigger",
        "func": "var solar_state                     = global.get('solar_state',\"file\");\nif (solar_state === true)\n{\n    var solar_detection_method          = global.get('solar_detection_method',\"file\");\n    var solar_threshold                 = global.get('solar_threshold',\"file\");  \n    var DHW_Current_SP                  = global.get('DHW_Target_Temp',\"file\");\n    var solar_fallback                  = global.get('solar_fallback',\"file\");\n    var DHW_SP_LOW                      = global.get('DHW_SP_LOW',\"file\");\n    var DHW_SP_HIGH                     = global.get('DHW_SP_HIGH',\"file\");\n    var Operating_Mode_State            = global.get('Operating_Mode_State',\"file\");\n    var new_Operating_Mode_State;       // just create a variable, empty.\n    var old_Operating_Mode_State;       // just create a variable, empty.\n    var solar_turn_on                   = global.get('solar_turn_on',\"file\");\n    var Heatpump_State                  = global.get('Heatpump_State',\"file\");\n    var SolarFunction_active            = global.get(\"SolarFunction_active\",\"file\");\n\n    var F_rtc_on_off_active             = global.get('F_rtc_on_off_active',\"file\");\n    var F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n\n    let msg1={};                                                                // output to DHW setpoint\n    let msg2={};                                                                // output to Operation Mode\n    let msg3={};                                                                // output to turn on power to heatpump.\n    let msg99={};                                                               // output to log\n\n    // Check if all required states are available.\n    if (solar_detection_method === undefined || solar_threshold === undefined || solar_fallback === undefined || DHW_SP_HIGH === undefined || Operating_Mode_State === undefined || solar_turn_on === undefined || Heatpump_State === undefined)\n        {\n            msg99.topic = \"NR Solar Function\";\n            msg99.payload = \"ERROR: Not all settings in 'Function Solar' are programmed in GUI yet.\";\n            return [null,null,null,msg99];                                       // log output\n        }\n    else\n        {\n\n//              msg.topic = \"W\";            < > nul\n//              msg.topic = 'GRID power production kWh';\n//              msg.topic = 'GRID power consumption kWh';\n//              msg.topic = '(+) Import (-) Export';\n\n//Threshold\n//  kW\n//  kWh_prod\n//  kWh_result\n//\n        \n        if (solar_detection_method == \"kW\"          && msg.topic != 'W' )                               {return null;}\n        if (solar_detection_method == \"kWh_prod\"    && msg.topic != 'kWh' )                             {return null;}\n        if (solar_detection_method == \"kWh_result\"  && msg.topic != '(+) Import (-) Export' )           {return null;}\n        \n        if (solar_detection_method == \"kW\")                                                             {msg.payload = msg.payload / 1000;}           // convert W to kW.\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n        //             (solar_threshold > (msg.payload) >>> Note that msg.payload is negative number if energy production is high\n        if (solar_threshold > (msg.payload) && DHW_Current_SP != DHW_SP_HIGH && SolarFunction_active != 2)      \n            {\n                // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n                \n                if (Operating_Mode_State == 0){new_Operating_Mode_State = 4; old_Operating_Mode_State = Operating_Mode_State} // add DHW modus\n                if (Operating_Mode_State == 1){new_Operating_Mode_State = 5; old_Operating_Mode_State = Operating_Mode_State} // add DHW modus\n                if (Operating_Mode_State == 2){new_Operating_Mode_State = 6; old_Operating_Mode_State = Operating_Mode_State} // add DHW modus\n                if (Operating_Mode_State == 7){new_Operating_Mode_State = 8; old_Operating_Mode_State = Operating_Mode_State} // add DHW modus\n                \n                if (Operating_Mode_State == 3){new_Operating_Mode_State = 3;} // prevent undefined new_Operating_Mode_State\n                if (Operating_Mode_State == 4){new_Operating_Mode_State = 4;} // prevent undefined new_Operating_Mode_State\n                if (Operating_Mode_State == 5){new_Operating_Mode_State = 5;} // prevent undefined new_Operating_Mode_State\n                if (Operating_Mode_State == 6){new_Operating_Mode_State = 6;} // prevent undefined new_Operating_Mode_State\n                if (Operating_Mode_State == 8){new_Operating_Mode_State = 8;} // prevent undefined new_Operating_Mode_State\n                \n                var tag;    // declare variable for tag in log line.\n                if (solar_detection_method == \"kW\")         {tag = 'kW';}         // convert W to kW.\n                if (solar_detection_method == \"kWh_prod\")   {tag = \"Today's export (kWh)\";}         \n                if (solar_detection_method == \"kWh_result\") {tag = \"kWh todays result\";}  \n                \n                if (F_stored_next_operating_mode === undefined && old_Operating_Mode_State !== undefined)\n                    {\n                        global.set('F_stored_next_operating_mode',old_Operating_Mode_State,\"file\");\n                    }\n                \n\n                msg1.payload = DHW_SP_HIGH;\n                msg2.payload = new_Operating_Mode_State;\n                \n                global.set(\"SolarFunction_active\",1,\"file\");\n                \n                if (Heatpump_State == 0 && solar_turn_on === true)\n                    {   \n                        msg99.payload = \"triggered thhreshold (\" + tag + \"). DHW SP to \" + DHW_SP_HIGH + \", change operationmode and turn on Heatpump\";\n                        msg99.topic = \"Function Solar\";\n                        msg3.payload = 1;                                           // send 1 to turn on the heatpump\n\n                        return [msg1, msg2, msg3, msg99];\n                    }\n                else    \n                    {   \n                        msg99.payload = \"triggered thhreshold (\" + tag + \"). DHW SP to \" + DHW_SP_HIGH + \" and change operation mode\";\n                        msg99.topic = \"Function Solar\";\n\n                        return [msg1, msg2, null, msg99];\n                    }    \n            }\n            else if (msg.payload > 0 && DHW_Current_SP == DHW_SP_HIGH && solar_fallback === true && SolarFunction_active == 1)\n            {\n                msg1.payload = DHW_SP_LOW;\n                global.set(\"SolarFunction_active\",0,\"file\");\n                \n                msg99.payload = \"triggered threshold (\" + tag + \"). Above 0kWh threshold. DHW SP to \" + DHW_SP_LOW;\n                msg99.topic = \"Function Solar\";\n                return [msg1,null,null,msg99];\n            }\n            else {return [null,null,null,null];}\n            \n            //DHW_Target_Temp\n            // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n        \n        }\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 3080,
        "wires": [
            [
                "cda71137e216af25",
                "adb41056f4f14ca1"
            ],
            [
                "0a9cac54262558cf",
                "9b48b2b97af27504"
            ],
            [
                "1405869d83334a42",
                "707e037ffbccc7f8"
            ],
            [
                "d9c715475aa39aca"
            ]
        ],
        "outputLabels": [
            "DHW_SP_HIGH",
            "new_Operating_Mode_State",
            "solar_turn_on",
            "log"
        ]
    },
    {
        "id": "00807cb14c48fcca",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_threshold',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'solar_threshold'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2320,
        "wires": [
            [
                "9a811202e803a249"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "900ca2a0e2694b1a",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "9489af26d87fa6f7",
        "name": "DHW_SP_LOW",
        "mode": "link",
        "links": [
            "691099cf98991b53"
        ],
        "x": 820,
        "y": 540,
        "wires": [],
        "l": true
    },
    {
        "id": "89f0b8222cc45cab",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "6bd94724e4c90346",
        "name": "",
        "mode": "link",
        "links": [
            "587abf5315fb17fc"
        ],
        "x": 955,
        "y": 3080,
        "wires": []
    },
    {
        "id": "37d25e4afb636efd",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "9489af26d87fa6f7",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "x": 210,
        "y": 620,
        "wires": [
            [
                "7952974e6e550696"
            ]
        ]
    },
    {
        "id": "ad26cc34783ad684",
        "type": "ui_switch",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "Override power state",
        "label": "Override power state",
        "tooltip": "When the heatpump is powerd off, do you want this function to turn on the heatpump and execute",
        "group": "4cf2088c86f83c5a",
        "order": 12,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 580,
        "y": 2480,
        "wires": [
            [
                "52743d4340d5f598"
            ]
        ]
    },
    {
        "id": "e93d248d9d09c707",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_turn_on',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'solar_turn_on'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2480,
        "wires": [
            [
                "ad26cc34783ad684"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "52743d4340d5f598",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2440,
        "wires": [
            [
                "e7bbc96091a99dea"
            ]
        ]
    },
    {
        "id": "e7bbc96091a99dea",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "set variable solar_turn_on",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_turn_on",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "1405869d83334a42",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "6bd94724e4c90346",
        "name": "",
        "mode": "link",
        "links": [
            "a772d2026681f718"
        ],
        "x": 695,
        "y": 3140,
        "wires": []
    },
    {
        "id": "f34dcc49159f7122",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "9489af26d87fa6f7",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "start",
        "x": 210,
        "y": 580,
        "wires": [
            [
                "7952974e6e550696"
            ]
        ]
    },
    {
        "id": "fd3df89bd076cc96",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "group": "4cf2088c86f83c5a",
        "order": 16,
        "width": 9,
        "height": 1,
        "name": "DHW (SP)",
        "label": "DHW temperature - current SetPoint",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 550,
        "y": 2680,
        "wires": []
    },
    {
        "id": "94ce26fbb380ca23",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "links": [
            "1faa7391f40dac58"
        ],
        "x": 385,
        "y": 2640,
        "wires": [
            [
                "f39ccdd7b24fdcc7"
            ]
        ]
    },
    {
        "id": "1a4c312d89f7dc7c",
        "type": "ui_chart",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "",
        "group": "cee92df34733c036",
        "order": 2,
        "width": 10,
        "height": 6,
        "label": "Power History (W)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Waiting for data ...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "2500",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#de425b",
            "#f59b56",
            "#f59b56",
            "#d62728",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "41a08a3ba37f3daa",
        "type": "ui_template",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "group": "4cf2088c86f83c5a",
        "name": "Line - Current values",
        "order": 14,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\nResults",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "d6a99e7446fec859",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "links": [
            "3daf0b2f13b7c0e2",
            "6099069f41b972d9"
        ],
        "x": 215,
        "y": 2760,
        "wires": [
            [
                "146f12480a56cfe3",
                "ffeb80a9107548d9"
            ]
        ]
    },
    {
        "id": "146f12480a56cfe3",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nvar last = context.get('last') || 'under';\nvar threshold = 0;\nvar undermessage = {topic:'Production',payload:null};\nvar overmessage = {topic:'Consumption',payload:null};\nvar unsentmessage = null;\n\nif(msg.payload > threshold)\n    {\n        if(last == 'under')\n            {\n                undermessage.payload = threshold;\n                overmessage.payload = threshold;\n                unsentmessage = msg;\n            }\n        else\n            {\n                overmessage.payload = msg.payload;\n            }\n        last = 'over';\n    }\n\nelse\n    {\n        if(last == 'over')\n            {\n                overmessage.payload = threshold;\n                undermessage.payload = threshold;\n                unsentmessage = msg;\n            }\n        else\n            {\n                undermessage.payload = msg.payload;\n            }\n        last = 'under';\n    }\n\ncontext.set('last',last);\n\nreturn [[overmessage,undermessage],unsentmessage]\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2760,
        "wires": [
            [
                "1a4c312d89f7dc7c"
            ]
        ]
    },
    {
        "id": "6cc0fb9de7eaa2b9",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 530,
        "y": 2800,
        "wires": [
            [
                "1a4c312d89f7dc7c"
            ]
        ]
    },
    {
        "id": "c9ad604be7e118c8",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "58653979bc3c26d0",
        "name": "Correction function",
        "func": "var F_Solar_import_correction;\n\nif (msg.topic == \"correction\")\n    {\n        F_Solar_import_correction = msg.payload;\n        global.set('F_Solar_import_correction',F_Solar_import_correction,\"file\");\n        \n        return null;\n    }\nelse\n    {\n    F_Solar_import_correction = global.get('F_Solar_import_correction',\"file\");   \n        if (F_Solar_import_correction === undefined)\n            {\n                F_Solar_import_correction = 1;\n            }\n        let msg1={};\n        msg1.payload = msg.payload;\n        msg1.payload = Number(msg1.payload).toFixed(4);            \n        msg1.payload = parseFloat(msg1.payload);\n\n        msg1.payload = Math.abs(msg1.payload);\n\n        msg1.payload = msg1.payload * F_Solar_import_correction; \n        msg1.payload = Number(msg1.payload).toFixed(0);\n\n        msg1.topic = \"W\";\n        return msg1;\n    }\n    \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1080,
        "wires": [
            [
                "9697f1849bdfde2f",
                "6099069f41b972d9",
                "30025e7d32995ebb"
            ]
        ]
    },
    {
        "id": "6099069f41b972d9",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "P1 Output - Power consumption (W)",
        "mode": "link",
        "links": [
            "d6a99e7446fec859",
            "4047483a87ea6ec9",
            "901a2b16e1783e82"
        ],
        "x": 1230,
        "y": 980,
        "wires": [],
        "l": true
    },
    {
        "id": "9697f1849bdfde2f",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "GRID power consumption W to kWh",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nmsg4 = {};\nmsg5 = {};\nmsg6 = {};\n\nvar CurrentTime = new Date().getTime();\nvar PreviousTime = context.get(\"PreviousTime\");\nvar PreviousMessage = context.get(\"PreviousMessage\");\nvar PreviousTopic = context.get(\"PreviousTopic\");\nvar exit = false;\n\n//  First run checks. If some variables are undefined, set current values and exit.\nif (PreviousTime === undefined) {context.set('PreviousTime',CurrentTime);       exit = true;}\nif (PreviousMessage === undefined) {context.set('PreviousMessage',msg.payload); exit = true;}\nif (PreviousTopic === undefined)  {context.set('PreviousTopic',msg.topic);    exit = true;}\n\nif (exit === true)        \n    {    return null;            // This output will automatically be skipped, next calculation will be ok.\n        \n    }\n\nelse\n    {\n        var LastMessage = msg.payload;\n        var LastTopic= msg.topic;\n        \n        TimeElapsed = ((CurrentTime - PreviousTime)/1000);\n        context.set('PreviousTime',CurrentTime);\n        context.set('PreviousMessage',msg.payload);\n        context.set('PreviousTopic',msg.topic);\n        msg3.last = {\"lastTime\":CurrentTime,\"LastMessage\":LastMessage,\"LastTopic\":LastTopic};\n        msg3.Previous = {\"PreviousTime\":PreviousTime,\"PreviousMessage\":PreviousMessage,\"PreviousTopic\":PreviousTopic};\n        \n        \n        msg1.payload = (TimeElapsed + \"  Seconds\");\n        temp = parseFloat(TimeElapsed.toFixed(0));\n        msg2.payload = temp;\n        msg3.payload = {\"Count\":temp,\"Units\":\"Seconds\"}; \n        msg5.payload = (PreviousMessage * ( temp / 3600000 ));                  //  Calculation to Wh portion\n        Number(msg5.payload).toFixed(4);\n        msg5.topic = 'GRID power consumption kWh';                               // msg5 = latest kWh part.\n    \n    \n    ///////////////////////////////////////////////////////////////////////////\n    // Calculation from kWh part > total kWh of today\n        var total_kwh_import = flow.get(\"total_kwh_import\");\n        if (total_kwh_import === undefined)         {flow.get(\"total_kwh_import\",\"file\");}\n        if (total_kwh_import === undefined)         {total_kwh_import = 0;}\n        \n        msg6.payload = msg5.payload + total_kwh_import;                                // msg6 = kWh total from the start of operation\n        msg6.topic = 'GRID power consumption kWh';\n        msg6.payload = Number(msg6.payload).toFixed(3);\n        msg6.payload = parseFloat(msg6.payload);    \n        flow.set('total_kwh_import',msg6.payload);\n        \n    ////////////////////////////////////////////////////////////////////////////\n        return msg6;\n    \n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1080,
        "wires": [
            [
                "b57b5922f7cb5980",
                "3804d1594f457822",
                "c96b1fcec8143842"
            ]
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "b57b5922f7cb5980",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "P1 Output - Power consumption (kWh)",
        "mode": "link",
        "links": [],
        "x": 1230,
        "y": 1080,
        "wires": [],
        "l": true
    },
    {
        "id": "5233f742652fbe5d",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "2 >> CONNECT your P1 power consumption / import to this node",
        "links": [
            "6c183b3f2bf4e8a8"
        ],
        "x": 730,
        "y": 780,
        "wires": [
            [
                "c2831cc87255c1a5"
            ]
        ],
        "l": true
    },
    {
        "id": "a15760c8fb254347",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "Expected input is a value in Watt or kiloWatt.",
        "info": "",
        "x": 310,
        "y": 800,
        "wires": []
    },
    {
        "id": "f1e9bc9122d59bc2",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "GRID CONSUMPTION IMPORT (OPTIONAL)",
        "info": "",
        "x": 310,
        "y": 760,
        "wires": []
    },
    {
        "id": "5ad93773de523bfd",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "name": "Instruction",
        "info": "",
        "x": 1520,
        "y": 80,
        "wires": []
    },
    {
        "id": "f39ccdd7b24fdcc7",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "group": "4cf2088c86f83c5a",
        "order": 15,
        "width": 9,
        "height": 1,
        "name": "DHW (PV)",
        "label": "DHW temperature - current Process Value",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 550,
        "y": 2640,
        "wires": []
    },
    {
        "id": "c041fd31297cd74b",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "links": [
            "eb203845fcbe317d"
        ],
        "x": 385,
        "y": 2680,
        "wires": [
            [
                "fd3df89bd076cc96"
            ]
        ]
    },
    {
        "id": "74d21693a16c32dd",
        "type": "ui_switch",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Solar functions",
        "label": "",
        "tooltip": "Turn on/off the Solar energy function. Configure in \"Function (Solar)\" menu. ",
        "group": "c7d23e4a20ddaedf",
        "order": 17,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 560,
        "y": 1800,
        "wires": [
            [
                "753d436cc66a8e81"
            ]
        ]
    },
    {
        "id": "c534d4a4825d88e1",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "group": "c7d23e4a20ddaedf",
        "order": 18,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Solar",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 1800,
        "wires": []
    },
    {
        "id": "753d436cc66a8e81",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 750,
        "y": 1840,
        "wires": [
            [
                "74d21693a16c32dd",
                "760ec6ab0ba0b36e",
                "39d823f7b19d33ed",
                "31b1cb8310e1dffc"
            ]
        ]
    },
    {
        "id": "1dea44fb135025ef",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "detection_method",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2260,
        "wires": [
            [
                "9a811202e803a249"
            ]
        ]
    },
    {
        "id": "70e13ea20b46a76d",
        "type": "function",
        "z": "88941c7ebbe79320",
        "name": "Function: End solar run",
        "func": "var solar_state                     = global.get('solar_state',\"file\")||false;\nvar DHW_Temp                        = global.get('DHW_Temp');\nvar DHW_SP_HIGH                     = global.get('DHW_SP_HIGH',\"file\");\nvar SolarFunction_active            = global.get('SolarFunction_active',\"file\");\n\n//var ThreeWay_Valve_State          = global.get('ThreeWay_Valve_State');       // threewayvalvue 1 = DHW, 0 = HEAT\nvar new_Operating_Mode_State;\n\nvar F_rtc_on_off_active             = global.get('F_rtc_on_off_active',\"file\");\nvar F_stored_next_operating_mode    = global.get('F_stored_next_operating_mode',\"file\");\n\n//if (solar_state === true && DHW_Temp >= (DHW_SP_HIGH -1) && SolarFunction_active >= 1 && ThreeWay_Valve_State == 0)\nif (solar_state === true && DHW_Temp >= (DHW_SP_HIGH) && SolarFunction_active == 1)\n    {\n            let msg1={};        // pin 1: new_Operating_Mode_State\n\n            let msg99={};        // pin 4: to log\n                msg99.topic      = \"Function Solar\";\n\n\n        // Operating mode (0=Heat only, 1=Cool only, 2=Auto(Heat), 3=DHW only, 4=Heat+DHW, 5=Cool+DHW, 6=Auto(Heat)+DHW, 7=Auto(Cool), 8=Auto(Cool)+DHW)\n    \n            global.set(\"SolarFunction_active\",2,\"file\");\n            \n            if (F_rtc_on_off_active == 0 && F_stored_next_operating_mode !== undefined)\n                {\n                    new_Operating_Mode_State = F_stored_next_operating_mode;\n                    global.set('F_stored_next_operating_mode',undefined,\"file\");\n                    msg1.payload    = new_Operating_Mode_State;\n                    msg1.topic      = \"new_Operating_Mode_State\";                 \n                    msg99.payload   = \"DHW temperature reached DHW SP High. Restored previous OperatingMode: \" + new_Operating_Mode_State;\n                    return [msg1,msg99];\n                }\n            else\n                {\n                    msg99.payload   = \"DHW temperature reached DHW SP High. Other function still active. OperatingMode not restored\";\n                    return [null,msg99];                    \n                }\n    }\n\nelse\n    {\n        return [null,null];\n        \n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3340,
        "wires": [
            [
                "89f0b8222cc45cab"
            ],
            [
                "d9c715475aa39aca"
            ]
        ],
        "outputLabels": [
            "new Operating Mode",
            "To Log"
        ]
    },
    {
        "id": "9172e7a566db4f13",
        "type": "function",
        "z": "88941c7ebbe79320",
        "name": "global.set(\"SolarFunction_active\",msg.payload,\"file\");",
        "func": "global.set(\"SolarFunction_active\",msg.payload,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3340,
        "wires": [
            []
        ],
        "outputLabels": [
            "log"
        ]
    },
    {
        "id": "4da054a31deb5550",
        "type": "delay",
        "z": "88941c7ebbe79320",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 3340,
        "wires": [
            [
                "9172e7a566db4f13"
            ]
        ]
    },
    {
        "id": "f598a3e227172969",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "name": "",
        "props": [
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 3340,
        "wires": [
            [
                "70e13ea20b46a76d",
                "725188378ffe673b"
            ]
        ]
    },
    {
        "id": "ec8bf4f7bbf77845",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "name": "Solar functie deactivate",
        "info": "",
        "x": 200,
        "y": 3280,
        "wires": []
    },
    {
        "id": "31b1cb8310e1dffc",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NR Function - Solar",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1880,
        "wires": [
            [
                "0be3e7aabef0e51c"
            ]
        ]
    },
    {
        "id": "0be3e7aabef0e51c",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 1165,
        "y": 1880,
        "wires": []
    },
    {
        "id": "d9c715475aa39aca",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "name": "to log",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 430,
        "y": 3240,
        "wires": [],
        "l": true
    },
    {
        "id": "b01bcc4456fd375b",
        "type": "function",
        "z": "88941c7ebbe79320",
        "name": "Function - Production - Consumption (kWh)",
        "func": "let msg1={};                    // todays_result\nlet msg2={};                    // export_result\nlet msg3={};                    // import_result\nlet msg4={};                    // todays_result\n\nvar start_today_export = flow.get(\"start_today_export\");\nif (start_today_export === undefined) {start_today_export = flow.get(\"start_today_export\",\"file\")}\nif (start_today_export === undefined) {start_today_export = 0}\n\nvar total_kwh_export = flow.get(\"total_kwh_export\");\nif (total_kwh_export === undefined) {start_today_export = flow.get(\"total_kwh_export\",\"file\")}\nif (total_kwh_export === undefined) {start_today_export = 0}\n\nvar export_result = total_kwh_export - start_today_export;                      // negative value = export\n\nvar start_today_import = flow.get(\"start_today_import\");                        //\nif (start_today_import === undefined) {start_today_import = flow.get(\"start_today_import\",\"file\")}\nif (start_today_import === undefined) {start_today_import = 0}\n\nvar total_kwh_import = flow.get(\"total_kwh_import\");\nif (total_kwh_import === undefined) {total_kwh_import = flow.get(\"total_kwh_import\",\"file\")}\nif (total_kwh_import === undefined) {total_kwh_import = 0}\n\nvar import_result =  total_kwh_import - start_today_import;                      // posotive value = import\n//if (import_result === undefined) {import_result = 0;}\n\nvar todays_result = import_result + export_result;                              // result\n\n\nif (todays_result <= 0 || todays_result > 0)\n    {\n        msg1.topic      = \"(+) Import (-) Export\";\n        msg1.payload    = todays_result;\n        msg1.payload    = Number(msg1.payload).toFixed(2);\n        msg1.payload    = parseFloat(msg1.payload);\n        \n        msg2.payload    = export_result;\n        msg2.payload    = Number(msg2.payload).toFixed(2);\n        msg2.payload    = parseFloat(msg2.payload);\n        msg2.topic      = \"Export\";\n        \n        msg3.payload    = import_result;\n        msg3.payload    = Number(msg3.payload).toFixed(2);\n        msg3.payload    = parseFloat(msg3.payload);\n        msg3.topic      = \"Import\";\n        \n        msg4.payload    = todays_result;\n        msg4.payload    = Number(msg4.payload).toFixed(2);\n        msg4.payload    = parseFloat(msg4.payload);\n        msg4.topic      = \"Result\";\n        \n        \n        return [msg1,[msg2,msg3,msg4]];\n    }\n    \nelse {return null;}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1480,
        "wires": [
            [
                "c2e8d1062178fc16",
                "7106cff42229d7b0"
            ],
            [
                "0df122ca8bb5e4d6"
            ]
        ],
        "outputLabels": [
            "todays_result",
            "export_result"
        ]
    },
    {
        "id": "ddb0e44d96998e45",
        "type": "ui_chart",
        "z": "88941c7ebbe79320",
        "name": "",
        "group": "cee92df34733c036",
        "order": 8,
        "width": 10,
        "height": 7,
        "label": "Today's result (kWh)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Waiting for data ...  (will start at midnight) ",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#2ca02c",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 980,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "c2e8d1062178fc16",
        "type": "delay",
        "z": "88941c7ebbe79320",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 1460,
        "wires": [
            [
                "ddb0e44d96998e45"
            ]
        ]
    },
    {
        "id": "60d847fe462f71d3",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 940,
        "y": 1500,
        "wires": [
            [
                "ddb0e44d96998e45"
            ]
        ]
    },
    {
        "id": "ac70051e197c0cad",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "name": "",
        "links": [
            "371945619889792a",
            "ef19602ecc6e061c"
        ],
        "x": 105,
        "y": 1480,
        "wires": [
            [
                "b01bcc4456fd375b"
            ]
        ]
    },
    {
        "id": "2fc6286338725b94",
        "type": "delay",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1020,
        "y": 400,
        "wires": [
            [
                "51b71d75adbe47cc"
            ]
        ]
    },
    {
        "id": "51b71d75adbe47cc",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "set total_kwh_export file",
        "func": "msg.payload = Number(msg.payload).toFixed(3);\nmsg.payload = parseFloat(msg.payload);\n\nflow.set('total_kwh_export',msg.payload,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 400,
        "wires": [
            []
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "3804d1594f457822",
        "type": "delay",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 1120,
        "wires": [
            [
                "3551ae1501b02a48"
            ]
        ]
    },
    {
        "id": "3551ae1501b02a48",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "set total_kwh_import file",
        "func": "msg.payload = Number(msg.payload).toFixed(3);\nmsg.payload = parseFloat(msg.payload);\nflow.set('total_kwh_import',msg.payload,\"file\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1120,
        "wires": [
            []
        ],
        "outputLabels": [
            "Production kWh of today"
        ],
        "icon": "node-red/timer.png"
    },
    {
        "id": "ae3cbaa866099ef1",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "f227529cf807dfb0",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "x": 250,
        "y": 1320,
        "wires": [
            [
                "2d87ee27dea371b2"
            ]
        ]
    },
    {
        "id": "cbf0c363a1f8e325",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "f227529cf807dfb0",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "start",
        "x": 250,
        "y": 1280,
        "wires": [
            [
                "2d87ee27dea371b2"
            ]
        ]
    },
    {
        "id": "2d87ee27dea371b2",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "f227529cf807dfb0",
        "name": "Function schedule import",
        "func": "\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\nvar start_today_import  = flow.get(\"start_today_import\");                       //\nvar total_kwh_import    = flow.get('total_kwh_import');                         //\nvar solar_state         = global.get('solar_state',\"file\");                     //\n\nif (total_kwh_import === undefined) {total_kwh_import = flow.get('total_kwh_import',\"file\");}\nif (total_kwh_import === undefined) {total_kwh_import = msg.payload;}\nif (total_kwh_import === undefined) {total_kwh_import = 0;}\n\n\nif (start_today_import === undefined)       {start_today_import = flow.get(\"start_today_import\",\"file\")}                               // if start today import is not available, set current \nif (start_today_import === undefined)\n    {\n        start_today_import = total_kwh_import;\n        flow.set(\"start_today_import\",total_kwh_import);\n        flow.set(\"start_today_import\",total_kwh_import,\"file\");\n        \n    }   \n\n\nif (msg.topic == \"time\" && solar_state == 0)                                                        // When @ midnight, reset start_today_import to 0.\n    {\n\n        global.set(\"SolarFunction_active\",0,\"file\");        \n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        \n        if (total_kwh_import !== undefined)\n            {\n                flow.set('start_today_import',total_kwh_import,\"file\");\n                flow.set('start_today_import',total_kwh_import);\n            }\n\n                return [msg,null,null];\n\n    }\n\n\n\n\n\nif (msg.topic == \"time\" && solar_state == 1)                                                        // When @ midnight, reset start_today_import to 0.\n    {\n        msg.topic           = \"kWh\";\n        msg.payload         = 0;\n        \n        if (total_kwh_import !== undefined)\n            {\n                flow.set('start_today_import',total_kwh_import,\"file\");\n                flow.set('start_today_import',total_kwh_import);\n            }\n\n        else \n            {\n                return [msg];\n            }\n    }\n//if (msg.topic == \"start\" && solar_state == true)\nif (msg.topic == \"start\")\n    {\n        let msg1={};\n        \n        msg1.payload = total_kwh_import - start_today_import;\n        msg1.payload = Number(msg1.payload).toFixed(2);\n        msg1.payload = parseFloat(msg1.payload);\n        msg1.topic = \"kWh\";\n        return [msg1];\n    }\nelse\n    {\n        var until_now       =   (msg.payload - start_today_import);            // calculate todays production in kWh\n        msg.payload = until_now;\n        msg.payload = Number(msg.payload).toFixed(2);\n        msg.payload = parseFloat(msg.payload);\n        msg.topic = \"kWh\";\n        return [msg];\n    }\n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "\n",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1240,
        "wires": [
            [
                "cf4394032666da63"
            ]
        ],
        "outputLabels": [
            "kWh today"
        ]
    },
    {
        "id": "fd3fef5ba1f4e82e",
        "type": "delay",
        "z": "88941c7ebbe79320",
        "g": "f227529cf807dfb0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 1240,
        "wires": [
            [
                "2d87ee27dea371b2"
            ]
        ]
    },
    {
        "id": "cf4394032666da63",
        "type": "no-op",
        "z": "88941c7ebbe79320",
        "g": "f227529cf807dfb0",
        "name": "OUT",
        "x": 810,
        "y": 1240,
        "wires": [
            [
                "ef19602ecc6e061c"
            ]
        ]
    },
    {
        "id": "c96b1fcec8143842",
        "type": "no-op",
        "z": "88941c7ebbe79320",
        "g": "f227529cf807dfb0",
        "name": "IN",
        "x": 250,
        "y": 1240,
        "wires": [
            [
                "fd3fef5ba1f4e82e"
            ]
        ]
    },
    {
        "id": "394e4b11ddb13355",
        "type": "ui_template",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "group": "cee92df34733c036",
        "name": "Line - Charts",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "ef19602ecc6e061c",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "P1 Output - Power consumption Today (kWh)",
        "mode": "link",
        "links": [
            "ac70051e197c0cad",
            "901a2b16e1783e82"
        ],
        "x": 1210,
        "y": 1240,
        "wires": [],
        "l": true
    },
    {
        "id": "099705dcc9a607ec",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "P1 Output - Power production (kWh)",
        "mode": "link",
        "links": [],
        "x": 1190,
        "y": 360,
        "wires": [],
        "l": true
    },
    {
        "id": "ea2d3df9c09fafcc",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "9489af26d87fa6f7",
        "name": "",
        "mode": "link",
        "links": [
            "23ceb02f81db1b2c"
        ],
        "x": 885,
        "y": 580,
        "wires": [],
        "inputLabels": [
            "to log"
        ]
    },
    {
        "id": "8bfff7a94169b8b1",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "name": "1 - connect your p1 power meter (production) to the grey node",
        "info": "",
        "x": 1660,
        "y": 140,
        "wires": []
    },
    {
        "id": "e808d692a856d5db",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Load on boot",
        "func": "var variable                    = global.get('solar_block_scheduler',\"file\");\nlet msg1={};\n\nif(variable === undefined)      {return null;}\n                            \nelse                        \n    {\n        msg1.payload = variable;\n//        msg1.topic = 'solar_block_scheduler'; \n        return msg1;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2540,
        "wires": [
            [
                "8476282a71c24e49"
            ]
        ],
        "outputLabels": [
            "Heatpump_State"
        ]
    },
    {
        "id": "8476282a71c24e49",
        "type": "ui_switch",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "Block scheduled tasks",
        "label": "Block scheduled tasks",
        "tooltip": "When the solar function is active and a scheduled task tries to change current operating mode, this toggle can block it.",
        "group": "4cf2088c86f83c5a",
        "order": 13,
        "width": 9,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 580,
        "y": 2540,
        "wires": [
            [
                "af78b119a52cc181"
            ]
        ]
    },
    {
        "id": "af78b119a52cc181",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 990,
        "y": 2460,
        "wires": [
            [
                "14dcc034d5225136"
            ]
        ]
    },
    {
        "id": "14dcc034d5225136",
        "type": "change",
        "z": "88941c7ebbe79320",
        "name": "set variable solar_block_scheduler",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::solar_block_scheduler",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "c0cc87dbd1879df7",
        "type": "ui_gauge",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "Live Gauge",
        "group": "cee92df34733c036",
        "order": 1,
        "width": 4,
        "height": 5,
        "gtype": "gage",
        "title": "Power Live",
        "label": "{{msg.topic}}",
        "format": "{{value}} W",
        "min": "-5000",
        "max": "4000",
        "colors": [
            "#f59b56",
            "#de425b",
            "#de425b"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 550,
        "y": 2840,
        "wires": []
    },
    {
        "id": "0df122ca8bb5e4d6",
        "type": "ui_chart",
        "z": "88941c7ebbe79320",
        "name": "Bar Chart import_export_result",
        "group": "cee92df34733c036",
        "order": 7,
        "width": 4,
        "height": 7,
        "label": "Today (kWh)",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for data ...  (will start at midnight) ",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f59b56",
            "#de425b",
            "#1f77b4",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "569bea02e5cbc914",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 940,
        "y": 1620,
        "wires": [
            [
                "0df122ca8bb5e4d6"
            ]
        ]
    },
    {
        "id": "3e06465b61470a51",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "group": "4cf2088c86f83c5a",
        "order": 17,
        "width": 9,
        "height": 1,
        "name": "Current status",
        "label": "Current status",
        "format": "<font color= {{msg.color}} > {{msg.payload}}  </font>",
        "layout": "row-spread",
        "className": "",
        "x": 1040,
        "y": 3520,
        "wires": []
    },
    {
        "id": "a896048484a6019e",
        "type": "function",
        "z": "88941c7ebbe79320",
        "name": "",
        "func": "var SolarFunction_active            = global.get('SolarFunction_active',\"file\");\nvar solar_function_status1           = flow.get('solar_function_status1',\"file\");\nvar solar_function_status2           = flow.get('solar_function_status2',\"file\");\nlet msg1={};\n\n\nif (msg.payload == \"new_day\")\n    {\n        flow.set('solar_function_status1',undefined,\"file\");\n        flow.set('solar_function_status2',undefined,\"file\");\n        return null;\n    }\nelse\n{\n    \n    if (SolarFunction_active == 0) \n        {\n            msg1.payload = \"Idle\";\n            msg1.topic = 'Solar function status';\n            msg1.color = \"\";\n            return [msg1];\n        }\n    \n    if (SolarFunction_active == 1 && solar_function_status1 === undefined)  \n        {\n            msg1.payload = \"ACTIVE (\" + msg.payload + \")\";\n            msg1.topic = 'Solar function status';\n            msg1.color = \"gold\";\n            \n            flow.set('solar_function_status1',msg1.payload,\"file\");\n            return [msg1];\n        }\n    \n    \n    if (SolarFunction_active == 2 && solar_function_status2 === undefined) \n        {\n            msg1.payload = \"Completed (\" + msg.payload + \")\";\n            msg1.topic = 'Solar function status';\n            msg1.color = \"green\";\n            flow.set('solar_function_status2',msg1.payload,\"file\");\n            \n            return [msg1];\n        }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 3520,
        "wires": [
            [
                "80dadbf95e0e85dd"
            ]
        ]
    },
    {
        "id": "80dadbf95e0e85dd",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 3520,
        "wires": [
            [
                "3e06465b61470a51"
            ]
        ]
    },
    {
        "id": "725188378ffe673b",
        "type": "moment",
        "z": "88941c7ebbe79320",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 400,
        "y": 3520,
        "wires": [
            [
                "a896048484a6019e"
            ]
        ]
    },
    {
        "id": "1fd210122376b755",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "new_day",
        "payloadType": "str",
        "x": 430,
        "y": 3560,
        "wires": [
            [
                "a896048484a6019e"
            ]
        ]
    },
    {
        "id": "d3b820a7a9c93987",
        "type": "smooth",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "property": "payload",
        "action": "max",
        "count": "10",
        "round": "0",
        "mult": "single",
        "reduce": true,
        "x": 980,
        "y": 2800,
        "wires": [
            [
                "753dd75310f0bc83"
            ]
        ]
    },
    {
        "id": "753dd75310f0bc83",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "\nvar value = msg.payload;\nif (value < 0) {value = -1 * value;}        // get rid of a minus \nvalue = value + 600;                        // manipulate the rounding a bit\nvalue = Math.round(value/1000)*1000;        // the rounding itself\n\n\n\n\n\nvar current_gauge_limits = flow.get('solar_gauge_min_max_value');\nif (current_gauge_limits === undefined)\n    {\n        current_gauge_limits = flow.get('solar_gauge_min_max_value',\"file\");\n    }\n\nif (value > current_gauge_limits || current_gauge_limits === undefined)\n    {\n    flow.set('solar_gauge_min_max_value',value,\"file\");\n    flow.set('solar_gauge_min_max_value',value);\n    }\n\nlet msg1={};\nlet msg2={};\nlet msg3={};\nlet msg4={};\nlet msg5={};\n\n\nmsg1 = {ui_control:{max:current_gauge_limits}};\nmsg2 = {ui_control:{min:(-1 * current_gauge_limits)}};\nmsg3 = {ui_control:{seg1:0, seg2:0}};\nmsg4 = {ui_control:{ymin:(-1 * current_gauge_limits)}};\nmsg5 = {ui_control:{ymax:current_gauge_limits}};\n\n\n\nreturn [msg1,msg2,msg3,msg4,msg5];\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 2840,
        "wires": [
            [
                "183ceaeca552c78b"
            ],
            [
                "183ceaeca552c78b"
            ],
            [
                "183ceaeca552c78b"
            ],
            [
                "90624fa2c216bf5d"
            ],
            [
                "90624fa2c216bf5d"
            ]
        ],
        "outputLabels": [
            "max",
            "min",
            "seg",
            "",
            ""
        ]
    },
    {
        "id": "8603172634558642",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "start",
        "payload": "50",
        "payloadType": "num",
        "x": 980,
        "y": 2840,
        "wires": [
            [
                "753dd75310f0bc83"
            ]
        ]
    },
    {
        "id": "8e15e09a2e32aa6f",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "links": [
            "183ceaeca552c78b"
        ],
        "x": 385,
        "y": 2880,
        "wires": [
            [
                "c0cc87dbd1879df7"
            ]
        ]
    },
    {
        "id": "183ceaeca552c78b",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "mode": "link",
        "links": [
            "8e15e09a2e32aa6f"
        ],
        "x": 1255,
        "y": 2820,
        "wires": []
    },
    {
        "id": "dff3db02b78c3ce8",
        "type": "smooth",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "property": "payload",
        "action": "min",
        "count": "10",
        "round": "0",
        "mult": "single",
        "reduce": true,
        "x": 980,
        "y": 2880,
        "wires": [
            [
                "753dd75310f0bc83"
            ]
        ]
    },
    {
        "id": "6f97b70161c412e0",
        "type": "link in",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "links": [
            "90624fa2c216bf5d"
        ],
        "x": 385,
        "y": 2720,
        "wires": [
            [
                "1a4c312d89f7dc7c"
            ]
        ]
    },
    {
        "id": "90624fa2c216bf5d",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "mode": "link",
        "links": [
            "6f97b70161c412e0"
        ],
        "x": 1255,
        "y": 2860,
        "wires": []
    },
    {
        "id": "ffeb80a9107548d9",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nif (msg.payload < 0)\n{\n    msg.topic = 'Production'\n}\n\nif (msg.payload > 0)\n{\n    msg.topic = 'Consumption'\n}\nif (msg.payload === NaN)\n    {\n        return null;\n    }\nelse\n{\n    return msg;        \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2840,
        "wires": [
            [
                "c0cc87dbd1879df7",
                "d3b820a7a9c93987",
                "dff3db02b78c3ce8"
            ]
        ]
    },
    {
        "id": "ec4c0a8722ef69f7",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 710,
        "y": 3420,
        "wires": [
            [
                "9172e7a566db4f13"
            ]
        ]
    },
    {
        "id": "3e10866012f02659",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "9489af26d87fa6f7",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "time",
        "x": 290,
        "y": 580,
        "wires": [
            [
                "7952974e6e550696"
            ]
        ]
    },
    {
        "id": "ec878c0e335d4cbb",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "f227529cf807dfb0",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "time",
        "x": 330,
        "y": 1280,
        "wires": [
            [
                "2d87ee27dea371b2"
            ]
        ]
    },
    {
        "id": "ac9fdd3c58875d7c",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "group": "4cf2088c86f83c5a",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "Spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 1760,
        "wires": []
    },
    {
        "id": "f13b60c6ea1a7ba5",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "group": "4cf2088c86f83c5a",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "Spacer 6",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 940,
        "y": 1760,
        "wires": []
    },
    {
        "id": "7106cff42229d7b0",
        "type": "link out",
        "z": "88941c7ebbe79320",
        "name": "kWh Result",
        "mode": "link",
        "links": [
            "901a2b16e1783e82"
        ],
        "x": 635,
        "y": 1420,
        "wires": []
    },
    {
        "id": "1a8acaf415177718",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "e98533330b77eac7",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "kWh_prod",
                "fromt": "str",
                "to": "kWh",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "kWh_result",
                "fromt": "str",
                "to": "kWh",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 2220,
        "wires": [
            [
                "1dea44fb135025ef"
            ]
        ]
    },
    {
        "id": "e2c886d73017ba7d",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "8e0871b1a4bd6749"
            ]
        ]
    },
    {
        "id": "fa0f657d8343add3",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "8e0871b1a4bd6749"
            ]
        ]
    },
    {
        "id": "f3832e1ec734431a",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 1100,
        "wires": [
            [
                "c9ad604be7e118c8"
            ]
        ]
    },
    {
        "id": "3a8e8accbfadb5c9",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "0.001",
        "payloadType": "num",
        "x": 170,
        "y": 1060,
        "wires": [
            [
                "c9ad604be7e118c8"
            ]
        ]
    },
    {
        "id": "0a9cac54262558cf",
        "type": "delay",
        "z": "88941c7ebbe79320",
        "g": "6bd94724e4c90346",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 3080,
        "wires": [
            [
                "89f0b8222cc45cab"
            ]
        ]
    },
    {
        "id": "cda71137e216af25",
        "type": "delay",
        "z": "88941c7ebbe79320",
        "g": "6bd94724e4c90346",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 3020,
        "wires": [
            [
                "0446ed3c16eadbe7"
            ]
        ]
    },
    {
        "id": "adb41056f4f14ca1",
        "type": "debug",
        "z": "88941c7ebbe79320",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 3000,
        "wires": []
    },
    {
        "id": "9b48b2b97af27504",
        "type": "debug",
        "z": "88941c7ebbe79320",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 3120,
        "wires": []
    },
    {
        "id": "707e037ffbccc7f8",
        "type": "debug",
        "z": "88941c7ebbe79320",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 3140,
        "wires": []
    },
    {
        "id": "1f0a94cc2642ccb8",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 770,
        "y": 3460,
        "wires": [
            [
                "9172e7a566db4f13"
            ]
        ]
    },
    {
        "id": "f619235ffc9eecb3",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 670,
        "y": 3380,
        "wires": [
            [
                "9172e7a566db4f13"
            ]
        ]
    },
    {
        "id": "986c05b277a7cb4a",
        "type": "ui_button",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "group": "cee92df34733c036",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset scale",
        "tooltip": "Press and wait 5 minutes for the chart to update. This RESET impactes Power Live and Power History chart only.",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 2640,
        "wires": [
            [
                "31cc0777af7b97e7"
            ]
        ]
    },
    {
        "id": "31cc0777af7b97e7",
        "type": "function",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "name": "",
        "func": "flow.set('solar_gauge_min_max_value',undefined,\"file\");\nflow.set('solar_gauge_min_max_value',undefined);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2640,
        "wires": []
    },
    {
        "id": "2f1318fa8ad9113c",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "group": "cee92df34733c036",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "Spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1260,
        "y": 2700,
        "wires": []
    },
    {
        "id": "5edd2f5b433056a8",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "9e2c34031105062b",
        "group": "cee92df34733c036",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "Spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1240,
        "y": 2680,
        "wires": []
    },
    {
        "id": "909329e4d6347de7",
        "type": "ui_dropdown",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "dropdown import",
        "label": "",
        "tooltip": "Import correction",
        "place": "Select option",
        "group": "452f25e6ffbd74f8",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "1000",
                "value": 1000,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 390,
        "y": 940,
        "wires": [
            [
                "012b6d2cac68cbf4"
            ]
        ]
    },
    {
        "id": "30025e7d32995ebb",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "group": "452f25e6ffbd74f8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "result import",
        "label": "Current result value",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 980,
        "wires": []
    },
    {
        "id": "af57143f512e2258",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "group": "452f25e6ffbd74f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "raw value import",
        "label": "P1 raw import value",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 900,
        "wires": []
    },
    {
        "id": "012b6d2cac68cbf4",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "correction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 940,
        "wires": [
            [
                "c9ad604be7e118c8"
            ]
        ]
    },
    {
        "id": "4dd044bb826d3590",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "group": "452f25e6ffbd74f8",
        "order": 3,
        "width": 7,
        "height": 1,
        "name": "import correction txt",
        "label": "Correction factor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 190,
        "y": 940,
        "wires": []
    },
    {
        "id": "425ae3d60697ebbb",
        "type": "ui_template",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "group": "452f25e6ffbd74f8",
        "name": "Line - Setup  import",
        "order": 1,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Import setup (Expected outcome is +Watts)</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "d758ad14a5c371d1",
        "type": "ui_template",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "group": "452f25e6ffbd74f8",
        "name": "Line - Setup export",
        "order": 6,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Export setup (Expected outcome is -Watts)</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 430,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9ffd97efe2bd8210",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "group": "452f25e6ffbd74f8",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "result export",
        "label": "Current result value",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 280,
        "wires": []
    },
    {
        "id": "db99a74ac9754a0b",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "group": "452f25e6ffbd74f8",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "raw value export",
        "label": "P1 raw export value",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 420,
        "y": 200,
        "wires": []
    },
    {
        "id": "02ceb85184c22bec",
        "type": "change",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "correction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 240,
        "wires": [
            [
                "8e0871b1a4bd6749"
            ]
        ]
    },
    {
        "id": "4bd0e3ee2a16fd74",
        "type": "ui_dropdown",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "dropdown export",
        "label": "",
        "tooltip": "Export correction",
        "place": "Select option",
        "group": "452f25e6ffbd74f8",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1000",
                "value": 1000,
                "type": "num"
            },
            {
                "label": "1",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 430,
        "y": 240,
        "wires": [
            [
                "02ceb85184c22bec"
            ]
        ]
    },
    {
        "id": "3694b44fc765b0a2",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "group": "452f25e6ffbd74f8",
        "order": 8,
        "width": 7,
        "height": 1,
        "name": "export correction txt",
        "label": "Correction factor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 230,
        "y": 240,
        "wires": []
    },
    {
        "id": "de45e56d22c9ae2a",
        "type": "comment",
        "z": "88941c7ebbe79320",
        "name": "2 - connect your p1 power meter (consumption) to the grey node. (this is optional)",
        "info": "",
        "x": 1720,
        "y": 180,
        "wires": []
    },
    {
        "id": "c8160e62e2af120c",
        "type": "ui_text",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "group": "452f25e6ffbd74f8",
        "order": 12,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "Only live values are shown in \"P1 raw xx value\". You may need to wait for import and export values from P1 to know for sure what the result is.",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "6c0a545530dd4ed0",
        "type": "ui_template",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "group": "452f25e6ffbd74f8",
        "name": "Line - Setup export",
        "order": 11,
        "width": 9,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Note:</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 910,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "42ee0952114adcdd",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.015",
        "payloadType": "num",
        "x": 570,
        "y": 740,
        "wires": [
            [
                "c2831cc87255c1a5"
            ]
        ]
    },
    {
        "id": "cd1ea2840479452d",
        "type": "inject",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.015",
        "payloadType": "num",
        "x": 590,
        "y": 60,
        "wires": [
            [
                "a7f9994b1da2a51c"
            ]
        ]
    },
    {
        "id": "a7f9994b1da2a51c",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "0fc7460ece9ba178",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1150,
        "y": 100,
        "wires": [
            [
                "8e0871b1a4bd6749",
                "db99a74ac9754a0b"
            ]
        ]
    },
    {
        "id": "c2831cc87255c1a5",
        "type": "rbe",
        "z": "88941c7ebbe79320",
        "g": "6f1057c2d4c3d1ae",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "c9ad604be7e118c8",
                "af57143f512e2258"
            ]
        ]
    },
    {
        "id": "50026e40cf8bc426",
        "type": "tab",
        "label": "WP HELP",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a9eff46c06651523",
        "type": "group",
        "z": "50026e40cf8bc426",
        "name": "Solar HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "b50e32dc5d0279e2",
            "ff5f4e000beba166",
            "bdcbadf6718fbe15",
            "25406038d130519a",
            "b3cdb3b48fe0de3f",
            "2d341abd15d9c856",
            "1bd5c24fc105986e",
            "223ffc98da4daacd",
            "376e03958109e5ea",
            "73c9a829230e5b2c",
            "f1643f84518fe9e9",
            "57711e1350729c3c",
            "7d366fe541a4ede3",
            "c58bf941b7bf9077",
            "c62e6cb2fcc2b9ae"
        ],
        "x": 134,
        "y": 139,
        "w": 632,
        "h": 342
    },
    {
        "id": "e1692f700346a2f4",
        "type": "group",
        "z": "50026e40cf8bc426",
        "name": "WAR HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "07a5efdf679d266a",
            "177eeab29ff8fb7c",
            "b4506921a4644014",
            "4776ddfb63580d97",
            "8bd06b92ff0c5c95",
            "3a3631b20699c3e4",
            "c9be053a9eee0db2"
        ],
        "x": 134,
        "y": 499,
        "w": 622,
        "h": 202
    },
    {
        "id": "e39aeeae9e62e889",
        "type": "group",
        "z": "50026e40cf8bc426",
        "name": "RTC HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "99940cdbbaf8605c",
            "fa013903411f55d1",
            "237921974202fb16",
            "dc83fd3fcd593a5b",
            "b5e21b606dc18a11",
            "61373f5169984133",
            "47ec7640a989a8ae"
        ],
        "x": 1094,
        "y": 139,
        "w": 582,
        "h": 202
    },
    {
        "id": "4dd1b164e35327f0",
        "type": "group",
        "z": "50026e40cf8bc426",
        "name": "Scheduler HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "74a15c69e56c25b0",
            "61c4fde536c4fb28",
            "aabb46958069c8aa",
            "d0967e21749115a0",
            "a5f641b606cf0e53",
            "f3897a4ffeafbf9e",
            "e8a7fa5f554d49a7",
            "b956e4c486fa086c",
            "ecc2a6347b2392cc",
            "d44e96459e6b83f6",
            "84d6b1dc4382e1cd",
            "cf0b892be4869e7e"
        ],
        "x": 1114,
        "y": 379,
        "w": 582,
        "h": 262
    },
    {
        "id": "d41f8b52dcde9cf8",
        "type": "group",
        "z": "50026e40cf8bc426",
        "name": "SoftStart HELP",
        "style": {
            "label": true
        },
        "nodes": [
            "31507f2d93e8646c",
            "5688d653fec40064",
            "e901c427d231dfe7",
            "4ee797ae7a8b1f23",
            "d361a695cf573996",
            "58641f00ab67835e",
            "0a8d764fb92d3aaf",
            "f197084ed030ae01",
            "2a4424c31f914495",
            "7ff97ad888571df1",
            "8c1888df4c062f7a",
            "c3f1a8b7e4f8e7ad"
        ],
        "x": 1114,
        "y": 679,
        "w": 582,
        "h": 262
    },
    {
        "id": "07a5efdf679d266a",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "e1692f700346a2f4",
        "name": "",
        "group": "463138d4bf845cca",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Function_(WAR)_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 580,
        "wires": [
            [
                "8bd06b92ff0c5c95"
            ]
        ]
    },
    {
        "id": "6b1ab210920bd210",
        "type": "link in",
        "z": "50026e40cf8bc426",
        "name": "UI Control",
        "links": [
            "12bf7fcc7f4c6696",
            "e6aa4e32e33f71c3",
            "3f57a73354e16fc8",
            "cfdf5af6d5f2d693",
            "8bd06b92ff0c5c95",
            "73c9a829230e5b2c",
            "b5e21b606dc18a11",
            "a5f641b606cf0e53",
            "d361a695cf573996"
        ],
        "x": 205,
        "y": 60,
        "wires": [
            [
                "0610f80dd77ac522"
            ]
        ]
    },
    {
        "id": "177eeab29ff8fb7c",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "e1692f700346a2f4",
        "name": "",
        "group": "bb4302aaf2c2ca10",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Function_(WAR)_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 370,
        "y": 620,
        "wires": [
            [
                "8bd06b92ff0c5c95"
            ]
        ]
    },
    {
        "id": "0610f80dd77ac522",
        "type": "ui_ui_control",
        "z": "50026e40cf8bc426",
        "name": "",
        "events": "all",
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b4506921a4644014",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "e1692f700346a2f4",
        "group": "bb4302aaf2c2ca10",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 500,
        "y": 620,
        "wires": []
    },
    {
        "id": "4776ddfb63580d97",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "e1692f700346a2f4",
        "group": "bb4302aaf2c2ca10",
        "order": 1,
        "width": 9,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 240,
        "y": 620,
        "wires": []
    },
    {
        "id": "8bd06b92ff0c5c95",
        "type": "link out",
        "z": "50026e40cf8bc426",
        "g": "e1692f700346a2f4",
        "name": "",
        "mode": "link",
        "links": [
            "6b1ab210920bd210"
        ],
        "x": 715,
        "y": 540,
        "wires": []
    },
    {
        "id": "b50e32dc5d0279e2",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "name": "",
        "group": "4cf2088c86f83c5a",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Function_(Solar)_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "73c9a829230e5b2c"
            ]
        ]
    },
    {
        "id": "ff5f4e000beba166",
        "type": "inject",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Function_(Solar)_Help\"]}}",
        "payloadType": "json",
        "x": 230,
        "y": 180,
        "wires": [
            [
                "73c9a829230e5b2c"
            ]
        ]
    },
    {
        "id": "bdcbadf6718fbe15",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "group": "7bfa3cd371047fd0",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 300,
        "wires": []
    },
    {
        "id": "25406038d130519a",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "group": "7bfa3cd371047fd0",
        "name": "Line - Instructions text",
        "order": 5,
        "width": 14,
        "height": 21,
        "format": "<h3>What can this function do for you?</h3>\nThe aim of this function is to increase efficiency (and save cost) by utilize solar energy as much as possible.\nWhen there is solar energy in abundance, you can tell the heatpump to use that energy to heat up your DHW water tank. \nTo determine if there is enough solar energy, you need any form of power measurement. This can be a P1 power meter, or a meter directly behind your panels.</br></br>\n\nThe Instruction is split into two parts. </br> </br>\n1st part in Node-Red flow page (http://IP:1880/#flow)</br>\nFollow the instructions in the white comments in the tab: “WP Solar”</br></br>\n2nd part is the instruction of this dashboard and is written below.</br></br>\n\n<h3>Solar function</h3>\nThis enables / disables this function.</br></br>\n<h3>DHW temperature setpoints – low/high</h3>\nThis is the target temperature for the water in DHW tank. The high setpoint will be used when solar power reached the threshold. By default, setpoint low is used at the beginning of each day. <br/>\nNote: Setpoint low is NOT the same setpoint as set in HOME tab (DHW SP). They are not linked. But the setpoint low given here, will be pushed to the DHW SP at midnight and get the same value!</br></br>\n<h3>Power detection method</h3> \nThere are three options available. Option 1: “Power Live (kW)”, option 2: “Today's export (kWh)” and option 3: \"Today's result (kWh)\".</br>\nPower Live (kW) – Live energy export of the house expressed in Watt. See image 1.</br>\nToday's export (kWh) – Todays energy export of the house, expressed in kWh. See image 2. This value will only increase. Energy import (at a later time) will not be subtracted from the value.</br>\nToday's result (kWh) – Todays result, which is the sum of export (kWh) and import (kWh) over the house. </br></br>\n<h3>Threshold (XX)</h3>\nThis is the threshold above which the “DHW setpoint – high” should be set as a new target. </br></br>\n<h3>Fallback to SP low below 0 W?</h3>\nBy default, once setpoint high is used, it will not switch back to setpoint low on the same day. If you do want to fall back to SP low when power production drops below zero W, enable 'fallback' toggle. This will only apply for the power detection method kW. </br></br>\n\n<h3>Override power state</h3>\nWhen the heatpump is turned off, do you want this function to turn the heatpump on again? Enable switch to allow 'turn on' action\n<br/><br/>\n<h3>Block scheduled tasks</h3>\nIt is possible that during a Solar DHW run, a scheduled task is triggered. With this option is enabled, all tasks that changes the Operating Mode (and could end the solar run) are blocked.",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "b3cdb3b48fe0de3f",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "group": "7bfa3cd371047fd0",
        "name": "",
        "order": 6,
        "width": 7,
        "height": 6,
        "format": "<div height=\"300\" style=\"height: 300px;\">\n<img src=\"https://github.com/edterbak/NodeRed_Heishamon_control/blob/main/images/chart%20powerproduction_1.png?raw=true\" width=325px><br/>\n</div>\nImage 1: kW Production now",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "2d341abd15d9c856",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "group": "7bfa3cd371047fd0",
        "name": "",
        "order": 7,
        "width": 7,
        "height": 6,
        "format": "<div height=\"300\" style=\"height: 300px;\">\n<img src=\"https://github.com/edterbak/NodeRed_Heishamon_control/blob/main/images/chart%20powerproduction_2.png?raw=true\" width=325px><br/>\n</div>\nimage 2: kwh Production today\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 520,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1bd5c24fc105986e",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "name": "",
        "group": "7bfa3cd371047fd0",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Function_(Solar)_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 530,
        "y": 300,
        "wires": [
            [
                "73c9a829230e5b2c"
            ]
        ]
    },
    {
        "id": "223ffc98da4daacd",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "group": "7bfa3cd371047fd0",
        "order": 8,
        "width": 14,
        "height": 1,
        "name": "spacer 14",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 440,
        "wires": []
    },
    {
        "id": "376e03958109e5ea",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "group": "7bfa3cd371047fd0",
        "order": 1,
        "width": 10,
        "height": 1,
        "name": "spacer 11",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "73c9a829230e5b2c",
        "type": "link out",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "name": "",
        "mode": "link",
        "links": [
            "6b1ab210920bd210"
        ],
        "x": 725,
        "y": 180,
        "wires": []
    },
    {
        "id": "3a3631b20699c3e4",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "e1692f700346a2f4",
        "group": "bb4302aaf2c2ca10",
        "name": "Line - Instructions text",
        "order": 4,
        "width": 12,
        "height": 15,
        "format": "<h3>WAR function (Weather Adaptable Regulation)</h3>\n<br/>\n<h3>What can this function do for you?</h3>\nThe aim of this function is to dynamically change the water temperature for heating, depending on the outside weather. If it very cold outside, you likely require more heat compared to when it is warm outside to end up with a comfortable house.\n\n</br> </br>\n<h3>WAR function on/off</h3>\nTurn the function on or off. When the function is off, the correction will be fixed to 0.\n</br>\n</br>\n<h3>Setup</h3>\nYou can program three x/y-points, where you give the outside temperature and the corresponding target water temperatures during heat mode. </br></br>\nEach horizontal line under HEAT profile, is an x/y-point in the temperature profile chart. </br></br>\nThe top x/y-point needs to be the highest outside temperature, and the lowest x/y-point should be the lowest outside temperature.\n</br></br>\nOnce the the x/y-lines have been plotted, you have your WAR temperature profile. \n</br></br>\nEach measured outside temperature will be used in a formula to calculate the corresponding water temperature accodring to your profile. </br>\nEach calculated water temperature will be rounded to whole numbers in degree C.\n</br></br>\n<h3>Export</h3>\nPressing this button will push the current WAR Temperature profile to the Panasonic heatpump. </br></br>\nAttention:</br>\nNative Panasonic WAR profile has 2 x/y-points<br/>\nONLY the first two points will be exported. Not three.</br>\n\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 280,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c9be053a9eee0db2",
        "type": "inject",
        "z": "50026e40cf8bc426",
        "g": "e1692f700346a2f4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Function_(WAR)_Help\"]}}",
        "payloadType": "json",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "8bd06b92ff0c5c95"
            ]
        ]
    },
    {
        "id": "99940cdbbaf8605c",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "e39aeeae9e62e889",
        "name": "",
        "group": "af26718b91621f02",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Function_(RTC)_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1190,
        "y": 220,
        "wires": [
            [
                "b5e21b606dc18a11"
            ]
        ]
    },
    {
        "id": "fa013903411f55d1",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "e39aeeae9e62e889",
        "name": "",
        "group": "4307db2591e201d4",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Function_(RTC)_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "b5e21b606dc18a11"
            ]
        ]
    },
    {
        "id": "237921974202fb16",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "e39aeeae9e62e889",
        "group": "4307db2591e201d4",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1460,
        "y": 260,
        "wires": []
    },
    {
        "id": "dc83fd3fcd593a5b",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "e39aeeae9e62e889",
        "group": "4307db2591e201d4",
        "order": 2,
        "width": 9,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 260,
        "wires": []
    },
    {
        "id": "b5e21b606dc18a11",
        "type": "link out",
        "z": "50026e40cf8bc426",
        "g": "e39aeeae9e62e889",
        "name": "",
        "mode": "link",
        "links": [
            "6b1ab210920bd210"
        ],
        "x": 1635,
        "y": 180,
        "wires": []
    },
    {
        "id": "61373f5169984133",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "e39aeeae9e62e889",
        "group": "4307db2591e201d4",
        "name": "Line - Instructions text",
        "order": 4,
        "width": 12,
        "height": 15,
        "format": "<h3>RTC Function (Room Temperature Correction)</h3>\n<br/>\n<h3>What can this function do for you?</h3>\nThis function corrects the HEAT target temperature based on the actual room temperature. \n</br> </br>\n\n<h3>Setup</h3>\nThe basis for the setup is the difference between measured,- and targettemperature of the room (Room Actual - Room Setpoint).\n<br/><br/>\nWhen it is too warm in the room, the default water temperature for HEAT can be decreased by 1, 2 or 3 degrees C. \n<br/><br/>\nThe same applies to when it is too cold, but then the HEAT SP will be increased as a result. <br/><br/>\nYou set the dT ranges (= Room Actual - Room Setpoint) for each correction (-3, -2, -1, 0, 1, 2 and 3 degree C)<br/><br/>\nThe dT range is relative to the setpoint. <br/><br/>\n\n<h3>Turn on/off HP (optional)</h3>\nAdditional to the upper section, you have the option to turn off the heatpump completely when the temperature is way to high. <br/>\nOfcourse, when the temperature lowers again, you can set the trigger at which point the pump should switch on again.<br/>\nIf you do NOT want to make use of this feature:<br/> \nset the OFF dT range a lot higher, eg. +20 degrees from the setpoint.<br/>\nset the ON dT range a lot lower, eg. -20 degrees from the setpoint.<br/>\n\n\n<br/><br/>\nNote: By default the room temperature (Room Actual) is measured by the thermostat controller. However, it is technically possible to use a custom roomsensor.",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1240,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "47ec7640a989a8ae",
        "type": "inject",
        "z": "50026e40cf8bc426",
        "g": "e39aeeae9e62e889",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Function_(RTC)_Help\"]}}",
        "payloadType": "json",
        "x": 1190,
        "y": 180,
        "wires": [
            [
                "b5e21b606dc18a11"
            ]
        ]
    },
    {
        "id": "74a15c69e56c25b0",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "name": "",
        "group": "32e927aa7dc43b2a",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Scheduler_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1350,
        "y": 460,
        "wires": [
            [
                "a5f641b606cf0e53"
            ]
        ]
    },
    {
        "id": "61c4fde536c4fb28",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "name": "",
        "group": "48e089c533af9504",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Scheduler_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1350,
        "y": 560,
        "wires": [
            [
                "a5f641b606cf0e53"
            ]
        ]
    },
    {
        "id": "aabb46958069c8aa",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "group": "48e089c533af9504",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1480,
        "y": 560,
        "wires": []
    },
    {
        "id": "d0967e21749115a0",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "group": "48e089c533af9504",
        "order": 1,
        "width": 9,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 560,
        "wires": []
    },
    {
        "id": "a5f641b606cf0e53",
        "type": "link out",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "name": "",
        "mode": "link",
        "links": [
            "6b1ab210920bd210"
        ],
        "x": 1655,
        "y": 420,
        "wires": []
    },
    {
        "id": "f3897a4ffeafbf9e",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "group": "48e089c533af9504",
        "name": "Line - Instructions text",
        "order": 4,
        "width": 12,
        "height": 15,
        "format": "<h3>Scheduler</h3>\n<br/>\n<h3>What can the scheduler do for you?</h3>\nYou can program certain tasks to be started at the desired day - hour - minute. \n</br> </br>\n\n<h3>Enable</h3>\nOnly rules which have the enable toggle turned on will be executed.<br/>\n<br/><h3>Description</h3>\nGive your personal short description to the task you want to create.\n<br/><br/><h3>Day</h3>\nSet the day you want to trigger the action. (Multi-select days available)\n<br/><br/><h3>Hour</h3>\nSet the hour when you want to trigger the action. (Multi-select not available)\n<br/><br/><h3>Minutes</h3>\nSet the minute when you want to trigger the action. (Multi-select not available)<br/><br/>\nNote: the hour + minute will combine to your selected time. (hh:mm)\n<br/><br/><h3>Action</h3>\nSet the action you want to perform. More details on each action is given below.\n<br/><br/><h3>Override</h3>\nSet if you want the heatpump to automatically turn on when the task is fired.<br/>\nIf the pump is off, and the task is triggered with override disabled, it will not execute.<br/>\nIf the pump is off, and the task is triggered with override enabled, it will first turn on the pump, then execute.<br/>\n-------------------------------------------------------------------------------------- <br/>\n<br/><h3>What is the main difference between this scheduler and the Panasonic one?</h3>\nThe Panasonic-scheduler-scheduled tasks always turns on the heatpump when it triggers. <br/>\nThis scheduler offers you control over this.\n<br/><br/><h3>Actions in more detail</h3>\nHeatpump on/off: This will just turn on/off the heatpump at the specified time. Does not listen to [Override] toggle.<br/><br/>\nForce DHW: This action will do multiple things. <br/>1 - Add DHW to the current operating mode. <br/>2 - Turn on [Force DHW mode] <br/> 3 - Execute the DHW run to the target temperature. <br/>4 - Turn off [Force DHW mode]<br/>5 - Remove DHW from Operating mode again<br/><br/>\nAttention: The Force DHW run will not start if the current DHW temperature is above the set temperature in [Force DHW - Allow only below] in the section next to the scheduler. If you do not want this, set this temperature very high (eg. 100 degree C). The Panasonic internal rules (minimum dT) will always be followed.<br/><br/>\nThe scheduled Force DHW action is fundamentally different compared to the switch Force DHW under Settings. The latter is the same as turning on Force DHW from thermostat. This requires certain conditions.<br/><br/>\nForce Sterelization: This action will do multiple things <br/>1 - Add DHW to the current operating mode. <br/>2 - Turn on [Force DHW mode] + Turn on [Force Sterelization] <br/> 3 - Execute the Sterelization run to the target temperature. <br/>4 - Turn off [Force Sterelization mode] + Turn off [Force DHW mode]<br/>5 - Remove DHW from Operating mode again<br/><br/>\nQuiet Mode: This will set the quiet mode to the desired level. Level 0-3. <br/><br/>\nOperation Mode: This will set the operation mode as desired. <br/><br/>\nNight reduction on/off: At the given time, this option will correct the current SP with the set temperature in [Nicht reduction - Reduce temperature with xx C] in the section next to the scheduler. [Current SP] + [NightReduction value] = [Result SP]. The value of NightReduction must be negative to lower the temperature when NR is activated.<br/><br/>\n\nHEAT temperature limits: Here you can program the absolut upper and lower limits you never want HEAT to go over/under. This can be used to prevent oscillating behaviour, make compressor runs longer and the HP more efficient.<br/><br/>\n\nNote: The The native Panasonic scheduler can be both operational. But make sure the rules do not conflict. <br/>\nSafest method is to use one of the options. <br/>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1260,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "e8a7fa5f554d49a7",
        "type": "inject",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Scheduler_Help\"]}}",
        "payloadType": "json",
        "x": 1210,
        "y": 420,
        "wires": [
            [
                "a5f641b606cf0e53"
            ]
        ]
    },
    {
        "id": "d44e96459e6b83f6",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "group": "32e927aa7dc43b2a",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 460,
        "wires": []
    },
    {
        "id": "ecc2a6347b2392cc",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "group": "32e927aa7dc43b2a",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1540,
        "y": 460,
        "wires": []
    },
    {
        "id": "b956e4c486fa086c",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "group": "32e927aa7dc43b2a",
        "name": "Line - Setup ",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Force DHW</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1230,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "84d6b1dc4382e1cd",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "group": "32e927aa7dc43b2a",
        "name": "Line - Setup ",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>Night reduction</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1390,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "cf0b892be4869e7e",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "4dd1b164e35327f0",
        "group": "32e927aa7dc43b2a",
        "name": "Line - Setup ",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>HEAT temperature limits</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1550,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "31507f2d93e8646c",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "name": "",
        "group": "2724d44e267a522a",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Function_(SoftStart)_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1350,
        "y": 760,
        "wires": [
            [
                "d361a695cf573996"
            ]
        ]
    },
    {
        "id": "5688d653fec40064",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "name": "",
        "group": "21192439787f0d15",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Function_(SoftStart)_Help\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1350,
        "y": 860,
        "wires": [
            [
                "d361a695cf573996"
            ]
        ]
    },
    {
        "id": "e901c427d231dfe7",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "group": "7bfa3cd371047fd0",
        "order": 2,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1480,
        "y": 860,
        "wires": []
    },
    {
        "id": "4ee797ae7a8b1f23",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "group": "21192439787f0d15",
        "order": 1,
        "width": 9,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 860,
        "wires": []
    },
    {
        "id": "d361a695cf573996",
        "type": "link out",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "name": "",
        "mode": "link",
        "links": [
            "6b1ab210920bd210"
        ],
        "x": 1655,
        "y": 720,
        "wires": []
    },
    {
        "id": "58641f00ab67835e",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "group": "21192439787f0d15",
        "name": "Line - Instructions text",
        "order": 4,
        "width": 12,
        "height": 12,
        "format": "<h3>SoftStart</h3>\n<br/>\n<h3>What can the SoftStart function do for you?</h3>\nDefault behaviour of the heatpump is when it starts up the compressor will go to high Hz for a period. Only when the returning water temperature approaches the setpoint, it ramps down the Hz and get more economic. <br/><br/>\nIf the SoftStart function is enabled, the HEAT setpoint will be lowered. This should cause the compressor to ramp down within minutes. When ramp down has occured, the HEAT SP will slowly be increased to the original SP.<br/><br/>\nPossible benefit is that you will have longer runs with compressor on and the startup is more efficient.<br/><br/>\nThis functionality is effective after a defrost cycle when it is cold.<br/>\nThis function functions only for HEAT mode. <br/>\n</br>\n\n<h3>Minimum runtime:</h3>\nThis is the period of time this function is active for. During this period, the setpoint will continiously be checked against the Toutlet (Ta) and corrected.</br></br>\n<h3>SP increase cap:</h3>\nThis function is correcting the SP by comparing it to Toutlet (Ta). It is constantly making the SP: Toutlet -1. As a result this could mean that the SP is getting higher and higher until it is stable. This setting will limit the increase relative to the SP befor the function. \n</br></br>Example: Starting SP: 25°C, SP cap: +2. The SoftStart function will let the SP increase to a maximum of 27°C.\n\n\n\n\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1260,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "0a8d764fb92d3aaf",
        "type": "inject",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Function_(SoftStart)_Help\"]}}",
        "payloadType": "json",
        "x": 1210,
        "y": 720,
        "wires": [
            [
                "d361a695cf573996"
            ]
        ]
    },
    {
        "id": "f197084ed030ae01",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "group": "01e26c09b4e9de97",
        "name": "Line - Setup ",
        "order": 1,
        "width": 23,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left>SoftStart Chart</left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1230,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "2a4424c31f914495",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "group": "2724d44e267a522a",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1540,
        "y": 760,
        "wires": []
    },
    {
        "id": "7ff97ad888571df1",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "group": "2724d44e267a522a",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 760,
        "wires": []
    },
    {
        "id": "8c1888df4c062f7a",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "group": "21192439787f0d15",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1480,
        "y": 900,
        "wires": []
    },
    {
        "id": "c3f1a8b7e4f8e7ad",
        "type": "ui_template",
        "z": "50026e40cf8bc426",
        "g": "d41f8b52dcde9cf8",
        "group": "01e26c09b4e9de97",
        "name": "Line - Setup ",
        "order": 3,
        "width": 23,
        "height": 1,
        "format": "<html>\n <!--box-shadow: (left) -5px (top) -5px (blur) 5px (spread)5px (color)#888;-->\n<head>\n<hr style=\n    \"border-top: 1px solid #a39d99;\n    border-width: 0px 0px 0;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 0px;\n    margin-top: 0;\n    border-bottom: 1px solid #a39d99;\n    box-shadow: 0 0 3px #a39d99\";\n\t>\n<left></left> \n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1430,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "f1643f84518fe9e9",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "name": "",
        "group": "4cf2088c86f83c5a",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "P1 setup",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "info",
        "payload": "{\"group\":{\"show\":[\"Function_(Solar)_P1_setup\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 240,
        "y": 260,
        "wires": [
            [
                "73c9a829230e5b2c"
            ]
        ]
    },
    {
        "id": "57711e1350729c3c",
        "type": "ui_button",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "name": "",
        "group": "452f25e6ffbd74f8",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Close",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "close",
        "payload": "{\"group\":{\"hide\":[\"Function_(Solar)_P1_setup\"]}}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "73c9a829230e5b2c"
            ]
        ]
    },
    {
        "id": "7d366fe541a4ede3",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "group": "452f25e6ffbd74f8",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "spacer 11",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 260,
        "wires": []
    },
    {
        "id": "c58bf941b7bf9077",
        "type": "ui_text",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "group": "452f25e6ffbd74f8",
        "order": 15,
        "width": 1,
        "height": 1,
        "name": "spacer 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 260,
        "wires": []
    },
    {
        "id": "c62e6cb2fcc2b9ae",
        "type": "inject",
        "z": "50026e40cf8bc426",
        "g": "a9eff46c06651523",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"group\":{\"hide\":[\"Function_(Solar)_P1_setup\"]}}",
        "payloadType": "json",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "73c9a829230e5b2c"
            ]
        ]
    },
    {
        "id": "92e5b2c.00a8b5",
        "type": "mqtt-broker",
        "name": "MQTT (x.x.x.x)",
        "broker": "x.x.x.x",
        "port": "1883",
        "clientid": "Node_Red_Client",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "463138d4bf845cca",
        "type": "ui_group",
        "name": "Settings",
        "tab": "df49b610469932c3",
        "order": 1,
        "disp": false,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "47608011c629d4a1",
        "type": "ui_group",
        "name": "PUMP",
        "tab": "b4f0eedd50e93394",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ba668149f2e70274",
        "type": "ui_group",
        "name": "DHW",
        "tab": "b4f0eedd50e93394",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f4d34b6388e64ca9",
        "type": "ui_group",
        "name": "ROOM",
        "tab": "b4f0eedd50e93394",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "af26718b91621f02",
        "type": "ui_group",
        "name": "Settings",
        "tab": "b4700667145df505",
        "order": 1,
        "disp": false,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6b395ebf705e92b7",
        "type": "ui_group",
        "name": "Livingroom",
        "tab": "65df83bc5b8ed8db",
        "order": 5,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7088496dfc793dbb",
        "type": "ui_group",
        "name": "Water (HEAT)",
        "tab": "65df83bc5b8ed8db",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "052c832231904e16",
        "type": "ui_group",
        "name": "Water (DHW)",
        "tab": "65df83bc5b8ed8db",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c7d23e4a20ddaedf",
        "type": "ui_group",
        "name": "HEAT Functions",
        "tab": "b4f0eedd50e93394",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4e2c919e44d5664c",
        "type": "ui_group",
        "name": "Graph",
        "tab": "df49b610469932c3",
        "order": 2,
        "disp": false,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c1bc65f9fe1dd49",
        "type": "ui_group",
        "name": "RTC Graphics",
        "tab": "b4700667145df505",
        "order": 2,
        "disp": false,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "01e26c09b4e9de97",
        "type": "ui_group",
        "name": "SS Graphics",
        "tab": "e713974cb92e2016",
        "order": 2,
        "disp": false,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2724d44e267a522a",
        "type": "ui_group",
        "name": "Settings",
        "tab": "e713974cb92e2016",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3f5561b0ad3ed66c",
        "type": "ui_group",
        "name": "Operation",
        "tab": "0b5d0e37e3575f5d",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4404bf36f6bca7c1",
        "type": "ui_group",
        "name": "GENERAL",
        "tab": "0b5d0e37e3575f5d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "91122444622f238a",
        "type": "ui_group",
        "name": "PUMP",
        "tab": "0b5d0e37e3575f5d",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e06eb2ab51f8ba38",
        "type": "ui_group",
        "name": "HEAT / DHW",
        "tab": "0b5d0e37e3575f5d",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "32e927aa7dc43b2a",
        "type": "ui_group",
        "name": "Related settings",
        "tab": "bd91b1bdc9e1498e",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a88e295848403708",
        "type": "ui_group",
        "name": "Power",
        "tab": "d3bb52884504b53f",
        "order": 1,
        "disp": false,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6ac295fb9be91d87",
        "type": "ui_group",
        "name": "Commands History",
        "tab": "02ac14a82043359e",
        "order": 1,
        "disp": false,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e343dae676c69b2b",
        "type": "ui_group",
        "name": "COOL Functions",
        "tab": "b4f0eedd50e93394",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9dedfacf1bbd23a2",
        "type": "ui_group",
        "name": "Chart",
        "tab": "9654eda55baa4c12",
        "order": 1,
        "disp": false,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5f98c22d95c413a9",
        "type": "ui_group",
        "name": "Settings",
        "tab": "9654eda55baa4c12",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b55af41fd927bf28",
        "type": "ui_group",
        "name": "Schedules",
        "tab": "bd91b1bdc9e1498e",
        "order": 1,
        "disp": true,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f96935cb150b5251",
        "type": "ui_group",
        "name": "Degree days information",
        "tab": "15ab43dbf29ca386",
        "order": 1,
        "disp": false,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4cf2088c86f83c5a",
        "type": "ui_group",
        "name": "Setup",
        "tab": "c8888946336407fd",
        "order": 1,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cee92df34733c036",
        "type": "ui_group",
        "name": "Charts",
        "tab": "c8888946336407fd",
        "order": 3,
        "disp": false,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "452f25e6ffbd74f8",
        "type": "ui_group",
        "name": "P1 setup",
        "tab": "c8888946336407fd",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": true,
        "className": ""
    },
    {
        "id": "bb4302aaf2c2ca10",
        "type": "ui_group",
        "name": "Help",
        "tab": "df49b610469932c3",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7bfa3cd371047fd0",
        "type": "ui_group",
        "name": "Help",
        "tab": "c8888946336407fd",
        "order": 4,
        "disp": false,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4307db2591e201d4",
        "type": "ui_group",
        "name": "Help",
        "tab": "b4700667145df505",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "48e089c533af9504",
        "type": "ui_group",
        "name": "Help",
        "tab": "bd91b1bdc9e1498e",
        "order": 3,
        "disp": false,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "21192439787f0d15",
        "type": "ui_group",
        "name": "Help",
        "tab": "e713974cb92e2016",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "df49b610469932c3",
        "type": "ui_tab",
        "name": "Function (WAR)",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b4f0eedd50e93394",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b4700667145df505",
        "type": "ui_tab",
        "name": "Function (RTC)",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "65df83bc5b8ed8db",
        "type": "ui_tab",
        "name": "Charts Temperature",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e713974cb92e2016",
        "type": "ui_tab",
        "name": "Function (SoftStart)",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0b5d0e37e3575f5d",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bd91b1bdc9e1498e",
        "type": "ui_tab",
        "name": "Scheduler",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d3bb52884504b53f",
        "type": "ui_tab",
        "name": "Charts Energy",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "02ac14a82043359e",
        "type": "ui_tab",
        "name": "Logs",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9654eda55baa4c12",
        "type": "ui_tab",
        "name": "Function (COOL)",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "15ab43dbf29ca386",
        "type": "ui_tab",
        "name": "Chart Degree Days",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c8888946336407fd",
        "type": "ui_tab",
        "name": "Function (Solar)",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    }
]