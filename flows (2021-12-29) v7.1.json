[
    {
        "id": "af4245d118bcd0fb",
        "type": "tab",
        "label": "WP MQTT",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5517801071bdd257",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP0 - panasonic_heat_pump/main/Heatpump_State",
        "topic": "panasonic_heat_pump/main/Heatpump_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7399e344eba68604",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP1 - panasonic_heat_pump/main/Pump_Flow",
        "topic": "panasonic_heat_pump/main/Pump_Flow",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 280,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "6db893086bad7914",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP2 - panasonic_heat_pump/main/Force_DHW_State",
        "topic": "panasonic_heat_pump/main/Force_DHW_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "47515a7154702ffb",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP3 - panasonic_heat_pump/main/Quiet_Mode_Schedule",
        "topic": "panasonic_heat_pump/main/Quiet_Mode_Schedule",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 320,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1cc869e309b6fcc8",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP4 - panasonic_heat_pump/main/Operating_Mode_State",
        "topic": "panasonic_heat_pump/main/Operating_Mode_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 320,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "336391c1ad6e5cd3",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP5 - panasonic_heat_pump/main/Main_Inlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Inlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "24de67d5bb0b975a",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP6 - panasonic_heat_pump/main/Main_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Outlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2a29456263934533",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP7 - panasonic_heat_pump/main/Main_Target_Temp",
        "topic": "panasonic_heat_pump/main/Main_Target_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "8556089b40ce168d",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "topic": "panasonic_heat_pump/main/Compressor_Freq",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "a082453c4f0fec9d",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP9 - panasonic_heat_pump/main/DHW_Target_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Target_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 310,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "72f1f7d68bff30fb",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP10 - panasonic_heat_pump/main/DHW_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 290,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f8cc5177374016bd",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP11 - panasonic_heat_pump/main/Operations_Hours",
        "topic": "panasonic_heat_pump/main/Operations_Hours",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1a9f6b34bb22bc74",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP12 - panasonic_heat_pump/main/Operations_Counter",
        "topic": "panasonic_heat_pump/main/Operations_Counter",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 310,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "203f84653bf07ca1",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP13 - panasonic_heat_pump/main/Main_Schedule_State",
        "topic": "panasonic_heat_pump/main/Main_Schedule_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "b4b8b3d4a97a9125",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP14 - panasonic_heat_pump/main/Outside_Temp",
        "topic": "panasonic_heat_pump/main/Outside_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 290,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "148035d38cef54a3",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP15 - panasonic_heat_pump/main/Heat_Energy_Production",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Production",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 330,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "51b8de5f436b6d03",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP16 - panasonic_heat_pump/main/Heat_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Consumption",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 330,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "6c2e5dd2b2cb6cab",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP17 - panasonic_heat_pump/main/Powerful_Mode_Time",
        "topic": "panasonic_heat_pump/main/Powerful_Mode_Time",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 320,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f75a8c322a65be71",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP18 - panasonic_heat_pump/main/Quiet_Mode_Level",
        "topic": "panasonic_heat_pump/main/Quiet_Mode_Level",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 310,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "6ebfc9a29d726a7b",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP19 - panasonic_heat_pump/main/Holiday_Mode_State",
        "topic": "panasonic_heat_pump/main/Holiday_Mode_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 310,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "0de29164b03c3733",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP20 - panasonic_heat_pump/main/ThreeWay_Valve_State",
        "topic": "panasonic_heat_pump/main/ThreeWay_Valve_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 320,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "db89bbb523f1dc6d",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP21 - panasonic_heat_pump/main/Outside_Pipe_Temp",
        "topic": "panasonic_heat_pump/main/Outside_Pipe_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 310,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "d514c5d3314f6070",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP22 - panasonic_heat_pump/main/DHW_Heat_Delta",
        "topic": "panasonic_heat_pump/main/DHW_Heat_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "514f44e43e7ab2ef",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP23 - panasonic_heat_pump/main/Heat_Delta",
        "topic": "panasonic_heat_pump/main/Heat_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 280,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "73fd0b8484e98fef",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP24 - panasonic_heat_pump/main/Cool_Delta",
        "topic": "panasonic_heat_pump/main/Cool_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 280,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "32c11cfbc9891369",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP25 - panasonic_heat_pump/main/DHW_Holiday_Shift_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Holiday_Shift_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 330,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "a5f2108a53683840",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "topic": "panasonic_heat_pump/main/Defrosting_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "db31eaba6907756e",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP27 - panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Request_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 330,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "07b496e08d2a05eb",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP28 - panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Request_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 330,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "83040cf868e9e861",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP29 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 360,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "e8cb491797e2997c",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP30 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 360,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "e5ecfb4fad9439c7",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP31 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 920,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2f45412762570f31",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP32 - panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Outside_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 920,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7e1fa41b64c97948",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP33 - panasonic_heat_pump/main/Room_Thermostat_Temp",
        "topic": "panasonic_heat_pump/main/Room_Thermostat_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 890,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "46135a1a207a750e",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP34 - panasonic_heat_pump/main/Z2_Heat_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Request_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 890,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "85d5fc9274bd8978",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP35 - panasonic_heat_pump/main/Z2_Cool_Request_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Request_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 890,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "97abbe76bcf68693",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP36 - panasonic_heat_pump/main/Z1_Water_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Water_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 860,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "692c93b799573dcf",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP37 - panasonic_heat_pump/main/Z2_Water_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Water_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 860,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "218aab5f6e19688a",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP38 - panasonic_heat_pump/main/Cool_Energy_Production",
        "topic": "panasonic_heat_pump/main/Cool_Energy_Production",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 890,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "e32e2844105565d1",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP39 - panasonic_heat_pump/main/Cool_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Cool_Energy_Consumption",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 890,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a20812c07328298d",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP40 - panasonic_heat_pump/main/DHW_Energy_Production",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Production",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 890,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "be9c252da321116c",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP41 - panasonic_heat_pump/main/DHW_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Consumption",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 900,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1ba3f48cca7afcb6",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP42 - panasonic_heat_pump/main/Z1_Water_Target_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Water_Target_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 880,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "3e84ea42560f9944",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP43 - panasonic_heat_pump/main/Z2_Water_Target_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Water_Target_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 880,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "2790891388410578",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP44 - panasonic_heat_pump/main/Error",
        "topic": "panasonic_heat_pump/main/Error",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 820,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "3503affe3de4f920",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP45 - panasonic_heat_pump/main/Room_Holiday_Shift_Temp",
        "topic": "panasonic_heat_pump/main/Room_Holiday_Shift_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 890,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "0bbd0dfa2f7f8c41",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP46 - panasonic_heat_pump/main/Buffer_Temp",
        "topic": "panasonic_heat_pump/main/Buffer_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 850,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "4314e05f227a07fa",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP47 - panasonic_heat_pump/main/Solar_Temp",
        "topic": "panasonic_heat_pump/main/Solar_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 850,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "07f2c59c13de8d49",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP48 - panasonic_heat_pump/main/Pool_Temp",
        "topic": "panasonic_heat_pump/main/Pool_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 840,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "2544c35daef537d0",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP49 - panasonic_heat_pump/main/Main_Hex_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Hex_Outlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 880,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "d0faedf56a7bfc10",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP50 - panasonic_heat_pump/main/Discharge_Temp",
        "topic": "panasonic_heat_pump/main/Discharge_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 860,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "86679787b790fd28",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP51 - panasonic_heat_pump/main/Inside_Pipe_Temp",
        "topic": "panasonic_heat_pump/main/Inside_Pipe_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 870,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "c2e71f1137e0f9fc",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP52 - panasonic_heat_pump/main/Defrost_Temp",
        "topic": "panasonic_heat_pump/main/Defrost_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 850,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "fc4b730b467331e2",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP53 - panasonic_heat_pump/main/Eva_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Eva_Outlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 860,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "465090f48f78b9aa",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP54 - panasonic_heat_pump/main/Bypass_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Bypass_Outlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 870,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "6fbfac5478ef42ea",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP55 - panasonic_heat_pump/main/Ipm_Temp",
        "topic": "panasonic_heat_pump/main/Ipm_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 840,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "07c440190fae73dd",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP56 - panasonic_heat_pump/main/Z1_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 840,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "9bf77d4151599dcf",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP57 - panasonic_heat_pump/main/Z2_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 840,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "f05cbeb50c02e95d",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP58 - panasonic_heat_pump/main/DHW_Heater_State",
        "topic": "panasonic_heat_pump/main/DHW_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 870,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "930de2987e45d1bf",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP59 - panasonic_heat_pump/main/Room_Heater_State",
        "topic": "panasonic_heat_pump/main/Room_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 870,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "c1dfccfb9755e5ad",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP60 - panasonic_heat_pump/main/Internal_Heater_State",
        "topic": "panasonic_heat_pump/main/Internal_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 880,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "98a700c10d2c65c3",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP61 - panasonic_heat_pump/main/External_Heater_State",
        "topic": "panasonic_heat_pump/main/External_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1480,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a1f82cadf9055df3",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP62 - panasonic_heat_pump/main/Fan1_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan1_Motor_Speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1470,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "3f4772df24d28e3a",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP63 - panasonic_heat_pump/main/Fan2_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan2_Motor_Speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1470,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "68822c5f4da4a5c1",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP64 - panasonic_heat_pump/main/High_Pressure",
        "topic": "panasonic_heat_pump/main/High_Pressure",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1450,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "0d264ccbb9c7e1a7",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP65 - panasonic_heat_pump/main/Pump_Speed",
        "topic": "panasonic_heat_pump/main/Pump_Speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1450,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "64b569ae90a753a6",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP66 - panasonic_heat_pump/main/Low_Pressure",
        "topic": "panasonic_heat_pump/main/Low_Pressure",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1450,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "134382aa170ef93b",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP67 - panasonic_heat_pump/main/Compressor_Current",
        "topic": "panasonic_heat_pump/main/Compressor_Current",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1470,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "d1651e87080d90f8",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP68 - panasonic_heat_pump/main/Force_Heater_State",
        "topic": "panasonic_heat_pump/main/Force_Heater_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1470,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "48e2c885293b875b",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP69 - panasonic_heat_pump/main/Sterilization_State",
        "topic": "panasonic_heat_pump/main/Sterilization_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1460,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "fe2aafaa8bdc8799",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP70 - panasonic_heat_pump/main/Sterilization_Temp",
        "topic": "panasonic_heat_pump/main/Sterilization_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1470,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "72e7b0b211711fd8",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP71 - panasonic_heat_pump/main/Sterilization_Max_Time",
        "topic": "panasonic_heat_pump/main/Sterilization_Max_Time",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1480,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "86b6728a68866ca8",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP72 - panasonic_heat_pump/main/Z1_Cool_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Curve_Target_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "027c8f0bec0b6119",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP73 - panasonic_heat_pump/main/Z1_Cool_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Curve_Target_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "bba5768fe163aa2a",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP74 - panasonic_heat_pump/main/Z1_Cool_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Curve_Outside_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "f36e099dfcc7ac53",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP75 - panasonic_heat_pump/main/Z1_Cool_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Cool_Curve_Outside_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "11b32e3b872a793a",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP76 - panasonic_heat_pump/main/Heating_Mode",
        "topic": "panasonic_heat_pump/main/Heating_Mode",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1450,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "e5ae254ca68ef525",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP77 - panasonic_heat_pump/main/Heating_Off_Outdoor_Temp",
        "topic": "panasonic_heat_pump/main/Heating_Off_Outdoor_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1500,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "7ba298884158c745",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP78 - panasonic_heat_pump/main/Heater_On_Outdoor_Temp",
        "topic": "panasonic_heat_pump/main/Heater_On_Outdoor_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1490,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "6bb9c8ed52f76960",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP79 - panasonic_heat_pump/main/Heat_To_Cool_Temp",
        "topic": "panasonic_heat_pump/main/Heat_To_Cool_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1470,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "cdc5ee6c1f42d72b",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP80 - panasonic_heat_pump/main/Cool_To_Heat_Temp",
        "topic": "panasonic_heat_pump/main/Cool_To_Heat_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1470,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "eb2205d5c933727a",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP81 - panasonic_heat_pump/main/Cooling_Mode",
        "topic": "panasonic_heat_pump/main/Cooling_Mode",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1450,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "650c712a0fe499b7",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP82 - panasonic_heat_pump/main/Z2_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Curve_Target_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "bb9266801d6c85b1",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP83 - panasonic_heat_pump/main/Z2_Heat_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Curve_Target_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "44f1f1b804b6b6ec",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP84 - panasonic_heat_pump/main/Z2_Heat_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Curve_Outside_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "c171638ec83a13d0",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP85 - panasonic_heat_pump/main/Z2_Heat_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Heat_Curve_Outside_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "b69bc2fd929f2f69",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP86 - panasonic_heat_pump/main/Z2_Cool_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Curve_Target_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "5246c3eba68adb8c",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP87 - panasonic_heat_pump/main/Z2_Cool_Curve_Target_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Curve_Target_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "fe3b394d99c12f5b",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP88 - panasonic_heat_pump/main/Z2_Cool_Curve_Outside_High_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Curve_Outside_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "82a0e5bf4db65f0b",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP89 - panasonic_heat_pump/main/Z2_Cool_Curve_Outside_Low_Temp",
        "topic": "panasonic_heat_pump/main/Z2_Cool_Curve_Outside_Low_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "cac2a11400704c96",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP90 - panasonic_heat_pump/main/Room_Heater_Operations_Hours",
        "topic": "panasonic_heat_pump/main/Room_Heater_Operations_Hours",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1510,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "4dc041f3848b0720",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP91 - panasonic_heat_pump/main/DHW_Heater_Operations_Hours",
        "topic": "panasonic_heat_pump/main/DHW_Heater_Operations_Hours",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2110,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "3b09cadd613141c5",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP92 - panasonic_heat_pump/main/Heat_Pump_Model",
        "topic": "panasonic_heat_pump/main/Heat_Pump_Model",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2070,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c757118978a4fcc8",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP93 - panasonic_heat_pump/main/Pump_Duty",
        "topic": "panasonic_heat_pump/main/Pump_Duty",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2040,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f1936d5fa45903d9",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP94 - panasonic_heat_pump/main/Zones_State",
        "topic": "panasonic_heat_pump/main/Zones_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2050,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "fb759671957408dc",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP95 - panasonic_heat_pump/main/Max_Pump_Duty",
        "topic": "panasonic_heat_pump/main/Max_Pump_Duty",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2060,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0c9ef4e213c56446",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP96 - panasonic_heat_pump/main/Heater_Delay_Time",
        "topic": "panasonic_heat_pump/main/Heater_Delay_Time",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2070,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "63211d07162ad3d0",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP97 - panasonic_heat_pump/main/Heater_Start_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Start_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2070,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "691593052fbced88",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP98 - panasonic_heat_pump/main/Heater_Stop_Delta",
        "topic": "panasonic_heat_pump/main/Heater_Stop_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2070,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "a20eb4e6e7da0868",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP99 - panasonic_heat_pump/main/Buffer_Installed",
        "topic": "panasonic_heat_pump/main/Buffer_Installed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8dba7f9d7a0a3b6f",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP100 - panasonic_heat_pump/main/DHW_Installed",
        "topic": "panasonic_heat_pump/main/DHW_Installed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "ba24b481122f2432",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP101 - panasonic_heat_pump/main/Solar_Mode",
        "topic": "panasonic_heat_pump/main/Solar_Mode",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2050,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "f9a05488bb186b4f",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP102 - panasonic_heat_pump/main/Solar_On_Delta",
        "topic": "panasonic_heat_pump/main/Solar_On_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2060,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "bda8d51545c0a735",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP103 - panasonic_heat_pump/main/Solar_Off_Delta",
        "topic": "panasonic_heat_pump/main/Solar_Off_Delta",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2060,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "e91c324579a90113",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP104 - panasonic_heat_pump/main/Solar_Frost_Protection",
        "topic": "panasonic_heat_pump/main/Solar_Frost_Protection",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2080,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "19f73952a47211b6",
        "type": "mqtt in",
        "z": "af4245d118bcd0fb",
        "d": true,
        "name": "TOP105 - panasonic_heat_pump/main/Solar_High_Limit",
        "topic": "panasonic_heat_pump/main/Solar_High_Limit",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2070,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "6f9626925e199786",
        "type": "comment",
        "z": "af4245d118bcd0fb",
        "name": "ALL MQTT Topics",
        "info": "",
        "x": 190,
        "y": 20,
        "wires": []
    },
    {
        "id": "6c72d29677ba013e",
        "type": "comment",
        "z": "af4245d118bcd0fb",
        "name": "MQTT COMMAND",
        "info": "",
        "x": 190,
        "y": 1420,
        "wires": []
    },
    {
        "id": "076d5fab27ea4e15",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET1 SetHeatpump",
        "topic": "panasonic_heat_pump/commands/SetHeatpump",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 200,
        "y": 1480,
        "wires": []
    },
    {
        "id": "770e708b4907af80",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET2 SetHolidayMode",
        "topic": "panasonic_heat_pump/commands/SetHolidayMode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 200,
        "y": 1520,
        "wires": []
    },
    {
        "id": "03fd8ff08dea48e2",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET3 SetQuietMode",
        "topic": "panasonic_heat_pump/commands/SetQuietMode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 200,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b2e22612a38d29d1",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET4 SetPowerfulMode",
        "topic": "panasonic_heat_pump/commands/SetPowerfulMode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 210,
        "y": 1600,
        "wires": []
    },
    {
        "id": "c0f2c5e1edd1b406",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET5 SetZ1HeatRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1HeatRequestTemperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 250,
        "y": 1640,
        "wires": []
    },
    {
        "id": "7bb1952f6a98a6bc",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET6 SetZ1CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1CoolRequestTemperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 250,
        "y": 1680,
        "wires": []
    },
    {
        "id": "8e437297aee4aa81",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET7 SetZ2HeatRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2HeatRequestTemperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 250,
        "y": 1720,
        "wires": []
    },
    {
        "id": "2bc2b2db252b967b",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET8 SetZ2CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2CoolRequestTemperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 250,
        "y": 1760,
        "wires": []
    },
    {
        "id": "73cc4b3e65e0c12c",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET9 SetOperationMode",
        "topic": "panasonic_heat_pump/commands/SetOperationMode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 210,
        "y": 1800,
        "wires": []
    },
    {
        "id": "96a4794a1f59a6d9",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET10 SetForceDHW",
        "topic": "panasonic_heat_pump/commands/SetForceDHW",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 200,
        "y": 1840,
        "wires": []
    },
    {
        "id": "9795b35f1c54bac2",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET11 SetDHWTemp",
        "topic": "panasonic_heat_pump/commands/SetDHWTemp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 560,
        "y": 1480,
        "wires": []
    },
    {
        "id": "45b03c9ab7223cef",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET12 SetForceDefrost",
        "topic": "panasonic_heat_pump/commands/SetForceDefrost",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 570,
        "y": 1520,
        "wires": []
    },
    {
        "id": "b37af9e40f36af6f",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET13 SetForceSterilization",
        "topic": "panasonic_heat_pump/commands/SetForceSterilization",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 580,
        "y": 1560,
        "wires": []
    },
    {
        "id": "77e1c9d78aa4ab12",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET14 SetPump",
        "topic": "panasonic_heat_pump/commands/SetPump",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 550,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d7382582a148031a",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET15 SetMaxPumpDuty",
        "topic": "panasonic_heat_pump/commands/SetMaxPumpDuty",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 570,
        "y": 1640,
        "wires": []
    },
    {
        "id": "cadd2e03f32653d3",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET16 SetCurves",
        "topic": "panasonic_heat_pump/commands/SetCurves",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 550,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1c9eaf2dabf78205",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET17 SetZones",
        "topic": "panasonic_heat_pump/commands/SetZones",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 550,
        "y": 1720,
        "wires": []
    },
    {
        "id": "950903afea3dad99",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET18 SetFloorHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorHeatDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 570,
        "y": 1760,
        "wires": []
    },
    {
        "id": "1ec09e87620b6028",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET19 SetFloorCoolDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorCoolDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 570,
        "y": 1800,
        "wires": []
    },
    {
        "id": "8576f0e8e7ebb552",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET20 SetDHWHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetDHWHeatDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 580,
        "y": 1840,
        "wires": []
    },
    {
        "id": "f2bf75d1cb16dbdd",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET21 SetHeaterDelayTime",
        "topic": "panasonic_heat_pump/commands/SetHeaterDelayTime",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 880,
        "y": 1480,
        "wires": []
    },
    {
        "id": "a938b0077d6d60d6",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET22 SetHeaterStartDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStartDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 880,
        "y": 1520,
        "wires": []
    },
    {
        "id": "1603dead973afc1e",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET23 SetHeaterStopDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStopDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 880,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4dbb33b91c08a0eb",
        "type": "mqtt out",
        "z": "af4245d118bcd0fb",
        "name": "SET24 SetMainSchedule",
        "topic": "panasonic_heat_pump/commands/SetMainSchedule",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 870,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d023d3c6df748a33",
        "type": "comment",
        "z": "af4245d118bcd0fb",
        "name": "These are all the available input channels from the Heishamon. All are disabled to reduce overhead. If you need one, just copy and enable.",
        "info": "",
        "x": 1040,
        "y": 60,
        "wires": []
    },
    {
        "id": "8c9d42231fd19d3c",
        "type": "tab",
        "label": "WP Dash",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3151681b2157872c",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Settings",
        "style": {
            "fill": "#bfbfbf",
            "label": true
        },
        "nodes": [
            "fadad1e2505bf86d",
            "493be73ce31c8c96",
            "9281d7ca9b292f9f",
            "d286bfab06c854b3",
            "69e62408ae1d45fd",
            "c168a66c6bcdd403",
            "2c3aa272de5edf1f",
            "6715b2c07ffdaf0f",
            "0553adb9c09fbd61",
            "b5698233a66f7b04",
            "a32e253444c4fa5a",
            "912e6318c0a1d916",
            "6d5e44060139d9d1",
            "98757de0a2842b4b",
            "43ad0d01b0c84de9",
            "f4f87e6e0f0d5a5a",
            "3513068c4e7086d5",
            "1f4d1ff3b733216c",
            "6fa7661447dd0d86",
            "765b4d77a9fd44cc",
            "d997ac617b48aa1e",
            "98c49c9eca38ccfc",
            "a6faaf6380e6d040",
            "c318be9105a9e8e5",
            "b8e7b80b511e3054",
            "aa26d12b996f9c57",
            "97d91018b611d85e",
            "6c56f45eddcf6890",
            "d4c237094a0d52f9",
            "d66211d6bd2170ac",
            "71bc8ac0ba520e9e",
            "99beaa5dde77b94c",
            "ec2e17164979af03",
            "ad4e8ac090e4b449",
            "9b9c2c12ee2f9256",
            "365cb4a95d68eb3e",
            "0dc2ead6142f18c4",
            "2f424281d9684d3c",
            "563dfa52aaa810b9",
            "f70f86fa82959bf7",
            "1413a5e6aa52a4d3",
            "c6559a95bb3c55fb",
            "17cf53c8acbfb4e1",
            "30554cbb35314761",
            "35835778f1d9f825",
            "4dee981d88ea5cf3",
            "ae99edee7ea44ce2",
            "45a93847a1d11766",
            "ccb9e79ff06190fa",
            "20e2544a8277d8c2",
            "91fa7e389b484d7c",
            "69ea88923a102a5d",
            "7c7fd14d9f6ec530",
            "02af248fc547b96b",
            "b8abd042ad10fed8",
            "2d364a067e4a7b4a",
            "a89b41c6600cac07",
            "e31636baf16e3b69",
            "1f2cb9545d7e212d",
            "ed220320ba9473f3",
            "a6854436b6e1c7e8",
            "fce687f80b334b9e",
            "4118b2ccecf6a6de",
            "81707894b0c1a053",
            "bdb7e8e0217cec66",
            "979c5ca99c054740",
            "859dc9276ee75464",
            "092a9db0d9b923b3",
            "5e3a9447502864ad",
            "f7a9ec88877581f5",
            "2ed9d626c929fb95",
            "9b2a45a90495e067",
            "7139256ff024b872",
            "c803b9ad018fe78e",
            "4021cdadbdc7768d",
            "78816343589b199a",
            "a2d7de4325e4bf91",
            "089ba42c8f7f7a61",
            "3de982eda6f5e1a3",
            "5b0e15b0804a4452",
            "564fcdd537853126",
            "381a37d17ef728cc",
            "cb354767e9f35bc0",
            "df60cdb125adaf72",
            "9b3cba642f3daa70",
            "9e998e80ed82590d",
            "88e644ce965a6890",
            "cdb2547c58ef93e6",
            "cb924439a66154f1"
        ],
        "x": 1114,
        "y": 59,
        "w": 1332,
        "h": 1462
    },
    {
        "id": "3476743a7b29da0d",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Function (WAR)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "01d75eec1bfe68d4",
            "8329aedf9204b75d",
            "9535722dad6d0995",
            "8dcafc6e30726812",
            "9a0e227ed7718d64",
            "4950af3d6534aa47",
            "f2daac0935cc9d81",
            "e07cc2b915729d33",
            "f1d9c2e3346b1e43",
            "388bec4d296db98d",
            "81e0133d16c51789",
            "b991be16b9662a3e",
            "0380b395668eee8e",
            "0ad263e5f3bf4fe9",
            "5b0c451c1ec63b84",
            "080c11bcc5a2ac73",
            "d1e851a03542c949",
            "54284f6b97afb3c7",
            "7febe67492bf7cbe",
            "d9675d9d144e412b",
            "f3f5cc4e789d19f3",
            "714956136652f819",
            "0c8eb8257035ca5f",
            "36a9b7dad9d2611e",
            "ed9858d9cad7cf8c",
            "4633e6a71de81a3c",
            "fa81c798d517834f",
            "4dc131a257d753d0",
            "b92812725c4e8443",
            "5c6e3f50e1a2328b",
            "354fe89415b3f383",
            "ecf47b4f156ae616",
            "aa92d770db68e68b",
            "7526208e06b6adb2",
            "12842f4ef6ffc342"
        ],
        "x": 2534,
        "y": 59,
        "w": 1338,
        "h": 502
    },
    {
        "id": "5c6e3f50e1a2328b",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "charts",
        "style": {
            "label": true
        },
        "nodes": [
            "4d5e9a9dacd2b429",
            "0d58a1e854263ec4"
        ],
        "x": 3574,
        "y": 399,
        "w": 272,
        "h": 122
    },
    {
        "id": "5ab5ca67951ca4de",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Home (WATER)",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "de9229159c024a54",
            "5d54922367195a62",
            "0e09d25e4fd17042",
            "1f5320d7c6b7b567",
            "1d97c2a9ed08db30",
            "9dc0d35330d31725",
            "3478273eb4693d84",
            "1d51b425fba024d2",
            "024bef9dc12b8273",
            "521e419dae5882e7",
            "dcdf16916497a46e",
            "3ac59d9a6138e620"
        ],
        "x": 94,
        "y": 479,
        "w": 932,
        "h": 382
    },
    {
        "id": "6788a89266ed3c87",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Function (SoftStart)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "12e9ac12cf2fde5c",
            "c66f65978915e688",
            "39c4c5d262a3065b",
            "84f7cbc2cc8c135d",
            "2f6dcfe431b67d95",
            "1f4a153d2239272b",
            "881c9c83727201e4",
            "1b40f688e5fbc5dd",
            "4c49268a7054041c",
            "37ae6fb47a326b5e",
            "3578d6b18ceb5727",
            "7bad42f4cc70470e",
            "7790b731fd9a1374",
            "cdf7664223f16687",
            "b5f581c27a02b8a0",
            "6ddc7dc88995af69",
            "2081818c5b84e07f",
            "5ebd5b33f81038ea",
            "bbec5b2f8adad763",
            "1eb00088db267256"
        ],
        "x": 2534,
        "y": 1239,
        "w": 1132,
        "h": 262
    },
    {
        "id": "7c41aa629fb3859e",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Home (DHW)",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "d05d3c50cdd5c516",
            "50b87b6e19d49fae",
            "bd4b6ca0aa2c5e58",
            "158e0bb2b00cd4ba",
            "f01b09fd93f22c7a",
            "50bbeaa9a0ad9305",
            "b19896a5ee0bdecf",
            "14d2ae6b4af7e45e",
            "4982424c661376ea",
            "23197820b73be2c8",
            "c996259cd0aecf74",
            "21345852944158b2",
            "4cfdc172228a42bb",
            "4f19cd39ac4c4be0",
            "64b21d9250184d0a",
            "6bdcf84066368733",
            "8c2afa46f759d9cd",
            "6c42a1a32ed02491"
        ],
        "x": 94,
        "y": 39,
        "w": 952,
        "h": 422
    },
    {
        "id": "a8ac5b148d851a6b",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Function (RTC)",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "1b8f5447c498c1d6",
            "e17b09af13812496",
            "11c68fc0d3095541",
            "e8990d184ea1eca6",
            "b4051f61cf6d4d65",
            "c9df0ea076346fde",
            "e6999514a091fd05",
            "501242b43a1016ea",
            "d3b8865dfdb6d46c",
            "e4c7ba5f1306c384",
            "a0998b9af634354f",
            "aa1f73bbe3eef9e1",
            "9b1f3ccedd4e853b",
            "017e7b4d1642ed42",
            "aae82d0c01404d51",
            "60e33931edeab23f",
            "d54eb37418065aef",
            "3e3f19d365adf7ae",
            "38a2e1df7e0bdb2a",
            "70280ceb93472d58",
            "25b8320badf7ef88",
            "11338381e8665522",
            "67a37e35bedf4e60",
            "ef2eb80766f10dbe",
            "1bb2933854287555",
            "45643e4e39e1d248",
            "8bd536b323fb865c",
            "e861faea1a81715d",
            "dade0dbb40c3945a",
            "9339829f2a70ba46",
            "942f2ca34abfe8ac",
            "dc69bdbe82bc7c6e",
            "604a8e4b260ab341",
            "2acac67ac20fecaa",
            "07ec6cc26e34e858",
            "a859857d1be789c9",
            "38b237621bd70775",
            "023e106e50b945f6",
            "48ac4170551d07e2",
            "e5afa5e58fb2ecef",
            "1f5d513050d612a1",
            "a955b118f456587f",
            "5df3c72cf1808838",
            "1235e7416dbfe5fc"
        ],
        "x": 2534,
        "y": 599,
        "w": 1618,
        "h": 622,
        "info": "# yeah"
    },
    {
        "id": "023e106e50b945f6",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b32f014cb3ec752e",
            "79daf2eea90f8432",
            "032ca56c8c21283e"
        ],
        "x": 3794,
        "y": 1019,
        "w": 332,
        "h": 162
    },
    {
        "id": "c3b7d9597903239c",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Charts Temperature",
        "style": {
            "label": true
        },
        "nodes": [
            "8cb1aceef81045bd",
            "a699dd17ed4185cf",
            "9802bf01ebf45d28",
            "9789265573ab4c80",
            "c9c2bf06edb19d41",
            "0ac806fe66f54c29",
            "c42ef7f9448f3c9a",
            "76fd0cf35b775cdf",
            "9f3df8b1cba0bbda",
            "a734f98c5d02604e"
        ],
        "x": 104,
        "y": 1739,
        "w": 882,
        "h": 322
    },
    {
        "id": "e7187e0c9dc038f0",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Home (ROOM)",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "df23e054023ff412",
            "ea8203d2d9d4529b",
            "719e11414721599e",
            "081dae9f3555ade6",
            "b51f6522ce8b3103"
        ],
        "x": 94,
        "y": 899,
        "w": 932,
        "h": 122
    },
    {
        "id": "f9448182b177e40e",
        "type": "group",
        "z": "8c9d42231fd19d3c",
        "name": "Chart Energy",
        "style": {
            "label": true
        },
        "nodes": [
            "ea3029991749f77b",
            "ec58fd792864f862",
            "fa2eba3089ca0ef4",
            "8fd1613ec2d31e77",
            "3b552bccda090181",
            "ead1f2d77a00861d",
            "8a140f3a3a1ff736",
            "1cbdb190d6f52cb6",
            "fe8e23b8971b868e",
            "b1933566192d3b78",
            "fae151e3fc249477",
            "21857afb8366acf2",
            "039ca8047ee5b833",
            "8e0dc8ab2999f4ec",
            "38b10c117605255d",
            "53393ad3ce2b9113",
            "3a6bb7844523ece7",
            "ca8fd698c67b1cfa",
            "2363c41d934e266c",
            "adf77ab5634ca95a"
        ],
        "x": 94,
        "y": 1059,
        "w": 932,
        "h": 642
    },
    {
        "id": "fadad1e2505bf86d",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Quiet Mode",
        "label": "Quiet Mode",
        "tooltip": "Set quiet mode level",
        "place": "Select option",
        "group": "548e51986bce11b0",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Level 0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Level 1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Level 2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Level 3",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1750,
        "y": 160,
        "wires": [
            [
                "1f4d1ff3b733216c"
            ]
        ]
    },
    {
        "id": "493be73ce31c8c96",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Operation Mode",
        "label": "Operation Mode",
        "tooltip": "Sets operating mode",
        "place": "Select option",
        "group": "548e51986bce11b0",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Heat only",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Cool only",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Auto",
                "value": 2,
                "type": "num"
            },
            {
                "label": "DHW only",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Heat+DHW",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Cool+DHW",
                "value": 5,
                "type": "num"
            },
            {
                "label": "Auto+DHW",
                "value": 6,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1760,
        "y": 220,
        "wires": [
            [
                "6fa7661447dd0d86"
            ]
        ]
    },
    {
        "id": "9281d7ca9b292f9f",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heatpump power",
        "label": "Heatpump power",
        "tooltip": "",
        "group": "fea7672db2f050c9",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1510,
        "y": 100,
        "wires": [
            [
                "3513068c4e7086d5"
            ]
        ]
    },
    {
        "id": "de9229159c024a54",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Compressor",
        "label": "Compressor",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 760,
        "wires": []
    },
    {
        "id": "5d54922367195a62",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "3b23831ccc3641c6"
        ],
        "x": 495,
        "y": 700,
        "wires": [
            [
                "0e09d25e4fd17042"
            ]
        ]
    },
    {
        "id": "0e09d25e4fd17042",
        "type": "ui_gauge",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "Water",
        "group": "bf4af523ba16d457",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Water flow",
        "label": "L/min",
        "format": "{{value}}",
        "min": 0,
        "max": "35",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 890,
        "y": 700,
        "wires": []
    },
    {
        "id": "1f5320d7c6b7b567",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "topic": "panasonic_heat_pump/main/Compressor_Freq",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 320,
        "y": 760,
        "wires": [
            [
                "de9229159c024a54"
            ]
        ]
    },
    {
        "id": "1d97c2a9ed08db30",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "905527b22aae9dc8"
        ],
        "x": 495,
        "y": 640,
        "wires": [
            [
                "3478273eb4693d84"
            ]
        ]
    },
    {
        "id": "9dc0d35330d31725",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "35ca9241fc9fc7a1"
        ],
        "x": 495,
        "y": 580,
        "wires": [
            [
                "1d51b425fba024d2"
            ]
        ]
    },
    {
        "id": "3478273eb4693d84",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Tr (PV) water",
        "label": "Tr (PV)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 640,
        "wires": []
    },
    {
        "id": "1d51b425fba024d2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Ta (PV)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 900,
        "y": 580,
        "wires": []
    },
    {
        "id": "024bef9dc12b8273",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "",
        "links": [
            "12a26bbb7c8070d7"
        ],
        "x": 495,
        "y": 520,
        "wires": [
            [
                "521e419dae5882e7"
            ]
        ]
    },
    {
        "id": "521e419dae5882e7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Ta (SP)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 900,
        "y": 520,
        "wires": []
    },
    {
        "id": "d286bfab06c854b3",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Pomp 100%",
        "label": "Pomp 100%",
        "tooltip": "Set pump speed to maximum",
        "group": "90a62954243731f5",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1490,
        "y": 280,
        "wires": [
            [
                "6715b2c07ffdaf0f"
            ]
        ]
    },
    {
        "id": "6bdcf84066368733",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "links": [
            "aec0cb2b18e02d8b"
        ],
        "x": 155,
        "y": 420,
        "wires": [
            [
                "64b21d9250184d0a"
            ]
        ]
    },
    {
        "id": "4f19cd39ac4c4be0",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "DHW Status",
        "label": "DHW Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 420,
        "wires": []
    },
    {
        "id": "64b21d9250184d0a",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 420,
        "wires": [
            [
                "4f19cd39ac4c4be0"
            ]
        ]
    },
    {
        "id": "d05d3c50cdd5c516",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "SET13 SetForceSterilization",
        "topic": "panasonic_heat_pump/commands/SetForceSterilization",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 900,
        "y": 180,
        "wires": []
    },
    {
        "id": "50b87b6e19d49fae",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Force sterilization",
        "label": "Force sterilization",
        "tooltip": "",
        "group": "e3cc96332cd59f07",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 430,
        "y": 180,
        "wires": [
            [
                "d05d3c50cdd5c516"
            ]
        ]
    },
    {
        "id": "69e62408ae1d45fd",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET1 SetHeatpump",
        "topic": "panasonic_heat_pump/commands/SetHeatpump",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2220,
        "y": 100,
        "wires": []
    },
    {
        "id": "c168a66c6bcdd403",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET3 SetQuietMode",
        "topic": "panasonic_heat_pump/commands/SetQuietMode",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2220,
        "y": 160,
        "wires": []
    },
    {
        "id": "2c3aa272de5edf1f",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET9 SetOperationMode",
        "topic": "panasonic_heat_pump/commands/SetOperationMode",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2230,
        "y": 220,
        "wires": []
    },
    {
        "id": "6715b2c07ffdaf0f",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET14 SetPump",
        "topic": "panasonic_heat_pump/commands/SetPump",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2210,
        "y": 280,
        "wires": []
    },
    {
        "id": "719e11414721599e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "74946a73578ea096",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "HEAT Status",
        "label": "HEAT Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 980,
        "wires": []
    },
    {
        "id": "081dae9f3555ade6",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 980,
        "wires": [
            [
                "719e11414721599e"
            ]
        ]
    },
    {
        "id": "dcdf16916497a46e",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "name": "TOP65 - panasonic_heat_pump/main/Pump_Speed",
        "topic": "panasonic_heat_pump/main/Pump_Speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 310,
        "y": 820,
        "wires": [
            [
                "3ac59d9a6138e620"
            ]
        ]
    },
    {
        "id": "0553adb9c09fbd61",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "TOP62 - panasonic_heat_pump/main/Fan1_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan1_Motor_Speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1630,
        "y": 340,
        "wires": [
            [
                "a32e253444c4fa5a"
            ]
        ]
    },
    {
        "id": "b5698233a66f7b04",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "TOP63 - panasonic_heat_pump/main/Fan2_Motor_Speed",
        "topic": "panasonic_heat_pump/main/Fan2_Motor_Speed",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1630,
        "y": 380,
        "wires": [
            [
                "912e6318c0a1d916"
            ]
        ]
    },
    {
        "id": "a32e253444c4fa5a",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "90a62954243731f5",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Fan1",
        "label": "Fan1",
        "format": "{{msg.payload}} RPM",
        "layout": "row-spread",
        "className": "",
        "x": 2170,
        "y": 340,
        "wires": []
    },
    {
        "id": "912e6318c0a1d916",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "90a62954243731f5",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Fan2",
        "label": "Fan2",
        "format": "{{msg.payload}} RPM",
        "layout": "row-spread",
        "className": "",
        "x": 2170,
        "y": 380,
        "wires": []
    },
    {
        "id": "3ac59d9a6138e620",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "5ab5ca67951ca4de",
        "group": "bf4af523ba16d457",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Pomp snelheid",
        "label": "Pomp snelheid",
        "format": "{{msg.payload}} RPM",
        "layout": "row-spread",
        "className": "",
        "x": 920,
        "y": 820,
        "wires": []
    },
    {
        "id": "bd4b6ca0aa2c5e58",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "SET11 SetDHWTemp",
        "topic": "panasonic_heat_pump/commands/SetDHWTemp",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 880,
        "y": 120,
        "wires": []
    },
    {
        "id": "158e0bb2b00cd4ba",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "DHW (SP)",
        "label": "DHW (SP)",
        "tooltip": "",
        "group": "e3cc96332cd59f07",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "40",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "b19896a5ee0bdecf"
            ]
        ]
    },
    {
        "id": "c996259cd0aecf74",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "TOP70 - panasonic_heat_pump/main/Sterilization_Temp",
        "topic": "panasonic_heat_pump/main/Sterilization_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "23197820b73be2c8"
            ]
        ]
    },
    {
        "id": "23197820b73be2c8",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Sterilization (SP)",
        "label": "Sterilization (SP)",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "21345852944158b2",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "group": "e3cc96332cd59f07",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "DHW (PV)",
        "label": "DHW (PV)",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 360,
        "wires": []
    },
    {
        "id": "f01b09fd93f22c7a",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "SET10 SetForceDHW",
        "topic": "panasonic_heat_pump/commands/SetForceDHW",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 880,
        "y": 240,
        "wires": []
    },
    {
        "id": "50bbeaa9a0ad9305",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Force DHW",
        "label": "Force DHW",
        "tooltip": "",
        "group": "e3cc96332cd59f07",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "f01b09fd93f22c7a"
            ]
        ]
    },
    {
        "id": "1b8f5447c498c1d6",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Woonkamer SP",
        "label": "Livingroom SP",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 11,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "50",
        "step": "0.1",
        "className": "",
        "x": 3080,
        "y": 860,
        "wires": [
            [
                "11c68fc0d3095541"
            ]
        ]
    },
    {
        "id": "e17b09af13812496",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Woonkamer SP (custom)",
        "links": [
            "46aa3584ebd4caad",
            "6d890380e00e164d"
        ],
        "x": 3875,
        "y": 860,
        "wires": []
    },
    {
        "id": "ea8203d2d9d4529b",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "",
        "links": [
            "a22898dfdc4ff0ca"
        ],
        "x": 135,
        "y": 940,
        "wires": [
            [
                "df23e054023ff412"
            ]
        ]
    },
    {
        "id": "df23e054023ff412",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "group": "74946a73578ea096",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "T woonkamer (PV)",
        "label": "T woonkamer (PV)",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 940,
        "wires": []
    },
    {
        "id": "b19896a5ee0bdecf",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 630,
        "y": 120,
        "wires": [
            [
                "bd4b6ca0aa2c5e58"
            ]
        ]
    },
    {
        "id": "11c68fc0d3095541",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 3590,
        "y": 860,
        "wires": [
            [
                "e17b09af13812496"
            ]
        ]
    },
    {
        "id": "4cfdc172228a42bb",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "links": [
            "d54ac3b979428b64"
        ],
        "x": 155,
        "y": 360,
        "wires": [
            [
                "21345852944158b2"
            ]
        ]
    },
    {
        "id": "14d2ae6b4af7e45e",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "",
        "links": [
            "9fd7a12d41a38164",
            "98ba896f152e3e4d",
            "b88933c2ee52fc0f",
            "df7ca836260968a8",
            "56d4bfa341d3eded"
        ],
        "x": 155,
        "y": 240,
        "wires": [
            [
                "50bbeaa9a0ad9305"
            ]
        ]
    },
    {
        "id": "6d5e44060139d9d1",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "links": [
            "c959ee1f94c31c45"
        ],
        "x": 1435,
        "y": 220,
        "wires": [
            [
                "493be73ce31c8c96"
            ]
        ]
    },
    {
        "id": "4982424c661376ea",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Force sterilization",
        "links": [
            "72d21aa95d3c1e7b",
            "3c91774a156ca633",
            "69dba98259785b02",
            "4f62466c41bb3667"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "50b87b6e19d49fae"
            ]
        ]
    },
    {
        "id": "b51f6522ce8b3103",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "e7187e0c9dc038f0",
        "name": "",
        "links": [
            "aec0cb2b18e02d8b"
        ],
        "x": 135,
        "y": 980,
        "wires": [
            [
                "081dae9f3555ade6"
            ]
        ]
    },
    {
        "id": "8cb1aceef81045bd",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Kamer Temperatuur",
        "group": "2a223fd6c0b54acd",
        "order": 1,
        "width": 10,
        "height": 12,
        "label": "Temperatuur",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "20",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "a699dd17ed4185cf",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 910,
        "y": 1780,
        "wires": [
            [
                "8cb1aceef81045bd"
            ]
        ]
    },
    {
        "id": "9802bf01ebf45d28",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Water HEAT",
        "group": "e668c57c8cf470e7",
        "order": 1,
        "width": 9,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 640,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "9789265573ab4c80",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Water DHW",
        "group": "e374621a9f5ac0d6",
        "order": 1,
        "width": 9,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 640,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "43ad0d01b0c84de9",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET15 SetMaxPumpDuty",
        "topic": "panasonic_heat_pump/commands/SetMaxPumpDuty",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2230,
        "y": 500,
        "wires": []
    },
    {
        "id": "98757de0a2842b4b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "conversion function",
        "func": "// SET15 SetMaxPumpDuty decimal value translate to hexadecimal in service menu 64 to 254\n// First find out the upper and lower limit of the waterpump. Trial and arror by injecting a number as payload to the mqtt topic. fill them in in the two lines below!!!\n//\nvar lowerlimit=64; // Lowest value\nvar upperlimit=254; // Hihghes value\n// Note, the default setting was 149, which is ~45%\n\nvar range=(upperlimit-lowerlimit); // This is the range of operation for the waterpump. You need to test this manually and correct the values if needed.\n\n\nmsg.payload = ((msg.payload) / 100 * range) + lowerlimit; // calculation\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 460,
        "wires": [
            [
                "43ad0d01b0c84de9"
            ]
        ]
    },
    {
        "id": "c66f65978915e688",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Softstart on/off",
        "label": "Softstart (experimental)",
        "tooltip": "Turn on/off the softstart function ",
        "group": "1179fa790d2d89ca",
        "order": 11,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 2880,
        "y": 1360,
        "wires": [
            [
                "6ddc7dc88995af69"
            ]
        ]
    },
    {
        "id": "39c4c5d262a3065b",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "set.Correction_2_softstart_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Correction_2_softstart_on_off\",msg.payload,\"file\");\n//global.set(\"Correction_2_softstart_on_off\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3420,
        "y": 1360,
        "wires": [
            [
                "84f7cbc2cc8c135d"
            ]
        ]
    },
    {
        "id": "84f7cbc2cc8c135d",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Correction_2_softstart_on_off",
        "links": [
            "4319ac5a3d23e95a",
            "73ee925b927ed0c6",
            "6d890380e00e164d",
            "12e9ac12cf2fde5c"
        ],
        "x": 3615,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e8990d184ea1eca6",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off",
        "label": "",
        "tooltip": "Room Temperature Correction",
        "group": "1179fa790d2d89ca",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3030,
        "y": 640,
        "wires": [
            [
                "9339829f2a70ba46"
            ]
        ]
    },
    {
        "id": "b4051f61cf6d4d65",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set.Correction_1_RTC_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Correction_1_RTC_on_off\",msg.payload,\"file\");\n//global.set(\"Correction_1_RTC_on_off\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 640,
        "wires": [
            [
                "c9df0ea076346fde"
            ]
        ]
    },
    {
        "id": "c9df0ea076346fde",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Correction_1_heatcurve_on_off",
        "links": [
            "73ee925b927ed0c6",
            "6d890380e00e164d",
            "942f2ca34abfe8ac"
        ],
        "x": 3875,
        "y": 640,
        "wires": []
    },
    {
        "id": "e6999514a091fd05",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "links": [
            "18fd7ac120089042"
        ],
        "x": 2855,
        "y": 1140,
        "wires": [
            [
                "501242b43a1016ea",
                "45643e4e39e1d248"
            ]
        ]
    },
    {
        "id": "501242b43a1016ea",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 22,
        "width": 6,
        "height": 1,
        "name": "Current correction (RTC)",
        "label": "Correction",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3070,
        "y": 1140,
        "wires": []
    },
    {
        "id": "8329aedf9204b75d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "SP_DIRECT_virt",
        "label": "Virtual SP (Ta)",
        "tooltip": "Set the virtual target Ta temperature (Direct) of the heatpump. This can be avalue between 15-35 degrees celsius",
        "group": "1179fa790d2d89ca",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "15",
        "max": "35",
        "step": 1,
        "className": "",
        "x": 2890,
        "y": 140,
        "wires": [
            [
                "9535722dad6d0995"
            ]
        ]
    },
    {
        "id": "9535722dad6d0995",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "set.SP_Ta_(base)",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"SP_DIRECT_virt\",msg.payload,\"file\");\n//global.set(\"SP_DIRECT_virt\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3410,
        "y": 140,
        "wires": [
            [
                "8dcafc6e30726812"
            ]
        ]
    },
    {
        "id": "8dcafc6e30726812",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "SP_DIRECT_virt",
        "links": [
            "73ee925b927ed0c6",
            "6d890380e00e164d"
        ],
        "x": 3555,
        "y": 140,
        "wires": []
    },
    {
        "id": "2f6dcfe431b67d95",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "group": "1179fa790d2d89ca",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "SP Final",
        "label": "Final SP",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3580,
        "y": 1460,
        "wires": []
    },
    {
        "id": "1f4a153d2239272b",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "links": [
            "93404b62f7fb0fb2"
        ],
        "x": 2875,
        "y": 1460,
        "wires": [
            [
                "2f6dcfe431b67d95"
            ]
        ]
    },
    {
        "id": "f4f87e6e0f0d5a5a",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Pump max flow",
        "label": "Pump max flow",
        "tooltip": "",
        "place": "Select option",
        "group": "90a62954243731f5",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "0%",
                "value": 0,
                "type": "num"
            },
            {
                "label": "10%",
                "value": 10,
                "type": "num"
            },
            {
                "label": "20%",
                "value": 20,
                "type": "num"
            },
            {
                "label": "30%",
                "value": 30,
                "type": "num"
            },
            {
                "label": "40%",
                "value": 40,
                "type": "num"
            },
            {
                "label": "50%",
                "value": 50,
                "type": "num"
            },
            {
                "label": "60%",
                "value": 60,
                "type": "num"
            },
            {
                "label": "70%",
                "value": 70,
                "type": "num"
            },
            {
                "label": "80%",
                "value": 80,
                "type": "num"
            },
            {
                "label": "90%",
                "value": 90,
                "type": "num"
            },
            {
                "label": "100%",
                "value": 100,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1500,
        "y": 460,
        "wires": [
            [
                "4118b2ccecf6a6de",
                "81707894b0c1a053"
            ]
        ]
    },
    {
        "id": "9a0e227ed7718d64",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_ot1",
        "label": "",
        "tooltip": "",
        "group": "052caff3b2365345",
        "order": 7,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot1",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "step": 1,
        "className": "",
        "x": 2940,
        "y": 320,
        "wires": [
            [
                "0ad263e5f3bf4fe9"
            ]
        ]
    },
    {
        "id": "4950af3d6534aa47",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_ot3",
        "label": "",
        "tooltip": "",
        "group": "052caff3b2365345",
        "order": 13,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot3",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-20",
        "max": "40",
        "step": 1,
        "className": "",
        "x": 2940,
        "y": 400,
        "wires": [
            [
                "0ad263e5f3bf4fe9"
            ]
        ]
    },
    {
        "id": "f2daac0935cc9d81",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_wt3",
        "label": "",
        "tooltip": "",
        "group": "052caff3b2365345",
        "order": 15,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt3",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "step": 1,
        "className": "",
        "x": 3100,
        "y": 400,
        "wires": [
            [
                "0ad263e5f3bf4fe9"
            ]
        ]
    },
    {
        "id": "e07cc2b915729d33",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_wt2",
        "label": "",
        "tooltip": "",
        "group": "052caff3b2365345",
        "order": 12,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt2",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "step": 1,
        "className": "",
        "x": 3100,
        "y": 360,
        "wires": [
            [
                "0ad263e5f3bf4fe9"
            ]
        ]
    },
    {
        "id": "f1d9c2e3346b1e43",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_ot2",
        "label": "",
        "tooltip": "",
        "group": "052caff3b2365345",
        "order": 10,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_ot2",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-20",
        "max": "40",
        "step": 1,
        "className": "",
        "x": 2940,
        "y": 360,
        "wires": [
            [
                "0ad263e5f3bf4fe9"
            ]
        ]
    },
    {
        "id": "388bec4d296db98d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "war_wt1",
        "label": "",
        "tooltip": "",
        "group": "052caff3b2365345",
        "order": 9,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "war_wt1",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "step": 1,
        "className": "",
        "x": 3100,
        "y": 320,
        "wires": [
            [
                "0ad263e5f3bf4fe9"
            ]
        ]
    },
    {
        "id": "81e0133d16c51789",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR on/off",
        "label": "",
        "tooltip": "Turn on/off the weather correction function",
        "group": "1179fa790d2d89ca",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "Correction_0_WAR_on_off",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 2950,
        "y": 260,
        "wires": [
            [
                "7526208e06b6adb2"
            ]
        ]
    },
    {
        "id": "b991be16b9662a3e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "set.Correction_0_WAR_on_off",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Correction_0_WAR_on_off\",msg.payload,\"file\");\n//global.set(\"Correction_0_WAR_on_off\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3370,
        "y": 260,
        "wires": [
            [
                "0380b395668eee8e"
            ]
        ]
    },
    {
        "id": "0380b395668eee8e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Correction_0_WAR_on_off",
        "links": [
            "73ee925b927ed0c6",
            "6d890380e00e164d",
            "71e07c20ca7b799b",
            "01d75eec1bfe68d4"
        ],
        "x": 3555,
        "y": 260,
        "wires": []
    },
    {
        "id": "0ad263e5f3bf4fe9",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "set.war_ot_wt",
        "func": "varName = msg.topic\nmsg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(varName,msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2800,
        "y": 460,
        "wires": [
            [
                "5b0c451c1ec63b84"
            ]
        ]
    },
    {
        "id": "5b0c451c1ec63b84",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Chart WAR",
        "func": "var war_Tb          = global.get('T_outside',\"file\");                           // Outdoor temperature.\nvar SP_war          = global.get('SP_war');                                     // Setpoint after the WAR calculation done in (other) function.\n\nvar war_ot1         = global.get('war_ot1',\"file\");\nvar war_ot2         = global.get('war_ot2',\"file\");\nvar war_ot3         = global.get('war_ot3',\"file\");\n\nvar war_wt1         = global.get('war_wt1',\"file\");\nvar war_wt2         = global.get('war_wt2',\"file\");\nvar war_wt3         = global.get('war_wt3',\"file\");\n\n// Design example\n//          OUTSIDE                 WATER\n//          Temperature     >>      Temperature\n//----------------------------------------------------------------------------\n// Range 1\n//          (OT1=)  20      >>  25  (=WT1)\n// Range 2\n//          (OT2=)  5       >>  31  (=WT2)\n// Range 3\n//          (OT3=)  -10     >>  37  (=WT3)\n// Range 4\n//----------------------------------------------------------------------------\n//\n//\n// math part \n// Y = aX + b\n// X axis = ot variable\n// Y axis = wt variable\nvar a;\nvar b;\n\nif (war_Tb <= war_ot3)                                                          // Range 1 in the graph\n    {   a = 0;\n        b = war_wt3;\n    }\n\nif (war_Tb > war_ot2)                                                           // Range 2 in the graph\n    {   a = ((war_wt2-war_wt1)/(war_ot2-war_ot1));\n        b = (war_wt1-(war_ot1*a));\n    }\n    \nif (war_Tb <= war_ot2)                                                          // Range 3 in the graph\n    {   a = ((war_wt3-war_wt2)/(war_ot3-war_ot2));\n        b = (war_wt2-(war_ot2*a));\n    }\n    \nif (war_Tb >= war_ot1)                                                          // Range 4 in the graph\n    {   a = 0;\n        b = war_wt1;\n    }\n\n// Chart part. \n// Here the chart is created with the variables.\n// Part 1 of the chart plots the WAR temperature profile set by the values on the page. \n// Part 2 of the chart plots the line which represents the actual temperature to water temperature. To read it easier.\n// Part 3 of the chart plots the ranges so the chart will be more stable on screen, not messing around with chart axis.\n\nvar chart =     [{\n    \"series\":   [\"Water\",\"Actual\",''],\n    \"data\": [\n                [\n                {\"x\":(war_ot1+15),\"y\":war_wt1},                                 // chart part 1: WAR program series\n                {\"x\":(war_ot1),\"y\":war_wt1},\n                {\"x\":(war_ot2),\"y\":war_wt2},\n                {\"x\":(war_ot3),\"y\":war_wt3},\n                {\"x\":(war_ot3-15),\"y\":war_wt3}\n                ],\n                \n                [\n                {\"x\":(war_ot3-15),  \"y\":((a*war_Tb)+b)},                        // chart part 2: Actual lines which make use of the function above.\n                {\"x\":(war_Tb),      \"y\":((a*war_Tb)+b)},\n                {\"x\":(war_Tb),      \"y\":war_wt1-5},\n                ],\n                \n                [                                                               // chart part 3: X-Y as with fixed ranges to make it look more stable.\n                {\"x\":(war_ot3-15),\"y\":(war_wt3+5)},\n                {\"x\":(war_ot3-15),\"y\":(war_wt1-5)},\n                {\"x\":(war_ot1+15),\"y\":(war_wt1-5)}\n                ]\n\n            ],    \n    \"labels\":[ \"\",\"\" ]\n}];\n\n\n\nlet msg1={}, msg2={}, msg3={};\nmsg.payload = chart; msg2.payload = war_Tb; msg3.payload = SP_war\n\nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='T outside';\n\nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='SP WAR';\n\nreturn [msg, msg2, msg3];\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3170,
        "y": 480,
        "wires": [
            [
                "4d5e9a9dacd2b429"
            ],
            [
                "7febe67492bf7cbe",
                "0d58a1e854263ec4",
                "12842f4ef6ffc342"
            ],
            [
                "0d58a1e854263ec4"
            ]
        ],
        "outputLabels": [
            "Real chart",
            "T_outside",
            ""
        ]
    },
    {
        "id": "4d5e9a9dacd2b429",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "",
        "group": "9b8ec8b1b9f66309",
        "order": 1,
        "width": 11,
        "height": 8,
        "label": "WAR Temperature profile",
        "chartType": "line",
        "legend": "false",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "war_wt3+5",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#333333",
            "#000000",
            "#000000",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e5afa5e58fb2ecef",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 2680,
        "y": 720,
        "wires": [
            [
                "48ac4170551d07e2"
            ]
        ]
    },
    {
        "id": "48ac4170551d07e2",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Load on boot RTC",
        "func": "var var1            = global.get('Correction_1_RTC_on_off',\"file\");\nvar var2            = global.get('WoonkamerSP',\"file\");\nvar var3            = global.get('rtc_t1',\"file\");\nvar var4            = global.get('rtc_t2',\"file\");\nvar var5            = global.get('rtc_t3',\"file\");\nvar var6            = global.get('rtc_t4',\"file\");\nvar var7            = global.get('rtc_t5',\"file\");\nvar var8            = global.get('rtc_t6',\"file\");\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={};\n\n\nmsg1.payload = var1;\nif(var1 === undefined) {msg1=null;}\nmsg2.payload = var2;\nif(var2 === undefined) {msg2=null;}\nmsg3.payload = var3;\nif(var3 === undefined) {msg3=null;}\nmsg4.payload = var4;\nif(var4 === undefined) {msg4=null;}\nmsg5.payload = var5;\nif(var5 === undefined) {msg5=null;}\nmsg6.payload = var6;\nif(var6 === undefined) {msg6=null;}\nmsg7.payload = var7;\nif(var7 === undefined) {msg7=null;}\nmsg8.payload = var8;\nif(var8 === undefined) {msg8=null;}\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8];\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 800,
        "wires": [
            [
                "e8990d184ea1eca6",
                "25b8320badf7ef88"
            ],
            [
                "1b8f5447c498c1d6"
            ],
            [
                "d3b8865dfdb6d46c"
            ],
            [
                "e4c7ba5f1306c384"
            ],
            [
                "a0998b9af634354f"
            ],
            [
                "aa1f73bbe3eef9e1"
            ],
            [
                "9b1f3ccedd4e853b"
            ],
            [
                "017e7b4d1642ed42"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off",
            "WoonkamerSP",
            "rtc_t1",
            "rtc_t2",
            "rtc_t3",
            "rtc_t4",
            "rtc_t5",
            "rtc_t6"
        ]
    },
    {
        "id": "080c11bcc5a2ac73",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "links": [
            "d16f38ef74db786a"
        ],
        "x": 2795,
        "y": 520,
        "wires": [
            [
                "d9675d9d144e412b"
            ]
        ]
    },
    {
        "id": "d1e851a03542c949",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "T Outside",
        "label": "Outside",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2940,
        "y": 300,
        "wires": []
    },
    {
        "id": "54284f6b97afb3c7",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 6,
        "width": 2,
        "height": 1,
        "name": "T water",
        "label": "Water",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3100,
        "y": 300,
        "wires": []
    },
    {
        "id": "7febe67492bf7cbe",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 18,
        "width": 2,
        "height": 1,
        "name": "T outside",
        "label": "",
        "format": "{{msg.payload}} °C",
        "layout": "row-center",
        "className": "",
        "x": 3340,
        "y": 420,
        "wires": []
    },
    {
        "id": "d9675d9d144e412b",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 20,
        "width": 2,
        "height": 1,
        "name": "SP (WAR)",
        "label": "",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3370,
        "y": 520,
        "wires": []
    },
    {
        "id": "f3f5cc4e789d19f3",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 17,
        "width": 5,
        "height": 1,
        "name": "Current",
        "label": "Actual",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3280,
        "y": 340,
        "wires": []
    },
    {
        "id": "714956136652f819",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "052caff3b2365345",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "Settings",
        "label": "Profile settings",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 3280,
        "y": 320,
        "wires": []
    },
    {
        "id": "0c8eb8257035ca5f",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR on/off",
        "label": "WAR on/off",
        "tooltip": "Turn on/off the weather correction function",
        "group": "052caff3b2365345",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Correction_0_WAR_on_off",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 2970,
        "y": 240,
        "wires": [
            [
                "7526208e06b6adb2"
            ]
        ]
    },
    {
        "id": "d3b8865dfdb6d46c",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t1",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 5,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t1",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3050,
        "y": 800,
        "wires": [
            [
                "aae82d0c01404d51",
                "38a2e1df7e0bdb2a"
            ]
        ]
    },
    {
        "id": "e4c7ba5f1306c384",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t2",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 7,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t2",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3170,
        "y": 800,
        "wires": [
            [
                "aae82d0c01404d51",
                "38a2e1df7e0bdb2a"
            ]
        ]
    },
    {
        "id": "a0998b9af634354f",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t3",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 9,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t3",
        "topicType": "str",
        "format": "{{value}}",
        "min": "0",
        "max": "+5",
        "step": "0.1",
        "className": "",
        "x": 3290,
        "y": 800,
        "wires": [
            [
                "aae82d0c01404d51",
                "38a2e1df7e0bdb2a"
            ]
        ]
    },
    {
        "id": "aa1f73bbe3eef9e1",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t4",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 14,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t4",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3050,
        "y": 980,
        "wires": [
            [
                "aae82d0c01404d51",
                "38a2e1df7e0bdb2a"
            ]
        ]
    },
    {
        "id": "9b1f3ccedd4e853b",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t5",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 16,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t5",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3170,
        "y": 980,
        "wires": [
            [
                "aae82d0c01404d51",
                "38a2e1df7e0bdb2a"
            ]
        ]
    },
    {
        "id": "017e7b4d1642ed42",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "rtc_t6",
        "label": "",
        "tooltip": "",
        "group": "e27cfec311892d88",
        "order": 18,
        "width": 2,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "rtc_t6",
        "topicType": "str",
        "format": "{{value}}",
        "min": "-5",
        "max": "0",
        "step": "0.1",
        "className": "",
        "x": 3290,
        "y": 980,
        "wires": [
            [
                "aae82d0c01404d51",
                "38a2e1df7e0bdb2a"
            ]
        ]
    },
    {
        "id": "aae82d0c01404d51",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "set.rtc_t_ranges",
        "func": "varName = msg.topic\nmsg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(varName,msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3620,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "60e33931edeab23f",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 4,
        "width": 3,
        "height": 3,
        "name": "Warm limits",
        "label": "Too warm",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 2910,
        "y": 800,
        "wires": []
    },
    {
        "id": "d54eb37418065aef",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "RTC Settings",
        "label": "RTC Settings",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2910,
        "y": 760,
        "wires": []
    },
    {
        "id": "3e3f19d365adf7ae",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 13,
        "width": 3,
        "height": 3,
        "name": "Cold limits",
        "label": "Too cold",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 2910,
        "y": 980,
        "wires": []
    },
    {
        "id": "38a2e1df7e0bdb2a",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Chart RTC",
        "func": "var rtc_SP          = global.get('WoonkamerSP',\"file\");                         // SetPoint of room temperature.\nvar rtc_PV          = global.get('T_woonkamer_BT');                             // Measurement of room temperature \nvar rtc_t1          = global.get('rtc_t1',\"file\");\nvar rtc_t2          = global.get('rtc_t2',\"file\");\nvar rtc_t3          = global.get('rtc_t3',\"file\");\n\nvar rtc_t4          = global.get('rtc_t4',\"file\");\nvar rtc_t5          = global.get('rtc_t5',\"file\");\nvar rtc_t6          = global.get('rtc_t6',\"file\");\n\nvar rtc_vvw1        = global.get('T_woonkamer_BT3_vvw');                        // Measurement of room temperature \nvar rtc_vvw2        = global.get('T_woonkamer_BT4_vvw');                        // Measurement of room temperature \n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={};\n\n\nmsg1.payload = rtc_SP;                                                          //\nmsg1.payload = Number(msg1.payload).toFixed(1);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='Room SP';                                                                // \n\nmsg2.payload = rtc_PV;                                                          // \nmsg2.payload = Number(msg2.payload).toFixed(2);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='Room PV';                                                                // \n\nmsg3.payload = (rtc_SP+rtc_t1);                                                 // \nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='-3';                                                          // \n\nmsg4.payload = (rtc_SP+rtc_t2);                                                 // \nmsg4.payload = Number(msg4.payload).toFixed(1);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='-2';                                                          // \n\nmsg5.payload = (rtc_SP+rtc_t3);                                                 // \nmsg5.payload = Number(msg5.payload).toFixed(1);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='-1';                                                          // \n\nmsg6.payload = (rtc_SP+rtc_t4);                                                 // \nmsg6.payload = Number(msg6.payload).toFixed(1);\nmsg6.payload = parseFloat(msg6.payload);\nmsg6.topic='+1';                                                          // \n\nmsg7.payload = (rtc_SP+rtc_t5);                                                 // \nmsg7.payload = Number(msg7.payload).toFixed(1);\nmsg7.payload = parseFloat(msg7.payload);\nmsg7.topic='+2';                                                          // \n\nmsg8.payload = (rtc_SP+rtc_t6);                                                 // \nmsg8.payload = Number(msg8.payload).toFixed(1);\nmsg8.payload = parseFloat(msg8.payload);\nmsg8.topic='+3';                                                          // \n\nmsg9.payload = rtc_vvw1;                                                        // \nmsg9.payload = Number(msg9.payload).toFixed(2);\nmsg9.payload = parseFloat(msg9.payload);\nmsg9.topic='Floor T1';\n\nmsg10.payload = rtc_vvw2;                                                        // \nmsg10.payload = Number(msg10.payload).toFixed(2);\nmsg10.payload = parseFloat(msg10.payload);\nmsg10.topic='Floor T2';  \n\n\nreturn [[msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10], msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3610,
        "y": 1020,
        "wires": [
            [
                "b32f014cb3ec752e"
            ],
            [
                "dade0dbb40c3945a"
            ]
        ],
        "outputLabels": [
            "chart",
            "rtc_PV"
        ]
    },
    {
        "id": "b32f014cb3ec752e",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "",
        "group": "7267dafd7dc99038",
        "order": 1,
        "width": 12,
        "height": 14,
        "label": "RoomTemperatureCorrection Chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "20",
        "ymax": "27",
        "removeOlder": "12",
        "removeOlderPoints": "2000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#7bd152",
            "#0011ff",
            "#b22222",
            "#dc7f27",
            "#ffd700",
            "#ffd700",
            "#dc7f27",
            "#b22222",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3960,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "70280ceb93472d58",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 3420,
        "y": 1060,
        "wires": [
            [
                "38a2e1df7e0bdb2a"
            ]
        ]
    },
    {
        "id": "79daf2eea90f8432",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 4050,
        "y": 1060,
        "wires": [
            [
                "b32f014cb3ec752e"
            ]
        ]
    },
    {
        "id": "25b8320badf7ef88",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC on/off",
        "label": "RTC on/off",
        "tooltip": "Turn on/off the RoomTemperatureCorrection. ",
        "group": "e27cfec311892d88",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3190,
        "y": 640,
        "wires": [
            [
                "9339829f2a70ba46"
            ]
        ]
    },
    {
        "id": "11338381e8665522",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "links": [
            "d16f38ef74db786a"
        ],
        "x": 2855,
        "y": 1100,
        "wires": [
            [
                "67a37e35bedf4e60"
            ]
        ]
    },
    {
        "id": "67a37e35bedf4e60",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 21,
        "width": 6,
        "height": 1,
        "name": "Start SP (RTC)",
        "label": "Start SP",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3040,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ef2eb80766f10dbe",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 23,
        "width": 6,
        "height": 1,
        "name": "Result SP (RTC)",
        "label": "Result SP",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3050,
        "y": 1180,
        "wires": []
    },
    {
        "id": "1bb2933854287555",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "links": [
            "5f233c0fd1ffa550"
        ],
        "x": 2855,
        "y": 1180,
        "wires": [
            [
                "ef2eb80766f10dbe"
            ]
        ]
    },
    {
        "id": "032ca56c8c21283e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "023e106e50b945f6",
        "group": "7267dafd7dc99038",
        "order": 2,
        "width": 12,
        "height": 1,
        "name": "footnote",
        "label": "This chart shows 1 datapoint every 60 seconds",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3880,
        "y": 1140,
        "wires": []
    },
    {
        "id": "36a9b7dad9d2611e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "9b8ec8b1b9f66309",
        "order": 2,
        "width": 11,
        "height": 1,
        "name": "X-axis:",
        "label": "X-axis: Outside temperature.",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 3430,
        "y": 340,
        "wires": []
    },
    {
        "id": "ed9858d9cad7cf8c",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "9b8ec8b1b9f66309",
        "order": 3,
        "width": 11,
        "height": 1,
        "name": "Y-axis",
        "label": "Y-axis: Water temperature.",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 3430,
        "y": 320,
        "wires": []
    },
    {
        "id": "881c9c83727201e4",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "group": "1179fa790d2d89ca",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "Current war value",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 3550,
        "y": 1280,
        "wires": []
    },
    {
        "id": "45643e4e39e1d248",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "1179fa790d2d89ca",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "Current rtc value",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 3280,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1b40f688e5fbc5dd",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "group": "1179fa790d2d89ca",
        "order": 13,
        "width": 2,
        "height": 1,
        "name": "Current correction (SS)",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3530,
        "y": 1420,
        "wires": []
    },
    {
        "id": "4c49268a7054041c",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "links": [
            "16054e8334890ad8"
        ],
        "x": 2875,
        "y": 1420,
        "wires": [
            [
                "1b40f688e5fbc5dd",
                "cdf7664223f16687"
            ]
        ]
    },
    {
        "id": "4633e6a71de81a3c",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "1179fa790d2d89ca",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "Function on/off",
        "label": "Function",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2960,
        "y": 180,
        "wires": []
    },
    {
        "id": "37ae6fb47a326b5e",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "SS chart",
        "group": "4551542d51501ce1",
        "order": 1,
        "width": 25,
        "height": 5,
        "label": "Softstart Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "2000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3580,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "3578d6b18ceb5727",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Chart SS",
        "func": "var ss_SP           = global.get('SP_Final',\"file\");                // Current compressor frequency.\nvar ss_Tr           = global.get('Main_Inlet_Temp');                             // Measurement of room temperature \nvar ss_Ta           = global.get('Main_Outlet_Temp');\nvar ss_hz           = global.get('compressor_frequency',\"file\");\nvar ss_corr         = global.get('Correction_2_softstart',\"file\");\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={};\n\n\nmsg1.payload = ss_SP;                                                           //\nmsg1.payload = Number(msg1.payload).toFixed(1);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='Setpoint';                                                          // \n\nmsg2.payload = ss_Tr;                                                           // required\nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='Water inlet';                                                       // required\n\nmsg3.payload = ss_Ta;                                                           // required\nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='Water outlet';                                                      // required\n\nmsg4.payload = ss_hz;                                                           // required\nmsg4.payload = Number(msg4.payload).toFixed(0);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='Frequency';                                                         // required\n\n\nmsg5.payload = ss_corr;                                                           // required\nmsg5.payload = Number(msg5.payload).toFixed(0);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='ss_correction';                                                     // required\n\n\n\nreturn [[msg1, msg2, msg3, msg4, msg5]];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 1320,
        "wires": [
            [
                "37ae6fb47a326b5e"
            ]
        ]
    },
    {
        "id": "7bad42f4cc70470e",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 3020,
        "y": 1320,
        "wires": [
            [
                "3578d6b18ceb5727"
            ]
        ]
    },
    {
        "id": "7790b731fd9a1374",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Softstart on/off",
        "label": "Softstart (experimental)",
        "tooltip": "Turn on/off the softstart function ",
        "group": "4551542d51501ce1",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 3000,
        "y": 1360,
        "wires": [
            [
                "6ddc7dc88995af69"
            ]
        ]
    },
    {
        "id": "cdf7664223f16687",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "group": "4551542d51501ce1",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Current correction (SS)",
        "label": "Current correction",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3530,
        "y": 1400,
        "wires": []
    },
    {
        "id": "c9c2bf06edb19d41",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Chart Water (ROOM)",
        "func": "var SP_Ta                   = global.get('SP_Final',\"file\");                    // Current Setpoint Ta\nvar PV_Tr                   = global.get('Main_Inlet_Temp');                    // Current inlet temperature\nvar PV_Ta                   = global.get('Main_Outlet_Temp');                   // Current outlet temperature\nvar DHW_Temp                = global.get('DHW_Temp');                           // Current TANK temperature\nvar ThreeWay_Valve_State    = global.get(\"ThreeWay_Valve_State\");               // Current state of the 3-way valve\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={};\n\nmsg1.payload = SP_Ta;                                                           //\nmsg1.payload = Number(msg1.payload).toFixed(0);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='SP Ta';                                                             // \n\nmsg2.payload = PV_Tr;                                                           // \nmsg2.payload = Number(msg2.payload).toFixed(1);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='PV Tr';                                                             // \n\nmsg3.payload = PV_Ta;                                                           // \nmsg3.payload = Number(msg3.payload).toFixed(1);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='PV Ta';                                                             // \n\nmsg4.payload = ThreeWay_Valve_State;                                            // \nmsg4.payload = Number(msg4.payload).toFixed(0);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='ThreeWay Valve State';                                              //  \n\nmsg5.payload = DHW_Temp;                                                        // \nmsg5.payload = Number(msg5.payload).toFixed(0);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='Tank PV';                                                           //  \n\n\n\n// ThreeWay_Valve_state = ROOM mode > output value to pin 1\nif (ThreeWay_Valve_State == 0) {\n    return [ [msg1, msg2, msg3] , null ];\n    } \n\n// ThreeWay_Valve_state = DHW mode > output value to pin 2, including the PV_Tank\nelse {\n    return [ null , [msg1, msg2, msg3, msg5] ];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1960,
        "wires": [
            [
                "9802bf01ebf45d28"
            ],
            [
                "9789265573ab4c80"
            ]
        ]
    },
    {
        "id": "0ac806fe66f54c29",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 230,
        "y": 1960,
        "wires": [
            [
                "c9c2bf06edb19d41"
            ]
        ]
    },
    {
        "id": "c42ef7f9448f3c9a",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 760,
        "y": 1900,
        "wires": [
            [
                "9802bf01ebf45d28"
            ]
        ]
    },
    {
        "id": "76fd0cf35b775cdf",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 760,
        "y": 2020,
        "wires": [
            [
                "9789265573ab4c80"
            ]
        ]
    },
    {
        "id": "9f3df8b1cba0bbda",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Chart Roomtemperatures",
        "func": "var SP                          = global.get('SP_Final',\"file\");                // Current Setpoint of the water (Ta)\nvar T_woonkamer_BT              = global.get('T_woonkamer_BT');                 // Current Livingroom sensor 1 (air)\nvar T_woonkamer_BT2             = global.get('T_woonkamer_BT2');                // Current Livingroom sensor 2 (air)\nvar T_woonkamer_BT3_vvw         = global.get('T_woonkamer_BT3_vvw');            // Current Livingroom sensor 3 (floor)\nvar T_woonkamer_BT4_vvw         = global.get('T_woonkamer_BT4_vvw');            // Current Livingroom sensor 4 (floor)\nvar Tado                        = global.get(\"Tado_Thermostaat_Temp\");          // Current Livingroom sensor 5 (floor)\nvar Echo_Temp                   = global.get(\"Echo_Temp\");                      // Current Livingroom sensor 6 (ECHO)\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={};\n\nmsg1.payload = SP;\nmsg1.payload = Number(msg1.payload).toFixed(2);\nmsg1.payload = parseFloat(msg1.payload);\nmsg1.topic='SP Ta';\n\nmsg2.payload = T_woonkamer_BT;\nmsg2.payload = Number(msg2.payload).toFixed(2);\nmsg2.payload = parseFloat(msg2.payload);\nmsg2.topic='Woonkamer PV (bt)';\n\nmsg3.payload = T_woonkamer_BT2;\nmsg3.payload = Number(msg3.payload).toFixed(2);\nmsg3.payload = parseFloat(msg3.payload);\nmsg3.topic='Woonkamer PV2 (bt)'; \n\nmsg4.payload = T_woonkamer_BT3_vvw;\nmsg4.payload = Number(msg4.payload).toFixed(2);\nmsg4.payload = parseFloat(msg4.payload);\nmsg4.topic='T_woonkamer_BT3_vvw';\n\nmsg5.payload = T_woonkamer_BT4_vvw;\nmsg5.payload = Number(msg5.payload).toFixed(1);\nmsg5.payload = parseFloat(msg5.payload);\nmsg5.topic='T_woonkamer_BT4_vvw';\n\nmsg6.payload = Tado;\nmsg6.payload = Number(msg6.payload).toFixed(1);\nmsg6.payload = parseFloat(msg6.payload);\nmsg6.topic='Tado';  \n\nmsg7.payload = Echo_Temp;\nmsg7.payload = Number(msg7.payload).toFixed(1);\nmsg7.payload = parseFloat(msg7.payload);\nmsg7.topic='Echo'; \n\nreturn [[msg1, msg2, msg3, msg4, msg5, msg6, msg7]];\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1820,
        "wires": [
            [
                "8cb1aceef81045bd"
            ]
        ]
    },
    {
        "id": "a734f98c5d02604e",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "c3b7d9597903239c",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 240,
        "y": 1820,
        "wires": [
            [
                "9f3df8b1cba0bbda"
            ]
        ]
    },
    {
        "id": "fa81c798d517834f",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "WAR part",
        "info": "",
        "x": 2640,
        "y": 100,
        "wires": []
    },
    {
        "id": "8bd536b323fb865c",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "RTC part",
        "info": "",
        "x": 2640,
        "y": 640,
        "wires": []
    },
    {
        "id": "e861faea1a81715d",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "SP >>",
        "info": "",
        "x": 2630,
        "y": 680,
        "wires": []
    },
    {
        "id": "b5f581c27a02b8a0",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "SS part",
        "info": "",
        "x": 2630,
        "y": 1280,
        "wires": []
    },
    {
        "id": "4dc131a257d753d0",
        "type": "comment",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "SP >>",
        "info": "",
        "x": 2630,
        "y": 140,
        "wires": []
    },
    {
        "id": "dade0dbb40c3945a",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 12,
        "width": 6,
        "height": 1,
        "name": "Livingroom PV",
        "label": "Livingroom PV",
        "format": "{{msg.payload}} °C ",
        "layout": "row-spread",
        "className": "",
        "x": 3080,
        "y": 900,
        "wires": []
    },
    {
        "id": "0d58a1e854263ec4",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "5c6e3f50e1a2328b",
        "name": "",
        "group": "405b26e8a7e1985d",
        "order": 1,
        "width": 10,
        "height": 10,
        "label": "WAR Time chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "40",
        "removeOlder": "12",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#333333",
            "#000000",
            "#000000",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3680,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "b92812725c4e8443",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Trigger at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 3000,
        "y": 480,
        "wires": [
            [
                "5b0c451c1ec63b84"
            ]
        ]
    },
    {
        "id": "ea3029991749f77b",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP15 - panasonic_heat_pump/main/Heat_Energy_Production",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Production",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 350,
        "y": 1100,
        "wires": [
            [
                "38b10c117605255d"
            ]
        ]
    },
    {
        "id": "ec58fd792864f862",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP16 - panasonic_heat_pump/main/Heat_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Consumption",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 350,
        "y": 1140,
        "wires": [
            [
                "53393ad3ce2b9113"
            ]
        ]
    },
    {
        "id": "fa2eba3089ca0ef4",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "group": "fb77ab43998a2f18",
        "order": 1,
        "width": 26,
        "height": 8,
        "label": "Energy",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#056647",
            "#d1102b",
            "#0082cd",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 940,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "8fd1613ec2d31e77",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "topic": "panasonic_heat_pump/main/Defrosting_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 380,
        "y": 1460,
        "wires": [
            [
                "21857afb8366acf2"
            ]
        ]
    },
    {
        "id": "3b552bccda090181",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP40 - panasonic_heat_pump/main/DHW_Energy_Production",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Production",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 350,
        "y": 1220,
        "wires": [
            [
                "3a6bb7844523ece7"
            ]
        ]
    },
    {
        "id": "ead1f2d77a00861d",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP41 - panasonic_heat_pump/main/DHW_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/DHW_Energy_Consumption",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 360,
        "y": 1280,
        "wires": [
            [
                "ca8fd698c67b1cfa"
            ]
        ]
    },
    {
        "id": "8a140f3a3a1ff736",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP67 - panasonic_heat_pump/main/Compressor_Current",
        "topic": "panasonic_heat_pump/main/Compressor_Current",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 370,
        "y": 1400,
        "wires": [
            [
                "fae151e3fc249477"
            ]
        ]
    },
    {
        "id": "1cbdb190d6f52cb6",
        "type": "ui_chart",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "group": "fb77ab43998a2f18",
        "order": 2,
        "width": 26,
        "height": 7,
        "label": "Efficiency",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 920,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "7526208e06b6adb2",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 3130,
        "y": 240,
        "wires": [
            [
                "b991be16b9662a3e"
            ]
        ]
    },
    {
        "id": "01d75eec1bfe68d4",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "",
        "links": [
            "0380b395668eee8e"
        ],
        "x": 2815,
        "y": 240,
        "wires": [
            [
                "0c8eb8257035ca5f",
                "81e0133d16c51789"
            ]
        ]
    },
    {
        "id": "9339829f2a70ba46",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 3450,
        "y": 640,
        "wires": [
            [
                "b4051f61cf6d4d65"
            ]
        ]
    },
    {
        "id": "942f2ca34abfe8ac",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "name": "",
        "links": [
            "c9df0ea076346fde"
        ],
        "x": 2855,
        "y": 640,
        "wires": [
            [
                "25b8320badf7ef88",
                "e8990d184ea1eca6"
            ]
        ]
    },
    {
        "id": "6ddc7dc88995af69",
        "type": "delay",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 3190,
        "y": 1360,
        "wires": [
            [
                "39c4c5d262a3065b"
            ]
        ]
    },
    {
        "id": "12e9ac12cf2fde5c",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "links": [
            "84f7cbc2cc8c135d"
        ],
        "x": 2595,
        "y": 1400,
        "wires": [
            [
                "c66f65978915e688",
                "7790b731fd9a1374"
            ]
        ]
    },
    {
        "id": "3513068c4e7086d5",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2030,
        "y": 100,
        "wires": [
            [
                "69e62408ae1d45fd"
            ]
        ]
    },
    {
        "id": "1f4d1ff3b733216c",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2030,
        "y": 160,
        "wires": [
            [
                "c168a66c6bcdd403",
                "cb924439a66154f1"
            ]
        ]
    },
    {
        "id": "6fa7661447dd0d86",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2030,
        "y": 220,
        "wires": [
            [
                "2c3aa272de5edf1f"
            ]
        ]
    },
    {
        "id": "fe8e23b8971b868e",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "COP calculated",
        "links": [
            "306b69356454f3ff"
        ],
        "x": 680,
        "y": 1520,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ],
        "l": true
    },
    {
        "id": "b1933566192d3b78",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP53 - panasonic_heat_pump/main/Eva_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Eva_Outlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 380,
        "y": 1580,
        "wires": [
            [
                "039ca8047ee5b833"
            ]
        ]
    },
    {
        "id": "fae151e3fc249477",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "current",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "21857afb8366acf2",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "defrost_state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1460,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "039ca8047ee5b833",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "eva_outlet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1580,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "8e0dc8ab2999f4ec",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 930,
        "y": 1340,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "dc69bdbe82bc7c6e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 6,
        "width": 1,
        "height": 1,
        "name": "-3",
        "label": "-3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3050,
        "y": 760,
        "wires": []
    },
    {
        "id": "604a8e4b260ab341",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 8,
        "width": 1,
        "height": 1,
        "name": "-2",
        "label": "-2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3170,
        "y": 760,
        "wires": []
    },
    {
        "id": "2acac67ac20fecaa",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 10,
        "width": 1,
        "height": 1,
        "name": "-1",
        "label": "-1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3290,
        "y": 760,
        "wires": []
    },
    {
        "id": "38b237621bd70775",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 15,
        "width": 1,
        "height": 1,
        "name": "+1",
        "label": "+1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3050,
        "y": 1020,
        "wires": []
    },
    {
        "id": "07ec6cc26e34e858",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 17,
        "width": 1,
        "height": 1,
        "name": "+2",
        "label": "+2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3170,
        "y": 1020,
        "wires": []
    },
    {
        "id": "a859857d1be789c9",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "e27cfec311892d88",
        "order": 19,
        "width": 1,
        "height": 1,
        "name": "+3",
        "label": "+3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3290,
        "y": 1020,
        "wires": []
    },
    {
        "id": "38b10c117605255d",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Energy Production [HEAT]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1100,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "53393ad3ce2b9113",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Energy Consumption [HEAT]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1140,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "3a6bb7844523ece7",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Energy Production [DHW]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1220,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "ca8fd698c67b1cfa",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Energy Consumption [DHW]",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1280,
        "wires": [
            [
                "fa2eba3089ca0ef4"
            ]
        ]
    },
    {
        "id": "354fe89415b3f383",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "RESET",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[ ]",
        "payloadType": "json",
        "x": 3650,
        "y": 520,
        "wires": [
            [
                "0d58a1e854263ec4"
            ]
        ]
    },
    {
        "id": "765b4d77a9fd44cc",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "links": [
            "14327004637e05c7"
        ],
        "x": 1435,
        "y": 160,
        "wires": [
            [
                "fadad1e2505bf86d"
            ]
        ]
    },
    {
        "id": "2363c41d934e266c",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "TOP26 - panasonic_heat_pump/main/Defrosting_State",
        "topic": "panasonic_heat_pump/main/Defrosting_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 380,
        "y": 1660,
        "wires": [
            [
                "adf77ab5634ca95a"
            ]
        ]
    },
    {
        "id": "adf77ab5634ca95a",
        "type": "change",
        "z": "8c9d42231fd19d3c",
        "g": "f9448182b177e40e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Defrosting_state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1660,
        "wires": [
            [
                "1cbdb190d6f52cb6"
            ]
        ]
    },
    {
        "id": "98c49c9eca38ccfc",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 1260,
        "y": 200,
        "wires": [
            [
                "d997ac617b48aa1e"
            ]
        ]
    },
    {
        "id": "d997ac617b48aa1e",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot",
        "func": "var var1         = global.get('Heatpump_State',\"file\");\nvar var2         = global.get('Quiet_Mode_Level',\"file\");\nvar var3         = global.get('Operating_Mode_State',\"file\");\nvar var4         = global.get('PumpMaxFlowSetting',\"file\");\nvar var5         = global.get('HolidayMode',\"file\");\nvar var6         = global.get('PowerfulMode',\"file\");\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\nmsg1.payload = var1;  \nif(var1 === undefined) {msg1=null;}\nmsg2.payload = var2; \nif(var2 === undefined) {msg2=null;}\nmsg3.payload = var3; \nif(var3 === undefined) {msg3=null;}\nmsg4.payload = var4; \nif(var4 === undefined) {msg4=null;}\nmsg5.payload = var5;  \nif(var5 === undefined) {msg5=null;}\nmsg6.payload = var6;  \nif(var6 === undefined) {msg6=null;}\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 280,
        "wires": [
            [
                "9281d7ca9b292f9f"
            ],
            [
                "fadad1e2505bf86d"
            ],
            [
                "493be73ce31c8c96"
            ],
            [
                "f4f87e6e0f0d5a5a"
            ],
            [
                "17cf53c8acbfb4e1"
            ],
            [
                "e31636baf16e3b69"
            ]
        ],
        "outputLabels": [
            "Heatpump_State",
            "Quiet_Mode_Level",
            "Operating_Mode_State",
            "PumpMaxFlowSetting",
            "HolidayMode",
            "PowerfulMode"
        ]
    },
    {
        "id": "ecf47b4f156ae616",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "Load on boot WAR",
        "func": "var var1          = global.get('SP_DIRECT_virt',\"file\");\nvar var2          = global.get('Correction_0_WAR_on_off',\"file\");\nvar var3          = global.get('war_ot1',\"file\");\nvar var4          = global.get('war_ot2',\"file\");\nvar var5          = global.get('war_ot3',\"file\");\nvar var6          = global.get('war_wt1',\"file\");\nvar var7          = global.get('war_wt2',\"file\");\nvar var8          = global.get('war_wt3',\"file\");\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={};\n\n\nmsg1.payload = var1;\nif(var1 === undefined) {msg1=null;}\nmsg2.payload = var2;\nif(var2 === undefined) {msg2=null;}\nmsg3.payload = var3;\nif(var3 === undefined) {msg3=null;}\nmsg4.payload = var4;\nif(var4 === undefined) {msg4=null;}\nmsg5.payload = var5;\nif(var5 === undefined) {msg5=null;}\nmsg6.payload = var6;\nif(var6 === undefined) {msg6=null;}\nmsg7.payload = var7;\nif(var7 === undefined) {msg7=null;}\nmsg8.payload = var8;\nif(var8 === undefined) {msg8=null;}\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8];\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 300,
        "wires": [
            [
                "8329aedf9204b75d"
            ],
            [
                "0c8eb8257035ca5f",
                "81e0133d16c51789"
            ],
            [
                "9a0e227ed7718d64"
            ],
            [
                "f1d9c2e3346b1e43"
            ],
            [
                "4950af3d6534aa47"
            ],
            [
                "388bec4d296db98d"
            ],
            [
                "e07cc2b915729d33"
            ],
            [
                "f2daac0935cc9d81"
            ]
        ],
        "outputLabels": [
            "SP_DIRECT_virt",
            "Correction_0_WAR_on_off",
            "war_ot1",
            "war_ot2",
            "war_ot3",
            "war_wt1",
            "war_wt2",
            "war_wt3"
        ]
    },
    {
        "id": "aa92d770db68e68b",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "name": "1 Trigger / 5 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 2680,
        "y": 220,
        "wires": [
            [
                "ecf47b4f156ae616"
            ]
        ]
    },
    {
        "id": "8c2afa46f759d9cd",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "Load on boot RTC",
        "func": "var var1          = global.get('DHW_Target_Temp',\"file\");\n\n\n\nlet msg1={};\n\n\nmsg1.payload = var1;\n\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 120,
        "wires": [
            [
                "158e0bb2b00cd4ba"
            ]
        ],
        "outputLabels": [
            "DHW_Target_Temp"
        ]
    },
    {
        "id": "6c42a1a32ed02491",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "7c41aa629fb3859e",
        "name": "1 Trigger / minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "8c2afa46f759d9cd"
            ]
        ]
    },
    {
        "id": "2081818c5b84e07f",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "Load on boot RTC",
        "func": "var var1         = global.get('Correction_2_softstart_on_off',\"file\");\n\n\nlet msg1={};\n\n\nmsg1.payload = var1;\nif(var1 === undefined) {msg1=null;}\n\nreturn [msg1];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 1360,
        "wires": [
            [
                "c66f65978915e688",
                "7790b731fd9a1374"
            ]
        ],
        "outputLabels": [
            "Correction_1_RTC_on_off"
        ]
    },
    {
        "id": "5ebd5b33f81038ea",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "1 Trigger / minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 2670,
        "y": 1320,
        "wires": [
            [
                "2081818c5b84e07f"
            ]
        ]
    },
    {
        "id": "bbec5b2f8adad763",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "name": "",
        "links": [
            "d16f38ef74db786a"
        ],
        "x": 3375,
        "y": 1280,
        "wires": [
            [
                "881c9c83727201e4"
            ]
        ]
    },
    {
        "id": "a6faaf6380e6d040",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET2 SetHolidayMode",
        "topic": "panasonic_heat_pump/commands/SetHolidayMode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2220,
        "y": 560,
        "wires": []
    },
    {
        "id": "c318be9105a9e8e5",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET4 SetPowerfulMode",
        "topic": "panasonic_heat_pump/commands/SetPowerfulMode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2230,
        "y": 600,
        "wires": []
    },
    {
        "id": "2f424281d9684d3c",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "SET5 SetZ1HeatRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1HeatRequestTemperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2270,
        "y": 660,
        "wires": []
    },
    {
        "id": "563dfa52aaa810b9",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "SET6 SetZ1CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ1CoolRequestTemperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2270,
        "y": 700,
        "wires": []
    },
    {
        "id": "f70f86fa82959bf7",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "SET7 SetZ2HeatRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2HeatRequestTemperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2270,
        "y": 740,
        "wires": []
    },
    {
        "id": "1413a5e6aa52a4d3",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "SET8 SetZ2CoolRequestTemperature",
        "topic": "panasonic_heat_pump/commands/SetZ2CoolRequestTemperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2270,
        "y": 780,
        "wires": []
    },
    {
        "id": "b8e7b80b511e3054",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET10 SetForceDHW",
        "topic": "panasonic_heat_pump/commands/SetForceDHW",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2220,
        "y": 840,
        "wires": []
    },
    {
        "id": "aa26d12b996f9c57",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET11 SetDHWTemp",
        "topic": "panasonic_heat_pump/commands/SetDHWTemp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2220,
        "y": 880,
        "wires": []
    },
    {
        "id": "97d91018b611d85e",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET12 SetForceDefrost",
        "topic": "panasonic_heat_pump/commands/SetForceDefrost",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2230,
        "y": 920,
        "wires": []
    },
    {
        "id": "6c56f45eddcf6890",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET13 SetForceSterilization",
        "topic": "panasonic_heat_pump/commands/SetForceSterilization",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2240,
        "y": 960,
        "wires": []
    },
    {
        "id": "0dc2ead6142f18c4",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "d": true,
        "g": "3151681b2157872c",
        "name": "SET16 SetCurves",
        "topic": "panasonic_heat_pump/commands/SetCurves",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2210,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d4c237094a0d52f9",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET17 SetZones",
        "topic": "panasonic_heat_pump/commands/SetZones",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2210,
        "y": 1140,
        "wires": []
    },
    {
        "id": "d66211d6bd2170ac",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET18 SetFloorHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorHeatDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2230,
        "y": 1180,
        "wires": []
    },
    {
        "id": "71bc8ac0ba520e9e",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET19 SetFloorCoolDelta",
        "topic": "panasonic_heat_pump/commands/SetFloorCoolDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2230,
        "y": 1220,
        "wires": []
    },
    {
        "id": "99beaa5dde77b94c",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET20 SetDHWHeatDelta",
        "topic": "panasonic_heat_pump/commands/SetDHWHeatDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2240,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ec2e17164979af03",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET21 SetHeaterDelayTime",
        "topic": "panasonic_heat_pump/commands/SetHeaterDelayTime",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2240,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ad4e8ac090e4b449",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET22 SetHeaterStartDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStartDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2240,
        "y": 1340,
        "wires": []
    },
    {
        "id": "9b9c2c12ee2f9256",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET23 SetHeaterStopDelta",
        "topic": "panasonic_heat_pump/commands/SetHeaterStopDelta",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2240,
        "y": 1380,
        "wires": []
    },
    {
        "id": "365cb4a95d68eb3e",
        "type": "mqtt out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SET24 SetMainSchedule",
        "topic": "panasonic_heat_pump/commands/SetMainSchedule",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 2230,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c6559a95bb3c55fb",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force DHW",
        "label": "Force DHW",
        "tooltip": "Forces DHW cycle (Operating mode should be set first to inlcude DWH mode (operation mode 3,4,5 or 6) to be effective.",
        "group": "548e51986bce11b0",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1650,
        "y": 840,
        "wires": [
            [
                "859dc9276ee75464",
                "092a9db0d9b923b3"
            ]
        ]
    },
    {
        "id": "17cf53c8acbfb4e1",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Holiday Mode",
        "label": "Holiday Mode",
        "tooltip": "Off / On Holiday mode",
        "group": "548e51986bce11b0",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1880,
        "y": 560,
        "wires": [
            [
                "a6faaf6380e6d040",
                "bdb7e8e0217cec66"
            ]
        ]
    },
    {
        "id": "30554cbb35314761",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 1300,
        "y": 840,
        "wires": [
            [
                "35835778f1d9f825"
            ]
        ]
    },
    {
        "id": "35835778f1d9f825",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot RTC",
        "func": "var var1          = global.get('ForceDHW',\"file\");\nvar var2          = global.get('DHW_Target_Temp',\"file\");\n\nvar var3          = global.get('ForceDefrost',\"file\");\n//var var4          = global.get('ForceDHW',\"file\");\n\nlet msg1={}, msg2={}, msg3={};\n\n\nmsg1.payload = var1;\nif(var1 === undefined) {msg1=null;}\nmsg2.payload = var2;\nif(var2 === undefined) {msg2=null;}\nmsg3.payload = var3;\nif(var3 === undefined) {msg3=null;}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 880,
        "wires": [
            [
                "c6559a95bb3c55fb"
            ],
            [
                "4dee981d88ea5cf3"
            ],
            [
                "45a93847a1d11766"
            ]
        ],
        "outputLabels": [
            "ForceDHW",
            "DHW_Target_Temp",
            "ForceDefrost"
        ]
    },
    {
        "id": "4dee981d88ea5cf3",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHW (SP)",
        "label": "DHW (SP)",
        "tooltip": "Set target water temperature for DHW",
        "group": "26d9e6cf24507b4f",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "40",
        "max": "75",
        "step": 1,
        "className": "",
        "x": 1650,
        "y": 880,
        "wires": [
            [
                "ae99edee7ea44ce2"
            ]
        ]
    },
    {
        "id": "ae99edee7ea44ce2",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 880,
        "wires": [
            [
                "aa26d12b996f9c57"
            ]
        ]
    },
    {
        "id": "45a93847a1d11766",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force Defrost",
        "label": "Force Defrost",
        "tooltip": "Off / On Force defrost cycle",
        "group": "548e51986bce11b0",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1660,
        "y": 920,
        "wires": [
            [
                "5e3a9447502864ad",
                "3de982eda6f5e1a3"
            ]
        ]
    },
    {
        "id": "20e2544a8277d8c2",
        "type": "link in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force sterilization",
        "links": [
            "72d21aa95d3c1e7b",
            "3c91774a156ca633",
            "69dba98259785b02",
            "4f62466c41bb3667"
        ],
        "x": 1255,
        "y": 960,
        "wires": [
            [
                "ccb9e79ff06190fa"
            ]
        ]
    },
    {
        "id": "ccb9e79ff06190fa",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Force sterilization",
        "label": "Force sterilization",
        "tooltip": "Off / On Force sterilization cycle",
        "group": "548e51986bce11b0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1670,
        "y": 960,
        "wires": [
            [
                "6c56f45eddcf6890"
            ]
        ]
    },
    {
        "id": "ed220320ba9473f3",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "149",
        "payloadType": "num",
        "x": 1530,
        "y": 500,
        "wires": [
            [
                "43ad0d01b0c84de9"
            ]
        ]
    },
    {
        "id": "91fa7e389b484d7c",
        "type": "ui_switch",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Panasonic Main Scheduler",
        "label": "Panasonic Main Scheduler",
        "tooltip": "Off / On. Note: It is possible to use both Panasonic and NodeRed GUI scheduler running at the same time. But make sure you know, and the schedules are not conflicting. ",
        "group": "fea7672db2f050c9",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1700,
        "y": 1420,
        "wires": [
            [
                "089ba42c8f7f7a61",
                "88e644ce965a6890"
            ]
        ]
    },
    {
        "id": "69ea88923a102a5d",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heater Stop Delta",
        "label": "Heater Stop Delta",
        "tooltip": "Set heater stop delta T (only J-series)",
        "group": "26d9e6cf24507b4f",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "0",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 1670,
        "y": 1380,
        "wires": [
            [
                "a2d7de4325e4bf91",
                "9e998e80ed82590d"
            ]
        ]
    },
    {
        "id": "7c7fd14d9f6ec530",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heater Start Delta",
        "label": "Heater Start Delta",
        "tooltip": "Set heater start delta T (only J-series)",
        "group": "26d9e6cf24507b4f",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "0",
        "max": "65",
        "step": 1,
        "className": "",
        "x": 1670,
        "y": 1340,
        "wires": [
            [
                "78816343589b199a",
                "9b3cba642f3daa70"
            ]
        ]
    },
    {
        "id": "02af248fc547b96b",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Heater Delay Time",
        "label": "Heater Delay Time",
        "tooltip": "Set heater start delay time (only J-series)",
        "group": "26d9e6cf24507b4f",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} min",
        "min": "0",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 1670,
        "y": 1300,
        "wires": [
            [
                "4021cdadbdc7768d",
                "df60cdb125adaf72"
            ]
        ]
    },
    {
        "id": "b8abd042ad10fed8",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHW Heat Delta",
        "label": "DHW Heat Delta",
        "tooltip": "Set DHW heating delta in Kelvin",
        "group": "26d9e6cf24507b4f",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 1670,
        "y": 1260,
        "wires": [
            [
                "c803b9ad018fe78e",
                "cb354767e9f35bc0"
            ]
        ]
    },
    {
        "id": "2d364a067e4a7b4a",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Floor Cool Delta",
        "label": "Floor Cool Delta",
        "tooltip": "Set floor cooling delta in Kelvin",
        "group": "26d9e6cf24507b4f",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 1660,
        "y": 1220,
        "wires": [
            [
                "7139256ff024b872",
                "381a37d17ef728cc"
            ]
        ]
    },
    {
        "id": "a89b41c6600cac07",
        "type": "ui_numeric",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Floor Heat Delta",
        "label": "Floor Heat Delta",
        "tooltip": "Set floor heating delta in Kelvin",
        "group": "26d9e6cf24507b4f",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 1660,
        "y": 1180,
        "wires": [
            [
                "9b2a45a90495e067",
                "564fcdd537853126"
            ]
        ]
    },
    {
        "id": "e31636baf16e3b69",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Powerful Mode",
        "label": "Powerful Mode",
        "tooltip": "Choose duration",
        "place": "Set powerful mode run time in minutes",
        "group": "548e51986bce11b0",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "0 minutes (OFF)",
                "value": 0,
                "type": "num"
            },
            {
                "label": "30 minutes",
                "value": 1,
                "type": "num"
            },
            {
                "label": "60 minutes",
                "value": 2,
                "type": "num"
            },
            {
                "label": "90 minutes",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1880,
        "y": 600,
        "wires": [
            [
                "c318be9105a9e8e5",
                "979c5ca99c054740"
            ]
        ]
    },
    {
        "id": "1f2cb9545d7e212d",
        "type": "ui_dropdown",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Set Zones",
        "label": "Set Zones",
        "tooltip": "Set the active zones",
        "place": "Select option",
        "group": "fea7672db2f050c9",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Zone 1 active",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Zone 2 active",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Zone 1 and 2 active",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1650,
        "y": 1140,
        "wires": [
            [
                "2ed9d626c929fb95",
                "5b0e15b0804a4452"
            ]
        ]
    },
    {
        "id": "a6854436b6e1c7e8",
        "type": "mqtt in",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "TOP44 - panasonic_heat_pump/main/Error",
        "topic": "panasonic_heat_pump/main/Error",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1520,
        "y": 1480,
        "wires": [
            [
                "fce687f80b334b9e"
            ]
        ]
    },
    {
        "id": "fce687f80b334b9e",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "group": "fea7672db2f050c9",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Current Error",
        "label": "Current Error",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1480,
        "wires": []
    },
    {
        "id": "12842f4ef6ffc342",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "3476743a7b29da0d",
        "group": "1179fa790d2d89ca",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "T outside (advanced Functions tab)",
        "label": "WAR",
        "format": "( {{msg.payload}} °C)",
        "layout": "row-left",
        "className": "",
        "x": 3380,
        "y": 380,
        "wires": []
    },
    {
        "id": "1f5d513050d612a1",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "1179fa790d2d89ca",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "RTC text",
        "label": "RTC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3020,
        "y": 660,
        "wires": []
    },
    {
        "id": "1eb00088db267256",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "6788a89266ed3c87",
        "group": "1179fa790d2d89ca",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "SoftStart txt",
        "label": "SoftStart",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2870,
        "y": 1380,
        "wires": []
    },
    {
        "id": "4118b2ccecf6a6de",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "PumpMaxFlowSetting",
        "links": [
            "a1e757cb1d79e3f9"
        ],
        "x": 2135,
        "y": 460,
        "wires": []
    },
    {
        "id": "81707894b0c1a053",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1690,
        "y": 460,
        "wires": [
            [
                "98757de0a2842b4b"
            ]
        ]
    },
    {
        "id": "bdb7e8e0217cec66",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HolidayMode",
        "links": [
            "e8684c407d602e87"
        ],
        "x": 2035,
        "y": 560,
        "wires": []
    },
    {
        "id": "979c5ca99c054740",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "PowerfulMode",
        "links": [
            "f70b59196295efc0",
            "8e6e2ab43ee26928"
        ],
        "x": 2035,
        "y": 600,
        "wires": []
    },
    {
        "id": "859dc9276ee75464",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 840,
        "wires": [
            [
                "b8e7b80b511e3054"
            ]
        ]
    },
    {
        "id": "092a9db0d9b923b3",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceDHW",
        "links": [
            "12e43571a8c16fa2",
            "67b8e26842cf7615"
        ],
        "x": 2035,
        "y": 840,
        "wires": []
    },
    {
        "id": "5e3a9447502864ad",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "ForceDefrost",
        "links": [
            "01744f1093a2fd51"
        ],
        "x": 2035,
        "y": 920,
        "wires": []
    },
    {
        "id": "f7a9ec88877581f5",
        "type": "inject",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 1300,
        "y": 1180,
        "wires": [
            [
                "cdb2547c58ef93e6"
            ]
        ]
    },
    {
        "id": "cdb2547c58ef93e6",
        "type": "function",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "Load on boot RTC",
        "func": "let msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={};\n\nvar var1          = global.get('SetZones',\"file\");\nvar var2          = global.get('FloorHeatDelta',\"file\");\nvar var3          = global.get('FloorCoolDelta',\"file\");\nvar var4          = global.get('DHWHeatDelta',\"file\");\nvar var5          = global.get('HeaterDelayTime',\"file\");\nvar var6          = global.get('HeaterStartDelta',\"file\");\nvar var7          = global.get('HeaterStopDelta',\"file\");\nvar var8          = global.get('PanasonicMainScheduler',\"file\");\n\n\n\n\n\nmsg1.payload = var1;\nif(var1 === undefined) {msg1=null;}\nmsg2.payload = var2;\nif(var2 === undefined) {msg2=null;}\nmsg3.payload = var3;\nif(var3 === undefined) {msg3=null;}\nmsg4.payload = var4;\nif(var4 === undefined) {msg4=null;}\nmsg5.payload = var5;\nif(var5 === undefined) {msg5=null;}\nmsg6.payload = var6;\nif(var6 === undefined) {msg6=null;}\nmsg7.payload = var7;\nif(var7 === undefined) {msg7=null;}\nmsg8.payload = var8;\nif(var8 === undefined) {msg8=null;}\n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1260,
        "wires": [
            [
                "1f2cb9545d7e212d"
            ],
            [
                "a89b41c6600cac07"
            ],
            [
                "2d364a067e4a7b4a"
            ],
            [
                "b8abd042ad10fed8"
            ],
            [
                "02af248fc547b96b"
            ],
            [
                "7c7fd14d9f6ec530"
            ],
            [
                "69ea88923a102a5d"
            ],
            [
                "91fa7e389b484d7c"
            ]
        ],
        "outputLabels": [
            "SetZones",
            "FloorHeatDelta",
            "FloorCoolDelta",
            "DHWHeatDelta",
            "HeaterDelayTime",
            "HeaterStartDelta",
            "HeaterStopDelta",
            "PanasonicMainScheduler"
        ]
    },
    {
        "id": "2ed9d626c929fb95",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SetZones",
        "links": [
            "9c4e9ed4c3ac1779"
        ],
        "x": 2035,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9b2a45a90495e067",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "FloorHeatDelta",
        "links": [
            "4c1c4526944e820e"
        ],
        "x": 2035,
        "y": 1180,
        "wires": []
    },
    {
        "id": "7139256ff024b872",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "FloorCoolDelta",
        "links": [
            "c32298a87a338b1d"
        ],
        "x": 2035,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c803b9ad018fe78e",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "DHWHeatDelta",
        "links": [
            "5e35dee1374d6829"
        ],
        "x": 2035,
        "y": 1260,
        "wires": []
    },
    {
        "id": "4021cdadbdc7768d",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HeaterDelayTime",
        "links": [
            "bfcbe2fb120f457c"
        ],
        "x": 2035,
        "y": 1300,
        "wires": []
    },
    {
        "id": "78816343589b199a",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HeaterStartDelta",
        "links": [
            "0e3197d36afc45dc"
        ],
        "x": 2035,
        "y": 1340,
        "wires": []
    },
    {
        "id": "a2d7de4325e4bf91",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "HeaterStopDelta",
        "links": [
            "ca1f0fdf0dd05c89"
        ],
        "x": 2035,
        "y": 1380,
        "wires": []
    },
    {
        "id": "089ba42c8f7f7a61",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "PanasonicMainScheduler",
        "links": [
            "c5cba27eac8a70a2"
        ],
        "x": 2035,
        "y": 1420,
        "wires": []
    },
    {
        "id": "3de982eda6f5e1a3",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 920,
        "wires": [
            [
                "97d91018b611d85e"
            ]
        ]
    },
    {
        "id": "5b0e15b0804a4452",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 1140,
        "wires": [
            [
                "d4c237094a0d52f9"
            ]
        ]
    },
    {
        "id": "564fcdd537853126",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 1180,
        "wires": [
            [
                "d66211d6bd2170ac"
            ]
        ]
    },
    {
        "id": "381a37d17ef728cc",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 1220,
        "wires": [
            [
                "71bc8ac0ba520e9e"
            ]
        ]
    },
    {
        "id": "cb354767e9f35bc0",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 1260,
        "wires": [
            [
                "99beaa5dde77b94c"
            ]
        ]
    },
    {
        "id": "df60cdb125adaf72",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 1300,
        "wires": [
            [
                "ec2e17164979af03"
            ]
        ]
    },
    {
        "id": "9b3cba642f3daa70",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 1340,
        "wires": [
            [
                "ad4e8ac090e4b449"
            ]
        ]
    },
    {
        "id": "9e998e80ed82590d",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 1380,
        "wires": [
            [
                "9b9c2c12ee2f9256"
            ]
        ]
    },
    {
        "id": "88e644ce965a6890",
        "type": "rbe",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1890,
        "y": 1420,
        "wires": [
            [
                "365cb4a95d68eb3e"
            ]
        ]
    },
    {
        "id": "a955b118f456587f",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "1179fa790d2d89ca",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "spacer 6x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3830,
        "y": 920,
        "wires": []
    },
    {
        "id": "5df3c72cf1808838",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "1179fa790d2d89ca",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "spacer 6x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3830,
        "y": 940,
        "wires": []
    },
    {
        "id": "1235e7416dbfe5fc",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "g": "a8ac5b148d851a6b",
        "group": "1179fa790d2d89ca",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "spacer 6x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 3810,
        "y": 960,
        "wires": []
    },
    {
        "id": "77accb50873d6c98",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "e3cc96332cd59f07",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "spacer 6x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4050,
        "y": 220,
        "wires": []
    },
    {
        "id": "f1d5f06e37508081",
        "type": "ui_text",
        "z": "8c9d42231fd19d3c",
        "group": "74946a73578ea096",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "spacer 6x1",
        "label": "",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 4050,
        "y": 260,
        "wires": []
    },
    {
        "id": "cb924439a66154f1",
        "type": "link out",
        "z": "8c9d42231fd19d3c",
        "g": "3151681b2157872c",
        "name": "SetQMDash",
        "links": [
            "b1b3e80155e49c5c"
        ],
        "x": 2355,
        "y": 160,
        "wires": []
    },
    {
        "id": "a938de76db0b71f6",
        "type": "tab",
        "label": "WP Control",
        "disabled": false,
        "info": "\n---\n\n"
    },
    {
        "id": "0077cf76d14c5757",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "2c893b32851ad2a2",
            "fa82488bbb78cd7c",
            "9ac43b3e57349093",
            "121250d0adaabb74",
            "bec0abeb65096b50",
            "30750ed4cdbdb47c",
            "16a78ece414b3c3f",
            "d812dc07d5eb627a",
            "40c1b15547232388",
            "2cbf5dc56d038900",
            "8f95cf0d80fef38e",
            "ec63998dcfe159cd",
            "ea494b908a0574c7",
            "19d877b9c19811b0",
            "9e366042611cd253",
            "8921731c26e91e25",
            "f50d4598394ed29a",
            "6ba5cd640d504e59",
            "e2f09c5070a6b30f",
            "cbded61fe1f8bfa6",
            "93fa79b319daf34d",
            "cacaf5999e957de7",
            "9dad0ebe8e5b9c2a",
            "874b5d0d5be47908",
            "dfda98c1b2897af7",
            "820cd8755edee724",
            "df752804bad7d4c9",
            "846a789dca74329d",
            "0e750c6cd942fa61",
            "7ab5c0947c5dafe8",
            "aa66f523450fd337",
            "6c127111459a7668",
            "3614cf0c48d0f160",
            "9285cfa754ee552e",
            "a861b75804a0978a",
            "a0d8b4706f8d61b1",
            "3b23831ccc3641c6",
            "b131edf180140fb6",
            "4ff74e2b48b1d597",
            "905527b22aae9dc8",
            "35ca9241fc9fc7a1",
            "12a26bbb7c8070d7",
            "aec0cb2b18e02d8b",
            "0771fea18659deea",
            "8ed91c4260d9b758",
            "7ce3c0d525800846",
            "46aa3584ebd4caad",
            "85919acf34d78bae",
            "609ce750edb0db2b",
            "8f6938d08a85ad26",
            "93eb54b8be16fd2c",
            "75ecf6650a5109d6",
            "9991b2135381fede",
            "a5dd53dd3d0d1b7f",
            "dd45b1caa253346b",
            "d54ac3b979428b64",
            "52945322ab63b965",
            "f34333d0f62bbd2d",
            "d69bd0a7c3dd5d4f",
            "bb8e93b0650250f5",
            "64a44fa6b9450bc7",
            "39aabf25524d867e",
            "691604d099745232",
            "3ec15c8e37ccda1b",
            "c3cc4ad31bfecda5",
            "b9adf06497b1e231",
            "c57a81d1dee5b8a9",
            "62d663629483143e",
            "e5fb067144c27e1b",
            "cf2f77d5c5d3e637",
            "ff3dd227527b76c3",
            "9de1bde370b68508",
            "b1b3e80155e49c5c"
        ],
        "x": 114,
        "y": 839,
        "w": 1442,
        "h": 1142
    },
    {
        "id": "23847da379e94b05",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "FUNCTIONS",
        "style": {
            "fill": "#dbcbe7",
            "label": true,
            "stroke": "#ff0000"
        },
        "nodes": [
            "830e11771a1baae8",
            "18fd7ac120089042",
            "c170e8478752746e",
            "93404b62f7fb0fb2",
            "4e78d56d6c1eb0d1",
            "6648d0ba92cc010e",
            "0949da21520e7e09",
            "16054e8334890ad8",
            "db3d913f68e3e439",
            "73ee925b927ed0c6",
            "6f02b65a25f5c88f",
            "78114aa97638ee9e",
            "3c51afcf41e849f1",
            "19f0cfe2f4c43642",
            "d16f38ef74db786a",
            "5f233c0fd1ffa550",
            "7d4a971ea2fd626d",
            "19166db493fc7fe2",
            "3af8890722ca7be0",
            "178be36a7334f613",
            "e330f5a1b7ad039c"
        ],
        "x": 114,
        "y": 399,
        "w": 1472,
        "h": 382
    },
    {
        "id": "5a496e1f1ea93a38",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "REQUIRED INPUTS FOR FUNCTIONS",
        "style": {
            "fill": "#ffffbf",
            "label": true,
            "stroke": "#ff0000"
        },
        "nodes": [
            "17580adb3781c57f",
            "581692e893e2d482",
            "a22898dfdc4ff0ca",
            "6051d06bc75eda72",
            "014b79ca42e19493",
            "e9504e95fc5e9a19",
            "e13586e83e73223a",
            "fe6995b4c379cfd7",
            "3d671794ce872bcd",
            "d6a9c376dde9c43f",
            "df9c3a6c0a51be9b",
            "219066f9a22a1c23",
            "6782b41fb1659549",
            "ede82249f74ed7ec",
            "23f4dfbc7c8ce972"
        ],
        "x": 114,
        "y": 39,
        "w": 1572,
        "h": 322
    },
    {
        "id": "94f57429e16c8e82",
        "type": "group",
        "z": "a938de76db0b71f6",
        "name": "COP calculation function",
        "style": {
            "label": true
        },
        "nodes": [
            "f4e55b938e645737",
            "43b60b667e5e5610",
            "aa30462c21670606",
            "306b69356454f3ff"
        ],
        "x": 1604,
        "y": 839,
        "w": 482,
        "h": 122
    },
    {
        "id": "cd2050a861736ec5",
        "type": "group",
        "z": "a938de76db0b71f6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9b245060787d2ecd",
            "ba4a12897a805cee",
            "a1e757cb1d79e3f9",
            "3472c99aef20f07f",
            "4f8c3c7d06c1b19a",
            "eda4721e720d1975",
            "8501242129d89e2c",
            "e8684c407d602e87",
            "f70b59196295efc0",
            "690250e7cb51c576",
            "695ce56812fda3d2",
            "12e43571a8c16fa2",
            "f4fadebd69120ccb",
            "a79fac04465c243e",
            "01744f1093a2fd51",
            "ab34ebcc109b74de",
            "10b4e15b0f3199ad",
            "283dd6b0185b554b",
            "cb2c4d61eeec2c6f",
            "1281e2b1451c301f",
            "e164eaa22e0fa1dc",
            "a25d1f5d91c84a33",
            "f9edb4875d3f2c5b",
            "9c4e9ed4c3ac1779",
            "4c1c4526944e820e",
            "c32298a87a338b1d",
            "5e35dee1374d6829",
            "78ddc73a94ec89be",
            "e11f7d8caf20dbba",
            "3fb7221a7218435a",
            "460a1a83313cfcc5",
            "8121e5bfa638e9ab",
            "58a904f891a8e2cc",
            "7caff8b1418d65da",
            "5f758eb9af24eb35",
            "bfcbe2fb120f457c",
            "0e3197d36afc45dc",
            "ca1f0fdf0dd05c89",
            "c5cba27eac8a70a2",
            "2c34d9f3299bef00"
        ],
        "x": 114,
        "y": 2059,
        "w": 1032,
        "h": 862
    },
    {
        "id": "2c893b32851ad2a2",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP0 - panasonic_heat_pump/main/Heatpump_State",
        "topic": "panasonic_heat_pump/main/Heatpump_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 480,
        "y": 980,
        "wires": [
            [
                "ec63998dcfe159cd",
                "691604d099745232"
            ]
        ]
    },
    {
        "id": "fa82488bbb78cd7c",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP1 - panasonic_heat_pump/main/Pump_Flow",
        "topic": "panasonic_heat_pump/main/Pump_Flow",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 500,
        "y": 1040,
        "wires": [
            [
                "ea494b908a0574c7"
            ]
        ]
    },
    {
        "id": "9ac43b3e57349093",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP2 - panasonic_heat_pump/main/Force_DHW_State",
        "topic": "panasonic_heat_pump/main/Force_DHW_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 480,
        "y": 1100,
        "wires": [
            [
                "19d877b9c19811b0"
            ]
        ]
    },
    {
        "id": "121250d0adaabb74",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP5 - panasonic_heat_pump/main/Main_Inlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Inlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 480,
        "y": 1220,
        "wires": [
            [
                "8921731c26e91e25"
            ]
        ]
    },
    {
        "id": "bec0abeb65096b50",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP6 - panasonic_heat_pump/main/Main_Outlet_Temp",
        "topic": "panasonic_heat_pump/main/Main_Outlet_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "f50d4598394ed29a"
            ]
        ]
    },
    {
        "id": "30750ed4cdbdb47c",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP7 - panasonic_heat_pump/main/Main_Target_Temp",
        "topic": "panasonic_heat_pump/main/Main_Target_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 480,
        "y": 1340,
        "wires": [
            [
                "6ba5cd640d504e59"
            ]
        ]
    },
    {
        "id": "16a78ece414b3c3f",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP4 - panasonic_heat_pump/main/Operating_Mode_State",
        "topic": "panasonic_heat_pump/main/Operating_Mode_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "9e366042611cd253"
            ]
        ]
    },
    {
        "id": "d812dc07d5eb627a",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP20 - panasonic_heat_pump/main/ThreeWay_Valve_State",
        "topic": "panasonic_heat_pump/main/ThreeWay_Valve_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 460,
        "y": 1400,
        "wires": [
            [
                "e2f09c5070a6b30f"
            ]
        ]
    },
    {
        "id": "40c1b15547232388",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "TOP18 - panasonic_heat_pump/main/Quiet_Mode_Level",
        "topic": "panasonic_heat_pump/main/Quiet_Mode_Level",
        "qos": "0",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 470,
        "y": 1460,
        "wires": [
            [
                "cbded61fe1f8bfa6"
            ]
        ]
    },
    {
        "id": "2cbf5dc56d038900",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP70 - panasonic_heat_pump/main/Sterilization_Temp",
        "topic": "panasonic_heat_pump/main/Sterilization_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "cacaf5999e957de7"
            ]
        ]
    },
    {
        "id": "8f95cf0d80fef38e",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP69 - panasonic_heat_pump/main/Sterilization_State",
        "topic": "panasonic_heat_pump/main/Sterilization_State",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 480,
        "y": 1520,
        "wires": [
            [
                "93fa79b319daf34d"
            ]
        ]
    },
    {
        "id": "62d663629483143e",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Read values from Heishamon and put them in global variables and link out",
        "info": "",
        "x": 400,
        "y": 880,
        "wires": []
    },
    {
        "id": "ec63998dcfe159cd",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 980,
        "wires": [
            [
                "9dad0ebe8e5b9c2a"
            ]
        ]
    },
    {
        "id": "ea494b908a0574c7",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1040,
        "wires": [
            [
                "820cd8755edee724"
            ]
        ]
    },
    {
        "id": "19d877b9c19811b0",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1100,
        "wires": [
            [
                "df752804bad7d4c9"
            ]
        ]
    },
    {
        "id": "9e366042611cd253",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1160,
        "wires": [
            [
                "846a789dca74329d"
            ]
        ]
    },
    {
        "id": "8921731c26e91e25",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1220,
        "wires": [
            [
                "0e750c6cd942fa61"
            ]
        ]
    },
    {
        "id": "f50d4598394ed29a",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1280,
        "wires": [
            [
                "7ab5c0947c5dafe8"
            ]
        ]
    },
    {
        "id": "6ba5cd640d504e59",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1340,
        "wires": [
            [
                "aa66f523450fd337"
            ]
        ]
    },
    {
        "id": "e2f09c5070a6b30f",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1400,
        "wires": [
            [
                "6c127111459a7668"
            ]
        ]
    },
    {
        "id": "cbded61fe1f8bfa6",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1460,
        "wires": [
            [
                "3614cf0c48d0f160"
            ]
        ]
    },
    {
        "id": "93fa79b319daf34d",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1520,
        "wires": [
            [
                "9285cfa754ee552e"
            ]
        ]
    },
    {
        "id": "cacaf5999e957de7",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1580,
        "wires": [
            [
                "a861b75804a0978a"
            ]
        ]
    },
    {
        "id": "9dad0ebe8e5b9c2a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Heatpump_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Heatpump_State\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 980,
        "wires": [
            [
                "a0d8b4706f8d61b1"
            ]
        ]
    },
    {
        "id": "874b5d0d5be47908",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "string to number.fixed",
        "info": "",
        "x": 1240,
        "y": 900,
        "wires": []
    },
    {
        "id": "dfda98c1b2897af7",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set global variable",
        "info": "",
        "x": 1230,
        "y": 940,
        "wires": []
    },
    {
        "id": "820cd8755edee724",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Pump_Flow",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Pump_Flow\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1040,
        "wires": [
            [
                "3b23831ccc3641c6"
            ]
        ]
    },
    {
        "id": "df752804bad7d4c9",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Force_DHW_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Force_DHW_State\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1100,
        "wires": [
            [
                "b131edf180140fb6"
            ]
        ]
    },
    {
        "id": "846a789dca74329d",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Operating_Mode_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Operating_Mode_State\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1160,
        "wires": [
            [
                "4ff74e2b48b1d597"
            ]
        ]
    },
    {
        "id": "0e750c6cd942fa61",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Main_Inlet_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Main_Inlet_Temp\"\nglobal.set(\"Main_Inlet_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1220,
        "wires": [
            [
                "905527b22aae9dc8"
            ]
        ]
    },
    {
        "id": "7ab5c0947c5dafe8",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Main_Outlet_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Main_Outlet_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1280,
        "wires": [
            [
                "35ca9241fc9fc7a1"
            ]
        ]
    },
    {
        "id": "aa66f523450fd337",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Main_Target_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Main_Target_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1340,
        "wires": [
            [
                "12a26bbb7c8070d7"
            ]
        ]
    },
    {
        "id": "6c127111459a7668",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.ThreeWay_Valve_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"ThreeWay_Valve_State\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1400,
        "wires": [
            [
                "aec0cb2b18e02d8b"
            ]
        ]
    },
    {
        "id": "3614cf0c48d0f160",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Quiet_Mode_Level",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Quiet_Mode_Level\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1460,
        "wires": [
            [
                "0771fea18659deea"
            ]
        ]
    },
    {
        "id": "9285cfa754ee552e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Sterilization_State",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Sterilization_State\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1520,
        "wires": [
            [
                "8ed91c4260d9b758"
            ]
        ]
    },
    {
        "id": "a861b75804a0978a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Sterilization_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Sterilization_Temp\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1580,
        "wires": [
            [
                "7ce3c0d525800846"
            ]
        ]
    },
    {
        "id": "a0d8b4706f8d61b1",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Heatpump_State",
        "links": [],
        "x": 1515,
        "y": 980,
        "wires": []
    },
    {
        "id": "3b23831ccc3641c6",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Pump_Flow",
        "links": [
            "5d54922367195a62",
            "43b60b667e5e5610"
        ],
        "x": 1515,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b131edf180140fb6",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Force_DHW_State",
        "links": [],
        "x": 1515,
        "y": 1100,
        "wires": []
    },
    {
        "id": "4ff74e2b48b1d597",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Operating_Mode_State",
        "links": [],
        "x": 1515,
        "y": 1160,
        "wires": []
    },
    {
        "id": "905527b22aae9dc8",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Main_Inlet_Temp",
        "links": [
            "1d97c2a9ed08db30",
            "4ed4c2beb59ad24e",
            "66c75f4293e12f9e",
            "73ee925b927ed0c6",
            "43b60b667e5e5610"
        ],
        "x": 1515,
        "y": 1220,
        "wires": []
    },
    {
        "id": "35ca9241fc9fc7a1",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Main_Outlet_Temp",
        "links": [
            "9dc0d35330d31725",
            "177c48531af94bd0",
            "66c75f4293e12f9e",
            "43b60b667e5e5610"
        ],
        "x": 1515,
        "y": 1280,
        "wires": []
    },
    {
        "id": "12a26bbb7c8070d7",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Main_Target_Temp",
        "links": [
            "024bef9dc12b8273",
            "bc80a86bea1c4c76",
            "66c75f4293e12f9e"
        ],
        "x": 1515,
        "y": 1340,
        "wires": []
    },
    {
        "id": "aec0cb2b18e02d8b",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "ThreeWay_Valve_State",
        "links": [
            "6bdcf84066368733",
            "b51f6522ce8b3103",
            "66c75f4293e12f9e"
        ],
        "x": 1515,
        "y": 1400,
        "wires": []
    },
    {
        "id": "0771fea18659deea",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Quiet_Mode_Level",
        "links": [],
        "x": 1515,
        "y": 1460,
        "wires": []
    },
    {
        "id": "8ed91c4260d9b758",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Sterilization_State",
        "links": [],
        "x": 1515,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7ce3c0d525800846",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Sterilization_Temp",
        "links": [],
        "x": 1515,
        "y": 1580,
        "wires": []
    },
    {
        "id": "46aa3584ebd4caad",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "links": [
            "e17b09af13812496"
        ],
        "x": 655,
        "y": 1640,
        "wires": [
            [
                "85919acf34d78bae"
            ]
        ]
    },
    {
        "id": "85919acf34d78bae",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.WoonkamerSP",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"WoonkamerSP\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1640,
        "wires": [
            [
                "64a44fa6b9450bc7"
            ]
        ]
    },
    {
        "id": "17580adb3781c57f",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 280,
        "wires": []
    },
    {
        "id": "581692e893e2d482",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "set.T_woonkamer_BT",
        "func": "msg.payload = Number(msg.payload).toFixed(2);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"T_woonkamer_BT\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 280,
        "wires": [
            [
                "17580adb3781c57f",
                "a22898dfdc4ff0ca"
            ]
        ]
    },
    {
        "id": "a22898dfdc4ff0ca",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T_woonkamer_BT",
        "links": [
            "027fc8c8143c87a3",
            "4319ac5a3d23e95a",
            "444b794ebd19280f",
            "dbe1565349e3663d",
            "ea8203d2d9d4529b",
            "94868275eef87d40"
        ],
        "x": 1515,
        "y": 320,
        "wires": []
    },
    {
        "id": "609ce750edb0db2b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP9 - panasonic_heat_pump/main/DHW_Target_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Target_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 470,
        "y": 1700,
        "wires": [
            [
                "93eb54b8be16fd2c"
            ]
        ]
    },
    {
        "id": "8f6938d08a85ad26",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP10 - panasonic_heat_pump/main/DHW_Temp",
        "topic": "panasonic_heat_pump/main/DHW_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 490,
        "y": 1760,
        "wires": [
            [
                "9991b2135381fede"
            ]
        ]
    },
    {
        "id": "93eb54b8be16fd2c",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1700,
        "wires": [
            [
                "75ecf6650a5109d6"
            ]
        ]
    },
    {
        "id": "75ecf6650a5109d6",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.DHW_Target_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"DHW_Target_Temp\",msg.payload,\"file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1700,
        "wires": [
            [
                "dd45b1caa253346b"
            ]
        ]
    },
    {
        "id": "9991b2135381fede",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1760,
        "wires": [
            [
                "a5dd53dd3d0d1b7f"
            ]
        ]
    },
    {
        "id": "a5dd53dd3d0d1b7f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.DHW_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\n\nglobal.set(\"DHW_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1760,
        "wires": [
            [
                "d54ac3b979428b64"
            ]
        ]
    },
    {
        "id": "dd45b1caa253346b",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "DHW_Target_Temp",
        "links": [],
        "x": 1515,
        "y": 1700,
        "wires": []
    },
    {
        "id": "d54ac3b979428b64",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "DHW_Temp",
        "links": [
            "4cfdc172228a42bb",
            "f7c3d072dd33aa27",
            "dfd760c7e50d3a10"
        ],
        "x": 1515,
        "y": 1760,
        "wires": []
    },
    {
        "id": "52945322ab63b965",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Source: Panasonic MQTT",
        "info": "",
        "x": 390,
        "y": 940,
        "wires": []
    },
    {
        "id": "f34333d0f62bbd2d",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "TOP29 - panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "topic": "panasonic_heat_pump/main/Z1_Heat_Curve_Target_High_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 420,
        "y": 1820,
        "wires": [
            [
                "39aabf25524d867e"
            ]
        ]
    },
    {
        "id": "d69bd0a7c3dd5d4f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "set.Z1_Heat_Curve_Target_High_Temp",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Z1_Heat_Curve_Target_High_Temp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1820,
        "wires": [
            [
                "bb8e93b0650250f5"
            ]
        ]
    },
    {
        "id": "bb8e93b0650250f5",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "Z1_Heat_Curve_Target_High_Temp",
        "links": [],
        "x": 1515,
        "y": 1820,
        "wires": []
    },
    {
        "id": "830e11771a1baae8",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 480,
        "wires": []
    },
    {
        "id": "18fd7ac120089042",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "Correction_1_RTC",
        "links": [
            "4319ac5a3d23e95a",
            "e6999514a091fd05"
        ],
        "x": 1455,
        "y": 520,
        "wires": []
    },
    {
        "id": "c170e8478752746e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "set.Correction_1_RTC",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Correction_1_RTC\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 480,
        "wires": [
            [
                "18fd7ac120089042",
                "830e11771a1baae8"
            ]
        ]
    },
    {
        "id": "64a44fa6b9450bc7",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "WoonkamerSP_custom",
        "links": [
            "dbe1565349e3663d",
            "ff3a58126c32e495",
            "6f3c1d0f88ccd217"
        ],
        "x": 1515,
        "y": 1640,
        "wires": []
    },
    {
        "id": "93404b62f7fb0fb2",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "SP_Final",
        "links": [
            "1f4a153d2239272b",
            "4199370bd4b6fdd1",
            "eac0b9a4ae5aa965",
            "e330f5a1b7ad039c"
        ],
        "x": 1455,
        "y": 680,
        "wires": []
    },
    {
        "id": "4e78d56d6c1eb0d1",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "set.SP_Final",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"SP_Final\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 640,
        "wires": [
            [
                "93404b62f7fb0fb2",
                "6648d0ba92cc010e"
            ]
        ]
    },
    {
        "id": "39aabf25524d867e",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1820,
        "wires": [
            [
                "d69bd0a7c3dd5d4f"
            ]
        ]
    },
    {
        "id": "691604d099745232",
        "type": "delay",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 980,
        "y": 940,
        "wires": [
            [
                "9dad0ebe8e5b9c2a"
            ]
        ]
    },
    {
        "id": "6648d0ba92cc010e",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 640,
        "wires": []
    },
    {
        "id": "3ec15c8e37ccda1b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP8 - panasonic_heat_pump/main/Compressor_Freq",
        "topic": "panasonic_heat_pump/main/Compressor_Freq",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 480,
        "y": 1880,
        "wires": [
            [
                "c3cc4ad31bfecda5"
            ]
        ]
    },
    {
        "id": "c3cc4ad31bfecda5",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1880,
        "wires": [
            [
                "b9adf06497b1e231"
            ]
        ]
    },
    {
        "id": "b9adf06497b1e231",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.compressor_frequency",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"compressor_frequency\",msg.payload,\"file\");\nglobal.set(\"compressor_frequency\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1880,
        "wires": [
            [
                "c57a81d1dee5b8a9"
            ]
        ]
    },
    {
        "id": "c57a81d1dee5b8a9",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "compressor_frequency",
        "links": [
            "66c75f4293e12f9e"
        ],
        "x": 1515,
        "y": 1880,
        "wires": []
    },
    {
        "id": "0949da21520e7e09",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 560,
        "wires": []
    },
    {
        "id": "16054e8334890ad8",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "Correction_2_softstart",
        "links": [
            "4c49268a7054041c"
        ],
        "x": 1455,
        "y": 600,
        "wires": []
    },
    {
        "id": "db3d913f68e3e439",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "set.Correction_2_softstart",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Correction_2_softstart\",msg.payload,\"file\");\nglobal.set(\"Correction_2_softstart\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 560,
        "wires": [
            [
                "0949da21520e7e09",
                "16054e8334890ad8"
            ]
        ]
    },
    {
        "id": "73ee925b927ed0c6",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "",
        "links": [
            "0380b395668eee8e",
            "84f7cbc2cc8c135d",
            "8dcafc6e30726812",
            "905527b22aae9dc8",
            "c9df0ea076346fde"
        ],
        "x": 155,
        "y": 540,
        "wires": [
            [
                "6f02b65a25f5c88f"
            ]
        ]
    },
    {
        "id": "6f02b65a25f5c88f",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 250,
        "y": 540,
        "wires": [
            [
                "78114aa97638ee9e"
            ]
        ]
    },
    {
        "id": "78114aa97638ee9e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "WAR + RTC + Softstart function",
        "func": "//\n//      [SP0_start]                 = Value is set through the dashboard. Compares to a virtual Ta Direct.\n//      \n//      [correction_war]            = calculate a correction in this function if it is enabled\n//      [SP1_war]                   = [SP0_start] + [correction_war]\n//\n//      [correction_rtc]            = calculate a correction in this function if it is enabled\n//      [SP2_rtc]                   = [SP1_war] + [correction_rtc]\n//\n//      [correction_softstart]      = calculate a correction in this function if it is enabled\n//      [SP3_softstart]             = [SP2_rtc] + [Correction_softstart]\n//\n//      [SP_Final]                  = [SP3_softstart] = New real SP to [SET5 SetZ1HeatRequestTemperature]\n//\n//////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////\n\n// All these functions ONLY need to be executed when the heatpump is in HEAT mode. \nvar ThreeWay_Valve_State=global.get('ThreeWay_Valve_State');                    // Get the global variable for current possition of the three way valve. ROOM or DHW mode. (0=HEAT / 1=DHW)\n\nif (ThreeWay_Valve_State==1){msg.payload=0;return msg;}                         // If state is 1 (DHW mode), correction 0 is direclty exported to the message and the function ends here.\nelse\n{\n    ////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////\n    \n    var SP0_start       = global.get('SP_DIRECT_virt',\"file\");                  // Get the global variable for SP_DIRECT_virt. Value is set through the dashboard\n    if (global.get(\"SP_DIRECT_virt\",\"file\") === undefined) \n        {\n        throw \"SP_DIRECT is not correctly set in Dashboards. PLease set it.\"\n        }\n        \n        \n    //////////////////////////////// WAR /////////////////////////////////////////\n    // This function replaces the virtual Ta Direct set from the dashboard. \n    //\n    // Design example\n    //          OUTSIDE                 WATER\n    //          Temperature     >>      Temperature\n    //----------------------------------------------------------------------------\n    // Range 1\n    //          (OT1=)  20      >>  25  (=WT1)\n    // Range 2\n    //          (OT2=)  5       >>  31  (=WT2)\n    //----------------------------------------------------------------------------\n    //          (OT2=)  5       >>  31  (=WT2)\n    // Range 3\n    //          (OT3=)  -10     >>  37  (=WT3)\n    // Range 4\n    //----------------------------------------------------------------------------\n    var war_state       = global.get('Correction_0_WAR_on_off',\"file\");             // Get the global variable. Used to see if the WAR function is enabled.\n    var war_Tb          = global.get('T_outside',\"file\");                           // Outdoor temperature.\n    var SP1_war                                                                     // set variable\n    \n    if (war_state==1 && war_Tb > -50)                                               // If the state is 1 (enabled), AND outside temperature contains a value.\n                                                                                    // Only if above conditions are met, we will go through the calculation.\n        {\n            var war_ot1         = global.get('war_ot1',\"file\");                 // Outside temperature high         (warm outside)\n            var war_ot2         = global.get('war_ot2',\"file\");                 // Outside temperature intermediate (intermediate outside temperature)\n            var war_ot3         = global.get('war_ot3',\"file\");                 // Outside temperature low          (cold outside)\n            var war_wt1         = global.get('war_wt1',\"file\");                 // Water temperature low            (cold water)\n            var war_wt2         = global.get('war_wt2',\"file\");                 // Water temperature intermediate   (intermediate water temperature)\n            var war_wt3         = global.get('war_wt3',\"file\");                 // Water temperature high           (warm water)\n\n                if (isNaN(war_ot1+war_ot2+war_ot3+war_wt1+war_wt2+war_wt3))     // if the variables are added to eachother and the result is Not a Number, produce an error message.\n                {throw \"WAR function temperatures are not correctly set in the dashboard. Please correct this in the GUI.\"}\n\n            if (war_Tb => war_ot1) \n                {SP1_war = war_wt1;}                                        // Range 1\n            \n            if (war_Tb < war_ot1 && war_Tb > war_ot2)                       // Range 2\n                {SP1_war = (((war_wt1-war_wt2)*((war_Tb-war_ot1)/(war_ot1-war_ot2)))+war_wt1);}\n                \n            if (war_Tb == war_ot2) {SP1_war = war_wt2;}                     // transition point 2|3\n            \n            if (war_Tb < war_ot2 && war_Tb > war_ot3)                       // Range 3\n                {SP1_war = (((war_wt2-war_wt3)*((war_Tb-war_ot2)/(war_ot2-war_ot3)))+war_wt2);}\n                \n            if (war_Tb <= war_ot3)                                          // Range 4\n                {SP1_war = war_wt3;}                                            \n    \n            SP1_war = Number(SP1_war).toFixed(0);\n            SP1_war = parseFloat(SP1_war);\n        }\n        \n    else\n        {\n            SP1_war = SP0_start;                                                // Get the global variable for SP_DIRECT_virt. Value is set through the dashboard\n        }\n        \n    \n    ////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////// RTC ///////////////////////////////////////\n    //\n    // Automagical RoomTemperatureCompensation (=RTC) (original StooklijnDelta by CurlyMo, translated to NodeRed by EdterBak)\n    // This function checks a virtual setpoint of a room against a measured temperature of the room.\n    //\n    //\n    // [Function explanation]\n    // First check: Is the function enabled (through GUI/Dashboard). If not, correction will be 0.\n    // When enabled; Each IF checks the value of dT_rtc against an offset. If the check is true, the local variable \"Correction_1_RTC\" is corrected by -1 or +1.\n    // Additionally. If TWO IFs are true, then the correction is added twice. \n    // Eg. It is too hot inside (PV). When it is 1.5°C too warm, the RoomTemperatureCompensation variable will be -3.\n    //\n    //    \n    // If the RTC function is disabled, the correction is set to 0 so it is also visible as 0 in the dashboard.    \n    //\n\n    var rtc_state       = global.get('Correction_1_RTC_on_off',\"file\");         // Get the global variable. Used to see if the RTC function is enabled.\n    \n    if (rtc_state == 0) {rtc_correction = 0;}                                   // If RTC is disabled, set correction to 0. end if\n    else\n        {\n\n        // Declaration of variables including their values.    \n        var rtc_correction  = 0;                                                // declare local variable, start with value zero\n        var rtc_PV          = global.get('T_woonkamer_BT');                     // Get the global variable. THe room temperature for RoomTemperatureCompensation you want to control.\n        var rtc_SP          = global.get('WoonkamerSP',\"file\");                 // Virtual target temperature setpoint for RTC. Set in Dashboard. \n        var rtc_Tb          = global.get('T_outside',\"file\");                   // Outdoor temperature.\n        var rtc_dT          = (rtc_PV-rtc_SP);                                  // local variable for calculated temperature difference. If > 0 it is too warm, If < 0 it is too cold. \n        \n        //\n        // below are the variables containing the temperature ranges.\n        var rtc_t1          = global.get('rtc_t1',\"file\");                      // Range +3\n        var rtc_t2          = global.get('rtc_t2',\"file\");                      // Range +2\n        var rtc_t3          = global.get('rtc_t3',\"file\");                      // Range +1\n        var rtc_t4          = global.get('rtc_t4',\"file\");                      // Range -1\n        var rtc_t5          = global.get('rtc_t5',\"file\");                      // Range -2\n        var rtc_t6          = global.get('rtc_t6',\"file\");                      // Range -3\n        \n            if (isNaN(rtc_t1+rtc_t2+rtc_t3+rtc_t4+rtc_t5+rtc_t6))               // if the variables are added to eachother and the result is Not a Number, produce an error message.\n            {throw \"RTC function temperatures are not correctly set in the dashboard. Please correct this in the GUI.\"}\n            \n        // ADJUST THE VALUES BELOW TO YOUR OWN SITUATION\n        if (rtc_dT >= rtc_t3) {rtc_correction = rtc_correction -1;}             // It is a little too hot.\n        if (rtc_dT >= rtc_t2) {rtc_correction = rtc_correction -1;}             // It is too hot.\n        if (rtc_dT >= rtc_t1) {rtc_correction = rtc_correction -1;}             // It is way too hot.\n    \n        if (rtc_dT < rtc_t4) {rtc_correction = rtc_correction +1;}              // It is a little too cold\n        if (rtc_Tb < 18)                                                        // Extra check to justify increasing the setpoint this much.\n            {\n            if (rtc_dT < rtc_t5) {rtc_correction = rtc_correction +1;}          // It is too cold.\n            if (rtc_dT < rtc_t6) {rtc_correction = rtc_correction +1;}          // It is way too cold\n            }\n        }\n    \n    \n    \n    ////////////////////////////////////////////////////////////////////////////////\n    //\n    //      [SP0_start]                 = Value is set through the dashboard. Compares to a virtual Ta Direct.\n    //      \n    //      [correction_war]            = calculate a correction in this function if it is enabled\n    //      [SP1_war]                   = [SP0_start] + [correction_war]\n    //\n    //      [correction_rtc]            = calculate a correction in this function if it is enabled\n    //      [SP2_rtc]                   = [SP1_war] + [correction_rtc]\n    //\n    //      [correction_softstart]      = calculate a correction in this function if it is enabled\n    //      [SP3_softstart]             = [SP2_rtc] + [Correction_softstart]\n    //\n    //      [SP_Final]                  = [SP3_softstart] = New real SP to [SET5 SetZ1HeatRequestTemperature]\n    //\n    var SP2_rtc = SP1_war + rtc_correction;\n    \n    \n    \n    \n    \n    //////////////////////////////// SOFTSTART /////////////////////////////////////\n    // Declaration of variables including their values.\n    var ss_state            = global.get('Correction_2_softstart_on_off',\"file\");          // Get the global variable. Used to see if the softstart function is enabled.\n    if (ss_state == 0) {ss_correction = 0;} \n    \n    else {\n        var ss_PV               = global.get('Main_Inlet_Temp');                // PV (Tr/inlet) Temperature of water.\n        var ss_dTmax            = 2;                                            // Maximum alowed temperature differende between Setpoint Ta (outlet) and measured Tr (inlet). Unit = degrees\n        var ss_Tb               = global.get('T_outside',\"file\");               // Outdoor temperature.\n            if (isNaN(T_outside))               // if the variable is Not a Number, produce an error message.\n            {throw \"SoftStart function: T_outside is not valid. Please correct this in the flow-configuration screen of NodeRed.\"}\n            \n        var ss_Hz               = global.get('compressor_frequency');           // Get the global variable for current compressor frequency\n        var ss_Treshold         = 30;                                           // Hz compressor treshold, initial value. This value is used if in case of error or the values for T_outside is unavailable. \n        var ss_correction_old   = global.get('Correction_2_softstart');         // Get the global variable. The variable correction by softstart function, from memory.\n            if (ss_correction_old === undefined) \n            {ss_correction_old = 0;}                                            // make sure there is a value present.\n        var ss_correction       = 0;                                            // set initial value new_correction as a basis for the calculation\n                \n                // Treshold calculation based on outside temperatures. Change these values to your own liking.\n                if (ss_Tb >= 3)                     {ss_Treshold=28;}\n                if (ss_Tb < 3 &&  ss_Tb >= 1)       {ss_Treshold=30;}\n                if (ss_Tb < 1 &&  ss_Tb >= -2)      {ss_Treshold=35;}\n                if (ss_Tb < -2 && ss_Tb >= -5)      {ss_Treshold=41;}\n                if (ss_Tb < -5 && ss_Tb >= -7)      {ss_Treshold=44;}\n                if (ss_Tb < -7 && ss_Tb >= -9)      {ss_Treshold=47;}\n                if (ss_Tb < -9 && ss_Tb >= -11)     {ss_Treshold=49;}\n                if (ss_Tb < -11)                    {ss_Treshold=51;}\n                \n        // CONDITIONS and calculation for new_correction of the SP.\n            // 1 - Compressor frequency must be above 0\n            // 2 - Softstart function must be enabled (GUI boolean)\n            // 3 - Prevent intervention when the HP is coming back from DHW mode with very hot water. (PVTr < 32) (removed mow)\n        \n        if (ss_Hz > 5 && ((SP2_rtc-ss_PV) > ss_dTmax)) \n            {ss_correction = (ss_PV + ss_dTmax - SP2_rtc);}\n        else\n            {ss_correction = 0;} // because the conditions are not met, ss_correction is set to 0.\n        \n        // When a new correction value is found, it is compared to the old correction value (= ss_diff). \n        //\n            // ss_diff = [new] - [old]\n            // ss_diff = [-5]  - [0]  = -5     case 1; Allowed. Startup phase, correction required of -5.\n            // ss_diff = [-5]  - [-4] = -1     case 2; Allowed. Not startup phase, but bigger correction required\n            // ss_diff = [0]   - [0]  =  0     case 3; Allowed. Current correction the same as old correction.\n            // ss_diff = [-5]  - [-5] =  0     case 3; Allowed. Current correction the same as old correction.\n            // ss_diff = [-4]  - [-5] = +1     case 4; Restrict. Correction reduction. This is only allowed if rules below are met.\n            // ss_diff = [-1]  - [-5] = +4     case 5; Restrict. BIG correction reduction. This is not allowed if rules below are met.\n            \n        var ss_diff = (ss_correction - ss_correction_old);\n        \n        if (ss_diff < 0)                                                        // Allowed. case 1, 2 and 3. \n            {ss_correction = ss_correction;}\n        \n        if ( (ss_diff > 0) && (ss_Hz > ss_Treshold) )                           // Do not allow. Case 4, 5. Check frequency gainst treshold if it is allow or not. Frequency is too high, so NEW_correction is overwritten with OLD_correction.\n            {ss_correction = ss_correction_old;}                                // Keep old correction.\n        \n        if (ss_diff > 0 && ss_Hz < ss_Treshold)                                 // Allow. Restrict. Case 4, 5. Check frequency gainst treshold if it is allow or not. Frequency is low enough, so NEW_correction is kept.\n            {ss_correction = ss_correction_old + 1;}                            // Keep new correction. Note: this line can actually be taken out, but does no harm and helps understanding. New_correction is already determined above.\n        }\n    \n    ////////////////////////////////////////////////////////////////////////////////\n    //      [SP1_war]                   = [SP0_Start] + [war_correction]\n    //      [SP2_rtc]                   = [SP1_war] + [rtc_correction]\n    //      [SP3_Softstart]             = [SP2_trc] + [Correction_Softstart]\n    //      [SP_Final]                  = [SP3_Softstart] = New real SP to [SET5 SetZ1HeatRequestTemperature]\n    var SP3_ss = SP2_rtc + ss_correction;\n    ////////////////////////////////////////////////////////////////////////////////\n    \n    var SP_Final = SP3_ss;\n    \n    let msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={};\n    \n    msg1.payload = SP0_start;                                                       // not required, for debugging\n    msg1.topic='SP0_start';                                                         // not required, for debugging\n    \n    msg2.payload = null;                                                            // required\n    msg2.topic='empty';                                                             // required\n    \n    msg3.payload = SP1_war;                                                         // required\n    msg3.topic='SP1_war';                                                           // required\n    \n    msg4.payload = rtc_correction;                                                  // not required, for debugging\n    msg4.topic = 'rtc_correction';                                                  // not required, for debugging\n    \n    msg5.payload = SP2_rtc;                                                         // required\n    msg5.topic = 'SP2_rtc';                                                         // required\n    \n    msg6.payload = ss_correction;                                                   // required\n    msg6.topic = 'ss_correction';                                                   // required\n    \n    msg7.payload = SP3_ss;                                                          // not required, for debugging\n    msg7.topic = 'SP3_ss';                                                          // not required, for debugging\n    \n    msg8.payload = SP_Final;\n    msg8.topic = 'SP_Final';                                                        // not required, for debugging\n    \n    msg9.payload = null;\n    msg9.topic = 'empty';                                                           // not required, for debugging\n    \n    msg10.payload = ss_Hz;\n    msg10.topic = 'ss_Hz';                                                          // not required, for debugging\n    \n    \n    return [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];\n    \n    \n}",
        "outputs": 10,
        "noerr": 0,
        "initialize": "if (global.get(\"Correction_0_WAR_on_off\",\"file\") === undefined) {\n    global.set(\"Correction_0_WAR_on_off\", 0,\"file\");\n    throw \"Variable Correction_0_WAR_on_off is undefined. Please set it in the dashboards, toggle the switch.\"\n}\n\nif (global.get(\"T_outside\",\"file\") === undefined) {\n    global.set(\"T_outside\", -99,\"file\");\n    throw \"T_outside is undefined. Make sure sensor data is comming in as a variable correctly.\"\n}\n\nif (global.get(\"Correction_1_RTC_on_off\",\"file\") === undefined) {\n    global.set(\"Correction_1_RTC_on_off\", 0,\"file\")\n    throw \"Correction_1_RTC_on_off is undefined. Please set it in the dashboards, toggle the switch.\"\n}\n\nif (global.get(\"Correction_2_softstart_on_off\",\"file\") === undefined) {\n    global.set(\"Correction_2_softstart_on_off\", 0,\"file\");\n    throw \"Correction_2_softstart_on_off is undefined. Please set it in the dashboards, toggle the switch.\"\n}\n",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 520,
        "wires": [
            [],
            [],
            [
                "19f0cfe2f4c43642"
            ],
            [
                "c170e8478752746e"
            ],
            [
                "5f233c0fd1ffa550"
            ],
            [
                "db3d913f68e3e439"
            ],
            [],
            [
                "4e78d56d6c1eb0d1"
            ],
            [],
            []
        ],
        "outputLabels": [
            "SP0_start",
            "empty",
            "SP1_war",
            "rtc_correction",
            "SP2_rtc",
            "ss_correction",
            "SP3_ss",
            "SP_Final",
            "empty",
            "ss_Hz"
        ],
        "info": "# ALL IN ONE FUNCTION\n\nThis function takes care of WAR, RTC and SoftStart. Comments are within"
    },
    {
        "id": "3c51afcf41e849f1",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 230,
        "y": 500,
        "wires": [
            [
                "78114aa97638ee9e"
            ]
        ]
    },
    {
        "id": "19f0cfe2f4c43642",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "set.SP_war",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"SP_war\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 440,
        "wires": [
            [
                "d16f38ef74db786a"
            ]
        ]
    },
    {
        "id": "d16f38ef74db786a",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "SP_war",
        "links": [
            "080c11bcc5a2ac73",
            "11338381e8665522",
            "bbec5b2f8adad763"
        ],
        "x": 1455,
        "y": 440,
        "wires": []
    },
    {
        "id": "5f233c0fd1ffa550",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "SP2_rtc",
        "links": [
            "1bb2933854287555"
        ],
        "x": 1115,
        "y": 520,
        "wires": []
    },
    {
        "id": "f4e55b938e645737",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "COP_calculated",
        "func": "var Main_Outlet_Temp=global.get('Main_Outlet_Temp');                            // Get the global variable for Outlet temperature\nvar Main_Inlet_Temp=global.get('Main_Inlet_Temp');                              // Get the global variable for inlet temperature\nvar Pump_Flow=global.get('Pump_Flow');                                          // Get the global variable for pump flow\nvar Heat_Energy_Consumption=global.get('Heat_Energy_Consumption');              // Get the global variable for absorbed energy of the heatpump\nvar Hz=global.get('compressor_frequency');                                      // Get the global variable for absorbed energy of the heatpump\n\nif (Hz == 0) \n    {\n        COP_calculated = 0;\n    }\n    \nelse \n    {\n    var Watt_heat_c = (Main_Outlet_Temp-Main_Inlet_Temp) * 4.187 * (Pump_Flow / 60) * 1000;\n    var COP_calculated = Watt_heat_c / Heat_Energy_Consumption;\n    \n    msg.payload = COP_calculated;\n    msg.payload = Number(msg.payload).toFixed(2);\n    msg.payload = parseFloat(msg.payload);\n    msg.topic   = \"COP\";\n    \n    if (msg.payload > 0) {return msg;}\n    else {return null;}\n    }\n    \n\n\n\n/*\nSource of the calculation:\nhttps://github.com/Dylantje/WP-Heishamon-sripts/blob/master/WP%20LUA%20COP%20berekening\n@ Dylantje: Thank you.\n--------------------------------------------------------------------------------\nreturn {\n\n    on = {\n        timer = {\n\t\t\t'every minute'       \n        --devices = { \n                  -- 12901    -- NR: WP-Verbruik\n                  }\n         },\n    logging = {\n        --level = domoticz.LOG_DEBUG, -- Uncomment to override the dzVents global logging setting and use debug\n        marker = \"WP-COP Pana Device HM\"\n               },    \n    \n    execute = function(domoticz, item)\n        \n        -- devices\n        --local flowinstValue = domoticz.devices(12496).rawData[1]           -- Flow L/min [ is % device ]\n        local flowinstValue = domoticz.devices(12524).rawData[1]             -- Flow custom sensor ivm liters /minuut   WP Flow HM\n        --local flowinstValue = 16                                           -- Flow L/min  (fixed value)\n        local tempoutValue = domoticz.devices(12493).rawData[1]              -- Temperature Heatpump out                WP Uitstroom Aanvoer HM\n        local tempreturnValue = domoticz.devices(12494).rawData[1]           -- Temperature Heatpump return             WP Instroom Retour HM\n        local powerHeatpump = domoticz.devices(12901).rawData[1]             -- HEatpump power adsorbed in watt         WP Verbruik W HM\n        local frequentie = domoticz.devices(12526).rawData[1]                -- HEatpump frquentie in Herz              WP Frequentie HM\n        local sCOP = domoticz.devices(12963)                                 -- Cop (dummy- custom sensor W/W )         WP COP NR DZ \t\n        \n        -- calculation\n        local Watt_heat_c = math.abs(domoticz.utils.round((tempoutValue-tempreturnValue) * 4.187 * (flowinstValue/60)*1000))\n        local COP_calculated = math.abs(domoticz.utils.round(Watt_heat_c/powerHeatpump,2))\n\n        domoticz.log('flowinstValue ' .. flowinstValue .. ' L/min ', domoticz.LOG_DEBUG)    \n        domoticz.log('tempoutValue ' .. tempoutValue .. ' C ', domoticz.LOG_DEBUG)    \n        domoticz.log('tempreturnValue ' .. tempreturnValue .. ' C ', domoticz.LOG_DEBUG)    \n        domoticz.log('powerHeatpump ' .. powerHeatpump .. ' Watt ', domoticz.LOG_DEBUG)    \n        domoticz.log('Watt_heat_c ' .. Watt_heat_c .. ' Watt ', domoticz.LOG_DEBUG)        \n        domoticz.log('COP_calculated ' .. COP_calculated .. ' W/W ', domoticz.LOG_DEBUG)\n\n\n       if tonumber(powerHeatpump) > 180 and COP_calculated < 24 and tonumber(frequentie) > 16 then -- was 11 maar geeft vertekent beeld in grafana  -- DIT ERBIJ???:  and tonumber(frequentie) > 80\n\n       --if tonumber(powerHeatpump) > 175 and COP_calculated < 24 and tonumber(flowinstValue) < 15  and tonumber(frequentie) > 1 then -- was 11 maar geeft vertekent beeld in grafana  -- DIT ERBIJ???:  and tonumber(frequentie) > 80\n        domoticz.openURL('http://127.0.0.1:8080/json.htm?type=command&param=udevice&idx=12963'..'&nvalue=0&svalue='..COP_calculated) --WP COP NR DZ\n        domoticz.openURL('http://127.0.0.1:8080/json.htm?type=command&param=udevice&idx=12964'..'&nvalue=0&svalue='..Watt_heat_c)    --WP  Vermogen direct Pana  HM\n        else \n        domoticz.openURL('http://127.0.0.1:8080/json.htm?type=command&param=udevice&idx=12963'..'&nvalue=0&svalue=0') --WP COP NR DZ\n        domoticz.openURL('http://127.0.0.1:8080/json.htm?type=command&param=udevice&idx=12964'..'&nvalue=0&svalue=0') --WP  Vermogen direct Pana  HM\n        end     \n\n    end\n    \n}*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 920,
        "wires": [
            [
                "aa30462c21670606",
                "306b69356454f3ff"
            ]
        ]
    },
    {
        "id": "e5fb067144c27e1b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "TOP16 - panasonic_heat_pump/main/Heat_Energy_Consumption",
        "topic": "panasonic_heat_pump/main/Heat_Energy_Consumption",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 450,
        "y": 1940,
        "wires": [
            [
                "cf2f77d5c5d3e637"
            ]
        ]
    },
    {
        "id": "cf2f77d5c5d3e637",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1940,
        "wires": [
            [
                "ff3dd227527b76c3"
            ]
        ]
    },
    {
        "id": "ff3dd227527b76c3",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "set.Heat_Energy_Consumption",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"Heat_Energy_Consumption\",msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1940,
        "wires": [
            [
                "9de1bde370b68508"
            ]
        ]
    },
    {
        "id": "9de1bde370b68508",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "Heat_Energy_Consumption",
        "links": [
            "43b60b667e5e5610"
        ],
        "x": 1515,
        "y": 1940,
        "wires": []
    },
    {
        "id": "43b60b667e5e5610",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "",
        "links": [
            "35ca9241fc9fc7a1",
            "3b23831ccc3641c6",
            "905527b22aae9dc8",
            "9de1bde370b68508"
        ],
        "x": 1645,
        "y": 920,
        "wires": [
            [
                "f4e55b938e645737"
            ]
        ]
    },
    {
        "id": "aa30462c21670606",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1970,
        "y": 920,
        "wires": []
    },
    {
        "id": "306b69356454f3ff",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "94f57429e16c8e82",
        "name": "COP",
        "links": [
            "fe8e23b8971b868e"
        ],
        "x": 1925,
        "y": 880,
        "wires": []
    },
    {
        "id": "6051d06bc75eda72",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "5a496e1f1ea93a38",
        "name": "TOP33 - panasonic_heat_pump/main/Room_Thermostat_Temp",
        "topic": "panasonic_heat_pump/main/Room_Thermostat_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "581692e893e2d482"
            ]
        ]
    },
    {
        "id": "014b79ca42e19493",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "links": [
            "5b8382118c6c3e1e"
        ],
        "x": 655,
        "y": 280,
        "wires": [
            [
                "581692e893e2d482"
            ]
        ]
    },
    {
        "id": "e9504e95fc5e9a19",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "Enable the Room_Thermostat sensor. Or use your own custom external sensor ",
        "info": "",
        "x": 420,
        "y": 320,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "e13586e83e73223a",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T room (RTC function)",
        "info": "",
        "x": 880,
        "y": 280,
        "wires": []
    },
    {
        "id": "fe6995b4c379cfd7",
        "type": "debug",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 180,
        "wires": []
    },
    {
        "id": "3d671794ce872bcd",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "set.T_outside",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"T_outside\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "fe6995b4c379cfd7",
                "d6a9c376dde9c43f"
            ]
        ]
    },
    {
        "id": "d6a9c376dde9c43f",
        "type": "link out",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T_outside",
        "links": [
            "83984642e11234cc",
            "6430d2fb719f067c"
        ],
        "x": 1515,
        "y": 220,
        "wires": []
    },
    {
        "id": "df9c3a6c0a51be9b",
        "type": "mqtt in",
        "z": "a938de76db0b71f6",
        "d": true,
        "g": "5a496e1f1ea93a38",
        "name": "TOP14 - panasonic_heat_pump/main/Outside_Temp",
        "topic": "panasonic_heat_pump/main/Outside_Temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "92e5b2c.00a8b5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 330,
        "y": 180,
        "wires": [
            [
                "3d671794ce872bcd"
            ]
        ]
    },
    {
        "id": "219066f9a22a1c23",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "",
        "links": [
            "3a1c7ae1443e0666"
        ],
        "x": 655,
        "y": 180,
        "wires": [
            [
                "3d671794ce872bcd"
            ]
        ]
    },
    {
        "id": "6782b41fb1659549",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "T outside sensors (WAR function)",
        "info": "",
        "x": 910,
        "y": 180,
        "wires": []
    },
    {
        "id": "ede82249f74ed7ec",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "Enable the Outside_temperature sensor. Or use your own custom external sensor ",
        "info": "",
        "x": 420,
        "y": 220,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "23f4dfbc7c8ce972",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "5a496e1f1ea93a38",
        "name": "MANDATORY",
        "info": "# Mandatory",
        "x": 210,
        "y": 80,
        "wires": []
    },
    {
        "id": "e330f5a1b7ad039c",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "",
        "links": [
            "93404b62f7fb0fb2"
        ],
        "x": 375,
        "y": 740,
        "wires": [
            [
                "178be36a7334f613"
            ]
        ]
    },
    {
        "id": "7d4a971ea2fd626d",
        "type": "inject",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 290,
        "y": 700,
        "wires": [
            [
                "19166db493fc7fe2"
            ]
        ]
    },
    {
        "id": "178be36a7334f613",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "3af8890722ca7be0"
            ]
        ]
    },
    {
        "id": "19166db493fc7fe2",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "Send new SP",
        "func": "/*\nThis function has the purpose to regularly check the actual SP from the heatpump against the calculated setpoint in from the dashboard/functions. \nOnly when there is a deviation between the two, the new setpoint gets sent through MQTT to SET5.\n*/\n\n\nvar ThreeWay_Valve_State=global.get('ThreeWay_Valve_State');                    // Get the global variable for current possition of the three way valve. ROOM or DHW mode. (0=HEAT / 1=DHW)\n\nif (ThreeWay_Valve_State==1)                                                    // If state is 1 (DHW mode), do not do anything.\n    {\n        return null;\n    }\n\nelse \n    {\n    var SP_Final=global.get('SP_Final',\"file\");\n    var current_sp=global.get('Main_Target_Temp');                              // Get the global variable for current possition of the three way valve. ROOM or DHW mode. (0=HEAT / 1=DHW)    \n    var Correction_0_WAR_on_off=global.get('Correction_0_WAR_on_off',\"file\");\n    var Correction_1_RTC_on_off=global.get('Correction_1_RTC_on_off',\"file\");\n    var Correction_2_softstart_on_off=global.get('Correction_2_softstart_on_off',\"file\");\n\n    \n    if ((Correction_0_WAR_on_off + Correction_1_RTC_on_off + Correction_2_softstart_on_off) == 0 )    \n                                                                                // Check 1, only when one of the functions is enabled. The sum of the states should be 1 or more, otherwise all functions are off.\n            {\n                return null;\n            }\n\n            \n    else    {\n                if (SP_Final ==  current_sp)                                    // Check 1, only if there is a difference between SP and current value, a signal should be sent.\n                    {return null;}\n                else\n                    {msg.payload = SP_Final;\n                    return msg;}\n            }    \n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 700,
        "wires": [
            [
                "3af8890722ca7be0"
            ]
        ]
    },
    {
        "id": "3af8890722ca7be0",
        "type": "mqtt out",
        "z": "a938de76db0b71f6",
        "g": "23847da379e94b05",
        "name": "SP Ta corrected - SET5 (SetZ1HeatRequestTemperature)",
        "topic": "panasonic_heat_pump/commands/SetZ1HeatRequestTemperature",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "92e5b2c.00a8b5",
        "x": 1310,
        "y": 740,
        "wires": []
    },
    {
        "id": "9b245060787d2ecd",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2160,
        "wires": [
            [
                "ba4a12897a805cee"
            ]
        ]
    },
    {
        "id": "ba4a12897a805cee",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.PumpMaxFlowSetting",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"PumpMaxFlowSetting\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "a1e757cb1d79e3f9",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "4118b2ccecf6a6de"
        ],
        "x": 155,
        "y": 2160,
        "wires": [
            [
                "9b245060787d2ecd"
            ]
        ]
    },
    {
        "id": "3472c99aef20f07f",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2220,
        "wires": [
            [
                "4f8c3c7d06c1b19a"
            ]
        ]
    },
    {
        "id": "4f8c3c7d06c1b19a",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.HolidayMode",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"HolidayMode\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "eda4721e720d1975",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2280,
        "wires": [
            [
                "8501242129d89e2c"
            ]
        ]
    },
    {
        "id": "8501242129d89e2c",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.PowerfulMode",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"PowerfulMode\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "e8684c407d602e87",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "bdb7e8e0217cec66"
        ],
        "x": 155,
        "y": 2220,
        "wires": [
            [
                "3472c99aef20f07f"
            ]
        ]
    },
    {
        "id": "f70b59196295efc0",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "979c5ca99c054740"
        ],
        "x": 155,
        "y": 2280,
        "wires": [
            [
                "eda4721e720d1975"
            ]
        ]
    },
    {
        "id": "690250e7cb51c576",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2340,
        "wires": [
            [
                "695ce56812fda3d2"
            ]
        ]
    },
    {
        "id": "695ce56812fda3d2",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.ForceDHW",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"ForceDHW\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "12e43571a8c16fa2",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "092a9db0d9b923b3"
        ],
        "x": 155,
        "y": 2340,
        "wires": [
            [
                "690250e7cb51c576"
            ]
        ]
    },
    {
        "id": "f4fadebd69120ccb",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2400,
        "wires": [
            [
                "a79fac04465c243e"
            ]
        ]
    },
    {
        "id": "a79fac04465c243e",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.ForceDefrost",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"ForceDefrost\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "01744f1093a2fd51",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "5e3a9447502864ad"
        ],
        "x": 155,
        "y": 2400,
        "wires": [
            [
                "f4fadebd69120ccb"
            ]
        ]
    },
    {
        "id": "ab34ebcc109b74de",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2460,
        "wires": [
            [
                "10b4e15b0f3199ad"
            ]
        ]
    },
    {
        "id": "10b4e15b0f3199ad",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.SetZones",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"SetZones\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "283dd6b0185b554b",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2520,
        "wires": [
            [
                "cb2c4d61eeec2c6f"
            ]
        ]
    },
    {
        "id": "cb2c4d61eeec2c6f",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.FloorHeatDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"FloorHeatDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "1281e2b1451c301f",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2580,
        "wires": [
            [
                "e164eaa22e0fa1dc"
            ]
        ]
    },
    {
        "id": "e164eaa22e0fa1dc",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.FloorCoolDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"FloorCoolDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "a25d1f5d91c84a33",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2640,
        "wires": [
            [
                "f9edb4875d3f2c5b"
            ]
        ]
    },
    {
        "id": "f9edb4875d3f2c5b",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.DHWHeatDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"DHWHeatDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "9c4e9ed4c3ac1779",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "2ed9d626c929fb95"
        ],
        "x": 155,
        "y": 2460,
        "wires": [
            [
                "ab34ebcc109b74de"
            ]
        ]
    },
    {
        "id": "4c1c4526944e820e",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "9b2a45a90495e067"
        ],
        "x": 155,
        "y": 2520,
        "wires": [
            [
                "283dd6b0185b554b"
            ]
        ]
    },
    {
        "id": "c32298a87a338b1d",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "7139256ff024b872"
        ],
        "x": 155,
        "y": 2580,
        "wires": [
            [
                "1281e2b1451c301f"
            ]
        ]
    },
    {
        "id": "5e35dee1374d6829",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "c803b9ad018fe78e"
        ],
        "x": 155,
        "y": 2640,
        "wires": [
            [
                "a25d1f5d91c84a33"
            ]
        ]
    },
    {
        "id": "78ddc73a94ec89be",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2700,
        "wires": [
            [
                "e11f7d8caf20dbba"
            ]
        ]
    },
    {
        "id": "e11f7d8caf20dbba",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.HeaterDelayTime",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"HeaterDelayTime\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "3fb7221a7218435a",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2760,
        "wires": [
            [
                "460a1a83313cfcc5"
            ]
        ]
    },
    {
        "id": "460a1a83313cfcc5",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.HeaterStartDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"HeaterStartDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "8121e5bfa638e9ab",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2820,
        "wires": [
            [
                "58a904f891a8e2cc"
            ]
        ]
    },
    {
        "id": "58a904f891a8e2cc",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.HeaterStopDelta",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"HeaterStopDelta\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "7caff8b1418d65da",
        "type": "rbe",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 2880,
        "wires": [
            [
                "5f758eb9af24eb35"
            ]
        ]
    },
    {
        "id": "5f758eb9af24eb35",
        "type": "function",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "set.PanasonicMainScheduler",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"PanasonicMainScheduler\",msg.payload,\"file\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "bfcbe2fb120f457c",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "4021cdadbdc7768d"
        ],
        "x": 155,
        "y": 2700,
        "wires": [
            [
                "78ddc73a94ec89be"
            ]
        ]
    },
    {
        "id": "0e3197d36afc45dc",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "78816343589b199a"
        ],
        "x": 155,
        "y": 2760,
        "wires": [
            [
                "3fb7221a7218435a"
            ]
        ]
    },
    {
        "id": "ca1f0fdf0dd05c89",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "a2d7de4325e4bf91"
        ],
        "x": 155,
        "y": 2820,
        "wires": [
            [
                "8121e5bfa638e9ab"
            ]
        ]
    },
    {
        "id": "c5cba27eac8a70a2",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "",
        "links": [
            "089ba42c8f7f7a61"
        ],
        "x": 155,
        "y": 2880,
        "wires": [
            [
                "7caff8b1418d65da"
            ]
        ]
    },
    {
        "id": "2c34d9f3299bef00",
        "type": "comment",
        "z": "a938de76db0b71f6",
        "g": "cd2050a861736ec5",
        "name": "Put settings from GUI - DASH into variables",
        "info": "",
        "x": 310,
        "y": 2100,
        "wires": []
    },
    {
        "id": "b1b3e80155e49c5c",
        "type": "link in",
        "z": "a938de76db0b71f6",
        "g": "0077cf76d14c5757",
        "name": "",
        "links": [
            "14327004637e05c7",
            "cb924439a66154f1"
        ],
        "x": 215,
        "y": 1460,
        "wires": [
            [
                "cbded61fe1f8bfa6"
            ]
        ]
    },
    {
        "id": "35d210f042827344",
        "type": "tab",
        "label": "WP Scheduler",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0fbba18720836ca3",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b1c2fe0fe975bbc7",
            "c672e8ad8becc1f7",
            "67400a0e79187520",
            "551f523d315b3342",
            "4c328a83758a2a97",
            "f4780afe714edd47",
            "e09347cb9c39a92f",
            "55441919d1683ba4",
            "acc7bbf558e2c1ef",
            "c7e634eb2d550f49",
            "53049a3679fc7b9b",
            "d66c312b6eddb8f6"
        ],
        "x": 554,
        "y": 239,
        "w": 1692,
        "h": 122
    },
    {
        "id": "194e1a6444d9443f",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "11cca7fee5724f1b",
            "82effe161b2bbc2b",
            "2706e7c49463bdf2",
            "ae9a8afc7193b184",
            "6ddcfeabd63c4c72",
            "17c846331dd1aaee",
            "9117cab2312d6ddb",
            "1c61bdd7a5da6392",
            "fb9a83816a34d13b",
            "a62a3decf902a152",
            "2f169c65cae08040",
            "682a53064edf1bb5"
        ],
        "x": 554,
        "y": 939,
        "w": 1692,
        "h": 122
    },
    {
        "id": "4b4f3fd1d3ef3232",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "97655d278f29d4ac",
            "4e617070440f9f24",
            "d6ba0e882469b722",
            "cc51f52dd55b756a",
            "ed5daaec90477db9",
            "87b33373d4508273",
            "6b47321e5ed4f339",
            "2d1a612df57083e6",
            "f9cff73f291a1fb3",
            "7f6323f31b74eebf",
            "d024146e9727477d",
            "2d1606e60366b30e"
        ],
        "x": 554,
        "y": 1359,
        "w": 1712,
        "h": 122
    },
    {
        "id": "77d5bc1f5eda069f",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "05675465e20aee4b",
            "6adcb1c5b56301b6",
            "c1cd550278cbde80",
            "e2e3101ca85f6ea4",
            "70b24ba53c30e637",
            "e9f666e80ea27fdc",
            "61839bb51fb04080",
            "cf883b1f90cef7de",
            "32d00c1d8f628043",
            "031707ca9c7780ee",
            "f125ed27af251cfb",
            "2989c76ac5cabf7d"
        ],
        "x": 554,
        "y": 379,
        "w": 1692,
        "h": 122
    },
    {
        "id": "a9162d2894d367c2",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "de761fcc2800b435",
            "0bb1c2e66ced61cf",
            "8ca0120e30370a65",
            "98f531e1f417f8c5",
            "b8ed1c98453fbdde",
            "736bc0ca6f121837",
            "3bdaf97acc9dc2e7",
            "8e7f02fd5df8372a",
            "5fb1da156073fc50",
            "eec27a0e6c34e8a2",
            "163415ef49940103",
            "e8a262aa09f312ba"
        ],
        "x": 554,
        "y": 1079,
        "w": 1692,
        "h": 122
    },
    {
        "id": "b2b23a5b735449d8",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0f5be7a19978136d",
            "bbbc57d5a36ce355",
            "7c73925af591298c",
            "94a26b42b644e249",
            "eb8bf676c521bb56",
            "22c1242ac08b2b86",
            "8055737437187e41",
            "81c7bee70b0ffd1a",
            "cd482dc7c307a8e8",
            "e9b7911ff281be04",
            "be033afa0499da40",
            "58c622f9eb45c3c8"
        ],
        "x": 554,
        "y": 519,
        "w": 1692,
        "h": 122
    },
    {
        "id": "b63004182c33d3b9",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "dce5daf12297877f",
            "56d4bfa341d3eded",
            "4f62466c41bb3667",
            "52fea7493d509740",
            "259ee5343901c67c",
            "1d6c4552e74e9211",
            "3bde88be2b01b22b",
            "c959ee1f94c31c45",
            "207821d9fd0df31e",
            "cd34d205525225ef",
            "27ad7f4523c5ac06",
            "07c12775c5faacae",
            "284a4b5256066615",
            "1d18cc8f09cfbdbc",
            "8c00f7e622b82f63",
            "ef28d0205d50cb26",
            "d0fda364deccc7f0",
            "47fe4c3f4736bcc8",
            "e0ed2bc2902c33ea"
        ],
        "x": 1694,
        "y": 1559,
        "w": 1352,
        "h": 402
    },
    {
        "id": "d035461c1b13ec54",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9d7eb9ac29b1ae5a",
            "795d58ac200d3f36",
            "f3f984f9e46e390b",
            "57534941849cf490",
            "23eb9c32f64b624d",
            "e9f233299a64785a",
            "01cf7ccce8860ceb",
            "8b40c6765ea422be",
            "507fd9f54c322c47",
            "732c1e56a5dc7f93",
            "27a5fbd444dcd803",
            "f26f6746a7474a3c"
        ],
        "x": 554,
        "y": 1219,
        "w": 1692,
        "h": 122
    },
    {
        "id": "d78468728ed1717e",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f0faa309d73f3d9a",
            "4f245078bcfc080e",
            "8435cd0c5a2dfd4d",
            "1e0a2acb4e77c92f",
            "dfab46d5702b8ee6",
            "23920faeb5f13b56",
            "77b3da5645bc92ec",
            "379dc24001c08b9e",
            "87a99e567a7c3c2c",
            "8577379df5611dbe",
            "bfb54e580f24959b",
            "9d375c9546f81fcc"
        ],
        "x": 554,
        "y": 659,
        "w": 1692,
        "h": 122
    },
    {
        "id": "de0abf2b907bf4fb",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e2d5fb5389a64d9c",
            "4070f3adc82c4173",
            "77799006f79358c6",
            "6826a9173fe56dde",
            "258c79b00c4bfaca",
            "aa8f1c4ce6df3334",
            "edf9fcd04d3f3a8b",
            "166699794523ed1d",
            "6d03b4a7c7123dc6",
            "a0a4211a5a0ea87a",
            "3f7d2e1025f046f9",
            "7d394fcbcca992a4"
        ],
        "x": 554,
        "y": 799,
        "w": 1692,
        "h": 122
    },
    {
        "id": "defb20d7906a32a5",
        "type": "group",
        "z": "35d210f042827344",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "40f0401e20235a07",
            "243fa1e4e8cef5d0",
            "ae1eb94c798ce73b",
            "d1266a8821d5f723",
            "24c5c19b07f97e99",
            "98499b42fe5f6688",
            "e3d4b9d611e649e0",
            "8fbe0ef4995f8e6a",
            "e7b504fa96e19b50",
            "d6b1a6d8ba28fbb0",
            "57dddda65db516a2",
            "0c2f11c3a643a16a",
            "f3a786a906d35a2d",
            "7a5ea3dadbf3cd7e",
            "10d51361bce55ee1",
            "456aa5a95f874b29",
            "d66001e0048d3ac9"
        ],
        "x": 554,
        "y": 59,
        "w": 1692,
        "h": 162
    },
    {
        "id": "40f0401e20235a07",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Hour1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1510,
        "y": 140,
        "wires": [
            [
                "f3a786a906d35a2d"
            ]
        ]
    },
    {
        "id": "243fa1e4e8cef5d0",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Day1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 140,
        "wires": [
            [
                "7a5ea3dadbf3cd7e"
            ]
        ]
    },
    {
        "id": "ae1eb94c798ce73b",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Day",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1230,
        "y": 100,
        "wires": []
    },
    {
        "id": "d1266a8821d5f723",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Hour",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1510,
        "y": 100,
        "wires": []
    },
    {
        "id": "24c5c19b07f97e99",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Minutes",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1800,
        "y": 100,
        "wires": []
    },
    {
        "id": "98499b42fe5f6688",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Minutes1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1800,
        "y": 140,
        "wires": [
            [
                "10d51361bce55ee1"
            ]
        ]
    },
    {
        "id": "e3d4b9d611e649e0",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "switch1",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 140,
        "wires": [
            [
                "0c2f11c3a643a16a"
            ]
        ]
    },
    {
        "id": "8fbe0ef4995f8e6a",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "text input1",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 8,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 140,
        "wires": [
            [
                "d66001e0048d3ac9"
            ]
        ]
    },
    {
        "id": "e7b504fa96e19b50",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Description",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 930,
        "y": 100,
        "wires": []
    },
    {
        "id": "d6b1a6d8ba28fbb0",
        "type": "ui_text",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "group": "2b0c8e162d47abbb",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Action",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2070,
        "y": 100,
        "wires": []
    },
    {
        "id": "57dddda65db516a2",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "Action1",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2070,
        "y": 140,
        "wires": [
            [
                "456aa5a95f874b29"
            ]
        ]
    },
    {
        "id": "0c2f11c3a643a16a",
        "type": "function",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "set.Schedule_1_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_1_state\"\nglobal.set(\"Schedule_1_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f3a786a906d35a2d",
        "type": "function",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "set.Schedule_1_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_1_hour\"\nglobal.set(\"Schedule_1_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7a5ea3dadbf3cd7e",
        "type": "function",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "set.Schedule_1_day",
        "func": "msg.topic = \"Schedule_1_day\"\nglobal.set(\"Schedule_1_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "10d51361bce55ee1",
        "type": "function",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "set.Schedule_1_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_1_minutes\"\nglobal.set(\"Schedule_1_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "456aa5a95f874b29",
        "type": "function",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "set.Schedule_1_action",
        "func": "msg.topic = \"Schedule_1_action\"\nglobal.set(\"Schedule_1_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "d3cb14cbe16aae48",
        "type": "inject",
        "z": "35d210f042827344",
        "name": "1 Trigger / 30 seconds",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 190,
        "y": 1680,
        "wires": [
            [
                "d7661361dc45a227",
                "5bada2ca15c02a60",
                "1b3cfb0717b453f9"
            ]
        ]
    },
    {
        "id": "d7661361dc45a227",
        "type": "moment",
        "z": "35d210f042827344",
        "name": "",
        "topic": "DayOfTheWeek",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "dddd",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 420,
        "y": 1680,
        "wires": [
            [
                "aee82d7ed5267326"
            ]
        ]
    },
    {
        "id": "5bada2ca15c02a60",
        "type": "moment",
        "z": "35d210f042827344",
        "name": "",
        "topic": "Hour",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 590,
        "y": 1680,
        "wires": [
            [
                "aee82d7ed5267326"
            ]
        ]
    },
    {
        "id": "1b3cfb0717b453f9",
        "type": "moment",
        "z": "35d210f042827344",
        "name": "",
        "topic": "Minute",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Amsterdam",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "mm",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/Amsterdam",
        "x": 710,
        "y": 1680,
        "wires": [
            [
                "aee82d7ed5267326"
            ]
        ]
    },
    {
        "id": "402e0772ba658949",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_1",
        "func": "\nvar Schedule_1_state=global.get('Schedule_1_state',\"file\");                     // Get state of the agenda item. \n\nif      (Schedule_1_state == 0)                                                 // Is it disabled? \n        {msg.payload = 0; return [null, null];}                                 // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_1_day=global.get('Schedule_1_day',\"file\");                 // get schedule variables.\n        var Schedule_1_hour=global.get('Schedule_1_hour',\"file\");               // get schedule variables.\n        var Schedule_1_minutes=global.get('Schedule_1_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_1_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_1_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_1_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_1_action=global.get('Schedule_1_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_1_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_1_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_1_state\",\"file\") === undefined) {\n    global.set(\"Schedule_1_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1680,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "aee82d7ed5267326",
        "type": "join",
        "z": "35d210f042827344",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 850,
        "y": 1680,
        "wires": [
            [
                "402e0772ba658949",
                "f64808024ebdac6b",
                "bf4a75a9bf96f220",
                "e3ed645c09cb850f",
                "cc45827b87e29185",
                "cb4e165d150f8f8a",
                "56e79f97ef78ccb3",
                "73d6aab8d09356d0",
                "be5d9cb18da5561b",
                "40e6c0c9968fe80a"
            ]
        ]
    },
    {
        "id": "d66001e0048d3ac9",
        "type": "function",
        "z": "35d210f042827344",
        "g": "defb20d7906a32a5",
        "name": "set.Schedule_1_Description",
        "func": "msg.topic = \"Schedule_1_Description\"\nglobal.set(\"Schedule_1_Description\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "826c4b608a4e5bf1",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 1520,
        "y": 1680,
        "wires": [
            [
                "317942154b6d1cb3"
            ]
        ]
    },
    {
        "id": "6eb8540eef912bec",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 1520,
        "y": 1920,
        "wires": [
            [
                "92b636a9597d91b2"
            ]
        ]
    },
    {
        "id": "317942154b6d1cb3",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "ef28d0205d50cb26"
        ],
        "x": 1635,
        "y": 1680,
        "wires": []
    },
    {
        "id": "92b636a9597d91b2",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "",
        "links": [
            "d0fda364deccc7f0"
        ],
        "x": 1635,
        "y": 1920,
        "wires": []
    },
    {
        "id": "b1c2fe0fe975bbc7",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "Hour2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 16,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1510,
        "y": 280,
        "wires": [
            [
                "e09347cb9c39a92f"
            ]
        ]
    },
    {
        "id": "c672e8ad8becc1f7",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "Day2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 280,
        "wires": [
            [
                "55441919d1683ba4"
            ]
        ]
    },
    {
        "id": "67400a0e79187520",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "Minutes2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1800,
        "y": 280,
        "wires": [
            [
                "acc7bbf558e2c1ef"
            ]
        ]
    },
    {
        "id": "551f523d315b3342",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "switch2",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 280,
        "wires": [
            [
                "f4780afe714edd47"
            ]
        ]
    },
    {
        "id": "4c328a83758a2a97",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "text input2",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 14,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 280,
        "wires": [
            [
                "53049a3679fc7b9b"
            ]
        ]
    },
    {
        "id": "f4780afe714edd47",
        "type": "function",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "set.Schedule_2_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_2_state\"\nglobal.set(\"Schedule_2_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "e09347cb9c39a92f",
        "type": "function",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "set.Schedule_2_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_2_hour\"\nglobal.set(\"Schedule_2_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "55441919d1683ba4",
        "type": "function",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "set.Schedule_2_day",
        "func": "msg.topic = \"Schedule_2_day\"\nglobal.set(\"Schedule_2_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "acc7bbf558e2c1ef",
        "type": "function",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "set.Schedule_2_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_2_minutes\"\nglobal.set(\"Schedule_2_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "c7e634eb2d550f49",
        "type": "function",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "set.Schedule_2_action",
        "func": "msg.topic = \"Schedule_2_action\"\nglobal.set(\"Schedule_2_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "53049a3679fc7b9b",
        "type": "function",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "set.Schedule_2_Description",
        "func": "msg.topic = \"Schedule_2_Description\"\nglobal.set(\"Schedule_2_Description\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "05675465e20aee4b",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "Hour3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 22,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1510,
        "y": 420,
        "wires": [
            [
                "61839bb51fb04080"
            ]
        ]
    },
    {
        "id": "6adcb1c5b56301b6",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "Day3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 21,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 420,
        "wires": [
            [
                "cf883b1f90cef7de"
            ]
        ]
    },
    {
        "id": "c1cd550278cbde80",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "Minutes3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 23,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1800,
        "y": 420,
        "wires": [
            [
                "32d00c1d8f628043"
            ]
        ]
    },
    {
        "id": "e2e3101ca85f6ea4",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "switch3",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 19,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 420,
        "wires": [
            [
                "e9f666e80ea27fdc"
            ]
        ]
    },
    {
        "id": "70b24ba53c30e637",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "text input3",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 20,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 420,
        "wires": [
            [
                "f125ed27af251cfb"
            ]
        ]
    },
    {
        "id": "e9f666e80ea27fdc",
        "type": "function",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "set.Schedule_3_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_3_state\"\nglobal.set(\"Schedule_3_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "61839bb51fb04080",
        "type": "function",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "set.Schedule_3_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_3_hour\"\nglobal.set(\"Schedule_3_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "cf883b1f90cef7de",
        "type": "function",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "set.Schedule_3_day",
        "func": "msg.topic = \"Schedule_3_day\"\nglobal.set(\"Schedule_3_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "32d00c1d8f628043",
        "type": "function",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "set.Schedule_3_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_3_minutes\"\nglobal.set(\"Schedule_3_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "031707ca9c7780ee",
        "type": "function",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "set.Schedule_3_action",
        "func": "msg.topic = \"Schedule_3_action\"\nglobal.set(\"Schedule_3_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f125ed27af251cfb",
        "type": "function",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "set.Schedule_3_Description",
        "func": "msg.topic = \"Schedule_3_Description\"\nglobal.set(\"Schedule_3_Description\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "0f5be7a19978136d",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "Hour4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 28,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1510,
        "y": 560,
        "wires": [
            [
                "8055737437187e41"
            ]
        ]
    },
    {
        "id": "bbbc57d5a36ce355",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "Day4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 27,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 560,
        "wires": [
            [
                "81c7bee70b0ffd1a"
            ]
        ]
    },
    {
        "id": "7c73925af591298c",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "Minutes4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 29,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1800,
        "y": 560,
        "wires": [
            [
                "cd482dc7c307a8e8"
            ]
        ]
    },
    {
        "id": "94a26b42b644e249",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "switch4",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 560,
        "wires": [
            [
                "22c1242ac08b2b86"
            ]
        ]
    },
    {
        "id": "eb8bf676c521bb56",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "text input4",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 26,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 560,
        "wires": [
            [
                "be033afa0499da40"
            ]
        ]
    },
    {
        "id": "22c1242ac08b2b86",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "set.Schedule_4_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_4_state\"\nglobal.set(\"Schedule_4_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "8055737437187e41",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "set.Schedule_4_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_4_hour\"\nglobal.set(\"Schedule_4_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "81c7bee70b0ffd1a",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "set.Schedule_4_day",
        "func": "msg.topic = \"Schedule_4_day\"\nglobal.set(\"Schedule_4_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "cd482dc7c307a8e8",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "set.Schedule_4_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_4_minutes\"\nglobal.set(\"Schedule_4_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "e9b7911ff281be04",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "set.Schedule_4_action",
        "func": "msg.topic = \"Schedule_4_action\"\nglobal.set(\"Schedule_4_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "be033afa0499da40",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "set.Schedule_4_Description",
        "func": "msg.topic = \"Schedule_4_Description\"\nglobal.set(\"Schedule_4_Description\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "8238dfb11d93f0ce",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 1",
        "func": "// variables to load on boot for dasboard\n\nvar var1          = global.get('Schedule_1_Description',\"file\");\nvar var2          = global.get('Schedule_1_day',\"file\");\nvar var3          = global.get('Schedule_1_hour',\"file\");\nvar var4          = global.get('Schedule_1_minutes',\"file\");\nvar var5          = global.get('Schedule_1_state',\"file\");\nvar var6          = global.get('Schedule_1_action',\"file\");\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={}, msg13={}, msg14={}, msg15={}, msg16={}, msg17={}, msg18={}, msg19={}, msg20={}, msg21={}, msg22={}, msg23={}, msg24={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6,];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 100,
        "wires": [
            [
                "8fbe0ef4995f8e6a"
            ],
            [
                "243fa1e4e8cef5d0"
            ],
            [
                "40f0401e20235a07"
            ],
            [
                "98499b42fe5f6688"
            ],
            [
                "e3d4b9d611e649e0"
            ],
            [
                "57dddda65db516a2"
            ]
        ],
        "outputLabels": [
            "Schedule_1_Description",
            "Schedule_1_day",
            "Schedule_1_hour",
            "Schedule_1_minutes",
            "Schedule_1_state",
            "Schedule_1_topic"
        ]
    },
    {
        "id": "52b8feb14590a2b0",
        "type": "inject",
        "z": "35d210f042827344",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 210,
        "y": 760,
        "wires": [
            [
                "8238dfb11d93f0ce",
                "1c2654e6064cf5a8",
                "a033d6cc55ab8648",
                "9989c4d2d446bccd",
                "292c2da5ef0357fa",
                "763f690af5b8d8d8",
                "32a7a0ebd20028e7",
                "23fab98e7e70ca85",
                "fd91e79ddea6d558",
                "abc4f22a0906b12e"
            ]
        ]
    },
    {
        "id": "1c2654e6064cf5a8",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 2",
        "func": "// variables to load on boot for dasboard\n\nvar var7          = global.get('Schedule_2_Description',\"file\");\nvar var8          = global.get('Schedule_2_day',\"file\");\nvar var9          = global.get('Schedule_2_hour',\"file\");\nvar var10         = global.get('Schedule_2_minutes',\"file\");\nvar var11         = global.get('Schedule_2_state',\"file\");\nvar var12         = global.get('Schedule_2_action',\"file\");\n\n\n\n\nlet msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={};\n\n\nmsg7.payload = var7;    msg8.payload = var8;    msg9.payload = var9;    msg10.payload = var10;  msg11.payload  = var11; msg12.payload = var12;  \n\n\nreturn [msg7, msg8, msg9, msg10, msg11, msg12];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 280,
        "wires": [
            [
                "4c328a83758a2a97"
            ],
            [
                "c672e8ad8becc1f7"
            ],
            [
                "b1c2fe0fe975bbc7"
            ],
            [
                "67400a0e79187520"
            ],
            [
                "551f523d315b3342"
            ],
            [
                "d66c312b6eddb8f6"
            ]
        ],
        "outputLabels": [
            "Schedule_2_Description",
            "Schedule_2_day",
            "Schedule_2_hour",
            "Schedule_2_minutes",
            "Schedule_2_state",
            "Schedule_2_topic"
        ]
    },
    {
        "id": "a033d6cc55ab8648",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 3",
        "func": "// variables to load on boot for dasboard\n\nvar var1          = global.get('Schedule_3_Description',\"file\");\nvar var2          = global.get('Schedule_3_day',\"file\");\nvar var3          = global.get('Schedule_3_hour',\"file\");\nvar var4          = global.get('Schedule_3_minutes',\"file\");\nvar var5          = global.get('Schedule_3_state',\"file\");\nvar var6          = global.get('Schedule_3_action',\"file\");\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6,];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "70b24ba53c30e637"
            ],
            [
                "6adcb1c5b56301b6"
            ],
            [
                "05675465e20aee4b"
            ],
            [
                "c1cd550278cbde80"
            ],
            [
                "e2e3101ca85f6ea4"
            ],
            [
                "2989c76ac5cabf7d"
            ]
        ],
        "outputLabels": [
            "Schedule_3_Description",
            "Schedule_3_day",
            "Schedule_3_hour",
            "Schedule_3_minutes",
            "Schedule_3_state",
            "Schedule_3_topic"
        ]
    },
    {
        "id": "9989c4d2d446bccd",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 4",
        "func": "// variables to load on boot for dasboard\n\nvar var1          = global.get('Schedule_4_Description',\"file\");\nvar var2          = global.get('Schedule_4_day',\"file\");\nvar var3          = global.get('Schedule_4_hour',\"file\");\nvar var4          = global.get('Schedule_4_minutes',\"file\");\nvar var5          = global.get('Schedule_4_state',\"file\");\nvar var6          = global.get('Schedule_4_action',\"file\");\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6,];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 560,
        "wires": [
            [
                "eb8bf676c521bb56"
            ],
            [
                "bbbc57d5a36ce355"
            ],
            [
                "0f5be7a19978136d"
            ],
            [
                "7c73925af591298c"
            ],
            [
                "94a26b42b644e249"
            ],
            [
                "58c622f9eb45c3c8"
            ]
        ],
        "outputLabels": [
            "Schedule_4_Description",
            "Schedule_4_day",
            "Schedule_4_hour",
            "Schedule_4_minutes",
            "Schedule_4_state",
            "Schedule_4_topic"
        ]
    },
    {
        "id": "f0faa309d73f3d9a",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "Hour5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 34,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1510,
        "y": 700,
        "wires": [
            [
                "77b3da5645bc92ec"
            ]
        ]
    },
    {
        "id": "4f245078bcfc080e",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "Day5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 33,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 700,
        "wires": [
            [
                "379dc24001c08b9e"
            ]
        ]
    },
    {
        "id": "8435cd0c5a2dfd4d",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "Minutes5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 35,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1800,
        "y": 700,
        "wires": [
            [
                "87a99e567a7c3c2c"
            ]
        ]
    },
    {
        "id": "1e0a2acb4e77c92f",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "switch5",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 31,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 700,
        "wires": [
            [
                "23920faeb5f13b56"
            ]
        ]
    },
    {
        "id": "dfab46d5702b8ee6",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "text input5",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 32,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 700,
        "wires": [
            [
                "bfb54e580f24959b"
            ]
        ]
    },
    {
        "id": "23920faeb5f13b56",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "set.Schedule_5_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_5_state\"\nglobal.set(\"Schedule_5_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "77b3da5645bc92ec",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "set.Schedule_5_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_5_hour\"\nglobal.set(\"Schedule_5_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "379dc24001c08b9e",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "set.Schedule_5_day",
        "func": "msg.topic = \"Schedule_5_day\"\nglobal.set(\"Schedule_5_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "87a99e567a7c3c2c",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "set.Schedule_5_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_5_minutes\"\nglobal.set(\"Schedule_5_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "8577379df5611dbe",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "set.Schedule_5_action",
        "func": "msg.topic = \"Schedule_5_action\"\nglobal.set(\"Schedule_5_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "bfb54e580f24959b",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "set.Schedule_5_Description",
        "func": "msg.topic = \"Schedule_5_Description\"\nglobal.set(\"Schedule_5_Description\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "292c2da5ef0357fa",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 5",
        "func": "// variables to load on boot for dasboard\n\nvar var1          = global.get('Schedule_5_Description',\"file\");\nvar var2          = global.get('Schedule_5_day',\"file\");\nvar var3          = global.get('Schedule_5_hour',\"file\");\nvar var4          = global.get('Schedule_5_minutes',\"file\");\nvar var5          = global.get('Schedule_5_state',\"file\");\nvar var6          = global.get('Schedule_5_action',\"file\");\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6,];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 700,
        "wires": [
            [
                "dfab46d5702b8ee6"
            ],
            [
                "4f245078bcfc080e"
            ],
            [
                "f0faa309d73f3d9a"
            ],
            [
                "8435cd0c5a2dfd4d"
            ],
            [
                "1e0a2acb4e77c92f"
            ],
            [
                "9d375c9546f81fcc"
            ]
        ],
        "outputLabels": [
            "Schedule_5_Description",
            "Schedule_5_day",
            "Schedule_5_hour",
            "Schedule_5_minutes",
            "Schedule_5_state",
            "Schedule_5_topic"
        ]
    },
    {
        "id": "e2d5fb5389a64d9c",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "Hour6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 40,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1510,
        "y": 840,
        "wires": [
            [
                "edf9fcd04d3f3a8b"
            ]
        ]
    },
    {
        "id": "4070f3adc82c4173",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "Day6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 39,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 840,
        "wires": [
            [
                "166699794523ed1d"
            ]
        ]
    },
    {
        "id": "77799006f79358c6",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "Minutes6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 41,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1800,
        "y": 840,
        "wires": [
            [
                "6d03b4a7c7123dc6"
            ]
        ]
    },
    {
        "id": "6826a9173fe56dde",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "switch6",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 37,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 840,
        "wires": [
            [
                "aa8f1c4ce6df3334"
            ]
        ]
    },
    {
        "id": "258c79b00c4bfaca",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "text input6",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 38,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 840,
        "wires": [
            [
                "3f7d2e1025f046f9"
            ]
        ]
    },
    {
        "id": "aa8f1c4ce6df3334",
        "type": "function",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "set.Schedule_6_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_6_state\"\nglobal.set(\"Schedule_6_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "edf9fcd04d3f3a8b",
        "type": "function",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "set.Schedule_6_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_6_hour\"\nglobal.set(\"Schedule_6_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "166699794523ed1d",
        "type": "function",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "set.Schedule_6_day",
        "func": "msg.topic = \"Schedule_6_day\"\nglobal.set(\"Schedule_6_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "6d03b4a7c7123dc6",
        "type": "function",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "set.Schedule_6_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_6_minutes\"\nglobal.set(\"Schedule_6_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "a0a4211a5a0ea87a",
        "type": "function",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "set.Schedule_6_action",
        "func": "msg.topic = \"Schedule_6_action\"\nglobal.set(\"Schedule_6_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "3f7d2e1025f046f9",
        "type": "function",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "set.Schedule_6_Description",
        "func": "msg.topic = \"Schedule_6_Description\"\nglobal.set(\"Schedule_6_Description\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "763f690af5b8d8d8",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 6",
        "func": "// variables to load on boot for dasboard\n\nvar var1          = global.get('Schedule_6_Description',\"file\");\nvar var2          = global.get('Schedule_6_day',\"file\");\nvar var3          = global.get('Schedule_6_hour',\"file\");\nvar var4          = global.get('Schedule_6_minutes',\"file\");\nvar var5          = global.get('Schedule_6_state',\"file\");\nvar var6          = global.get('Schedule_6_action',\"file\");\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6,];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 840,
        "wires": [
            [
                "258c79b00c4bfaca"
            ],
            [
                "4070f3adc82c4173"
            ],
            [
                "e2d5fb5389a64d9c"
            ],
            [
                "77799006f79358c6"
            ],
            [
                "6826a9173fe56dde"
            ],
            [
                "7d394fcbcca992a4"
            ]
        ],
        "outputLabels": [
            "Schedule_6_Description",
            "Schedule_6_day",
            "Schedule_6_hour",
            "Schedule_6_minutes",
            "Schedule_6_state",
            "Schedule_6_topic"
        ]
    },
    {
        "id": "f64808024ebdac6b",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_2",
        "func": "\nvar Schedule_2_state=global.get('Schedule_2_state',\"file\");                     // Get state of the agenda item. \n\nif      (Schedule_2_state == 0)                                                 // Is it disabled? \n        {msg.payload = 0; return [null, null];}                                 // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_2_day=global.get('Schedule_2_day',\"file\");                 // get schedule variables.\n        var Schedule_2_hour=global.get('Schedule_2_hour',\"file\");               // get schedule variables.\n        var Schedule_2_minutes=global.get('Schedule_2_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_2_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_2_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_2_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_2_action=global.get('Schedule_2_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_2_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_2_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_2_state\",\"file\") === undefined) {\n    global.set(\"Schedule_2_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1760,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "bf4a75a9bf96f220",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_3",
        "func": "\nvar Schedule_3_state=global.get('Schedule_3_state',\"file\");                     // Get state of the agenda item. \n\nif      (Schedule_3_state == 0)                                                 // Is it disabled? \n        {msg.payload = 0; return [null, null];}                                 // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_3_day=global.get('Schedule_3_day',\"file\");                 // get schedule variables.\n        var Schedule_3_hour=global.get('Schedule_3_hour',\"file\");               // get schedule variables.\n        var Schedule_3_minutes=global.get('Schedule_3_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_3_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_3_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_3_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_3_action=global.get('Schedule_3_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_3_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_3_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_3_state\",\"file\") === undefined) {\n    global.set(\"Schedule_3_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1840,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "e3ed645c09cb850f",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_4",
        "func": "\nvar Schedule_4_state=global.get('Schedule_4_state',\"file\");                     // Get state of the agenda item. \n\nif      (Schedule_4_state == 0)                                                 // Is it disabled? \n        {msg.payload = 0; return [null, null];}                                 // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_4_day=global.get('Schedule_4_day',\"file\");                 // get schedule variables.\n        var Schedule_4_hour=global.get('Schedule_4_hour',\"file\");               // get schedule variables.\n        var Schedule_4_minutes=global.get('Schedule_4_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_4_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_4_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_4_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_4_action=global.get('Schedule_4_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_4_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_4_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_4_state\",\"file\") === undefined) {\n    global.set(\"Schedule_4_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1920,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "cc45827b87e29185",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_5",
        "func": "\nvar Schedule_5_state=global.get('Schedule_5_state',\"file\");                     // Get state of the agenda item. \n\nif      (Schedule_5_state == 0)                                                 // Is it disabled? \n        {msg.payload = 0; return [null, null];}                                 // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_5_day=global.get('Schedule_5_day',\"file\");                 // get schedule variables.\n        var Schedule_5_hour=global.get('Schedule_5_hour',\"file\");               // get schedule variables.\n        var Schedule_5_minutes=global.get('Schedule_5_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_5_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_5_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_5_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_5_action=global.get('Schedule_5_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_5_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_5_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_5_state\",\"file\") === undefined) {\n    global.set(\"Schedule_5_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2000,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "cb4e165d150f8f8a",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_6",
        "func": "\nvar Schedule_6_state=global.get('Schedule_6_state',\"file\");                     // Get state of the agenda item. \n\nif      (Schedule_6_state == 0)                                                 // Is it disabled? \n        {msg.payload = 0; return [null, null];}                                 // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_6_day=global.get('Schedule_6_day',\"file\");                 // get schedule variables.\n        var Schedule_6_hour=global.get('Schedule_6_hour',\"file\");               // get schedule variables.\n        var Schedule_6_minutes=global.get('Schedule_6_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_6_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_6_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_6_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_6_action=global.get('Schedule_6_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_6_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_6_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_6_state\",\"file\") === undefined) {\n    global.set(\"Schedule_6_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2080,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "56e79f97ef78ccb3",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_7",
        "func": "\nvar Schedule_7_state=global.get('Schedule_7_state',\"file\");                     // Get state of the agenda item. \n\nif      (Schedule_7_state == 0)                                                 // Is it disabled? \n        {msg.payload = 0; return [null, null];}                                 // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_7_day=global.get('Schedule_7_day',\"file\");                 // get schedule variables.\n        var Schedule_7_hour=global.get('Schedule_7_hour',\"file\");               // get schedule variables.\n        var Schedule_7_minutes=global.get('Schedule_7_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_7_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_7_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_7_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_7_action=global.get('Schedule_7_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_7_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_7_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_7_state\",\"file\") === undefined) {\n    global.set(\"Schedule_7_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2160,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "73d6aab8d09356d0",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_8",
        "func": "\nvar Schedule_8_state=global.get('Schedule_8_state',\"file\");                     // Get state of the agenda item. \n\nif      (Schedule_8_state == 0)                                                 // Is it disabled? \n        {msg.payload = 0; return [null, null];}                                 // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_8_day=global.get('Schedule_8_day',\"file\");                 // get schedule variables.\n        var Schedule_8_hour=global.get('Schedule_8_hour',\"file\");               // get schedule variables.\n        var Schedule_8_minutes=global.get('Schedule_8_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_8_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_8_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_8_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_8_action=global.get('Schedule_8_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_8_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_8_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_8_state\",\"file\") === undefined) {\n    global.set(\"Schedule_8_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2240,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "be5d9cb18da5561b",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_9",
        "func": "\nvar Schedule_9_state=global.get('Schedule_9_state',\"file\");                     // Get state of the agenda item. \n\nif      (Schedule_9_state == 0)                                                 // Is it disabled? \n        {msg.payload = 0; return [null, null];}                                 // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_9_day=global.get('Schedule_9_day',\"file\");                 // get schedule variables.\n        var Schedule_9_hour=global.get('Schedule_9_hour',\"file\");               // get schedule variables.\n        var Schedule_9_minutes=global.get('Schedule_9_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_9_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_9_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_9_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_9_action=global.get('Schedule_9_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_9_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_9_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_9_state\",\"file\") === undefined) {\n    global.set(\"Schedule_9_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2320,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "40e6c0c9968fe80a",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Function schedule_10",
        "func": "\nvar Schedule_10_state=global.get('Schedule_10_state',\"file\");                   // Get state of the agenda item. \n\nif      (Schedule_10_state == 0)                                                // Is it disabled? \n        {msg.payload = 0; return [null, null, null, null];}                     // output null to all pins.\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\nelse    {                                                                       // if not, continue...\n        var Schedule_10_day=global.get('Schedule_10_day',\"file\");                 // get schedule variables.\n        var Schedule_10_hour=global.get('Schedule_10_hour',\"file\");               // get schedule variables.\n        var Schedule_10_minutes=global.get('Schedule_10_minutes',\"file\");         // get schedule variables.\n        let msg1={}, msg2={}, msg3={};                                          // create some temporary variables which are going to be used by each if\n\n                                                                                // Check the programmed day compared current day.\n        if (Schedule_10_day.includes(msg.payload[0]))    {msg1.payload = 1; msg1.topic=\"DayOfTheWeek\";}\n        else                                            {msg1.payload = 0; msg1.topic=\"DayOfTheWeek\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed hour compared current hour.        \n        if (msg.payload[1] == Schedule_10_hour)          {msg2.payload = 1; msg2.topic=\"Hour\";}\n        else                                            {msg2.payload = 0; msg2.topic=\"Hour\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n                                                                                // Check the programmed minutes compared current minutes.\n        if (msg.payload[2] == Schedule_10_minutes)       {msg3.payload = 1; msg3.topic=\"Minute\";}\n        else                                            {msg3.payload = 0; msg3.topic=\"Minute\";}\n        \n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n        ////////////////////////////////////////////////////////////////////////\n\n        if (msg1.payload == 1 && msg2.payload == 1 && msg3.payload == 1)        // If all of the conditions are met (day + hour + minutes), then....\n            {\n                var Schedule_10_action=global.get('Schedule_10_action',\"file\");     // get the action\n                ////////////////////////////////////////////////////////////////\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"DHW\")                                // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"DHW\";                     // DHW action? >> to DHW output pin\n                        return [msg, null, null, null]                          // Output to pin 1\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"Sterilization\")                      // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Sterilization\";           // Sterilization action? >> to Sterilization output pin\n                        return [null, msg, null, null]                          // Output to pin 2\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////                \n                if  (Schedule_10_action == \"QM_0\")                               // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Quiet Mode 0\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"QM_1\")                               // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Quiet Mode 1\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"QM_2\")                               // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Quiet Mode 2\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"QM_3\")                               // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Quiet Mode 3\";             // QuietMode action? >> to Quiet MOde output pin\n                        return [null, null, msg, null]                          // Output to pin 3\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"OperationMode0\")                     // check the action\n                    {\n                        msg.payload = 0; msg.topic = \"Operation Mode 0\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }                \n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"OperationMode1\")                     // check the action\n                    {\n                        msg.payload = 1; msg.topic = \"Operation Mode 1\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"OperationMode2\")                     // check the action\n                    {\n                        msg.payload = 2; msg.topic = \"Operation Mode 2\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"OperationMode3\")                     // check the action\n                    {\n                        msg.payload = 3; msg.topic = \"Operation Mode 3\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"OperationMode4\")                     // check the action\n                    {\n                        msg.payload = 4; msg.topic = \"Operation Mode 4\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"OperationMode5\")                     // check the action\n                    {\n                        msg.payload = 5; msg.topic = \"Operation Mode 5\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                if  (Schedule_10_action == \"OperationMode6\")                     // check the action\n                    {\n                        msg.payload = 6; msg.topic = \"Operation Mode 6\";        // Operation Mode action? >> to Operation MOde output pin\n                        return [null, null, null, msg]                          // Output to pin 4\n                    }\n                ////////////////////////////////////////////////////////////////\n                \n                ////////////////////////////////////////////////////////////////\n\n            }   \n        \n        else\n            {   \n//                msg.payload = 0;\n                return [null, null, null, null];\n            }\n        \n\n        }",
        "outputs": 4,
        "noerr": 0,
        "initialize": "if (global.get(\"Schedule_10_state\",\"file\") === undefined) {\n    global.set(\"Schedule_10_state\", 0,\"file\")\n}",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2400,
        "wires": [
            [
                "826c4b608a4e5bf1"
            ],
            [
                "6eb8540eef912bec"
            ],
            [
                "fdc9275bff11d4f6"
            ],
            [
                "fac4923b3fac0597"
            ]
        ],
        "outputLabels": [
            "Force DHW",
            "Force Sterilization",
            "Quiet Mode",
            "Operation Mode"
        ]
    },
    {
        "id": "14327004637e05c7",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "Quiet Mode Planning",
        "links": [
            "765b4d77a9fd44cc",
            "b1b3e80155e49c5c"
        ],
        "x": 1635,
        "y": 2160,
        "wires": []
    },
    {
        "id": "c6801a6c865543b3",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "OperationMode Planning",
        "links": [],
        "x": 1635,
        "y": 2420,
        "wires": []
    },
    {
        "id": "fdc9275bff11d4f6",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 1520,
        "y": 2160,
        "wires": [
            [
                "14327004637e05c7"
            ]
        ]
    },
    {
        "id": "fac4923b3fac0597",
        "type": "delay",
        "z": "35d210f042827344",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "x": 1520,
        "y": 2420,
        "wires": [
            [
                "c6801a6c865543b3"
            ]
        ]
    },
    {
        "id": "be684538aa9a988e",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to Quiet Mode (Direct)",
        "info": "",
        "x": 1790,
        "y": 2160,
        "wires": []
    },
    {
        "id": "3155317a644ba5c6",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Exit to Operation Mode (Direct)",
        "info": "",
        "x": 1790,
        "y": 2420,
        "wires": []
    },
    {
        "id": "dce5daf12297877f",
        "type": "function",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Schedule execution",
        "func": "// >> trigger 1\n// DHW / Sterilisation? This is defined in the topic\n// Topic: DHW or topic: Sterilization\n// payload 1 > initiate sequence. \n\n\n// Declaration of the variables. \nlet msg1={}, msg2={}, msg3={}, msg4={};\n// msg1     Output towards Operation mode on/off\n// msg2     Output towards Force DHW mode on/off\n// msg3     output towards Force Sterilization on/off\n// msg4     empty\n\n\nvar ThreeWay_Valve_State=global.get('ThreeWay_Valve_State');                    // valvue position\n\nvar DHW_Temp=global.get('DHW_Temp');                                            // Current temperature of DHW vessel. \nvar DHW_Target_Temp=global.get('DHW_Target_Temp',\"file\");                       // Programmed DHW target temperature\nvar Force_DHW_State=global.get('Force_DHW_State');                              // Current DHW state (on / off). \n\n\nvar Sterilization_State=global.get('Sterilization_State');                      // Current sterilization state (on / off)\nvar Sterilization_Temp=global.get('Sterilization_Temp',\"file\");                 // Programmed sterilization target temperature\nvar DHW_treshold=global.get('DHW_treshold',\"file\");                             // Programmed treshold DHW tank temperature set from GUI\n////////////////////////////////////////////////////////////////////////////////\n//                           START OF THE CYCLE                               //\n////////////////////////////////////////////////////////////////////////////////\n\n// START DHW cycle\nif (msg.topic == 'DHW' && msg.payload == 1 && DHW_Temp < DHW_treshold)          // There is a temperature condition to start DHW heating or not. Change to your own desire.\n    {\n                msg1.payload = 3;                                               // set operationmode to 3: DHW-Only\n                msg2.payload = 1;                                               // Turn on Force DHW mode\n                return [msg1, msg2];\n    }\n\n// START Sterilization cycle\nif (msg.topic == 'Sterilization' && msg.payload == 1)                           \n    {\n                msg1.payload = 3;                                               // set operationmode to 3: DHW-Only\n                msg2.payload = 1;                                               // Turn on Force DHW mode\n                msg3.payload = 1;                                               // Turn on Force Sterilization mode\n                return [msg1, msg2, msg3];\n    }\n\n////////////////////////////////////////////////////////////////////////////////\n//                           END OF THE CYCLE                                 //\n////////////////////////////////////////////////////////////////////////////////\n\n\n// END DHW cycle (Automatic)\nif (Force_DHW_State == 1 && Sterilization_State == 0 && DHW_Temp >= DHW_Target_Temp)\n    {\n                setTimeout(function(){\n                    node.status({fill:\"red\", shape:\"ring\", text:\"\"});\n                    msg1.payload = 0;                                           // set operationmode to 0: HEAT-Only\n                    node.send([msg1,null,null,null]);                                     // send msg1 only, other outputs are null\n                    }, 5000);\n                msg2.payload = 0;                                               // Turn off Force DHW mode\n                return [null, msg2];\n    }\n\n\n// END Sterilization cycle (Automatic)\nif (Sterilization_State == 1 && Sterilization_State == 1 && DHW_Temp >= Sterilization_Temp)\n    {\n                setTimeout(function(){\n                    node.status({fill:\"red\", shape:\"ring\", text:\"\"});\n                    msg1.payload = 0;                                           // set operationmode to 0: HEAT-Only\n                    node.send([msg1,null,null,null]);                           // send msg1 only, other outputs are null\n                    }, 5000);\n\n                setTimeout(function(){\n                    node.status({fill:\"red\", shape:\"ring\", text:\"\"});\n                    msg2.payload = 0;                                           // Turn off Force DHW mode \n                    node.send([null,msg2,null,null]);                                     // send msg2 only, other outputs are null\n                    }, 2000);\n\n//                msg1.payload = 0;                                               // set operationmode to 0: HEAT-Only\n//                msg2.payload = 0;                                               // Turn off Force DHW mode \n                msg3.payload = 0;                                               // Turn off Force Sterilization mode\n                return [null, null, msg3];\n    }\n\n\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 1800,
        "wires": [
            [
                "c959ee1f94c31c45",
                "e0ed2bc2902c33ea"
            ],
            [
                "3bde88be2b01b22b"
            ],
            [
                "1d6c4552e74e9211"
            ],
            []
        ],
        "outputLabels": [
            "Operation mode",
            "Force DHW",
            "Force Sterilization",
            "empty"
        ]
    },
    {
        "id": "56d4bfa341d3eded",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "ForceDHW_Scheduler",
        "links": [
            "14d2ae6b4af7e45e"
        ],
        "x": 2775,
        "y": 1780,
        "wires": []
    },
    {
        "id": "4f62466c41bb3667",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "FoceSterilization_Scheduler",
        "links": [
            "4982424c661376ea",
            "20e2544a8277d8c2"
        ],
        "x": 2775,
        "y": 1840,
        "wires": []
    },
    {
        "id": "52fea7493d509740",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to Force DHW mode",
        "info": "",
        "x": 2910,
        "y": 1780,
        "wires": []
    },
    {
        "id": "259ee5343901c67c",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to Sterilization Mode",
        "info": "",
        "x": 2910,
        "y": 1840,
        "wires": []
    },
    {
        "id": "1d6c4552e74e9211",
        "type": "delay",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 2640,
        "y": 1840,
        "wires": [
            [
                "4f62466c41bb3667"
            ]
        ]
    },
    {
        "id": "3bde88be2b01b22b",
        "type": "delay",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 2640,
        "y": 1780,
        "wires": [
            [
                "56d4bfa341d3eded"
            ]
        ]
    },
    {
        "id": "c959ee1f94c31c45",
        "type": "link out",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "OperationMode_Scheduler",
        "links": [
            "6d5e44060139d9d1"
        ],
        "x": 2775,
        "y": 1720,
        "wires": []
    },
    {
        "id": "207821d9fd0df31e",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Exit to Operation Mode",
        "info": "",
        "x": 2900,
        "y": 1720,
        "wires": []
    },
    {
        "id": "cd34d205525225ef",
        "type": "inject",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Check",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "trigger",
        "payload": "1",
        "payloadType": "num",
        "x": 2180,
        "y": 1800,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "27ad7f4523c5ac06",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning for forced DHW runs",
        "info": "",
        "x": 1920,
        "y": 1680,
        "wires": []
    },
    {
        "id": "07c12775c5faacae",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Function for execution of plan",
        "info": "",
        "x": 2440,
        "y": 1740,
        "wires": []
    },
    {
        "id": "284a4b5256066615",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning for Forced Sterilization runs",
        "info": "",
        "x": 1940,
        "y": 1920,
        "wires": []
    },
    {
        "id": "1d18cc8f09cfbdbc",
        "type": "change",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Topic Sterilization",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Sterilization",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2190,
        "y": 1920,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "8c00f7e622b82f63",
        "type": "change",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Topic DHW",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DHW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 1680,
        "wires": [
            [
                "dce5daf12297877f"
            ]
        ]
    },
    {
        "id": "ef28d0205d50cb26",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning_ForceDHW_topic",
        "links": [
            "317942154b6d1cb3"
        ],
        "x": 1735,
        "y": 1680,
        "wires": [
            [
                "8c00f7e622b82f63"
            ]
        ]
    },
    {
        "id": "d0fda364deccc7f0",
        "type": "link in",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "Planning_ForceSterilization_topic",
        "links": [
            "92b636a9597d91b2"
        ],
        "x": 1735,
        "y": 1920,
        "wires": [
            [
                "1d18cc8f09cfbdbc"
            ]
        ]
    },
    {
        "id": "f50b182247afbf12",
        "type": "ui_numeric",
        "z": "35d210f042827344",
        "name": "Allow DHW-run below",
        "label": "Allow DHW-run below",
        "tooltip": "Manually set a DHW temperature threshold above which no DHW is needed. (If this not required, set to higher value than DHW target temperature)",
        "group": "9aec7afe54746c39",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} °C",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 760,
        "y": 2520,
        "wires": [
            [
                "513f1edff2205368"
            ]
        ]
    },
    {
        "id": "513f1edff2205368",
        "type": "function",
        "z": "35d210f042827344",
        "name": "set.DHW_treshold",
        "func": "msg.payload = Number(msg.payload).toFixed(1);\nmsg.payload = parseFloat(msg.payload);\nglobal.set(\"DHW_treshold\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2520,
        "wires": [
            [
                "0d915486f4ef0946"
            ]
        ]
    },
    {
        "id": "82de6121db22b74a",
        "type": "inject",
        "z": "35d210f042827344",
        "name": "1 Trigger / 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "trigger",
        "payloadType": "date",
        "x": 220,
        "y": 2520,
        "wires": [
            [
                "1cf36419e733671a"
            ]
        ]
    },
    {
        "id": "1cf36419e733671a",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot",
        "func": "var var1          = global.get('DHW_treshold',\"file\");\n\n\n/*      THese are all commented out. not required in this tab. Can be recycled if needed\nvar var2          = global.get('Correction_0_WAR_on_off',\"file\");\nvar var3          = global.get('war_ot1',\"file\");\nvar var4          = global.get('war_ot2',\"file\");\nvar var5          = global.get('war_ot3',\"file\");\nvar var6          = global.get('war_wt1',\"file\");\nvar var7          = global.get('war_wt2',\"file\");\nvar var8          = global.get('war_wt3',\"file\");\n\nvar var9          = global.get('Correction_1_RTC_on_off',\"file\");\nvar var10         = global.get('Correction_2_softstart_on_off',\"file\");\nvar var11         = global.get('DHW_Target_Temp',\"file\");\nvar var12         = global.get('Heatpump_State',\"file\");\n\nvar var13         = global.get('Operating_Mode_State',\"file\");\nvar var14         = global.get('Quiet_Mode_Level',\"file\");\nvar var15         = global.get('Sterilization_Temp',\"file\");\n\nvar var16         = global.get('WoonkamerSP',\"file\");\n\nvar var17         = global.get('rtc_t1',\"file\");\nvar var18         = global.get('rtc_t2',\"file\");\nvar var19         = global.get('rtc_t3',\"file\");\nvar var20         = global.get('rtc_t4',\"file\");\nvar var21         = global.get('rtc_t5',\"file\");\nvar var22         = global.get('rtc_t6',\"file\");\nvar var23         = global.get('WoonkamerSP',\"file\");\n\nvar var24           = global.get('compressor_frequency',\"file\");\n*/\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={}, msg7={}, msg8={}, msg9={}, msg10={}, msg11={}, msg12={}, msg13={}, msg14={}, msg15={}, msg16={}, msg17={}, msg18={}, msg19={}, msg20={}, msg21={}, msg22={}, msg23={};\n\n\nmsg1.payload = var1;    \n\n/*\nmsg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   msg7.payload = var7; \nmsg8.payload = var8;    msg9.payload = var9;    msg10.payload = var10;  msg11.payload  = var11; msg12.payload = var12;  msg13.payload = var13; msg14.payload = var14; \nmsg15.payload = var15;  msg16.payload = var16;  msg17.payload = var17;  msg18.payload = var18;  msg19.payload = var19;  msg20.payload = var20; msg21.payload = var21;\nmsg22.payload = var22;  msg23.payload = var23;\n*/\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg11, msg12, msg13, msg14, msg15, msg16, msg17, msg18, msg19, msg20, msg21, msg22, msg23];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2520,
        "wires": [
            [
                "f50b182247afbf12"
            ],
            []
        ],
        "outputLabels": [
            "DHW_treshold",
            "empty"
        ]
    },
    {
        "id": "0d915486f4ef0946",
        "type": "link out",
        "z": "35d210f042827344",
        "name": "DHW_Treshold",
        "links": [],
        "x": 1635,
        "y": 2520,
        "wires": []
    },
    {
        "id": "b9e80ad80744b62d",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "DHW_treshold ",
        "info": "",
        "x": 1740,
        "y": 2520,
        "wires": []
    },
    {
        "id": "47fe4c3f4736bcc8",
        "type": "comment",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "There is more logic required to execute Force DHW / sterilization runs. Multiple items switches",
        "info": "",
        "x": 2040,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d66c312b6eddb8f6",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "0fbba18720836ca3",
        "name": "Action2",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2080,
        "y": 280,
        "wires": [
            [
                "c7e634eb2d550f49"
            ]
        ]
    },
    {
        "id": "2989c76ac5cabf7d",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "77d5bc1f5eda069f",
        "name": "Action3",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 24,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2080,
        "y": 420,
        "wires": [
            [
                "031707ca9c7780ee"
            ]
        ]
    },
    {
        "id": "58c622f9eb45c3c8",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "b2b23a5b735449d8",
        "name": "Action4",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 30,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2080,
        "y": 560,
        "wires": [
            [
                "e9b7911ff281be04"
            ]
        ]
    },
    {
        "id": "9d375c9546f81fcc",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "d78468728ed1717e",
        "name": "Action5",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 36,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2080,
        "y": 700,
        "wires": [
            [
                "8577379df5611dbe"
            ]
        ]
    },
    {
        "id": "7d394fcbcca992a4",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "de0abf2b907bf4fb",
        "name": "Action6",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 42,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2080,
        "y": 840,
        "wires": [
            [
                "a0a4211a5a0ea87a"
            ]
        ]
    },
    {
        "id": "32a7a0ebd20028e7",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 7",
        "func": "// variables to load on boot for dasboard\n\nvar var1          = global.get('Schedule_7_Description',\"file\");\nvar var2          = global.get('Schedule_7_day',\"file\");\nvar var3          = global.get('Schedule_7_hour',\"file\");\nvar var4          = global.get('Schedule_7_minutes',\"file\");\nvar var5          = global.get('Schedule_7_state',\"file\");\nvar var6          = global.get('Schedule_7_action',\"file\");\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6,];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 980,
        "wires": [
            [
                "6ddcfeabd63c4c72"
            ],
            [
                "82effe161b2bbc2b"
            ],
            [
                "11cca7fee5724f1b"
            ],
            [
                "2706e7c49463bdf2"
            ],
            [
                "ae9a8afc7193b184"
            ],
            [
                "682a53064edf1bb5"
            ]
        ],
        "outputLabels": [
            "Schedule_6_Description",
            "Schedule_6_day",
            "Schedule_6_hour",
            "Schedule_6_minutes",
            "Schedule_6_state",
            "Schedule_6_topic"
        ]
    },
    {
        "id": "11cca7fee5724f1b",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "Hour7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 46,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1510,
        "y": 980,
        "wires": [
            [
                "9117cab2312d6ddb"
            ]
        ]
    },
    {
        "id": "82effe161b2bbc2b",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "Day7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 45,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 980,
        "wires": [
            [
                "1c61bdd7a5da6392"
            ]
        ]
    },
    {
        "id": "2706e7c49463bdf2",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "Minutes7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 47,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1800,
        "y": 980,
        "wires": [
            [
                "fb9a83816a34d13b"
            ]
        ]
    },
    {
        "id": "ae9a8afc7193b184",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "switch7",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 43,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 980,
        "wires": [
            [
                "17c846331dd1aaee"
            ]
        ]
    },
    {
        "id": "6ddcfeabd63c4c72",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "text input7",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 44,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 980,
        "wires": [
            [
                "2f169c65cae08040"
            ]
        ]
    },
    {
        "id": "17c846331dd1aaee",
        "type": "function",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "set.Schedule_7_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_7_state\"\nglobal.set(\"Schedule_7_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "9117cab2312d6ddb",
        "type": "function",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "set.Schedule_7_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_7_hour\"\nglobal.set(\"Schedule_7_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "1c61bdd7a5da6392",
        "type": "function",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "set.Schedule_7_day",
        "func": "msg.topic = \"Schedule_7_day\"\nglobal.set(\"Schedule_7_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "fb9a83816a34d13b",
        "type": "function",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "set.Schedule_7_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_7_minutes\"\nglobal.set(\"Schedule_7_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "a62a3decf902a152",
        "type": "function",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "set.Schedule_7_action",
        "func": "msg.topic = \"Schedule_7_action\"\nglobal.set(\"Schedule_7_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "2f169c65cae08040",
        "type": "function",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "set.Schedule_7_Description",
        "func": "msg.topic = \"Schedule_7_Description\"\nglobal.set(\"Schedule_7_Description\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "682a53064edf1bb5",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "194e1a6444d9443f",
        "name": "Action7",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 48,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2080,
        "y": 980,
        "wires": [
            [
                "a62a3decf902a152"
            ]
        ]
    },
    {
        "id": "23fab98e7e70ca85",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 8",
        "func": "// variables to load on boot for dasboard\n\nvar var1          = global.get('Schedule_8_Description',\"file\");\nvar var2          = global.get('Schedule_8_day',\"file\");\nvar var3          = global.get('Schedule_8_hour',\"file\");\nvar var4          = global.get('Schedule_8_minutes',\"file\");\nvar var5          = global.get('Schedule_8_state',\"file\");\nvar var6          = global.get('Schedule_8_action',\"file\");\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6,];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "b8ed1c98453fbdde"
            ],
            [
                "0bb1c2e66ced61cf"
            ],
            [
                "de761fcc2800b435"
            ],
            [
                "8ca0120e30370a65"
            ],
            [
                "98f531e1f417f8c5"
            ],
            [
                "e8a262aa09f312ba"
            ]
        ],
        "outputLabels": [
            "Schedule_6_Description",
            "Schedule_6_day",
            "Schedule_6_hour",
            "Schedule_6_minutes",
            "Schedule_6_state",
            "Schedule_6_topic"
        ]
    },
    {
        "id": "fd91e79ddea6d558",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 9",
        "func": "// variables to load on boot for dasboard\n\nvar var1          = global.get('Schedule_9_Description',\"file\");\nvar var2          = global.get('Schedule_9_day',\"file\");\nvar var3          = global.get('Schedule_9_hour',\"file\");\nvar var4          = global.get('Schedule_9_minutes',\"file\");\nvar var5          = global.get('Schedule_9_state',\"file\");\nvar var6          = global.get('Schedule_9_action',\"file\");\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6,];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1260,
        "wires": [
            [
                "23eb9c32f64b624d"
            ],
            [
                "795d58ac200d3f36"
            ],
            [
                "9d7eb9ac29b1ae5a"
            ],
            [
                "f3f984f9e46e390b"
            ],
            [
                "57534941849cf490"
            ],
            [
                "f26f6746a7474a3c"
            ]
        ],
        "outputLabels": [
            "Schedule_6_Description",
            "Schedule_6_day",
            "Schedule_6_hour",
            "Schedule_6_minutes",
            "Schedule_6_state",
            "Schedule_6_topic"
        ]
    },
    {
        "id": "9d7eb9ac29b1ae5a",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "Hour9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 58,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1510,
        "y": 1260,
        "wires": [
            [
                "01cf7ccce8860ceb"
            ]
        ]
    },
    {
        "id": "795d58ac200d3f36",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "Day9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 57,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 1260,
        "wires": [
            [
                "8b40c6765ea422be"
            ]
        ]
    },
    {
        "id": "f3f984f9e46e390b",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "Minutes9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 59,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1800,
        "y": 1260,
        "wires": [
            [
                "507fd9f54c322c47"
            ]
        ]
    },
    {
        "id": "57534941849cf490",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "switch9",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 55,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 1260,
        "wires": [
            [
                "e9f233299a64785a"
            ]
        ]
    },
    {
        "id": "23eb9c32f64b624d",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "text input9",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 56,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 1260,
        "wires": [
            [
                "27a5fbd444dcd803"
            ]
        ]
    },
    {
        "id": "e9f233299a64785a",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "set.Schedule_9_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_9_state\"\nglobal.set(\"Schedule_9_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "01cf7ccce8860ceb",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "set.Schedule_9_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_9_hour\"\nglobal.set(\"Schedule_9_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "8b40c6765ea422be",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "set.Schedule_9_day",
        "func": "msg.topic = \"Schedule_9_day\"\nglobal.set(\"Schedule_9_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "507fd9f54c322c47",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "set.Schedule_9_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_9_minutes\"\nglobal.set(\"Schedule_9_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "732c1e56a5dc7f93",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "set.Schedule_9_action",
        "func": "msg.topic = \"Schedule_9_action\"\nglobal.set(\"Schedule_9_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "27a5fbd444dcd803",
        "type": "function",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "set.Schedule_9_Description",
        "func": "msg.topic = \"Schedule_9_Description\"\nglobal.set(\"Schedule_9_Description\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "f26f6746a7474a3c",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "d035461c1b13ec54",
        "name": "Action9",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 60,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2080,
        "y": 1260,
        "wires": [
            [
                "732c1e56a5dc7f93"
            ]
        ]
    },
    {
        "id": "abc4f22a0906b12e",
        "type": "function",
        "z": "35d210f042827344",
        "name": "Load on boot 10",
        "func": "// variables to load on boot for dasboard\n\nvar var1          = global.get('Schedule_10_Description',\"file\");\nvar var2          = global.get('Schedule_10_day',\"file\");\nvar var3          = global.get('Schedule_10_hour',\"file\");\nvar var4          = global.get('Schedule_10_minutes',\"file\");\nvar var5          = global.get('Schedule_10_state',\"file\");\nvar var6          = global.get('Schedule_10_action',\"file\");\n\n\n\n\nlet msg1={}, msg2={}, msg3={}, msg4={}, msg5={}, msg6={};\n\n\nmsg1.payload = var1;    msg2.payload = var2;    msg3.payload = var3;    msg4.payload = var4;    msg5.payload = var5;    msg6.payload = var6;   \n\n\nreturn [msg1, msg2, msg3, msg4, msg5, msg6,];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1400,
        "wires": [
            [
                "ed5daaec90477db9"
            ],
            [
                "4e617070440f9f24"
            ],
            [
                "97655d278f29d4ac"
            ],
            [
                "d6ba0e882469b722"
            ],
            [
                "cc51f52dd55b756a"
            ],
            [
                "2d1606e60366b30e"
            ]
        ],
        "outputLabels": [
            "Schedule_6_Description",
            "Schedule_6_day",
            "Schedule_6_hour",
            "Schedule_6_minutes",
            "Schedule_6_state",
            "Schedule_6_topic"
        ]
    },
    {
        "id": "97655d278f29d4ac",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "Hour10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 64,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1520,
        "y": 1400,
        "wires": [
            [
                "6b47321e5ed4f339"
            ]
        ]
    },
    {
        "id": "4e617070440f9f24",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "Day10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 63,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 1400,
        "wires": [
            [
                "2d1a612df57083e6"
            ]
        ]
    },
    {
        "id": "d6ba0e882469b722",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "Minutes10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 65,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1810,
        "y": 1400,
        "wires": [
            [
                "f9cff73f291a1fb3"
            ]
        ]
    },
    {
        "id": "cc51f52dd55b756a",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "switch10",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 61,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 1400,
        "wires": [
            [
                "87b33373d4508273"
            ]
        ]
    },
    {
        "id": "ed5daaec90477db9",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "text input10",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 62,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 1400,
        "wires": [
            [
                "d024146e9727477d"
            ]
        ]
    },
    {
        "id": "87b33373d4508273",
        "type": "function",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "set.Schedule_10_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_10_state\"\nglobal.set(\"Schedule_10_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "6b47321e5ed4f339",
        "type": "function",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "set.Schedule_10_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_10_hour\"\nglobal.set(\"Schedule_10_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "2d1a612df57083e6",
        "type": "function",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "set.Schedule_10_day",
        "func": "msg.topic = \"Schedule_10_day\"\nglobal.set(\"Schedule_10_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "f9cff73f291a1fb3",
        "type": "function",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "set.Schedule_10_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_10_minutes\"\nglobal.set(\"Schedule_10_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "7f6323f31b74eebf",
        "type": "function",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "set.Schedule_10_action",
        "func": "msg.topic = \"Schedule_10_action\"\nglobal.set(\"Schedule_10_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "d024146e9727477d",
        "type": "function",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "set.Schedule_10_Description",
        "func": "msg.topic = \"Schedule_10_Description\"\nglobal.set(\"Schedule_10\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "2d1606e60366b30e",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "4b4f3fd1d3ef3232",
        "name": "Action10",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 66,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2080,
        "y": 1400,
        "wires": [
            [
                "7f6323f31b74eebf"
            ]
        ]
    },
    {
        "id": "845e5ae092891549",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "This Block retreives the GUI input and pushes it to variables",
        "info": "",
        "x": 280,
        "y": 180,
        "wires": []
    },
    {
        "id": "016f1f556139c597",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "Evaluate each timestamp",
        "info": "",
        "x": 1070,
        "y": 1620,
        "wires": []
    },
    {
        "id": "67b90bdf1dc732d0",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "If timestamp matches >> output ",
        "info": "",
        "x": 1550,
        "y": 1620,
        "wires": []
    },
    {
        "id": "1bae52195dc32c77",
        "type": "comment",
        "z": "35d210f042827344",
        "name": "create a timestamp every 30 seconds",
        "info": "",
        "x": 210,
        "y": 1640,
        "wires": []
    },
    {
        "id": "de761fcc2800b435",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "Hour8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 52,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1510,
        "y": 1120,
        "wires": [
            [
                "3bdaf97acc9dc2e7"
            ]
        ]
    },
    {
        "id": "0bb1c2e66ced61cf",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "Day8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 51,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Monday",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "Tuesday",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "Wednesday",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "Thursday",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "Friday",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "Saturday",
                "value": "Saturday",
                "type": "str"
            },
            {
                "label": "Sunday",
                "value": "Sunday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 1120,
        "wires": [
            [
                "8e7f02fd5df8372a"
            ]
        ]
    },
    {
        "id": "8ca0120e30370a65",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "Minutes8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 53,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "01",
                "value": 1,
                "type": "num"
            },
            {
                "label": "02",
                "value": 2,
                "type": "num"
            },
            {
                "label": "03",
                "value": 3,
                "type": "num"
            },
            {
                "label": "04",
                "value": 4,
                "type": "num"
            },
            {
                "label": "05",
                "value": 5,
                "type": "num"
            },
            {
                "label": "06",
                "value": 6,
                "type": "num"
            },
            {
                "label": "07",
                "value": 7,
                "type": "num"
            },
            {
                "label": "08",
                "value": 8,
                "type": "num"
            },
            {
                "label": "09",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35",
                "value": 35,
                "type": "num"
            },
            {
                "label": "36",
                "value": 36,
                "type": "num"
            },
            {
                "label": "37",
                "value": 37,
                "type": "num"
            },
            {
                "label": "38",
                "value": 38,
                "type": "num"
            },
            {
                "label": "39",
                "value": 39,
                "type": "num"
            },
            {
                "label": "40",
                "value": 40,
                "type": "num"
            },
            {
                "label": "41",
                "value": 41,
                "type": "num"
            },
            {
                "label": "42",
                "value": 42,
                "type": "num"
            },
            {
                "label": "43",
                "value": 43,
                "type": "num"
            },
            {
                "label": "44",
                "value": 44,
                "type": "num"
            },
            {
                "label": "45",
                "value": 45,
                "type": "num"
            },
            {
                "label": "46",
                "value": 46,
                "type": "num"
            },
            {
                "label": "47",
                "value": 47,
                "type": "num"
            },
            {
                "label": "48",
                "value": 48,
                "type": "num"
            },
            {
                "label": "49",
                "value": 49,
                "type": "num"
            },
            {
                "label": "50",
                "value": 50,
                "type": "num"
            },
            {
                "label": "51",
                "value": 51,
                "type": "num"
            },
            {
                "label": "52",
                "value": 52,
                "type": "num"
            },
            {
                "label": "53",
                "value": 53,
                "type": "num"
            },
            {
                "label": "54",
                "value": 54,
                "type": "num"
            },
            {
                "label": "55",
                "value": 55,
                "type": "num"
            },
            {
                "label": "56",
                "value": 56,
                "type": "num"
            },
            {
                "label": "57",
                "value": 57,
                "type": "num"
            },
            {
                "label": "58",
                "value": 58,
                "type": "num"
            },
            {
                "label": "59",
                "value": 59,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1800,
        "y": 1120,
        "wires": [
            [
                "5fb1da156073fc50"
            ]
        ]
    },
    {
        "id": "98f531e1f417f8c5",
        "type": "ui_switch",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "switch8",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 49,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 1120,
        "wires": [
            [
                "736bc0ca6f121837"
            ]
        ]
    },
    {
        "id": "b8ed1c98453fbdde",
        "type": "ui_text_input",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "text input8",
        "label": "",
        "tooltip": "",
        "group": "2b0c8e162d47abbb",
        "order": 50,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 930,
        "y": 1120,
        "wires": [
            [
                "163415ef49940103"
            ]
        ]
    },
    {
        "id": "736bc0ca6f121837",
        "type": "function",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "set.Schedule_8_state",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_8_state\"\nglobal.set(\"Schedule_8_state\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "3bdaf97acc9dc2e7",
        "type": "function",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "set.Schedule_8_hour",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_8_hour\"\nglobal.set(\"Schedule_8_hour\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "8e7f02fd5df8372a",
        "type": "function",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "set.Schedule_8_day",
        "func": "msg.topic = \"Schedule_8_day\"\nglobal.set(\"Schedule_8_day\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "5fb1da156073fc50",
        "type": "function",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "set.Schedule_8_minutes",
        "func": "msg.payload = Number(msg.payload).toFixed(0);\nmsg.payload = parseFloat(msg.payload);\nmsg.topic = \"Schedule_8_minutes\"\nglobal.set(\"Schedule_8_minutes\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "eec27a0e6c34e8a2",
        "type": "function",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "set.Schedule_8_action",
        "func": "msg.topic = \"Schedule_8_action\"\nglobal.set(\"Schedule_8_action\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "163415ef49940103",
        "type": "function",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "set.Schedule_8_Description",
        "func": "msg.topic = \"Schedule_8_Description\"\nglobal.set(\"Schedule_8_Description\",msg.payload,\"file\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "e8a262aa09f312ba",
        "type": "ui_dropdown",
        "z": "35d210f042827344",
        "g": "a9162d2894d367c2",
        "name": "Action8",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b0c8e162d47abbb",
        "order": 54,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Select",
                "value": "Select",
                "type": "str"
            },
            {
                "label": "Force DHW ",
                "value": "DHW",
                "type": "str"
            },
            {
                "label": "Force Sterilization",
                "value": "Sterilization",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "x",
                "type": "str"
            },
            {
                "label": "Quiet Mode 0",
                "value": "QM_0",
                "type": "str"
            },
            {
                "label": "Quiet Mode 1",
                "value": "QM_1",
                "type": "str"
            },
            {
                "label": "Quiet Mode 2",
                "value": "QM_2",
                "type": "str"
            },
            {
                "label": "Quiet Mode 3",
                "value": "QM_3",
                "type": "str"
            },
            {
                "label": "------------------------------",
                "value": "y",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat only",
                "value": "OperationMode0",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool only",
                "value": "OperationMode1",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto",
                "value": "OperationMode2",
                "type": "str"
            },
            {
                "label": "Operation Mode - DHW only",
                "value": "OperationMode3",
                "type": "str"
            },
            {
                "label": "Operation Mode - Heat+DHW",
                "value": "OperationMode4",
                "type": "str"
            },
            {
                "label": "Operation Mode - Cool+DHW",
                "value": "OperationMode5",
                "type": "str"
            },
            {
                "label": "Operation Mode - Auto+DHW",
                "value": "OperationMode6",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2080,
        "y": 1120,
        "wires": [
            [
                "eec27a0e6c34e8a2"
            ]
        ]
    },
    {
        "id": "e0ed2bc2902c33ea",
        "type": "debug",
        "z": "35d210f042827344",
        "g": "b63004182c33d3b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2830,
        "y": 1680,
        "wires": []
    },
    {
        "id": "92e5b2c.00a8b5",
        "type": "mqtt-broker",
        "name": "MQTT (xxx.xxx.x.xx)",
        "broker": "xxx.xxx.x.xx",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "548e51986bce11b0",
        "type": "ui_group",
        "name": "Operation",
        "tab": "33ece0076bfd7cb7",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fea7672db2f050c9",
        "type": "ui_group",
        "name": "GENERAL",
        "tab": "33ece0076bfd7cb7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bf4af523ba16d457",
        "type": "ui_group",
        "name": "WATER",
        "tab": "a5be8588.b8fbc8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "90a62954243731f5",
        "type": "ui_group",
        "name": "PUMP",
        "tab": "33ece0076bfd7cb7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e3cc96332cd59f07",
        "type": "ui_group",
        "name": "DHW",
        "tab": "a5be8588.b8fbc8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "74946a73578ea096",
        "type": "ui_group",
        "name": "ROOM",
        "tab": "a5be8588.b8fbc8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e27cfec311892d88",
        "type": "ui_group",
        "name": "Settings",
        "tab": "d6d4a43045260ac9",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2a223fd6c0b54acd",
        "type": "ui_group",
        "name": "Livingroom",
        "tab": "5b5fabb85470bd21",
        "order": 5,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e668c57c8cf470e7",
        "type": "ui_group",
        "name": "Water (HEAT)",
        "tab": "5b5fabb85470bd21",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e374621a9f5ac0d6",
        "type": "ui_group",
        "name": "Water (DHW)",
        "tab": "5b5fabb85470bd21",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1179fa790d2d89ca",
        "type": "ui_group",
        "name": "Advanced Functions",
        "tab": "a5be8588.b8fbc8",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "052caff3b2365345",
        "type": "ui_group",
        "name": "Settings",
        "tab": "1d038e38da23c646",
        "order": 1,
        "disp": false,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9b8ec8b1b9f66309",
        "type": "ui_group",
        "name": "Graph",
        "tab": "1d038e38da23c646",
        "order": 2,
        "disp": false,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7267dafd7dc99038",
        "type": "ui_group",
        "name": "RTC Graphics",
        "tab": "d6d4a43045260ac9",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4551542d51501ce1",
        "type": "ui_group",
        "name": "SS Graphics",
        "tab": "992c3064baf54797",
        "order": 1,
        "disp": false,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "405b26e8a7e1985d",
        "type": "ui_group",
        "name": "Graph 2",
        "tab": "1d038e38da23c646",
        "order": 3,
        "disp": false,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fb77ab43998a2f18",
        "type": "ui_group",
        "name": "Power",
        "tab": "1a08b96c5aeb8d6e",
        "order": 1,
        "disp": true,
        "width": 26,
        "collapse": false,
        "className": ""
    },
    {
        "id": "26d9e6cf24507b4f",
        "type": "ui_group",
        "name": "HEAT / DHW",
        "tab": "33ece0076bfd7cb7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b0c8e162d47abbb",
        "type": "ui_group",
        "name": "Schedules",
        "tab": "ac594a9d775ca4fb",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9aec7afe54746c39",
        "type": "ui_group",
        "name": "Related settings",
        "tab": "ac594a9d775ca4fb",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "33ece0076bfd7cb7",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a5be8588.b8fbc8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d6d4a43045260ac9",
        "type": "ui_tab",
        "name": "Function (RTC)",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5b5fabb85470bd21",
        "type": "ui_tab",
        "name": "Charts Temperature",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1d038e38da23c646",
        "type": "ui_tab",
        "name": "Function (WAR)",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "992c3064baf54797",
        "type": "ui_tab",
        "name": "Function (SoftStart)",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1a08b96c5aeb8d6e",
        "type": "ui_tab",
        "name": "Charts Energy",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ac594a9d775ca4fb",
        "type": "ui_tab",
        "name": "Scheduler",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    }
]